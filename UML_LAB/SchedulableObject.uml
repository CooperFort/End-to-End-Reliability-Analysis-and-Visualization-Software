<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_DHZ88IqFEe-CzNrO9SlQWA" name="SchedulableObject">
    <eAnnotations xmi:id="_DJhc0IqFEe-CzNrO9SlQWA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_DJhc0YqFEe-CzNrO9SlQWA" source="codegen">
        <details xmi:id="_DJhc0oqFEe-CzNrO9SlQWA" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_EP85YIqFEe-CzNrO9SlQWA" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;2853487863/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;1946607897/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;2699649311/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;432695560/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;872941976/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;2937830953/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2645512162/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;4126519448/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;830069947/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;2367004327/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_DepYQIqFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_DepYQYqFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_DepYQoqFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_DepYQ4qFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_DepYRIqFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_DepYRYqFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_DepYRoqFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_DepYR4qFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_DepYSIqFEe-CzNrO9SlQWA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_DdbQQIqFEe-CzNrO9SlQWA" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_DdbQQYqFEe-CzNrO9SlQWA" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_DdbQQoqFEe-CzNrO9SlQWA" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_Ddb3UIqFEe-CzNrO9SlQWA" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_De1lgIqFEe-CzNrO9SlQWA" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_Dwk1woqFEe-CzNrO9SlQWA" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Df8YwIqFEe-CzNrO9SlQWA" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_Dw0tYIqFEe-CzNrO9SlQWA" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_DgAqMIqFEe-CzNrO9SlQWA" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_Dw0tZ4qFEe-CzNrO9SlQWA" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_Dw1UcYqFEe-CzNrO9SlQWA" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DhnzwIqFEe-CzNrO9SlQWA" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_DxNH4IqFEe-CzNrO9SlQWA" general="_DwR60IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dxv6cIqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DxwhgIqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DySF8IqFEe-CzNrO9SlQWA" name="AbstractMap" specification="_DhpB4IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DySF8YqFEe-CzNrO9SlQWA" type="_DhnzwIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DhpB4IqFEe-CzNrO9SlQWA" name="AbstractMap" method="_DySF8IqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DhpB4YqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DhpB4oqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DhpB44qFEe-CzNrO9SlQWA" type="_DhnzwIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dhpo8IqFEe-CzNrO9SlQWA" name="Activation">
              <generalization xmi:id="_DwUXG4qFEe-CzNrO9SlQWA" general="_DkRfIIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxwhgYqFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA" isReadOnly="true" association="_DzCT4IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxxIkIqFEe-CzNrO9SlQWA" name="edges" type="_DwSh4IqFEe-CzNrO9SlQWA" isReadOnly="true" association="_DzCT44qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxxIkoqFEe-CzNrO9SlQWA" name="additionalScheduleTimes" type="_DwSh4IqFEe-CzNrO9SlQWA" isReadOnly="true" association="_DzC68IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxxIlIqFEe-CzNrO9SlQWA" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DxxIlYqFEe-CzNrO9SlQWA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DxNu9IqFEe-CzNrO9SlQWA" client="_Dhpo8IqFEe-CzNrO9SlQWA" supplier="_DxNu8oqFEe-CzNrO9SlQWA" contract="_DxNu8oqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStAIqFEe-CzNrO9SlQWA" name="Activation" specification="_DhqQAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStAYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyStAoqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStA4qFEe-CzNrO9SlQWA" name="Activation" specification="_DwTI84qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStBIqFEe-CzNrO9SlQWA" name="elem" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyStBYqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyStBoqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStB4qFEe-CzNrO9SlQWA" name="clone" specification="_DhqQBYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStCIqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStCYqFEe-CzNrO9SlQWA" name="getEdgesByReleaseTime" specification="_Dhq3E4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStCoqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStC4qFEe-CzNrO9SlQWA" name="getEdgesByLatestReleaseTime" specification="_DhreIYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStDIqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStDYqFEe-CzNrO9SlQWA" name="getEdgesByPeriod" specification="_DhreI4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStDoqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStD4qFEe-CzNrO9SlQWA" name="getEdgesByDeadline" specification="_DhsFMYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStEIqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyStEYqFEe-CzNrO9SlQWA" name="getEdgesByPriority" specification="_DhssQIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyStEoqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUEIqFEe-CzNrO9SlQWA" name="addEdges" specification="_DxOWAYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUEYqFEe-CzNrO9SlQWA" name="edges" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUEoqFEe-CzNrO9SlQWA" name="addEdge" specification="_DwTwA4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUE4qFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUFIqFEe-CzNrO9SlQWA" name="increaseEdgePhases" specification="_DhtTUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUFYqFEe-CzNrO9SlQWA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUFoqFEe-CzNrO9SlQWA" name="updatePriorityAndRelease" specification="_DhtTUoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUF4qFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUGIqFEe-CzNrO9SlQWA" name="addConflict" specification="_Dht6YIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUGYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUGoqFEe-CzNrO9SlQWA" name="addConflicts" specification="_DxO9EIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUG4qFEe-CzNrO9SlQWA" name="conflicts" type="_DwTI8YqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUHIqFEe-CzNrO9SlQWA" name="addCoordinator" specification="_Dht6YoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUHYqFEe-CzNrO9SlQWA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUHoqFEe-CzNrO9SlQWA" name="addCoordinators" specification="_DxO9E4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUH4qFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUIIqFEe-CzNrO9SlQWA" name="addScheduleTimes" specification="_DxO9FoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUIYqFEe-CzNrO9SlQWA" name="scheduleTime" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUIoqFEe-CzNrO9SlQWA" name="getNextScheduleTime" specification="_DhuhcIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUI4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyTUJIqFEe-CzNrO9SlQWA" type="_Djdm1IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyTUJYqFEe-CzNrO9SlQWA" name="getMatchingEndTime" specification="_DhuhcoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyTUJoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyTUJ4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7IIqFEe-CzNrO9SlQWA" name="getNextStartTime" specification="_DhuhdYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7IYqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyT7IoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7I4qFEe-CzNrO9SlQWA" name="getNextEndTime" specification="_DhvIgYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7JIqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyT7JYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7JoqFEe-CzNrO9SlQWA" name="getNumEdges" specification="_DhvIhIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7J4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7KIqFEe-CzNrO9SlQWA" name="compareTo" specification="_DwTwBoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7KYqFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyT7KoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7K4qFEe-CzNrO9SlQWA" name="conflictExists" specification="_DwTwDIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7LIqFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyT7LYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7LoqFEe-CzNrO9SlQWA" name="canCombine" specification="_DwTwD4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7L4qFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyT7MIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7MYqFEe-CzNrO9SlQWA" name="getDelta" specification="_DhvvkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7MoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7M4qFEe-CzNrO9SlQWA" name="getExecutionDuration" specification="_DhvvkoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7NIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7NYqFEe-CzNrO9SlQWA" name="getCombinedExecutionDuration" specification="_DwUXEYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7NoqFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyT7N4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7OIqFEe-CzNrO9SlQWA" name="printAll" specification="_DhvvlIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7OYqFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7OoqFEe-CzNrO9SlQWA" name="printAll" specification="_DhvvloqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7O4qFEe-CzNrO9SlQWA" name="printEdges" specification="_DwUXFIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7PIqFEe-CzNrO9SlQWA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyT7PYqFEe-CzNrO9SlQWA" name="edges" type="_DjKE0IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyT7PoqFEe-CzNrO9SlQWA" name="printEdges" specification="_DwUXGIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyT7P4qFEe-CzNrO9SlQWA" name="edges" type="_DjKE0IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DhqQAIqFEe-CzNrO9SlQWA" name="Activation" visibility="package" method="_DyStAIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DhqQAoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DhqQA4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DhqQAYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DhqQBIqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DhqQBYqFEe-CzNrO9SlQWA" name="clone" method="_DyStB4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwTI-YqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dhq3E4qFEe-CzNrO9SlQWA" name="getEdgesByReleaseTime" method="_DyStCYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVoIqFEe-CzNrO9SlQWA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwTI-oqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DhreIYqFEe-CzNrO9SlQWA" name="getEdgesByLatestReleaseTime" method="_DyStC4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVoYqFEe-CzNrO9SlQWA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwTI-4qFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DhreI4qFEe-CzNrO9SlQWA" name="getEdgesByPeriod" method="_DyStDYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVooqFEe-CzNrO9SlQWA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwTwAIqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DhsFMYqFEe-CzNrO9SlQWA" name="getEdgesByDeadline" method="_DyStD4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVo4qFEe-CzNrO9SlQWA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwTwAYqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DhssQIqFEe-CzNrO9SlQWA" name="getEdgesByPriority" method="_DyStEYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVpIqFEe-CzNrO9SlQWA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwTwAoqFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DhtTUIqFEe-CzNrO9SlQWA" name="increaseEdgePhases" method="_DyTUFIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVpYqFEe-CzNrO9SlQWA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_DhtTUYqFEe-CzNrO9SlQWA" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhtTUoqFEe-CzNrO9SlQWA" name="updatePriorityAndRelease" method="_DyTUFoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVpoqFEe-CzNrO9SlQWA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_DhtTU4qFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dht6YIqFEe-CzNrO9SlQWA" name="addConflict" method="_DyTUGIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dht6YYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dht6YoqFEe-CzNrO9SlQWA" name="addCoordinator" method="_DyTUHIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dht6Y4qFEe-CzNrO9SlQWA" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhuhcIqFEe-CzNrO9SlQWA" name="getNextScheduleTime" method="_DyTUIoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVqIqFEe-CzNrO9SlQWA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_DhuhcYqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwTwBYqFEe-CzNrO9SlQWA" type="_Djdm1IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DhuhcoqFEe-CzNrO9SlQWA" name="getMatchingEndTime" method="_DyTUJYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVqYqFEe-CzNrO9SlQWA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dhuhc4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DhuhdIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhuhdYqFEe-CzNrO9SlQWA" name="getNextStartTime" method="_DyT7IIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVqoqFEe-CzNrO9SlQWA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_DhuhdoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DhvIgIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhvIgYqFEe-CzNrO9SlQWA" name="getNextEndTime" method="_DyT7I4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVq4qFEe-CzNrO9SlQWA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_DhvIgoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DhvIg4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhvIhIqFEe-CzNrO9SlQWA" name="getNumEdges" method="_DyT7JoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DhvIhYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhvvkIqFEe-CzNrO9SlQWA" name="getDelta" method="_DyT7MYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVrIqFEe-CzNrO9SlQWA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DhvvkYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhvvkoqFEe-CzNrO9SlQWA" name="getExecutionDuration" method="_DyT7M4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dhvvk4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhvvlIqFEe-CzNrO9SlQWA" name="printAll" method="_DyT7OIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DhvvlYqFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DhvvloqFEe-CzNrO9SlQWA" name="printAll" method="_DyT7OoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DwTI84qFEe-CzNrO9SlQWA" name="Activation" visibility="package" method="_DyStA4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwTI9oqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwTI94qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwTI9IqFEe-CzNrO9SlQWA" name="elem" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwTI9YqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwTI-IqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwTwA4qFEe-CzNrO9SlQWA" name="addEdge" method="_DyTUEoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwTwBIqFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwTwBoqFEe-CzNrO9SlQWA" name="compareTo" method="_DyT7KIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwTwB4qFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwTwCIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwTwDIqFEe-CzNrO9SlQWA" name="conflictExists" method="_DyT7K4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwTwDYqFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwTwDoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwTwD4qFEe-CzNrO9SlQWA" name="canCombine" method="_DyT7LoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwTwEIqFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwUXEIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwUXEYqFEe-CzNrO9SlQWA" name="getCombinedExecutionDuration" method="_DyT7NYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwUXEoqFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwUXE4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwUXFIqFEe-CzNrO9SlQWA" name="printEdges" visibility="private" method="_DyT7O4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwUXFYqFEe-CzNrO9SlQWA" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwUXFoqFEe-CzNrO9SlQWA" name="edges" type="_DjKE0IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwUXGIqFEe-CzNrO9SlQWA" name="printEdges" visibility="private" method="_DyT7PoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwUXGYqFEe-CzNrO9SlQWA" name="edges" type="_DjKE0IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxOWAYqFEe-CzNrO9SlQWA" name="addEdges" method="_DyTUEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxOWAoqFEe-CzNrO9SlQWA" name="edges" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxO9EIqFEe-CzNrO9SlQWA" name="addConflicts" method="_DyTUGoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxO9EYqFEe-CzNrO9SlQWA" name="conflicts" type="_DwTI8YqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxO9E4qFEe-CzNrO9SlQWA" name="addCoordinators" method="_DyTUHoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxO9FIqFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxO9FoqFEe-CzNrO9SlQWA" name="addScheduleTimes" method="_DyTUIIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVp4qFEe-CzNrO9SlQWA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxO9F4qFEe-CzNrO9SlQWA" name="scheduleTime" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dh0BAIqFEe-CzNrO9SlQWA" name="Activations">
              <generalization xmi:id="_DwVlMIqFEe-CzNrO9SlQWA" general="_DhnzwIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxxvoIqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DxxvoYqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dh0oEIqFEe-CzNrO9SlQWA" name="BasicPoset">
              <ownedComment xmi:id="_DysVrYqFEe-CzNrO9SlQWA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DwVlN4qFEe-CzNrO9SlQWA" general="_Di3J4YqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyUiMIqFEe-CzNrO9SlQWA" name="BasicPoset" specification="_DwVlMoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyUiMYqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyUiMoqFEe-CzNrO9SlQWA" type="_Dh0oEIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DwVlMoqFEe-CzNrO9SlQWA" name="BasicPoset" visibility="package" method="_DyUiMIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwVlNIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwVlNYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwVlM4qFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwVlNoqFEe-CzNrO9SlQWA" type="_Dh0oEIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dh1PIIqFEe-CzNrO9SlQWA" name="ChannelAnalysis">
              <ownedComment xmi:id="_DysVroqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DxxvooqFEe-CzNrO9SlQWA" name="program" visibility="private" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzC684qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxyWsYqFEe-CzNrO9SlQWA" name="programTable" visibility="private" type="_DjFzYIqFEe-CzNrO9SlQWA" association="_DzC69oqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxyWs4qFEe-CzNrO9SlQWA" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJQIqFEe-CzNrO9SlQWA" name="ChannelAnalysis" specification="_DwWMQIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVJQYqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyVJQoqFEe-CzNrO9SlQWA" type="_Dh1PIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJQ4qFEe-CzNrO9SlQWA" name="ChannelAnalysis" specification="_DwWMRYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVJRIqFEe-CzNrO9SlQWA" name="program" type="_Di93kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyVJRYqFEe-CzNrO9SlQWA" type="_Dh1PIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJRoqFEe-CzNrO9SlQWA" name="isChannelConflict" specification="_Dh12MIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVJR4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dh12MIqFEe-CzNrO9SlQWA" name="isChannelConflict" method="_DyVJRoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh12MYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwWMQIqFEe-CzNrO9SlQWA" name="ChannelAnalysis" visibility="package" method="_DyVJQIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwWMQoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwWMQ4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwWMQYqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwWMRIqFEe-CzNrO9SlQWA" type="_Dh1PIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwWMRYqFEe-CzNrO9SlQWA" name="ChannelAnalysis" visibility="package" method="_DyVJQ4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwWMR4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwWMSIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwWMRoqFEe-CzNrO9SlQWA" name="program" type="_Di93kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwWMSYqFEe-CzNrO9SlQWA" type="_Dh1PIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dh2dQIqFEe-CzNrO9SlQWA" name="ChannelVisualization">
              <ownedComment xmi:id="_DysVr4qFEe-CzNrO9SlQWA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DwWMT4qFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxyWtYqFEe-CzNrO9SlQWA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DxyWtoqFEe-CzNrO9SlQWA" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DxyWt4qFEe-CzNrO9SlQWA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DxyWuIqFEe-CzNrO9SlQWA" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DxyWuYqFEe-CzNrO9SlQWA" name="warp" visibility="private" type="_Dj32gIqFEe-CzNrO9SlQWA" association="_DzDiAYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DxyWu4qFEe-CzNrO9SlQWA" name="ca" visibility="private" type="_Dh1PIIqFEe-CzNrO9SlQWA" association="_DzDiBIqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJSIqFEe-CzNrO9SlQWA" name="ChannelVisualization" specification="_DwWMSoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVJSYqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyVJSoqFEe-CzNrO9SlQWA" type="_Dh2dQIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DwWMSoqFEe-CzNrO9SlQWA" name="ChannelVisualization" visibility="package" method="_DyVJSIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwWMTIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwWMTYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwWMS4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwWMToqFEe-CzNrO9SlQWA" type="_Dh2dQIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dh3rYIqFEe-CzNrO9SlQWA" name="Channels">
              <ownedComment xmi:id="_DysVsIqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dxy9w4qFEe-CzNrO9SlQWA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dxy9xYqFEe-CzNrO9SlQWA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dxy9x4qFEe-CzNrO9SlQWA" name="channelsAvailable" visibility="package" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzDiB4qFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJUIqFEe-CzNrO9SlQWA" name="Channels" specification="_Dh45h4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVJUYqFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVJUoqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVJU4qFEe-CzNrO9SlQWA" type="_Dh3rYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJVIqFEe-CzNrO9SlQWA" name="getChannelSet" specification="_Dh6HpYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVJVYqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVJVoqFEe-CzNrO9SlQWA" type="_DwSh4oqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJV4qFEe-CzNrO9SlQWA" name="addNewChannelSet" specification="_Dh6HqIqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJWIqFEe-CzNrO9SlQWA" name="isEmpty" specification="_Dh6usIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVJWYqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVJWoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwUIqFEe-CzNrO9SlQWA" name="removeChannel" specification="_Dh6us4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwUYqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwUoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwU4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwVIqFEe-CzNrO9SlQWA" name="addChannel" specification="_Dh7Vw4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwVYqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwVoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwV4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwWIqFEe-CzNrO9SlQWA" name="getNumChannels" specification="_Dh7Vx4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwWYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dh45h4qFEe-CzNrO9SlQWA" name="Channels" visibility="package" method="_DyVJUIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dh6HooqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dh6Ho4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dh6HoIqFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh6HoYqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh6HpIqFEe-CzNrO9SlQWA" type="_Dh3rYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh6HpYqFEe-CzNrO9SlQWA" name="getChannelSet" method="_DyVJVIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh6HpoqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxQyQYqFEe-CzNrO9SlQWA" type="_DwSh4oqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh6HqIqFEe-CzNrO9SlQWA" name="addNewChannelSet" method="_DyVJV4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Dh6usIqFEe-CzNrO9SlQWA" name="isEmpty" method="_DyVJWIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh6usYqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh6usoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh6us4qFEe-CzNrO9SlQWA" name="removeChannel" method="_DyVwUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh7VwIqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh7VwYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh7VwoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh7Vw4qFEe-CzNrO9SlQWA" name="addChannel" method="_DyVwVIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh7VxIqFEe-CzNrO9SlQWA" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh7VxYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh7VxoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh7Vx4qFEe-CzNrO9SlQWA" name="getNumChannels" method="_DyVwWIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh7VyIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_Dh4ScIqFEe-CzNrO9SlQWA" name="ChannelSet" visibility="private">
                <generalization xmi:id="_DxQLMIqFEe-CzNrO9SlQWA" general="_DwSh4oqFEe-CzNrO9SlQWA"/>
                <ownedAttribute xmi:id="_Dxy9wYqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dxy9woqFEe-CzNrO9SlQWA" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJS4qFEe-CzNrO9SlQWA" name="ChannelSet" specification="_Dh4ScYqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DyVJTIqFEe-CzNrO9SlQWA" type="_Dh4ScIqFEe-CzNrO9SlQWA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVJTYqFEe-CzNrO9SlQWA" name="ChannelSet" specification="_Dh45goqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DyVJToqFEe-CzNrO9SlQWA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DyVJT4qFEe-CzNrO9SlQWA" type="_Dh4ScIqFEe-CzNrO9SlQWA" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Dh4ScYqFEe-CzNrO9SlQWA" name="ChannelSet" visibility="private" method="_DyVJS4qFEe-CzNrO9SlQWA">
                  <eAnnotations xmi:id="_Dh4ScoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Dh45gIqFEe-CzNrO9SlQWA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Dh45gYqFEe-CzNrO9SlQWA" type="_Dh4ScIqFEe-CzNrO9SlQWA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dh45goqFEe-CzNrO9SlQWA" name="ChannelSet" visibility="private" method="_DyVJTYqFEe-CzNrO9SlQWA">
                  <eAnnotations xmi:id="_Dh45hIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Dh45hYqFEe-CzNrO9SlQWA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Dh45g4qFEe-CzNrO9SlQWA" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Dh45hoqFEe-CzNrO9SlQWA" type="_Dh4ScIqFEe-CzNrO9SlQWA" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dh780IqFEe-CzNrO9SlQWA" name="CodeFragment">
              <ownedAttribute xmi:id="_Dxy9yoqFEe-CzNrO9SlQWA" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dxy9y4qFEe-CzNrO9SlQWA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dxy9zIqFEe-CzNrO9SlQWA" name="edges" visibility="package" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzDiCoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dxzk0oqFEe-CzNrO9SlQWA" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dxzk1IqFEe-CzNrO9SlQWA" name="codeFragment" visibility="package" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzEJEYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx0L4IqFEe-CzNrO9SlQWA" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0L4oqFEe-CzNrO9SlQWA" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwWoqFEe-CzNrO9SlQWA" name="CodeFragment" specification="_Dh8j4IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwW4qFEe-CzNrO9SlQWA" type="_Dh780IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwXIqFEe-CzNrO9SlQWA" name="CodeFragment" specification="_DxRZUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwXYqFEe-CzNrO9SlQWA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwXoqFEe-CzNrO9SlQWA" name="edges" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyVwX4qFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyVwYIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwYYqFEe-CzNrO9SlQWA" type="_Dh780IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwYoqFEe-CzNrO9SlQWA" name="getCoordinator" specification="_Dh9K8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwY4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwZIqFEe-CzNrO9SlQWA" name="instructions" specification="_Dh9K8oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwZYqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwZoqFEe-CzNrO9SlQWA" name="size" specification="_Dh-ZEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwZ4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwaIqFEe-CzNrO9SlQWA" name="generateCodeFragment" specification="_Dh-ZEoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwaYqFEe-CzNrO9SlQWA" name="getBaseInstruction" specification="_Dh-ZE4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwaoqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwa4qFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwbIqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwbYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyVwboqFEe-CzNrO9SlQWA" name="push" specification="_Dh-ZGIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyVwb4qFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwcIqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwcYqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyVwcoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXYIqFEe-CzNrO9SlQWA" name="pull" specification="_Dh_AIYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXYYqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXYoqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXY4qFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXZIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXZYqFEe-CzNrO9SlQWA" name="ifHas" specification="_Dh_nMIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXZoqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXZ4qFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXaIqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXaYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXaoqFEe-CzNrO9SlQWA" name="ifNotHas" specification="_Dh_nNYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXa4qFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXbIqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXbYqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXboqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXb4qFEe-CzNrO9SlQWA" name="wait" specification="_Dh_nOoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXcIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXcYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXcoqFEe-CzNrO9SlQWA" name="sleep" specification="_DiAOQIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXc4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXdIqFEe-CzNrO9SlQWA" name="reportIfDifferentCoordinators" specification="_DxSAYYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXdYqFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXdoqFEe-CzNrO9SlQWA" name="multipleCoordinators" specification="_DxSncIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXd4qFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXeIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dh8j4IqFEe-CzNrO9SlQWA" name="CodeFragment" visibility="package" method="_DyVwWoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dh8j4YqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dh8j4oqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DysVsYqFEe-CzNrO9SlQWA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dh8j44qFEe-CzNrO9SlQWA" type="_Dh780IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh9K8IqFEe-CzNrO9SlQWA" name="getCoordinator" method="_DyVwYoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVs4qFEe-CzNrO9SlQWA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dh9K8YqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh9K8oqFEe-CzNrO9SlQWA" name="instructions" method="_DyVwZIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVtIqFEe-CzNrO9SlQWA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxSAYIqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh-ZEIqFEe-CzNrO9SlQWA" name="size" method="_DyVwZoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DysVtYqFEe-CzNrO9SlQWA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dh-ZEYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh-ZEoqFEe-CzNrO9SlQWA" name="generateCodeFragment" visibility="private" method="_DyVwaIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Dh-ZE4qFEe-CzNrO9SlQWA" name="getBaseInstruction" visibility="private" method="_DyVwaYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh-ZFIqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh-ZFYqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh-ZFoqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh-ZF4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh-ZGIqFEe-CzNrO9SlQWA" name="push" visibility="private" method="_DyVwboqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh-ZGYqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh-ZGoqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh-ZG4qFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_AIIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh_AIYqFEe-CzNrO9SlQWA" name="pull" visibility="private" method="_DyWXYIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh_AIoqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_AI4qFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_AJIqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_AJYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh_nMIqFEe-CzNrO9SlQWA" name="ifHas" visibility="private" method="_DyWXZYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh_nMYqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_nMoqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_nM4qFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_nNIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh_nNYqFEe-CzNrO9SlQWA" name="ifNotHas" visibility="private" method="_DyWXaoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh_nNoqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_nN4qFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_nOIqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_nOYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dh_nOoqFEe-CzNrO9SlQWA" name="wait" method="_DyWXb4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dh_nO4qFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dh_nPIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DiAOQIqFEe-CzNrO9SlQWA" name="sleep" isStatic="true" method="_DyWXcoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DiAOQYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxRZUIqFEe-CzNrO9SlQWA" name="CodeFragment" visibility="package" method="_DyVwXIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxRZVYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxRZVoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DysVsoqFEe-CzNrO9SlQWA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxRZUYqFEe-CzNrO9SlQWA" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxRZUoqFEe-CzNrO9SlQWA" name="edges" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxRZU4qFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxRZVIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxRZV4qFEe-CzNrO9SlQWA" type="_Dh780IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxSAYYqFEe-CzNrO9SlQWA" name="reportIfDifferentCoordinators" visibility="private" method="_DyWXdIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxSAYoqFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxSncIqFEe-CzNrO9SlQWA" name="multipleCoordinators" visibility="private" method="_DyWXdoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxSncYqFEe-CzNrO9SlQWA" name="coordinators" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxSncoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiBcYIqFEe-CzNrO9SlQWA" name="CombinedActivation">
              <generalization xmi:id="_DwYogIqFEe-CzNrO9SlQWA" general="_Dhpo8IqFEe-CzNrO9SlQWA"/>
              <interfaceRealization xmi:id="_DxSndIqFEe-CzNrO9SlQWA" client="_DiBcYIqFEe-CzNrO9SlQWA" supplier="_DxNu8oqFEe-CzNrO9SlQWA" contract="_DxNu8oqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXeYqFEe-CzNrO9SlQWA" name="CombinedActivation" specification="_DiBcYYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXeoqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXe4qFEe-CzNrO9SlQWA" type="_DiBcYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXfIqFEe-CzNrO9SlQWA" name="CombinedActivation" specification="_DwXaYIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXfYqFEe-CzNrO9SlQWA" name="elem" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXfoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXf4qFEe-CzNrO9SlQWA" type="_DiBcYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXgIqFEe-CzNrO9SlQWA" name="CombinedActivation" specification="_DwXaZoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXgYqFEe-CzNrO9SlQWA" name="priorEntry" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXgoqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXg4qFEe-CzNrO9SlQWA" type="_DiBcYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXhIqFEe-CzNrO9SlQWA" name="canCombine" specification="_DwXabIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXhYqFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXhoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DiBcYYqFEe-CzNrO9SlQWA" name="CombinedActivation" visibility="package" method="_DyWXeYqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DiBcY4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DiBcZIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DiBcYoqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiBcZYqFEe-CzNrO9SlQWA" type="_DiBcYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwXaYIqFEe-CzNrO9SlQWA" name="CombinedActivation" visibility="package" method="_DyWXfIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwXaY4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwXaZIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwXaYYqFEe-CzNrO9SlQWA" name="elem" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwXaYoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwXaZYqFEe-CzNrO9SlQWA" type="_DiBcYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwXaZoqFEe-CzNrO9SlQWA" name="CombinedActivation" visibility="package" method="_DyWXgIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwXaaYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwXaaoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwXaZ4qFEe-CzNrO9SlQWA" name="priorEntry" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwXaaIqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwXaa4qFEe-CzNrO9SlQWA" type="_DiBcYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwXabIqFEe-CzNrO9SlQWA" name="canCombine" method="_DyWXhIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwXabYqFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwXaboqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiCqgIqFEe-CzNrO9SlQWA" name="CommunicationGraph">
              <ownedComment xmi:id="_DysVtoqFEe-CzNrO9SlQWA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DwYokYqFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx0L5IqFEe-CzNrO9SlQWA" name="wfm" visibility="package" type="_Diad8IqFEe-CzNrO9SlQWA" association="_DzEJFIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx0L5oqFEe-CzNrO9SlQWA" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0L6IqFEe-CzNrO9SlQWA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0L6oqFEe-CzNrO9SlQWA" name="workLoad" visibility="package" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzEJF4qFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXh4qFEe-CzNrO9SlQWA" name="CommunicationGraph" specification="_DwYogYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXiIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXiYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXioqFEe-CzNrO9SlQWA" type="_DiCqgIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyWXi4qFEe-CzNrO9SlQWA" name="CommunicationGraph" specification="_DwYoh4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyWXjIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXjYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyWXjoqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyWXj4qFEe-CzNrO9SlQWA" type="_DiCqgIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-cIqFEe-CzNrO9SlQWA" name="createHeader" specification="_DiDRkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-cYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-coqFEe-CzNrO9SlQWA" name="createFooter" specification="_DiD4ooqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-c4qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-dIqFEe-CzNrO9SlQWA" name="visualization" specification="_DiD4poqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-dYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-doqFEe-CzNrO9SlQWA" name="createWarpFileContent" specification="_DiEfs4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-d4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DiDRkIqFEe-CzNrO9SlQWA" name="createHeader" method="_DyW-cIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwYojoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DiD4ooqFEe-CzNrO9SlQWA" name="createFooter" method="_DyW-coqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwYoj4qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DiD4poqFEe-CzNrO9SlQWA" name="visualization" method="_DyW-dIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwYokIqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DiEfs4qFEe-CzNrO9SlQWA" name="createWarpFileContent" method="_DyW-doqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DiEftIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwYogYqFEe-CzNrO9SlQWA" name="CommunicationGraph" method="_DyWXh4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwYohIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwYohYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwYogoqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwYog4qFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwYohoqFEe-CzNrO9SlQWA" type="_DiCqgIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwYoh4qFEe-CzNrO9SlQWA" name="CommunicationGraph" method="_DyWXi4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwYoi4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwYojIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwYoiIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwYoiYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwYoioqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwYojYqFEe-CzNrO9SlQWA" type="_DiCqgIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiFGwIqFEe-CzNrO9SlQWA" name="ConnectivityPoset">
              <ownedComment xmi:id="_DysVt4qFEe-CzNrO9SlQWA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_DwZPlYqFEe-CzNrO9SlQWA" general="_Di3J4YqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-eIqFEe-CzNrO9SlQWA" name="ConnectivityPoset" specification="_DwZPkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-eYqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyW-eoqFEe-CzNrO9SlQWA" type="_DiFGwIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-e4qFEe-CzNrO9SlQWA" name="findCoordinator" specification="_DxTOgYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-fIqFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyW-fYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DwZPkIqFEe-CzNrO9SlQWA" name="ConnectivityPoset" visibility="package" method="_DyW-eIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwZPkoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwZPk4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwZPkYqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwZPlIqFEe-CzNrO9SlQWA" type="_DiFGwIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxTOgYqFEe-CzNrO9SlQWA" name="findCoordinator" visibility="protected" method="_DyW-e4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxTOgoqFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxTOg4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiGU4IqFEe-CzNrO9SlQWA" name="DeadlineComparator">
              <interfaceRealization xmi:id="_DxTOiIqFEe-CzNrO9SlQWA" client="_DiGU4IqFEe-CzNrO9SlQWA" supplier="_DwZPloqFEe-CzNrO9SlQWA" contract="_DwZPloqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-foqFEe-CzNrO9SlQWA" name="compare" specification="_DxT1k4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-f4qFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyW-gIqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyW-gYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DxT1k4qFEe-CzNrO9SlQWA" name="compare" method="_DyW-foqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxT1lIqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxT1lYqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxT1loqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiG78IqFEe-CzNrO9SlQWA" name="Description">
              <ownedComment xmi:id="_Dys8sIqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DxUcoIqFEe-CzNrO9SlQWA" general="_DwSh4IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx0L7IqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx0L7YqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-goqFEe-CzNrO9SlQWA" name="Description" specification="_DiG78YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-g4qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-hIqFEe-CzNrO9SlQWA" name="Description" specification="_DiIKEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-hYqFEe-CzNrO9SlQWA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyW-hoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-h4qFEe-CzNrO9SlQWA" name="toString" specification="_DiIKFYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-iIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DiG78YqFEe-CzNrO9SlQWA" name="Description" method="_DyW-goqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DiG78oqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DiG784qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DiG79IqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DiIKEIqFEe-CzNrO9SlQWA" name="Description" method="_DyW-hIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DiIKEoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DiIKE4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DiIKEYqFEe-CzNrO9SlQWA" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiIKFIqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DiIKFYqFEe-CzNrO9SlQWA" name="toString" method="_DyW-h4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DiIKFoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiIxIIqFEe-CzNrO9SlQWA" name="Edge">
              <generalization xmi:id="_DwadsoqFEe-CzNrO9SlQWA" general="_DkRfIIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx0y8IqFEe-CzNrO9SlQWA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx0y8YqFEe-CzNrO9SlQWA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0y8oqFEe-CzNrO9SlQWA" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0y84qFEe-CzNrO9SlQWA" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0y9IqFEe-CzNrO9SlQWA" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0y9YqFEe-CzNrO9SlQWA" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0y9oqFEe-CzNrO9SlQWA" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0y94qFEe-CzNrO9SlQWA" name="state" type="_DiXaoIqFEe-CzNrO9SlQWA" association="_Dys8sYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx0y-IqFEe-CzNrO9SlQWA" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DxUcooqFEe-CzNrO9SlQWA" client="_DiIxIIqFEe-CzNrO9SlQWA" supplier="_DxNu8oqFEe-CzNrO9SlQWA" contract="_DxNu8oqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-iYqFEe-CzNrO9SlQWA" name="Edge" specification="_DiYBsYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyW-ioqFEe-CzNrO9SlQWA" type="_DiIxIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyW-i4qFEe-CzNrO9SlQWA" name="Edge" specification="_DiYBtYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXlgIqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlgYqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlgoqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlg4qFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlhIqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlhYqFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlhoqFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlh4qFEe-CzNrO9SlQWA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXliIqFEe-CzNrO9SlQWA" type="_DiIxIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXliYqFEe-CzNrO9SlQWA" name="compareTo" specification="_DwZ2oIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXlioqFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyXli4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXljIqFEe-CzNrO9SlQWA" name="toString" specification="_DiYowIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXljYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXljoqFEe-CzNrO9SlQWA" name="print" specification="_DiYoxYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXlj4qFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXlkIqFEe-CzNrO9SlQWA" name="print" specification="_DiZP0oqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DiYBsYqFEe-CzNrO9SlQWA" name="Edge" visibility="package" method="_DyW-iYqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DiYBsoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DiYBs4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DiYBtIqFEe-CzNrO9SlQWA" type="_DiIxIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DiYBtYqFEe-CzNrO9SlQWA" name="Edge" visibility="package" method="_DyW-i4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DiYBvoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DiYBv4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DiYBtoqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBt4qFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBuIqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBuYqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBuoqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBu4qFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBvIqFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBvYqFEe-CzNrO9SlQWA" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiYBwIqFEe-CzNrO9SlQWA" type="_DiIxIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DiYowIqFEe-CzNrO9SlQWA" name="toString" method="_DyXljIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DiYowYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DiYoxYqFEe-CzNrO9SlQWA" name="print" method="_DyXljoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DiYoxoqFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DiZP0oqFEe-CzNrO9SlQWA" name="print" method="_DyXlkIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DwZ2oIqFEe-CzNrO9SlQWA" name="compareTo" method="_DyXliYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwZ2oYqFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwZ2ooqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_DiXaoIqFEe-CzNrO9SlQWA" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_DiXaooqFEe-CzNrO9SlQWA" name="RELEASED"/>
                <ownedLiteral xmi:id="_DiXao4qFEe-CzNrO9SlQWA" name="EXECUTING"/>
                <ownedLiteral xmi:id="_DiYBsIqFEe-CzNrO9SlQWA" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Diad8IqFEe-CzNrO9SlQWA" name="FileManager">
              <ownedComment xmi:id="_Dys8s4qFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dx0y-YqFEe-CzNrO9SlQWA" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx0y-oqFEe-CzNrO9SlQWA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXlkYqFEe-CzNrO9SlQWA" name="FileManager" specification="_Diad8YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXlkoqFEe-CzNrO9SlQWA" type="_Diad8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXlk4qFEe-CzNrO9SlQWA" name="FileManager" specification="_DibFA4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXllIqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXllYqFEe-CzNrO9SlQWA" type="_Diad8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXlloqFEe-CzNrO9SlQWA" name="getDocumentsDirectory" specification="_DibFCIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXll4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXlmIqFEe-CzNrO9SlQWA" name="getCurrentDirectory" specification="_DibFCoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXlmYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyXlmoqFEe-CzNrO9SlQWA" name="createFile" specification="_DibsEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyXlm4qFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlnIqFEe-CzNrO9SlQWA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlnYqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyXlnoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMkIqFEe-CzNrO9SlQWA" name="createFile" specification="_DibsFYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMkYqFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMkoqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMk4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMlIqFEe-CzNrO9SlQWA" name="createDirectory" specification="_DibsGYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMlYqFEe-CzNrO9SlQWA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMloqFEe-CzNrO9SlQWA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMl4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMmIqFEe-CzNrO9SlQWA" name="writeFile" specification="_DicTIoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMmYqFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMmoqFEe-CzNrO9SlQWA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMm4qFEe-CzNrO9SlQWA" name="readFile" specification="_DicTJYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMnIqFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMnYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Diad8YqFEe-CzNrO9SlQWA" name="FileManager" method="_DyXlkYqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DibFAIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DibFAYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Dys8tIqFEe-CzNrO9SlQWA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_DibFAoqFEe-CzNrO9SlQWA" type="_Diad8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DibFA4qFEe-CzNrO9SlQWA" name="FileManager" method="_DyXlk4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DibFBYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DibFBoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DibFBIqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DibFB4qFEe-CzNrO9SlQWA" type="_Diad8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DibFCIqFEe-CzNrO9SlQWA" name="getDocumentsDirectory" method="_DyXlloqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DibFCYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DibFCoqFEe-CzNrO9SlQWA" name="getCurrentDirectory" method="_DyXlmIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DibFC4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DibsEIqFEe-CzNrO9SlQWA" name="createFile" method="_DyXlmoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dys8tYqFEe-CzNrO9SlQWA">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_DibsEYqFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DibsEoqFEe-CzNrO9SlQWA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DibsE4qFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DibsFIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DibsFYqFEe-CzNrO9SlQWA" name="createFile" method="_DyYMkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DibsFoqFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DibsF4qFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DibsGIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DibsGYqFEe-CzNrO9SlQWA" name="createDirectory" method="_DyYMlIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DibsGoqFEe-CzNrO9SlQWA" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DicTIIqFEe-CzNrO9SlQWA" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DicTIYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DicTIoqFEe-CzNrO9SlQWA" name="writeFile" method="_DyYMmIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DicTI4qFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DicTJIqFEe-CzNrO9SlQWA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DicTJYqFEe-CzNrO9SlQWA" name="readFile" method="_DyYMm4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DicTJoqFEe-CzNrO9SlQWA" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DicTJ4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DidhQIqFEe-CzNrO9SlQWA" name="Flow">
              <ownedComment xmi:id="_Dys8toqFEe-CzNrO9SlQWA">
                <body>The Flow class represents a schedulable communication flow in a WARP network.&#xD;
It contains a sequence of nodes and edges that form a path through the network,&#xD;
along with information about transmissions and fault tolerance. &#xD;
&#xD;
Each Flow object can be compared to another based on priority, with lower &#xD;
numerical values indicating higher priority.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <generalization xmi:id="_DwcS44qFEe-CzNrO9SlQWA" general="_DkRfIIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx2BEYqFEe-CzNrO9SlQWA" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx2BEoqFEe-CzNrO9SlQWA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2BE4qFEe-CzNrO9SlQWA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx2BFIqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2BFYqFEe-CzNrO9SlQWA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx2BFoqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2BF4qFEe-CzNrO9SlQWA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx2BGIqFEe-CzNrO9SlQWA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2BGYqFEe-CzNrO9SlQWA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx2BGoqFEe-CzNrO9SlQWA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2BG4qFEe-CzNrO9SlQWA" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx2BHIqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2BHYqFEe-CzNrO9SlQWA" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx2BHoqFEe-CzNrO9SlQWA" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2oIYqFEe-CzNrO9SlQWA" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2oI4qFEe-CzNrO9SlQWA" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx2oJYqFEe-CzNrO9SlQWA" name="nodes" visibility="package" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzEJGoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx2oKIqFEe-CzNrO9SlQWA" name="linkTxAndTotalCost" visibility="package" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzEJHYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx3PMYqFEe-CzNrO9SlQWA" name="edges" visibility="package" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzEwIYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx3PNIqFEe-CzNrO9SlQWA" name="nodePredecessor" visibility="package" type="_DixqUYqFEe-CzNrO9SlQWA" association="_DzEwJIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx3PNoqFEe-CzNrO9SlQWA" name="edgePredecessor" visibility="package" type="_DiIxIIqFEe-CzNrO9SlQWA" association="_DzEwJ4qFEe-CzNrO9SlQWA"/>
              <interfaceRealization xmi:id="_DxVDsIqFEe-CzNrO9SlQWA" client="_DidhQIqFEe-CzNrO9SlQWA" supplier="_DxNu8oqFEe-CzNrO9SlQWA" contract="_DxNu8oqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMnoqFEe-CzNrO9SlQWA" name="Flow" specification="_DieIUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMn4qFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMoIqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMoYqFEe-CzNrO9SlQWA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyYMooqFEe-CzNrO9SlQWA" type="_DidhQIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
     this.index = index;&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMo4qFEe-CzNrO9SlQWA" name="Flow" specification="_DieIV4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMpIqFEe-CzNrO9SlQWA" type="_DidhQIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
     this.index = DEFAULT_INDEX;&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1;&#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMpYqFEe-CzNrO9SlQWA" name="getInitialPriority" specification="_DievY4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMpoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMp4qFEe-CzNrO9SlQWA" name="getIndex" specification="_DievZYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMqIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMqYqFEe-CzNrO9SlQWA" name="getNumTxPerLink" specification="_DievZ4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMqoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMq4qFEe-CzNrO9SlQWA" name="getNodes" specification="_DievaYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMrIqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMrYqFEe-CzNrO9SlQWA" name="getEdges" specification="_DifWcYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMroqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMr4qFEe-CzNrO9SlQWA" name="addEdge" specification="_Dwbr0YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMsIqFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>edge.setPredecessor(edgePredecessor);&#xD;
     edges.add(edge);&#xD;
     edgePredecessor = edge;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMsYqFEe-CzNrO9SlQWA" name="addNode" specification="_Dwbr04qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMsoqFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>node.setPredecessor(nodePredecessor);&#xD;
     nodes.add(node);&#xD;
     nodePredecessor = node;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMs4qFEe-CzNrO9SlQWA" name="getLinkTxAndTotalCost" specification="_Dif9gIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMtIqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMtYqFEe-CzNrO9SlQWA" name="setInitialPriority" specification="_Dif9goqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMtoqFEe-CzNrO9SlQWA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMt4qFEe-CzNrO9SlQWA" name="setIndex" specification="_Dif9hIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMuIqFEe-CzNrO9SlQWA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMuYqFEe-CzNrO9SlQWA" name="setNumTxPerLink" specification="_Dif9hoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMuoqFEe-CzNrO9SlQWA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMu4qFEe-CzNrO9SlQWA" name="setNodes" specification="_DxVqw4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMvIqFEe-CzNrO9SlQWA" name="nodes" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMvYqFEe-CzNrO9SlQWA" name="setLinkTxAndTotalCost" specification="_DxVqxoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMvoqFEe-CzNrO9SlQWA" name="linkTxAndTotalCost" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMv4qFEe-CzNrO9SlQWA" name="compareTo" specification="_Dwbr1YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMwIqFEe-CzNrO9SlQWA" name="flow" type="_DidhQIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyYMwYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyYMwoqFEe-CzNrO9SlQWA" name="toString" specification="_DigkkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyYMw4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DieIUIqFEe-CzNrO9SlQWA" name="Flow" visibility="package" method="_DyYMnoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DieIVIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DieIVYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Dys8t4qFEe-CzNrO9SlQWA">
                  <body>Constructs a Flow object with a given name, priority, and index.&#xD;
     * Initializes the list of nodes, edges, and transmissions per link.&#xD;
     * &#xD;
     * @param name the name of the flow&#xD;
     * @param priority the priority of the flow&#xD;
     * @param index the order in which the flow was read from the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_DieIUYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DieIUoqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DieIU4qFEe-CzNrO9SlQWA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DieIVoqFEe-CzNrO9SlQWA" type="_DidhQIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DieIV4qFEe-CzNrO9SlQWA" name="Flow" visibility="package" method="_DyYMo4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DievYIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DievYYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Dys8uIqFEe-CzNrO9SlQWA">
                  <body>Constructs a default Flow object with default parameters.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DievYoqFEe-CzNrO9SlQWA" type="_DidhQIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DievY4qFEe-CzNrO9SlQWA" name="getInitialPriority" method="_DyYMpYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dys8uYqFEe-CzNrO9SlQWA">
                  <body>Gets the initial priority of the flow.&#xD;
     * &#xD;
     * @return the initial priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_DievZIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DievZYqFEe-CzNrO9SlQWA" name="getIndex" method="_DyYMp4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dys8uoqFEe-CzNrO9SlQWA">
                  <body>Gets the index of the flow.&#xD;
     * &#xD;
     * @return the index of the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DievZoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DievZ4qFEe-CzNrO9SlQWA" name="getNumTxPerLink" method="_DyYMqYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dys8u4qFEe-CzNrO9SlQWA">
                  <body>Gets the number of transmissions per link.&#xD;
     * &#xD;
     * @return the number of transmissions per link</body>
                </ownedComment>
                <ownedParameter xmi:id="_DievaIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DievaYqFEe-CzNrO9SlQWA" name="getNodes" method="_DyYMq4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjwIqFEe-CzNrO9SlQWA">
                  <body>Gets the list of nodes in the flow.&#xD;
     * &#xD;
     * @return the list of nodes in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxVqwIqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DifWcYqFEe-CzNrO9SlQWA" name="getEdges" method="_DyYMrYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjwYqFEe-CzNrO9SlQWA">
                  <body>Gets the list of edges in the flow.&#xD;
     * &#xD;
     * @return the list of edges in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxVqwYqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dif9gIqFEe-CzNrO9SlQWA" name="getLinkTxAndTotalCost" method="_DyYMs4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjxIqFEe-CzNrO9SlQWA">
                  <body>Gets the list of link transmission costs and total cost.&#xD;
     * &#xD;
     * @return the list of link transmission costs and total cost</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxVqwoqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dif9goqFEe-CzNrO9SlQWA" name="setInitialPriority" method="_DyYMtYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjxYqFEe-CzNrO9SlQWA">
                  <body>Sets the initial priority of the flow.&#xD;
     * &#xD;
     * @param initialPriority the priority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dif9g4qFEe-CzNrO9SlQWA" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dif9hIqFEe-CzNrO9SlQWA" name="setIndex" method="_DyYMt4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjxoqFEe-CzNrO9SlQWA">
                  <body>Sets the index of the flow.&#xD;
     * &#xD;
     * @param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dif9hYqFEe-CzNrO9SlQWA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dif9hoqFEe-CzNrO9SlQWA" name="setNumTxPerLink" method="_DyYMuYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dytjx4qFEe-CzNrO9SlQWA">
                  <body>Sets the number of transmissions per link.&#xD;
     * &#xD;
     * @param numTxPerLink the number of transmissions per link to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dif9h4qFEe-CzNrO9SlQWA" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DigkkIqFEe-CzNrO9SlQWA" name="toString" method="_DyYMwoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DigkkYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwbr0YqFEe-CzNrO9SlQWA" name="addEdge" method="_DyYMr4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjwoqFEe-CzNrO9SlQWA">
                  <body>Adds an edge to the flow and updates the edge predecessor.&#xD;
     * &#xD;
     * @param edge the edge to add to the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dwbr0oqFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwbr04qFEe-CzNrO9SlQWA" name="addNode" method="_DyYMsYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dytjw4qFEe-CzNrO9SlQWA">
                  <body>Adds a node to the flow and updates the node predecessor.&#xD;
     * &#xD;
     * @param node the node to add to the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dwbr1IqFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwbr1YqFEe-CzNrO9SlQWA" name="compareTo" method="_DyYMv4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwbr1oqFEe-CzNrO9SlQWA" name="flow" type="_DidhQIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwbr14qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxVqw4qFEe-CzNrO9SlQWA" name="setNodes" method="_DyYMu4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjyIqFEe-CzNrO9SlQWA">
                  <body>Sets the list of nodes in the flow.&#xD;
     * &#xD;
     * @param nodes the list of nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxVqxIqFEe-CzNrO9SlQWA" name="nodes" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxVqxoqFEe-CzNrO9SlQWA" name="setLinkTxAndTotalCost" method="_DyYMvYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjyYqFEe-CzNrO9SlQWA">
                  <body>Sets the list of link transmission costs and total cost.&#xD;
     * &#xD;
     * @param linkTxAndTotalCost the list of transmission costs to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxVqx4qFEe-CzNrO9SlQWA" name="linkTxAndTotalCost" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DijA0IqFEe-CzNrO9SlQWA" name="FlowMap">
              <ownedComment xmi:id="_DytjyoqFEe-CzNrO9SlQWA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dwc58IqFEe-CzNrO9SlQWA" general="_DhnzwIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx3POIqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx3POYqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dijn4IqFEe-CzNrO9SlQWA" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_Dytjy4qFEe-CzNrO9SlQWA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dwc58oqFEe-CzNrO9SlQWA" general="_DhnzwIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx32QIqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx32QYqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DikO8IqFEe-CzNrO9SlQWA" name="GraphViz">
              <ownedComment xmi:id="_DytjzIqFEe-CzNrO9SlQWA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_DwdhDoqFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx32QoqFEe-CzNrO9SlQWA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx32Q4qFEe-CzNrO9SlQWA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx32RIqFEe-CzNrO9SlQWA" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx32RYqFEe-CzNrO9SlQWA" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx32RoqFEe-CzNrO9SlQWA" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx32SIqFEe-CzNrO9SlQWA" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx32SoqFEe-CzNrO9SlQWA" name="wfm" visibility="package" type="_Diad8IqFEe-CzNrO9SlQWA" association="_DzEwKoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx32TIqFEe-CzNrO9SlQWA" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx32ToqFEe-CzNrO9SlQWA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx4dUIqFEe-CzNrO9SlQWA" name="gv" visibility="package" type="_DikO8IqFEe-CzNrO9SlQWA" association="_DzFXMYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZasIqFEe-CzNrO9SlQWA" name="GraphViz" specification="_DwdhAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZasYqFEe-CzNrO9SlQWA" name="wfm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyZasoqFEe-CzNrO9SlQWA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyZas4qFEe-CzNrO9SlQWA" type="_DikO8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZatIqFEe-CzNrO9SlQWA" name="GraphViz" specification="_DwdhBoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZatYqFEe-CzNrO9SlQWA" name="wfm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyZatoqFEe-CzNrO9SlQWA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyZat4qFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyZauIqFEe-CzNrO9SlQWA" type="_DikO8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZauYqFEe-CzNrO9SlQWA" name="visualization" specification="_Dik2AIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZauoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZau4qFEe-CzNrO9SlQWA" name="initializeGraphVizContent" specification="_DildEoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZavIqFEe-CzNrO9SlQWA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZavYqFEe-CzNrO9SlQWA" name="finalizeGraphVizContent" specification="_DildFIqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZavoqFEe-CzNrO9SlQWA" name="getGraphVizContent" specification="_DildFYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZav4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZawIqFEe-CzNrO9SlQWA" name="createGraphVizContent" specification="_DildF4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZawYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZawoqFEe-CzNrO9SlQWA" name="addFlowToGraphViz" specification="_DildGYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZaw4qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZaxIqFEe-CzNrO9SlQWA" name="addSrcNodeToGraphViz" specification="_DimEIYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZaxYqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZaxoqFEe-CzNrO9SlQWA" name="addSnkNodeToGraphViz" specification="_DimEI4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZax4qFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZayIqFEe-CzNrO9SlQWA" name="finalizeCurrentFlowInGraphViz" specification="_DimEJYqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyZayYqFEe-CzNrO9SlQWA" name="addNodeName" specification="_DimEJoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyZayoqFEe-CzNrO9SlQWA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyZay4qFEe-CzNrO9SlQWA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dik2AIqFEe-CzNrO9SlQWA" name="visualization" method="_DyZauYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwdhDYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DildEoqFEe-CzNrO9SlQWA" name="initializeGraphVizContent" method="_DyZau4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DildE4qFEe-CzNrO9SlQWA" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DildFIqFEe-CzNrO9SlQWA" name="finalizeGraphVizContent" method="_DyZavYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DildFYqFEe-CzNrO9SlQWA" name="getGraphVizContent" method="_DyZavoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DytjzYqFEe-CzNrO9SlQWA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_DildFoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DildF4qFEe-CzNrO9SlQWA" name="createGraphVizContent" method="_DyZawIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DildGIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DildGYqFEe-CzNrO9SlQWA" name="addFlowToGraphViz" method="_DyZawoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DimEIIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DimEIYqFEe-CzNrO9SlQWA" name="addSrcNodeToGraphViz" method="_DyZaxIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DimEIoqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DimEI4qFEe-CzNrO9SlQWA" name="addSnkNodeToGraphViz" method="_DyZaxoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DimEJIqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DimEJYqFEe-CzNrO9SlQWA" name="finalizeCurrentFlowInGraphViz" method="_DyZayIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DimEJoqFEe-CzNrO9SlQWA" name="addNodeName" visibility="private" method="_DyZayYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DimEJ4qFEe-CzNrO9SlQWA" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DimEKIqFEe-CzNrO9SlQWA" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwdhAIqFEe-CzNrO9SlQWA" name="GraphViz" visibility="package" method="_DyZasIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwdhA4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwdhBIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwdhAYqFEe-CzNrO9SlQWA" name="wfm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwdhAoqFEe-CzNrO9SlQWA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwdhBYqFEe-CzNrO9SlQWA" type="_DikO8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwdhBoqFEe-CzNrO9SlQWA" name="GraphViz" visibility="package" method="_DyZatIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwdhCoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwdhC4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwdhB4qFEe-CzNrO9SlQWA" name="wfm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwdhCIqFEe-CzNrO9SlQWA" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwdhCYqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwdhDIqFEe-CzNrO9SlQWA" type="_DikO8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DimrMIqFEe-CzNrO9SlQWA" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_DytjzoqFEe-CzNrO9SlQWA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_DxW44IqFEe-CzNrO9SlQWA" general="_DwfWM4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx4dUoqFEe-CzNrO9SlQWA" name="gv" visibility="package" type="_DikO8IqFEe-CzNrO9SlQWA" association="_DzFXNIqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaBwIqFEe-CzNrO9SlQWA" name="GraphVizListener" specification="_Dwf9QYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaBwYqFEe-CzNrO9SlQWA" name="gv" type="_DikO8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyaBwoqFEe-CzNrO9SlQWA" type="_DimrMIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaBw4qFEe-CzNrO9SlQWA" name="buildGraphViz" specification="_Dwf9RoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaBxIqFEe-CzNrO9SlQWA" name="gv" type="_DikO8IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaBxYqFEe-CzNrO9SlQWA" name="enterWarpName" specification="_Dwf9SoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaBxoqFEe-CzNrO9SlQWA" name="ctx" type="_Dwf9SIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaBx4qFEe-CzNrO9SlQWA" name="exitWarp" specification="_DwgkVoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaByIqFEe-CzNrO9SlQWA" name="ctx" type="_DwgkVIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaByYqFEe-CzNrO9SlQWA" name="enterFlowName" specification="_DwhLYYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaByoqFEe-CzNrO9SlQWA" name="ctx" type="_DwgkW4qFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaBy4qFEe-CzNrO9SlQWA" name="exitSrcNode" specification="_DwhLaIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaBzIqFEe-CzNrO9SlQWA" name="ctx" type="_DwhLZoqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaBzYqFEe-CzNrO9SlQWA" name="exitSnkNode" specification="_DwhydIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaBzoqFEe-CzNrO9SlQWA" name="ctx" type="_DwhycoqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaBz4qFEe-CzNrO9SlQWA" name="exitFlow" specification="_DwiZgYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaB0IqFEe-CzNrO9SlQWA" name="ctx" type="_DwhyeYqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dwf9QYqFEe-CzNrO9SlQWA" name="GraphVizListener" visibility="private" method="_DyaBwIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dwf9Q4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dwf9RIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dwf9QoqFEe-CzNrO9SlQWA" name="gv" type="_DikO8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwf9RYqFEe-CzNrO9SlQWA" type="_DimrMIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwf9RoqFEe-CzNrO9SlQWA" name="buildGraphViz" isStatic="true" method="_DyaBw4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwf9R4qFEe-CzNrO9SlQWA" name="gv" type="_DikO8IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwf9SoqFEe-CzNrO9SlQWA" name="enterWarpName" method="_DyaBxYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwgkUIqFEe-CzNrO9SlQWA" name="ctx" type="_Dwf9SIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwgkVoqFEe-CzNrO9SlQWA" name="exitWarp" method="_DyaBx4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwgkV4qFEe-CzNrO9SlQWA" name="ctx" type="_DwgkVIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwhLYYqFEe-CzNrO9SlQWA" name="enterFlowName" method="_DyaByYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwhLYoqFEe-CzNrO9SlQWA" name="ctx" type="_DwgkW4qFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwhLaIqFEe-CzNrO9SlQWA" name="exitSrcNode" method="_DyaBy4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwhLaYqFEe-CzNrO9SlQWA" name="ctx" type="_DwhLZoqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwhydIqFEe-CzNrO9SlQWA" name="exitSnkNode" method="_DyaBzYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwhydYqFEe-CzNrO9SlQWA" name="ctx" type="_DwhycoqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwiZgYqFEe-CzNrO9SlQWA" name="exitFlow" method="_DyaBz4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwiZgoqFEe-CzNrO9SlQWA" name="ctx" type="_DwhyeYqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiogYIqFEe-CzNrO9SlQWA" name="GuiVisualization">
              <ownedComment xmi:id="_Dytjz4qFEe-CzNrO9SlQWA">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dx4dVIqFEe-CzNrO9SlQWA" name="frame" visibility="package" type="_DwjAkYqFEe-CzNrO9SlQWA" association="_DzFXN4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx4dVoqFEe-CzNrO9SlQWA" name="jtable" visibility="package" type="_DwjAlYqFEe-CzNrO9SlQWA" association="_DzF-QYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaB0YqFEe-CzNrO9SlQWA" name="GuiVisualization" specification="_DiogYYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaB0oqFEe-CzNrO9SlQWA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyaB04qFEe-CzNrO9SlQWA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyaB1IqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyaB1YqFEe-CzNrO9SlQWA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyaB1oqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyaB14qFEe-CzNrO9SlQWA" type="_DiogYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaB2IqFEe-CzNrO9SlQWA" name="setVisible" specification="_DipHc4qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaB2YqFEe-CzNrO9SlQWA" name="resizeColumnWidth" specification="_DxW44YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaB2oqFEe-CzNrO9SlQWA" name="table" type="_DwjAlYqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DiogYYqFEe-CzNrO9SlQWA" name="GuiVisualization" method="_DyaB0YqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DiogZYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DiogZoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Dytj0IqFEe-CzNrO9SlQWA">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_DiogYoqFEe-CzNrO9SlQWA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiogY4qFEe-CzNrO9SlQWA" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DipHcIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiogZIqFEe-CzNrO9SlQWA" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DipHcYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiogZ4qFEe-CzNrO9SlQWA" type="_DiogYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DipHc4qFEe-CzNrO9SlQWA" name="setVisible" method="_DyaB2IqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dytj0YqFEe-CzNrO9SlQWA">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DxW44YqFEe-CzNrO9SlQWA" name="resizeColumnWidth" visibility="private" method="_DyaB2YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxW44oqFEe-CzNrO9SlQWA" name="table" type="_DwjAlYqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiqVkIqFEe-CzNrO9SlQWA" name="InputGraphFile">
              <ownedComment xmi:id="_Dytj0oqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dx5EYIqFEe-CzNrO9SlQWA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx5EYYqFEe-CzNrO9SlQWA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx5EYoqFEe-CzNrO9SlQWA" name="wfm" visibility="private" type="_Diad8IqFEe-CzNrO9SlQWA" association="_DzF-RIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx5EZIqFEe-CzNrO9SlQWA" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx5EZYqFEe-CzNrO9SlQWA" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx5EZ4qFEe-CzNrO9SlQWA" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx5EaIqFEe-CzNrO9SlQWA" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyaB24qFEe-CzNrO9SlQWA" name="InputGraphFile" specification="_DwkOs4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyaB3IqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyaB3YqFEe-CzNrO9SlQWA" type="_DiqVkIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao0IqFEe-CzNrO9SlQWA" name="InputGraphFile" specification="_DwkOuIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao0YqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyao0oqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao04qFEe-CzNrO9SlQWA" type="_DiqVkIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao1IqFEe-CzNrO9SlQWA" name="setGraphFileName" specification="_Diq8oIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao1YqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao1oqFEe-CzNrO9SlQWA" name="verifyGraphFileName" specification="_Diq8ooqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao14qFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao2IqFEe-CzNrO9SlQWA" name="readGraphFile" specification="_Diq8pIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao2YqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao2oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao24qFEe-CzNrO9SlQWA" name="getInputGraphFileName" specification="_DirjsIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao3IqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao3YqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao3oqFEe-CzNrO9SlQWA" name="readGraphFileContents" specification="_Dirjs4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao34qFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao4IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao4YqFEe-CzNrO9SlQWA" name="printVerboseMessage" specification="_DirjtoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao4oqFEe-CzNrO9SlQWA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao44qFEe-CzNrO9SlQWA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao5IqFEe-CzNrO9SlQWA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Diq8oIqFEe-CzNrO9SlQWA" name="setGraphFileName" visibility="private" method="_Dyao1IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Diq8oYqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Diq8ooqFEe-CzNrO9SlQWA" name="verifyGraphFileName" visibility="private" method="_Dyao1oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Diq8o4qFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Diq8pIqFEe-CzNrO9SlQWA" name="readGraphFile" method="_Dyao2IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Diq8pYqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Diq8poqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DirjsIqFEe-CzNrO9SlQWA" name="getInputGraphFileName" visibility="private" method="_Dyao24qFEe-CzNrO9SlQWA" raisedException="_DxW444qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DirjsYqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DirjsoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dirjs4qFEe-CzNrO9SlQWA" name="readGraphFileContents" visibility="private" method="_Dyao3oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DirjtIqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DirjtYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DirjtoqFEe-CzNrO9SlQWA" name="printVerboseMessage" visibility="private" method="_Dyao4YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dirjt4qFEe-CzNrO9SlQWA" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DirjuIqFEe-CzNrO9SlQWA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DirjuYqFEe-CzNrO9SlQWA" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwkOs4qFEe-CzNrO9SlQWA" name="InputGraphFile" method="_DyaB24qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwkOtYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwkOtoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwkOtIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwkOt4qFEe-CzNrO9SlQWA" type="_DiqVkIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwkOuIqFEe-CzNrO9SlQWA" name="InputGraphFile" method="_Dyao0IqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwkOu4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwkOvIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwkOuYqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwkOuoqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwkOvYqFEe-CzNrO9SlQWA" type="_DiqVkIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DisKwIqFEe-CzNrO9SlQWA" name="InstructionTimeSlot">
              <generalization xmi:id="_Dwk1wIqFEe-CzNrO9SlQWA" general="_DjQLcYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx5EaoqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx5Ea4qFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao5YqFEe-CzNrO9SlQWA" name="InstructionTimeSlot" specification="_Disx0IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao5oqFEe-CzNrO9SlQWA" type="_DisKwIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao54qFEe-CzNrO9SlQWA" name="InstructionTimeSlot" specification="_Disx1IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao6IqFEe-CzNrO9SlQWA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao6YqFEe-CzNrO9SlQWA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao6oqFEe-CzNrO9SlQWA" type="_DisKwIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao64qFEe-CzNrO9SlQWA" name="InstructionTimeSlot" specification="_Disx2oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao7IqFEe-CzNrO9SlQWA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dyao7YqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao7oqFEe-CzNrO9SlQWA" type="_DisKwIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Disx0IqFEe-CzNrO9SlQWA" name="InstructionTimeSlot" method="_Dyao5YqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Disx0YqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Disx0oqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Disx04qFEe-CzNrO9SlQWA" type="_DisKwIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Disx1IqFEe-CzNrO9SlQWA" name="InstructionTimeSlot" visibility="package" method="_Dyao54qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Disx14qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Disx2IqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Disx1YqFEe-CzNrO9SlQWA" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Disx1oqFEe-CzNrO9SlQWA" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Disx2YqFEe-CzNrO9SlQWA" type="_DisKwIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Disx2oqFEe-CzNrO9SlQWA" name="InstructionTimeSlot" visibility="package" method="_Dyao64qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Disx3IqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Disx3YqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Disx24qFEe-CzNrO9SlQWA" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Disx34qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Disx3oqFEe-CzNrO9SlQWA" type="_DisKwIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DitY4IqFEe-CzNrO9SlQWA" name="LatencyAnalysis">
              <ownedComment xmi:id="_Dytj04qFEe-CzNrO9SlQWA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dx5rcIqFEe-CzNrO9SlQWA" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx5rcYqFEe-CzNrO9SlQWA" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx5rc4qFEe-CzNrO9SlQWA" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx5rdYqFEe-CzNrO9SlQWA" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx5rdoqFEe-CzNrO9SlQWA" name="latencyReport" visibility="private" type="_DiG78IqFEe-CzNrO9SlQWA" association="_DzF-R4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx5reIqFEe-CzNrO9SlQWA" name="program" visibility="private" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzF-SoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx5reoqFEe-CzNrO9SlQWA" name="workload" visibility="private" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzF-TYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx5rfIqFEe-CzNrO9SlQWA" name="programTable" visibility="private" type="_DjFzYIqFEe-CzNrO9SlQWA" association="_DzF-UIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx6SgYqFEe-CzNrO9SlQWA" name="nodeIndex" visibility="private" type="_DwR60IqFEe-CzNrO9SlQWA" association="_DzHMYYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao74qFEe-CzNrO9SlQWA" name="LatencyAnalysis" specification="_DwmD4YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao8IqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyao8YqFEe-CzNrO9SlQWA" type="_DitY4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao8oqFEe-CzNrO9SlQWA" name="LatencyAnalysis" specification="_DwmD5oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao84qFEe-CzNrO9SlQWA" name="program" type="_Di93kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyao9IqFEe-CzNrO9SlQWA" type="_DitY4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao9YqFEe-CzNrO9SlQWA" name="latencyReport" specification="_Dit_8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao9oqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao94qFEe-CzNrO9SlQWA" name="numMatchingTx" specification="_Dit_8YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao-IqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao-YqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao-oqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao-4qFEe-CzNrO9SlQWA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyao_IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dit_8IqFEe-CzNrO9SlQWA" name="latencyReport" method="_Dyao9YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwmD64qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dit_8YqFEe-CzNrO9SlQWA" name="numMatchingTx" method="_Dyao94qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dit_8oqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dit_84qFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dit_9IqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dit_9YqFEe-CzNrO9SlQWA" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dit_9oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwmD4YqFEe-CzNrO9SlQWA" name="LatencyAnalysis" visibility="package" method="_Dyao74qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwmD44qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwmD5IqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwmD4oqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwmD5YqFEe-CzNrO9SlQWA" type="_DitY4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwmD5oqFEe-CzNrO9SlQWA" name="LatencyAnalysis" visibility="package" method="_Dyao8oqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwmD6IqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwmD6YqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwmD54qFEe-CzNrO9SlQWA" name="program" type="_Di93kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwmD6oqFEe-CzNrO9SlQWA" type="_DitY4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Div1IIqFEe-CzNrO9SlQWA" name="LatencyVisualization">
              <ownedComment xmi:id="_Dytj1IqFEe-CzNrO9SlQWA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dwmq9YqFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx6ShIqFEe-CzNrO9SlQWA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx6ShYqFEe-CzNrO9SlQWA" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx6ShoqFEe-CzNrO9SlQWA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx6Sh4qFEe-CzNrO9SlQWA" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx6SiIqFEe-CzNrO9SlQWA" name="warp" visibility="private" type="_Dj32gIqFEe-CzNrO9SlQWA" association="_DzHMZIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx6SioqFEe-CzNrO9SlQWA" name="la" visibility="private" type="_DitY4IqFEe-CzNrO9SlQWA" association="_DzHMZ4qFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyao_YqFEe-CzNrO9SlQWA" name="LatencyVisualization" specification="_Dwmq8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyao_oqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyao_4qFEe-CzNrO9SlQWA" type="_Div1IIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dwmq8IqFEe-CzNrO9SlQWA" name="LatencyVisualization" visibility="package" method="_Dyao_YqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dwmq8oqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dwmq84qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dwmq8YqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwmq9IqFEe-CzNrO9SlQWA" type="_Div1IIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DiwcMIqFEe-CzNrO9SlQWA" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_DxYHAIqFEe-CzNrO9SlQWA" client="_DiwcMIqFEe-CzNrO9SlQWA" supplier="_DwZPloqFEe-CzNrO9SlQWA" contract="_DwZPloqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyapAIqFEe-CzNrO9SlQWA" name="compare" specification="_DxYHAoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyapAYqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyapAoqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyapA4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DxYHAoqFEe-CzNrO9SlQWA" name="compare" method="_DyapAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxYHA4qFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxYHBIqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxYHBYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DixDQYqFEe-CzNrO9SlQWA" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_DxYuEYqFEe-CzNrO9SlQWA" client="_DixDQYqFEe-CzNrO9SlQWA" supplier="_DwZPloqFEe-CzNrO9SlQWA" contract="_DwZPloqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP4IqFEe-CzNrO9SlQWA" name="compare" specification="_DxYuE4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP4YqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DybP4oqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DybP44qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DxYuE4qFEe-CzNrO9SlQWA" name="compare" method="_DybP4IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxYuFIqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxYuFYqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxYuFoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DixqUYqFEe-CzNrO9SlQWA" name="Node">
              <generalization xmi:id="_DwnSCIqFEe-CzNrO9SlQWA" general="_DkRfIIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx65kYqFEe-CzNrO9SlQWA" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx65koqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx65k4qFEe-CzNrO9SlQWA" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx65lIqFEe-CzNrO9SlQWA" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx65lYqFEe-CzNrO9SlQWA" name="edges" type="_DwSh4IqFEe-CzNrO9SlQWA" isReadOnly="true" association="_DzHMaoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx65l4qFEe-CzNrO9SlQWA" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dx65mIqFEe-CzNrO9SlQWA" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_DxZVIIqFEe-CzNrO9SlQWA" client="_DixqUYqFEe-CzNrO9SlQWA" supplier="_DxNu8oqFEe-CzNrO9SlQWA" contract="_DxNu8oqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP5IqFEe-CzNrO9SlQWA" name="Node" specification="_DiyRYIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP5YqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DybP5oqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DybP54qFEe-CzNrO9SlQWA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DybP6IqFEe-CzNrO9SlQWA" type="_DixqUYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP6YqFEe-CzNrO9SlQWA" name="compareTo" specification="_DwnSAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP6oqFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DybP64qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP7IqFEe-CzNrO9SlQWA" name="toString" specification="_Diy4cIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP7YqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP7oqFEe-CzNrO9SlQWA" name="addEdge" specification="_DwnSBoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP74qFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP8IqFEe-CzNrO9SlQWA" name="addConflict" specification="_Diy4dYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP8YqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP8oqFEe-CzNrO9SlQWA" name="numEdges" specification="_Diy4d4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP84qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP9IqFEe-CzNrO9SlQWA" name="print" specification="_DizfgIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP9YqFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP9oqFEe-CzNrO9SlQWA" name="print" specification="_DizfhYqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DiyRYIqFEe-CzNrO9SlQWA" name="Node" visibility="package" method="_DybP5IqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DiyRZIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DiyRZYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DiyRYYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiyRYoqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiyRY4qFEe-CzNrO9SlQWA" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DiyRZoqFEe-CzNrO9SlQWA" type="_DixqUYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Diy4cIqFEe-CzNrO9SlQWA" name="toString" method="_DybP7IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Diy4cYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Diy4dYqFEe-CzNrO9SlQWA" name="addConflict" method="_DybP8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Diy4doqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Diy4d4qFEe-CzNrO9SlQWA" name="numEdges" method="_DybP8oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Diy4eIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DizfgIqFEe-CzNrO9SlQWA" name="print" method="_DybP9IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DizfgYqFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DizfhYqFEe-CzNrO9SlQWA" name="print" method="_DybP9oqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DwnSAIqFEe-CzNrO9SlQWA" name="compareTo" method="_DybP6YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwnSAYqFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwnSAoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwnSBoqFEe-CzNrO9SlQWA" name="addEdge" method="_DybP7oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwnSB4qFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di0toIqFEe-CzNrO9SlQWA" name="NodeMap">
              <ownedComment xmi:id="_DyuK0IqFEe-CzNrO9SlQWA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dwn5EIqFEe-CzNrO9SlQWA" general="_DhnzwIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx65mYqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx65moqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di1UsIqFEe-CzNrO9SlQWA" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_DyuK0YqFEe-CzNrO9SlQWA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dwn5GIqFEe-CzNrO9SlQWA" general="_DjW5IIqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP94qFEe-CzNrO9SlQWA" name="NonPreemptiveSchedule" specification="_Dwn5EoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP-IqFEe-CzNrO9SlQWA" name="poset" type="_Di3J4YqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DybP-YqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DybP-oqFEe-CzNrO9SlQWA" type="_Di1UsIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dwn5EoqFEe-CzNrO9SlQWA" name="NonPreemptiveSchedule" visibility="package" method="_DybP94qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dwn5FYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dwn5FoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dwn5E4qFEe-CzNrO9SlQWA" name="poset" type="_Di3J4YqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwn5FIqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwn5F4qFEe-CzNrO9SlQWA" type="_Di1UsIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di1UsYqFEe-CzNrO9SlQWA" name="NotImplentedVisualization">
              <generalization xmi:id="_Dwn5GoqFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx7goIqFEe-CzNrO9SlQWA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx7goYqFEe-CzNrO9SlQWA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx7gooqFEe-CzNrO9SlQWA" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx7go4qFEe-CzNrO9SlQWA" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx7gpIqFEe-CzNrO9SlQWA" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx7gpYqFEe-CzNrO9SlQWA" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP-4qFEe-CzNrO9SlQWA" name="NotImplentedVisualization" specification="_Di17wIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP_IqFEe-CzNrO9SlQWA" type="_Di1UsYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybP_YqFEe-CzNrO9SlQWA" name="NotImplentedVisualization" specification="_Di17xIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybP_oqFEe-CzNrO9SlQWA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DybP_4qFEe-CzNrO9SlQWA" type="_Di1UsYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybQAIqFEe-CzNrO9SlQWA" name="visualization" specification="_Di17yYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybQAYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Di17wIqFEe-CzNrO9SlQWA" name="NotImplentedVisualization" visibility="package" method="_DybP-4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Di17wYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Di17woqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Di17w4qFEe-CzNrO9SlQWA" type="_Di1UsYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Di17xIqFEe-CzNrO9SlQWA" name="NotImplentedVisualization" visibility="package" method="_DybP_YqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Di17xoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Di17x4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Di17xYqFEe-CzNrO9SlQWA" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di17yIqFEe-CzNrO9SlQWA" type="_Di1UsYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Di17yYqFEe-CzNrO9SlQWA" name="visualization" method="_DybQAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwn5GYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di2i0oqFEe-CzNrO9SlQWA" name="PeriodComparator">
              <interfaceRealization xmi:id="_DxZVIoqFEe-CzNrO9SlQWA" client="_Di2i0oqFEe-CzNrO9SlQWA" supplier="_DwZPloqFEe-CzNrO9SlQWA" contract="_DwZPloqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DybQAoqFEe-CzNrO9SlQWA" name="compare" specification="_DxZ8MYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DybQA4qFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DybQBIqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DybQBYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DxZ8MYqFEe-CzNrO9SlQWA" name="compare" method="_DybQAoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxZ8MoqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxZ8M4qFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxZ8NIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di3J4YqFEe-CzNrO9SlQWA" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_DyuK0oqFEe-CzNrO9SlQWA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dx7gpoqFEe-CzNrO9SlQWA" name="activations" visibility="private" type="_Dh0BAIqFEe-CzNrO9SlQWA" association="_DzHzcIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx7gqIqFEe-CzNrO9SlQWA" name="workload" visibility="private" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzHzc4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx7gqoqFEe-CzNrO9SlQWA" name="flows" visibility="protected" type="_DidhQIqFEe-CzNrO9SlQWA" association="_DzHzdoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dx7grIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dx7grYqFEe-CzNrO9SlQWA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dx7gq4qFEe-CzNrO9SlQWA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx7gr4qFEe-CzNrO9SlQWA" name="nodes" visibility="private" type="_DixqUYqFEe-CzNrO9SlQWA" association="_DzHzeYqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dx8HsIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dx8HsYqFEe-CzNrO9SlQWA" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dx7gsIqFEe-CzNrO9SlQWA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx8Hs4qFEe-CzNrO9SlQWA" name="nodeMap" visibility="private" type="_Di0toIqFEe-CzNrO9SlQWA" association="_DzIagYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx8HtYqFEe-CzNrO9SlQWA" name="priorityQueue" visibility="private" type="_DjKr5IqFEe-CzNrO9SlQWA" association="_DzIahIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx8HuIqFEe-CzNrO9SlQWA" name="nodeConnectivityMap" visibility="protected" type="_DwR60IqFEe-CzNrO9SlQWA" association="_DzIah4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx8Hu4qFEe-CzNrO9SlQWA" name="activationMap" visibility="package" type="_Dijn4IqFEe-CzNrO9SlQWA" association="_DzJBkIqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb28IqFEe-CzNrO9SlQWA" name="Poset" specification="_DwogIoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb28YqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyb28oqFEe-CzNrO9SlQWA" type="_Di3J4YqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb284qFEe-CzNrO9SlQWA" name="getNodeConnectivity" specification="_Di3w8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb29IqFEe-CzNrO9SlQWA" type="_DwR60IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb29YqFEe-CzNrO9SlQWA" name="getNodeNames" specification="_Di4YAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb29oqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb294qFEe-CzNrO9SlQWA" name="getNodesNamesOrderedAlphabetically" specification="_Di4YAoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb2-IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dyb2-YqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb2-oqFEe-CzNrO9SlQWA" name="buildPosetOfActivations" specification="_Di4YBoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb2-4qFEe-CzNrO9SlQWA" name="createEdgeLists" specification="_Di4_EIqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb2_IqFEe-CzNrO9SlQWA" name="createConflictLists" specification="_Di4_EYqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb2_YqFEe-CzNrO9SlQWA" name="createGlobalConflictLists" specification="_Di4_EoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb2_oqFEe-CzNrO9SlQWA" name="createLocalConflictLists" specification="_Di4_E4qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb2_4qFEe-CzNrO9SlQWA" name="findCoordinator" specification="_DxajQYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb3AIqFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyb3AYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb3AoqFEe-CzNrO9SlQWA" name="buildTxArray" specification="_DxajRYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb3A4qFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyb3BIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dyb3BYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb3BoqFEe-CzNrO9SlQWA" name="createInitialActivations" specification="_Di4_FIqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb3B4qFEe-CzNrO9SlQWA" name="getMaxTx" specification="_DwpHMoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb3CIqFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyb3CYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyb3CoqFEe-CzNrO9SlQWA" name="getActivation" specification="_DwpHNYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyb3C4qFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyb3DIqFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyb3DYqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceAIqFEe-CzNrO9SlQWA" name="getHyperPeriod" specification="_Di4_FYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceAYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceAoqFEe-CzNrO9SlQWA" name="getMaxPhase" specification="_Di4_F4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceA4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceBIqFEe-CzNrO9SlQWA" name="orderActivations" specification="_Di4_GYqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceBYqFEe-CzNrO9SlQWA" name="getNextActivation" specification="_Di5mIIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceBoqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceB4qFEe-CzNrO9SlQWA" name="addActivation" specification="_DwpHOoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceCIqFEe-CzNrO9SlQWA" name="activation" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceCYqFEe-CzNrO9SlQWA" name="findBaseStation" specification="_Di5mIYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceCoqFEe-CzNrO9SlQWA" type="_DixqUYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Di3w8IqFEe-CzNrO9SlQWA" name="getNodeConnectivity" visibility="private" method="_Dyb284qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxZ8OIqFEe-CzNrO9SlQWA" type="_DwR60IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Di4YAIqFEe-CzNrO9SlQWA" name="getNodeNames" method="_Dyb29YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxajQIqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Di4YAoqFEe-CzNrO9SlQWA" name="getNodesNamesOrderedAlphabetically" method="_Dyb294qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di4YA4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Di4YBIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di4YBoqFEe-CzNrO9SlQWA" name="buildPosetOfActivations" method="_Dyb2-oqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di4_EIqFEe-CzNrO9SlQWA" name="createEdgeLists" visibility="private" method="_Dyb2-4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di4_EYqFEe-CzNrO9SlQWA" name="createConflictLists" visibility="private" method="_Dyb2_IqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di4_EoqFEe-CzNrO9SlQWA" name="createGlobalConflictLists" visibility="private" method="_Dyb2_YqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di4_E4qFEe-CzNrO9SlQWA" name="createLocalConflictLists" visibility="private" method="_Dyb2_oqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di4_FIqFEe-CzNrO9SlQWA" name="createInitialActivations" visibility="private" method="_Dyb3BoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di4_FYqFEe-CzNrO9SlQWA" name="getHyperPeriod" method="_DyceAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di4_FoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di4_F4qFEe-CzNrO9SlQWA" name="getMaxPhase" method="_DyceAoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di4_GIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di4_GYqFEe-CzNrO9SlQWA" name="orderActivations" method="_DyceBIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di5mIIqFEe-CzNrO9SlQWA" name="getNextActivation" method="_DyceBYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK1YqFEe-CzNrO9SlQWA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwpHOYqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Di5mIYqFEe-CzNrO9SlQWA" name="findBaseStation" visibility="protected" method="_DyceCYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK14qFEe-CzNrO9SlQWA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwpHPIqFEe-CzNrO9SlQWA" type="_DixqUYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwogIoqFEe-CzNrO9SlQWA" name="Poset" visibility="package" method="_Dyb28IqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwogJIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwpHMIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DyuK04qFEe-CzNrO9SlQWA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwogI4qFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwpHMYqFEe-CzNrO9SlQWA" type="_Di3J4YqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwpHMoqFEe-CzNrO9SlQWA" name="getMaxTx" visibility="private" method="_Dyb3B4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwpHM4qFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwpHNIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwpHNYqFEe-CzNrO9SlQWA" name="getActivation" visibility="private" method="_Dyb3CoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwpHNoqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwpHN4qFEe-CzNrO9SlQWA" name="node" type="_DixqUYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwpHOIqFEe-CzNrO9SlQWA" type="_Dhpo8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwpHOoqFEe-CzNrO9SlQWA" name="addActivation" method="_DyceB4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK1oqFEe-CzNrO9SlQWA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwpHO4qFEe-CzNrO9SlQWA" name="activation" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxajQYqFEe-CzNrO9SlQWA" name="findCoordinator" visibility="protected" method="_Dyb2_4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK1IqFEe-CzNrO9SlQWA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxajQoqFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxajQ4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxajRYqFEe-CzNrO9SlQWA" name="buildTxArray" visibility="private" method="_Dyb3AoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxajRoqFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxajR4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DxajSIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di60QIqFEe-CzNrO9SlQWA" name="PreemptiveSchedule">
              <ownedComment xmi:id="_DyuK2IqFEe-CzNrO9SlQWA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dwq8ZYqFEe-CzNrO9SlQWA" general="_DjW5IIqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceC4qFEe-CzNrO9SlQWA" name="PreemptiveSchedule" specification="_DwpuQIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceDIqFEe-CzNrO9SlQWA" name="poset" type="_Di3J4YqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyceDYqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyceDoqFEe-CzNrO9SlQWA" type="_Di60QIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceD4qFEe-CzNrO9SlQWA" name="continueSearch" specification="_DwpuRoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceEIqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyceEYqFEe-CzNrO9SlQWA" name="activation" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyceEoqFEe-CzNrO9SlQWA" type="_DxbKUYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceE4qFEe-CzNrO9SlQWA" name="toProgram" specification="_Di7bUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceFIqFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyceFYqFEe-CzNrO9SlQWA" name="findPreeptiveChannelAndTime" specification="_DwqVU4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyceFoqFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyceF4qFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyceGIqFEe-CzNrO9SlQWA" type="_DxbKUYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFEIqFEe-CzNrO9SlQWA" name="findAdditionalTime" specification="_DwqVVoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFEYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFEoqFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFE4qFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFFIqFEe-CzNrO9SlQWA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFFYqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFFoqFEe-CzNrO9SlQWA" name="findMaxTimeAvailable" specification="_DwqVXIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFF4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFGIqFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFGYqFEe-CzNrO9SlQWA" type="_DxbKUYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFGoqFEe-CzNrO9SlQWA" name="availableTime" specification="_DwqVX4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFG4qFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFHIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFHYqFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFHoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFH4qFEe-CzNrO9SlQWA" name="addToSchedule" specification="_DwqVZIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFIIqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFIYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFIoqFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFI4qFEe-CzNrO9SlQWA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFJIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFJYqFEe-CzNrO9SlQWA" name="addToSchedule" specification="_DwqVaoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFJoqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFJ4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Di7bUIqFEe-CzNrO9SlQWA" name="toProgram" method="_DyceE4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwqVUoqFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwpuQIqFEe-CzNrO9SlQWA" name="PreemptiveSchedule" visibility="package" method="_DyceC4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwpuQ4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwpuRIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwpuQYqFEe-CzNrO9SlQWA" name="poset" type="_Di3J4YqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwpuQoqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwpuRYqFEe-CzNrO9SlQWA" type="_Di60QIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwpuRoqFEe-CzNrO9SlQWA" name="continueSearch" visibility="protected" method="_DyceD4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwpuR4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwpuSIqFEe-CzNrO9SlQWA" name="activation" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxbKU4qFEe-CzNrO9SlQWA" type="_DxbKUYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwqVU4qFEe-CzNrO9SlQWA" name="findPreeptiveChannelAndTime" visibility="private" method="_DyceFYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwqVVIqFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVVYqFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxbxYIqFEe-CzNrO9SlQWA" type="_DxbKUYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwqVVoqFEe-CzNrO9SlQWA" name="findAdditionalTime" visibility="private" method="_DydFEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwqVV4qFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVWIqFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVWYqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwqVWoqFEe-CzNrO9SlQWA" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxbxYYqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwqVXIqFEe-CzNrO9SlQWA" name="findMaxTimeAvailable" visibility="private" method="_DydFFoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwqVXYqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVXoqFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxbxYoqFEe-CzNrO9SlQWA" type="_DxbKUYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwqVX4qFEe-CzNrO9SlQWA" name="availableTime" visibility="private" method="_DydFGoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwqVYIqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwqVYYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVYoqFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVY4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwqVZIqFEe-CzNrO9SlQWA" name="addToSchedule" visibility="private" method="_DydFH4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwqVZYqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwqVZoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVZ4qFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVaIqFEe-CzNrO9SlQWA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwqVaYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwqVaoqFEe-CzNrO9SlQWA" name="addToSchedule" visibility="protected" method="_DydFJYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwq8YIqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwq8YYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di8pcIqFEe-CzNrO9SlQWA" name="PriorityComparator">
              <interfaceRealization xmi:id="_DxbxY4qFEe-CzNrO9SlQWA" client="_Di8pcIqFEe-CzNrO9SlQWA" supplier="_DwZPloqFEe-CzNrO9SlQWA" contract="_DwZPloqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFKIqFEe-CzNrO9SlQWA" name="compare" specification="_DxbxZYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFKYqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFKoqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFK4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DxbxZYqFEe-CzNrO9SlQWA" name="compare" method="_DydFKIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxbxZoqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxbxZ4qFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxcYcIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Di93kIqFEe-CzNrO9SlQWA" name="Program">
              <ownedComment xmi:id="_DyuK2YqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_Dx8uwYqFEe-CzNrO9SlQWA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx8uwoqFEe-CzNrO9SlQWA" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx8uw4qFEe-CzNrO9SlQWA" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx8uxIqFEe-CzNrO9SlQWA" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx8uxYqFEe-CzNrO9SlQWA" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx8uxoqFEe-CzNrO9SlQWA" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx8ux4qFEe-CzNrO9SlQWA" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx8uyIqFEe-CzNrO9SlQWA" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx8uyYqFEe-CzNrO9SlQWA" name="workLoad" visibility="package" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzJBk4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx8uy4qFEe-CzNrO9SlQWA" name="scheduleBuilt" visibility="package" type="_DjFzYIqFEe-CzNrO9SlQWA" association="_DzJBloqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx9V0YqFEe-CzNrO9SlQWA" name="SchedulerSelected" visibility="package" type="_DxcYdIqFEe-CzNrO9SlQWA" association="_DzJBmYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx9V04qFEe-CzNrO9SlQWA" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx9V1YqFEe-CzNrO9SlQWA" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx9V14qFEe-CzNrO9SlQWA" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx984YqFEe-CzNrO9SlQWA" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx9844qFEe-CzNrO9SlQWA" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx985YqFEe-CzNrO9SlQWA" name="channelsAvailable" visibility="package" type="_Dh3rYIqFEe-CzNrO9SlQWA" association="_DzJooIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx9854qFEe-CzNrO9SlQWA" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx986YqFEe-CzNrO9SlQWA" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx9864qFEe-CzNrO9SlQWA" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx-j8YqFEe-CzNrO9SlQWA" name="deadlineMisses" visibility="private" type="_DiG78IqFEe-CzNrO9SlQWA" association="_DzJoo4qFEe-CzNrO9SlQWA"/>
              <interfaceRealization xmi:id="_Dwrjc4qFEe-CzNrO9SlQWA" client="_Di93kIqFEe-CzNrO9SlQWA" supplier="_DjgqIYqFEe-CzNrO9SlQWA" contract="_DjgqIYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFLIqFEe-CzNrO9SlQWA" name="Program" specification="_Dxc_gIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFLYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFLoqFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFL4qFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFMIqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFMYqFEe-CzNrO9SlQWA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFMoqFEe-CzNrO9SlQWA" type="_Di93kIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFM4qFEe-CzNrO9SlQWA" name="Program" specification="_Dxc_iYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFNIqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFNYqFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFNoqFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFN4qFEe-CzNrO9SlQWA" type="_Di93kIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFOIqFEe-CzNrO9SlQWA" name="setDefaultParameters" specification="_DwsKgIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFOYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydFOoqFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFO4qFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFPIqFEe-CzNrO9SlQWA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFPYqFEe-CzNrO9SlQWA" name="toWorkLoad" specification="_Di-eoIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFPoqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFP4qFEe-CzNrO9SlQWA" name="buildProgram" specification="_Dxc_kIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFQIqFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFQYqFEe-CzNrO9SlQWA" name="buildOriginalProgram" specification="_Di_FsIqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFQoqFEe-CzNrO9SlQWA" name="waitInstruction" specification="_Di_FsYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFQ4qFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFRIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFRYqFEe-CzNrO9SlQWA" name="elseWaitInstruction" specification="_Di_FtIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFRoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFR4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFSIqFEe-CzNrO9SlQWA" name="elsePullClause" specification="_Di_Ft4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydFSYqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFSoqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFS4qFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFTIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydFTYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydFToqFEe-CzNrO9SlQWA" name="hasPushInstruction" specification="_Di_swIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsIIqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsIYqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsIoqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsI4qFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsJIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsJYqFEe-CzNrO9SlQWA" name="pushInstruction" specification="_Di_sxoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsJoqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsJ4qFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsKIqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsKYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsKoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsK4qFEe-CzNrO9SlQWA" name="getFirstChannelInInstruction" specification="_Di_szIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsLIqFEe-CzNrO9SlQWA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsLYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsLoqFEe-CzNrO9SlQWA" name="findNextAvailableInstructionTimeSlot" specification="_DwsKhoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsL4qFEe-CzNrO9SlQWA" name="schedule" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydsMIqFEe-CzNrO9SlQWA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsMYqFEe-CzNrO9SlQWA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsMoqFEe-CzNrO9SlQWA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsM4qFEe-CzNrO9SlQWA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsNIqFEe-CzNrO9SlQWA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DydsNYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsNoqFEe-CzNrO9SlQWA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DydsN4qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsOIqFEe-CzNrO9SlQWA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsOYqFEe-CzNrO9SlQWA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsOoqFEe-CzNrO9SlQWA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsO4qFEe-CzNrO9SlQWA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsPIqFEe-CzNrO9SlQWA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsPYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsPoqFEe-CzNrO9SlQWA" name="slotIsAvailable" specification="_DwsxlIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsP4qFEe-CzNrO9SlQWA" name="currentInstructionTimeSlot" type="_DisKwIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydsQIqFEe-CzNrO9SlQWA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsQYqFEe-CzNrO9SlQWA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsQoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsQ4qFEe-CzNrO9SlQWA" name="findNextAvailableChannel" specification="_DwsxmYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsRIqFEe-CzNrO9SlQWA" name="schedule" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DydsRYqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsRoqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsR4qFEe-CzNrO9SlQWA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsSIqFEe-CzNrO9SlQWA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DydsSYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsSoqFEe-CzNrO9SlQWA" name="selectPriority" specification="_DjAT0IqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsS4qFEe-CzNrO9SlQWA" name="selectRM" specification="_DjAT0YqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsTIqFEe-CzNrO9SlQWA" name="selectDM" specification="_DjAT0oqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsTYqFEe-CzNrO9SlQWA" name="selectRtHART" specification="_DjAT04qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsToqFEe-CzNrO9SlQWA" name="setScheduleSelected" specification="_Dxc_koqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsT4qFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsUIqFEe-CzNrO9SlQWA" name="setSchedule" specification="_DwsxoIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsUYqFEe-CzNrO9SlQWA" name="schedule" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsUoqFEe-CzNrO9SlQWA" name="getSchedule" specification="_DjAT1IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsU4qFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsVIqFEe-CzNrO9SlQWA" name="getSchedulerName" specification="_DjAT1YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsVYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsVoqFEe-CzNrO9SlQWA" name="getSchChoice" specification="_DjA64YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsV4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsWIqFEe-CzNrO9SlQWA" name="getNumChannels" specification="_DjA644qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsWYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsWoqFEe-CzNrO9SlQWA" name="getNumTransmissions" specification="_DjA66IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsW4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsXIqFEe-CzNrO9SlQWA" name="getRealTimeHartFlag" specification="_DjA67YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsXYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsXoqFEe-CzNrO9SlQWA" name="setRealTimeHartFlag" specification="_DjBh8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsX4qFEe-CzNrO9SlQWA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DydsYIqFEe-CzNrO9SlQWA" name="getMinPacketReceptionRate" specification="_DjBh8oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DydsYYqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTMIqFEe-CzNrO9SlQWA" name="getE2e" specification="_DjBh9oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTMYqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTMoqFEe-CzNrO9SlQWA" name="getName" specification="_DjBh-oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTM4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTNIqFEe-CzNrO9SlQWA" name="getOptimizationFlag" specification="_DjCJAoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTNYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTNoqFEe-CzNrO9SlQWA" name="deadlineMisses" specification="_DjCJB4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTN4qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTOIqFEe-CzNrO9SlQWA" name="getNumFaults" specification="_DjCJCIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTOYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTOoqFEe-CzNrO9SlQWA" name="getNodeMapIndex" specification="_DjCJDYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTO4qFEe-CzNrO9SlQWA" type="_DwR60IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node names sorted alphabetically&#xD;
   var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to index in schedule table&#xD;
   var nNodes = orderedNodes.length;&#xD;
   for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
       var name = orderedNodes[index];&#xD;
       nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
   }&#xD;
   return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Di-eoIqFEe-CzNrO9SlQWA" name="toWorkLoad" method="_DydFPYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK2oqFEe-CzNrO9SlQWA">
                  <body>Converts the current object to a {@link WorkLoad} instance.&#xD;
   * &#xD;
   * @return a {@link WorkLoad} object that represents the current state of this instance.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwsKhYqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Di_FsIqFEe-CzNrO9SlQWA" name="buildOriginalProgram" method="_DydFQYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Di_FsYqFEe-CzNrO9SlQWA" name="waitInstruction" visibility="private" method="_DydFQoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di_FsoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_Fs4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di_FtIqFEe-CzNrO9SlQWA" name="elseWaitInstruction" visibility="private" method="_DydFRYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di_FtYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_FtoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di_Ft4qFEe-CzNrO9SlQWA" name="elsePullClause" visibility="private" method="_DydFSIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di_FuIqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_FuYqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_FuoqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_Fu4qFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_FvIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di_swIqFEe-CzNrO9SlQWA" name="hasPushInstruction" visibility="private" method="_DydFToqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di_swYqFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_swoqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_sw4qFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_sxIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_sxYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di_sxoqFEe-CzNrO9SlQWA" name="pushInstruction" visibility="private" method="_DydsJYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di_sx4qFEe-CzNrO9SlQWA" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_syIqFEe-CzNrO9SlQWA" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_syYqFEe-CzNrO9SlQWA" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_syoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_sy4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Di_szIqFEe-CzNrO9SlQWA" name="getFirstChannelInInstruction" visibility="private" method="_DydsK4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Di_szYqFEe-CzNrO9SlQWA" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Di_szoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjAT0IqFEe-CzNrO9SlQWA" name="selectPriority" method="_DydsSoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjAT0YqFEe-CzNrO9SlQWA" name="selectRM" method="_DydsS4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjAT0oqFEe-CzNrO9SlQWA" name="selectDM" method="_DydsTIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjAT04qFEe-CzNrO9SlQWA" name="selectRtHART" method="_DydsTYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjAT1IqFEe-CzNrO9SlQWA" name="getSchedule" method="_DydsUoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK24qFEe-CzNrO9SlQWA">
                  <body>Retrieves the built program schedule.&#xD;
   * &#xD;
   * @return a {@link ProgramSchedule} object representing the current program schedule.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwsxooqFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjAT1YqFEe-CzNrO9SlQWA" name="getSchedulerName" method="_DydsVIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjAT1oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjA64YqFEe-CzNrO9SlQWA" name="getSchChoice" method="_DydsVoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjA64oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjA644qFEe-CzNrO9SlQWA" name="getNumChannels" method="_DydsWIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjA65IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjA66IqFEe-CzNrO9SlQWA" name="getNumTransmissions" method="_DydsWoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjA66YqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjA67YqFEe-CzNrO9SlQWA" name="getRealTimeHartFlag" visibility="private" method="_DydsXIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjA67oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjBh8IqFEe-CzNrO9SlQWA" name="setRealTimeHartFlag" visibility="private" method="_DydsXoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjBh8YqFEe-CzNrO9SlQWA" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjBh8oqFEe-CzNrO9SlQWA" name="getMinPacketReceptionRate" method="_DydsYIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxdmkoqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjBh9oqFEe-CzNrO9SlQWA" name="getE2e" method="_DyeTMIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dxdmk4qFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjBh-oqFEe-CzNrO9SlQWA" name="getName" method="_DyeTMoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjBh-4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjCJAoqFEe-CzNrO9SlQWA" name="getOptimizationFlag" method="_DyeTNIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjCJA4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjCJB4qFEe-CzNrO9SlQWA" name="deadlineMisses" method="_DyeTNoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwsxo4qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjCJCIqFEe-CzNrO9SlQWA" name="getNumFaults" method="_DyeTOIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjCJCYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjCJDYqFEe-CzNrO9SlQWA" name="getNodeMapIndex" method="_DyeTOoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK3IqFEe-CzNrO9SlQWA">
                  <body>Retrieves a mapping of node names to their corresponding indices in the schedule.&#xD;
   * &#xD;
   * &lt;p>This method creates a HashMap that maps each node name to its index, &#xD;
   * based on an alphabetical ordering of node names. The indices correspond to &#xD;
   * their position in the schedule table.&lt;/p>&#xD;
   * &#xD;
   * @return a {@link HashMap} where the keys are node names (as {@link String}) &#xD;
   *         and the values are their respective indices (as {@link Integer}).</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxdmlIqFEe-CzNrO9SlQWA" type="_DwR60IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwsKgIqFEe-CzNrO9SlQWA" name="setDefaultParameters" visibility="private" method="_DydFOIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwsKgYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwsKgoqFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKg4qFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKhIqFEe-CzNrO9SlQWA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwsKhoqFEe-CzNrO9SlQWA" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_DydsLoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwsKh4qFEe-CzNrO9SlQWA" name="schedule" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwsKiIqFEe-CzNrO9SlQWA" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKiYqFEe-CzNrO9SlQWA" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKioqFEe-CzNrO9SlQWA" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKi4qFEe-CzNrO9SlQWA" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKjIqFEe-CzNrO9SlQWA" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DwsxkoqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKjYqFEe-CzNrO9SlQWA" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dwsxk4qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKjoqFEe-CzNrO9SlQWA" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKj4qFEe-CzNrO9SlQWA" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKkIqFEe-CzNrO9SlQWA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsKkYqFEe-CzNrO9SlQWA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsxkIqFEe-CzNrO9SlQWA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsxkYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwsxlIqFEe-CzNrO9SlQWA" name="slotIsAvailable" visibility="private" method="_DydsPoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwsxlYqFEe-CzNrO9SlQWA" name="currentInstructionTimeSlot" type="_DisKwIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwsxloqFEe-CzNrO9SlQWA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwsxl4qFEe-CzNrO9SlQWA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsxmIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwsxmYqFEe-CzNrO9SlQWA" name="findNextAvailableChannel" visibility="private" method="_DydsQ4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwsxmoqFEe-CzNrO9SlQWA" name="schedule" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwsxm4qFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsxnIqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsxnYqFEe-CzNrO9SlQWA" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwsxnoqFEe-CzNrO9SlQWA" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwsxn4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwsxoIqFEe-CzNrO9SlQWA" name="setSchedule" visibility="private" method="_DydsUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwsxoYqFEe-CzNrO9SlQWA" name="schedule" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxc_gIqFEe-CzNrO9SlQWA" name="Program" visibility="package" method="_DydFLIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dxc_hoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dxc_h4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dxc_gYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxc_goqFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxc_g4qFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxc_hIqFEe-CzNrO9SlQWA" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxc_hYqFEe-CzNrO9SlQWA" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxc_iIqFEe-CzNrO9SlQWA" type="_Di93kIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxc_iYqFEe-CzNrO9SlQWA" name="Program" visibility="package" method="_DydFM4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dxc_jYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dxc_joqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dxc_ioqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxc_i4qFEe-CzNrO9SlQWA" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxc_jIqFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxc_j4qFEe-CzNrO9SlQWA" type="_Di93kIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxc_kIqFEe-CzNrO9SlQWA" name="buildProgram" method="_DydFP4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dxc_kYqFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxc_koqFEe-CzNrO9SlQWA" name="setScheduleSelected" visibility="private" method="_DydsToqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dxc_k4qFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjFzYIqFEe-CzNrO9SlQWA" name="ProgramSchedule">
              <generalization xmi:id="_Dwt_sIqFEe-CzNrO9SlQWA" general="_DjjGYIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx-j84qFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx-j9IqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTPIqFEe-CzNrO9SlQWA" name="ProgramSchedule" specification="_DjGacIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTPYqFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTPoqFEe-CzNrO9SlQWA" name="ProgramSchedule" specification="_DjGadIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTP4qFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyeTQIqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyeTQYqFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjGacIqFEe-CzNrO9SlQWA" name="ProgramSchedule" method="_DyeTPIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjGacYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjGacoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjGac4qFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjGadIqFEe-CzNrO9SlQWA" name="ProgramSchedule" visibility="package" method="_DyeTPoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjGad4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjGaeIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjGadYqFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjGadoqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjGaeYqFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjHBgIqFEe-CzNrO9SlQWA" name="ProgramVisualization">
              <ownedComment xmi:id="_DyuK3YqFEe-CzNrO9SlQWA">
                <body>The ProgramVisualization class is responsible for generating visualizations &#xD;
of a WARP program, including the scheduling of transmissions and the results &#xD;
of deadline analysis. It extends the VisualizationObject class and provides &#xD;
a GUI visualization and data output for the WARP program.&#xD;
&#xD;
This class creates headers, footers, and columns for visualizing node transmissions &#xD;
over time and reports whether deadlines are met.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <generalization xmi:id="_Dwumx4qFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx-j9YqFEe-CzNrO9SlQWA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx-j9oqFEe-CzNrO9SlQWA" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx-j94qFEe-CzNrO9SlQWA" name="sourceCode" visibility="private" type="_DjFzYIqFEe-CzNrO9SlQWA" association="_DzJopoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx-j-YqFEe-CzNrO9SlQWA" name="program" visibility="private" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzJoqYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_LAYqFEe-CzNrO9SlQWA" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTQoqFEe-CzNrO9SlQWA" name="ProgramVisualization" specification="_Dwt_soqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTQ4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyeTRIqFEe-CzNrO9SlQWA" type="_DjHBgIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTRYqFEe-CzNrO9SlQWA" name="displayVisualization" specification="_DjHBgYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTRoqFEe-CzNrO9SlQWA" type="_DiogYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTR4qFEe-CzNrO9SlQWA" name="createHeader" specification="_DjHok4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTSIqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTSYqFEe-CzNrO9SlQWA" name="createFooter" specification="_DjHol4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTSoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTS4qFEe-CzNrO9SlQWA" name="createColumnHeader" specification="_DjIPooqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTTIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyeTTYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyeTToqFEe-CzNrO9SlQWA" name="createVisualizationData" specification="_DjIPqYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyeTT4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyeTUIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6QIqFEe-CzNrO9SlQWA" name="createTitle" specification="_DjI2soqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6QYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjHBgYqFEe-CzNrO9SlQWA" name="displayVisualization" method="_DyeTRYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwumxIqFEe-CzNrO9SlQWA" type="_DiogYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjHok4qFEe-CzNrO9SlQWA" name="createHeader" visibility="protected" method="_DyeTR4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwumxYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjHol4qFEe-CzNrO9SlQWA" name="createFooter" visibility="protected" method="_DyeTSYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwumxoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjIPooqFEe-CzNrO9SlQWA" name="createColumnHeader" visibility="protected" method="_DyeTS4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjIPo4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DjIPpIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjIPqYqFEe-CzNrO9SlQWA" name="createVisualizationData" visibility="protected" method="_DyeTToqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjIPqoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DjIPq4qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjI2soqFEe-CzNrO9SlQWA" name="createTitle" visibility="private" method="_Dye6QIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyuK34qFEe-CzNrO9SlQWA">
                  <body>Creates the title for the visualization, which includes the program name.&#xD;
   * &#xD;
   * @return the title string for the visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_DjI2s4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwt_soqFEe-CzNrO9SlQWA" name="ProgramVisualization" visibility="package" method="_DyeTQoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwumwYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwumwoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DyuK3oqFEe-CzNrO9SlQWA">
                  <body>Constructs a ProgramVisualization for a given WARP system interface.&#xD;
   * It initializes the program and schedule data for visualization.&#xD;
   * &#xD;
   * @param warp the WARP system interface providing the program and schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwumwIqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwumw4qFEe-CzNrO9SlQWA" type="_DjHBgIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjJdwIqFEe-CzNrO9SlQWA" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_Dxe0sIqFEe-CzNrO9SlQWA" client="_DjJdwIqFEe-CzNrO9SlQWA" supplier="_DwZPloqFEe-CzNrO9SlQWA" contract="_DwZPloqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6QoqFEe-CzNrO9SlQWA" name="compare" specification="_Dxe0soqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6Q4qFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dye6RIqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dye6RYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dxe0soqFEe-CzNrO9SlQWA" name="compare" method="_Dye6QoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxfbwIqFEe-CzNrO9SlQWA" name="obj1" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxfbwYqFEe-CzNrO9SlQWA" name="obj2" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxfbwoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjKE0IqFEe-CzNrO9SlQWA" name="ReleaseTimeQueue">
              <generalization xmi:id="_DjKr5oqFEe-CzNrO9SlQWA" general="_DjKr5IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_LA4qFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx_LBIqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6RoqFEe-CzNrO9SlQWA" name="ReleaseTimeQueue" specification="_DjKr4IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6R4qFEe-CzNrO9SlQWA" type="_DjKE0IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6SIqFEe-CzNrO9SlQWA" name="ReleaseTimeQueue" specification="_DwumyIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6SYqFEe-CzNrO9SlQWA" name="schedulableObjects" type="_DwogIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dye6SoqFEe-CzNrO9SlQWA" type="_DjKE0IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjKr4IqFEe-CzNrO9SlQWA" name="ReleaseTimeQueue" visibility="package" method="_Dye6RoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjKr4YqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjKr4oqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjKr44qFEe-CzNrO9SlQWA" type="_DjKE0IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwumyIqFEe-CzNrO9SlQWA" name="ReleaseTimeQueue" visibility="package" method="_Dye6SIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwumyoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dwumy4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwumyYqFEe-CzNrO9SlQWA" name="schedulableObjects" type="_DwogIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwumzIqFEe-CzNrO9SlQWA" type="_DjKE0IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjLS8YqFEe-CzNrO9SlQWA" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_Dyux4IqFEe-CzNrO9SlQWA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to compute the probabilities that comprise the&#xD;
ReliablityMatrix, which is the core of the reliability visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined in the project assignment.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6S4qFEe-CzNrO9SlQWA" name="ReliabilityAnalysis" specification="_DwvN0YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6TIqFEe-CzNrO9SlQWA" name="program" type="_Di93kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dye6TYqFEe-CzNrO9SlQWA" type="_DjLS8YqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6ToqFEe-CzNrO9SlQWA" name="verifyReliabilities" specification="_DjL6AIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6T4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjL6AIqFEe-CzNrO9SlQWA" name="verifyReliabilities" method="_Dye6ToqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjL6AYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwvN0YqFEe-CzNrO9SlQWA" name="ReliabilityAnalysis" method="_Dye6S4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwvN04qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwvN1IqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwvN0oqFEe-CzNrO9SlQWA" name="program" type="_Di93kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwvN1YqFEe-CzNrO9SlQWA" type="_DjLS8YqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DjL6AoqFEe-CzNrO9SlQWA" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_Dyux4YqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DjL6A4qFEe-CzNrO9SlQWA" name="minPacketReceptionRate" type="_DxdmkIqFEe-CzNrO9SlQWA" isReadOnly="true"/>
              <ownedAttribute xmi:id="_DjMhEIqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjMhEYqFEe-CzNrO9SlQWA" name="ReliabilityRow">
              <generalization xmi:id="_DwvN1oqFEe-CzNrO9SlQWA" general="_DjQLcYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_LBYqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx_LBoqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6UIqFEe-CzNrO9SlQWA" name="ReliabilityRow" specification="_DjNIIIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6UYqFEe-CzNrO9SlQWA" type="_DjMhEYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6UoqFEe-CzNrO9SlQWA" name="ReliabilityRow" specification="_DxfbxoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6U4qFEe-CzNrO9SlQWA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dye6VIqFEe-CzNrO9SlQWA" name="element" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dye6VYqFEe-CzNrO9SlQWA" type="_DjMhEYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6VoqFEe-CzNrO9SlQWA" name="ReliabilityRow" specification="_DxgC0IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6V4qFEe-CzNrO9SlQWA" name="rowArray" type="_DxdmkIqFEe-CzNrO9SlQWA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dye6WIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dye6WYqFEe-CzNrO9SlQWA" type="_DjMhEYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjNIIIqFEe-CzNrO9SlQWA" name="ReliabilityRow" method="_Dye6UIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjNIIYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjNIIoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjNII4qFEe-CzNrO9SlQWA" type="_DjMhEYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxfbxoqFEe-CzNrO9SlQWA" name="ReliabilityRow" visibility="package" method="_Dye6UoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxfbyYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxfbyoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dxfbx4qFEe-CzNrO9SlQWA" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxfbyIqFEe-CzNrO9SlQWA" name="element" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxfby4qFEe-CzNrO9SlQWA" type="_DjMhEYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxgC0IqFEe-CzNrO9SlQWA" name="ReliabilityRow" visibility="package" method="_Dye6VoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxgC0oqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxgC04qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DxgC0YqFEe-CzNrO9SlQWA" name="rowArray" type="_DxdmkIqFEe-CzNrO9SlQWA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DxgC1YqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxgC1IqFEe-CzNrO9SlQWA" type="_DjMhEYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjNvMIqFEe-CzNrO9SlQWA" name="ReliabilityTable">
              <generalization xmi:id="_DwvN2IqFEe-CzNrO9SlQWA" general="_DjjGYIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_LB4qFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx_LCIqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6WoqFEe-CzNrO9SlQWA" name="ReliabilityTable" specification="_DjNvMYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6W4qFEe-CzNrO9SlQWA" type="_DjNvMIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dye6XIqFEe-CzNrO9SlQWA" name="ReliabilityTable" specification="_DjNvNYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dye6XYqFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dye6XoqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dye6X4qFEe-CzNrO9SlQWA" type="_DjNvMIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjNvMYqFEe-CzNrO9SlQWA" name="ReliabilityTable" method="_Dye6WoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjNvMoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjNvM4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjNvNIqFEe-CzNrO9SlQWA" type="_DjNvMIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjNvNYqFEe-CzNrO9SlQWA" name="ReliabilityTable" visibility="package" method="_Dye6XIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjNvOIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjNvOYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjNvNoqFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjNvN4qFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjNvOoqFEe-CzNrO9SlQWA" type="_DjNvMIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjOWQIqFEe-CzNrO9SlQWA" name="ReliabilityVisualization">
              <ownedComment xmi:id="_Dyux4oqFEe-CzNrO9SlQWA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dwv05oqFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_LCYqFEe-CzNrO9SlQWA" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx_LCoqFEe-CzNrO9SlQWA" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx_LC4qFEe-CzNrO9SlQWA" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx_LDIqFEe-CzNrO9SlQWA" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx_LDYqFEe-CzNrO9SlQWA" name="warp" visibility="private" type="_Dj32gIqFEe-CzNrO9SlQWA" association="_DzJorIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_yEYqFEe-CzNrO9SlQWA" name="ra" visibility="private" type="_DjLS8YqFEe-CzNrO9SlQWA" association="_DzKPsYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhUIqFEe-CzNrO9SlQWA" name="ReliabilityVisualization" specification="_Dwv04YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhUYqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyfhUoqFEe-CzNrO9SlQWA" type="_DjOWQIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dwv04YqFEe-CzNrO9SlQWA" name="ReliabilityVisualization" visibility="package" method="_DyfhUIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dwv044qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dwv05IqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dwv04oqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwv05YqFEe-CzNrO9SlQWA" type="_DjOWQIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjO9UIqFEe-CzNrO9SlQWA" name="ReportVisualization">
              <generalization xmi:id="_Dwwb8oqFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_yE4qFEe-CzNrO9SlQWA" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx_yFIqFEe-CzNrO9SlQWA" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Dx_yFYqFEe-CzNrO9SlQWA" name="content" visibility="private" type="_DiG78IqFEe-CzNrO9SlQWA" association="_DzKPtIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_yF4qFEe-CzNrO9SlQWA" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhU4qFEe-CzNrO9SlQWA" name="ReportVisualization" specification="_Dwv054qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhVIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyfhVYqFEe-CzNrO9SlQWA" name="warp" type="_DjgqIYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyfhVoqFEe-CzNrO9SlQWA" name="content" type="_DiG78IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyfhV4qFEe-CzNrO9SlQWA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyfhWIqFEe-CzNrO9SlQWA" type="_DjO9UIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhWYqFEe-CzNrO9SlQWA" name="visualization" specification="_DjO9UYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhWoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhW4qFEe-CzNrO9SlQWA" name="createReport" specification="_DjQLcIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhXIqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjO9UYqFEe-CzNrO9SlQWA" name="visualization" method="_DyfhWYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwwb8IqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjQLcIqFEe-CzNrO9SlQWA" name="createReport" visibility="private" method="_DyfhW4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwwb8YqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwv054qFEe-CzNrO9SlQWA" name="ReportVisualization" visibility="package" method="_DyfhU4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dwv07IqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dwv07YqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dwv06IqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwv06YqFEe-CzNrO9SlQWA" name="warp" type="_DjgqIYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwv06oqFEe-CzNrO9SlQWA" name="content" type="_DiG78IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwv064qFEe-CzNrO9SlQWA" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwv07oqFEe-CzNrO9SlQWA" type="_DjO9UIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjQLcYqFEe-CzNrO9SlQWA" name="Row">
              <generalization xmi:id="_Dxgp4IqFEe-CzNrO9SlQWA" general="_DwSh4IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_Dx_yGYqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_Dx_yGoqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhXYqFEe-CzNrO9SlQWA" name="Row" specification="_DjQygYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhXoqFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhX4qFEe-CzNrO9SlQWA" name="Row" specification="_DxgC1oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhYIqFEe-CzNrO9SlQWA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyfhYYqFEe-CzNrO9SlQWA" name="element" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyfhYoqFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhY4qFEe-CzNrO9SlQWA" name="Row" specification="_DxgC3IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhZIqFEe-CzNrO9SlQWA" name="rowArray" type="_DxT1kYqFEe-CzNrO9SlQWA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyfhZYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyfhZoqFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhZ4qFEe-CzNrO9SlQWA" name="Row" specification="_DjRZkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyfhaIqFEe-CzNrO9SlQWA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyfhaYqFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjQygYqFEe-CzNrO9SlQWA" name="Row" method="_DyfhXYqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjQygoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjQyg4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjQyhIqFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjRZkIqFEe-CzNrO9SlQWA" name="Row" visibility="package" method="_DyfhZ4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjRZkoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjRZk4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjRZkYqFEe-CzNrO9SlQWA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjRZlIqFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxgC1oqFEe-CzNrO9SlQWA" name="Row" visibility="package" method="_DyfhX4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxgC2YqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxgC2oqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DxgC14qFEe-CzNrO9SlQWA" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxgC2IqFEe-CzNrO9SlQWA" name="element" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxgC24qFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxgC3IqFEe-CzNrO9SlQWA" name="Row" visibility="package" method="_DyfhY4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxgC3oqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxgC34qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DxgC3YqFEe-CzNrO9SlQWA" name="rowArray" type="_DxT1kYqFEe-CzNrO9SlQWA">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DxgC4YqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxgC4IqFEe-CzNrO9SlQWA" type="_DjQLcYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjRZlYqFEe-CzNrO9SlQWA" name="WorkLoadTest">
              <eAnnotations xmi:id="_DjSAoIqFEe-CzNrO9SlQWA" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_DjSAoYqFEe-CzNrO9SlQWA" source="codegen">
                  <details xmi:id="_DjSAooqFEe-CzNrO9SlQWA" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_DyAZIIqFEe-CzNrO9SlQWA" name="workLoad" visibility="private" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzKPt4qFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhaoqFEe-CzNrO9SlQWA" name="setUp" specification="_DjSAo4qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad = new WorkLoad(0.9, 0.99, &quot;C:\\Users\\satur\\git\\cs2820-cjfort\\src\\edu\\uiowa\\cs\\warp\\WorkLoad.java&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyfha4qFEe-CzNrO9SlQWA" name="testAddFlow" specification="_DjSAp4qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>String flowName = &quot;Flow1&quot;;&#xD;
     workLoad.addFlow(flowName);&#xD;
     // Assert that the flow is added successfully&#xD;
     assertTrue(workLoad.getFlowNames().length > 0, &quot;Flow should be added successfully.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhbIqFEe-CzNrO9SlQWA" name="testAddNodeToFlow" specification="_DjSnsoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
     // Assert that the node is added to the specified flow&#xD;
     assertArrayEquals(new String[]{&quot;Node1&quot;}, workLoad.getNodesInFlow(&quot;Flow1&quot;), &quot;Node should be added to the flow.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhbYqFEe-CzNrO9SlQWA" name="testGetTotalTxAttemptsInFlow" specification="_DjSntoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
     // Assert that the total transmission attempts are initially 0&#xD;
     assertEquals(0, workLoad.getTotalTxAttemptsInFlow(&quot;Flow1&quot;), &quot;Initial Tx attempts should be 0.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhboqFEe-CzNrO9SlQWA" name="testGetFlowPriority" specification="_DjSnuoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;flow1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;flow1&quot;, &quot;node1&quot;);&#xD;
     // Assert that the flow priority is correctly retrieved&#xD;
     assertEquals(0, workLoad.getFlowPriority(&quot;flow1&quot;, &quot;node1&quot;));&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyfhb4qFEe-CzNrO9SlQWA" name="testSetFlowPriority" specification="_DjSnvoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.setFlowPriority(&quot;Flow1&quot;, 10);&#xD;
     // Assert that the flow priority is updated to the set value&#xD;
     assertEquals(10, workLoad.getFlowPriority(&quot;Flow1&quot;), &quot;Flow priority should be updated to 10.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhcIqFEe-CzNrO9SlQWA" name="testGetFlowTxAttemptsPerLink" specification="_DjTOwoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
     Integer[] expected = new Integer[]{0}; // Default value based on implementation&#xD;
     // Add assert statements as needed based on the implementation of the method&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhcYqFEe-CzNrO9SlQWA" name="testSetFlowsInRMorder" specification="_DjTOxoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;flow1&quot;);&#xD;
     workLoad.addFlow(&quot;flow2&quot;);&#xD;
     workLoad.setFlowPeriod(&quot;flow1&quot;, 10);&#xD;
     workLoad.setFlowPeriod(&quot;flow2&quot;, 5);&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     // Assert that flows are ordered with shorter period having higher priority&#xD;
     assertEquals(&quot;flow2&quot;, workLoad.getFlowNamesInPriorityOrder().get(0));&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhcoqFEe-CzNrO9SlQWA" name="testGetNodeNamesOrderedAlphabetically" specification="_DjTOyoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Zebra&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Apple&quot;);&#xD;
     String[] expectedOrder = new String[]{&quot;Apple&quot;, &quot;Zebra&quot;};&#xD;
     // Assert that node names are returned in alphabetical order&#xD;
     assertArrayEquals(expectedOrder, workLoad.getNodeNamesOrderedAlphabetically(), &#xD;
                       &quot;Nodes should be returned in alphabetical order.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyfhc4qFEe-CzNrO9SlQWA" name="testGetFlowNames" specification="_DjTOzoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addFlow(&quot;Flow2&quot;);&#xD;
     int expectedNames = 3;&#xD;
     // Assert that the expected number of flow names is returned&#xD;
     assertEquals(expectedNames, workLoad.getFlowNames().length, &quot;Number of flow names should match the expected count.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhdIqFEe-CzNrO9SlQWA" name="testGetNodeIndex" specification="_DjT10oqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
     // Assert that the node index is correct&#xD;
     int index = workLoad.getNodeIndex(&quot;Node1&quot;);&#xD;
     assertEquals(0, index, &quot;Node index should be 0.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhdYqFEe-CzNrO9SlQWA" name="testGetNodesInFlow" specification="_DjT11oqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
     String[] expectedNodes = new String[]{&quot;Node1&quot;};&#xD;
     // Assert that the expected nodes are returned&#xD;
     assertArrayEquals(expectedNodes, workLoad.getNodesInFlow(&quot;Flow1&quot;), &quot;Nodes in flow should match.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyfhdoqFEe-CzNrO9SlQWA" name="testGetHyperPeriod" specification="_DjT12oqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addFlow(&quot;Flow2&quot;);&#xD;
     workLoad.setFlowPeriod(&quot;Flow1&quot;, 5);  // Flow1 has a period of 5&#xD;
     workLoad.setFlowPeriod(&quot;Flow2&quot;, 10); // Flow2 has a period of 10&#xD;
     int expectedHyperPeriod = 100;&#xD;
     // Assert that the hyperperiod is correctly computed&#xD;
     assertEquals(expectedHyperPeriod, workLoad.getHyperPeriod(), &quot;The hyperperiod should be 100.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIYIqFEe-CzNrO9SlQWA" name="testMaxFlowLength" specification="_DjUc4IqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node1&quot;);&#xD;
     workLoad.addNodeToFlow(&quot;Flow1&quot;, &quot;Node2&quot;);&#xD;
     // Assert that the maximum flow length is correct&#xD;
     assertEquals(2, workLoad.maxFlowLength(), &quot;Max flow length should be 2.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIYYqFEe-CzNrO9SlQWA" name="testGetFlowDeadline" specification="_DjUc5IqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.setFlowDeadline(&quot;Flow1&quot;, 100);&#xD;
     // Assert that the flow deadline is correctly returned&#xD;
     assertEquals(100, workLoad.getFlowDeadline(&quot;Flow1&quot;), &quot;Flow deadline should be set to 100.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIYoqFEe-CzNrO9SlQWA" name="testSetFlowDeadline" specification="_DjUc6IqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>workLoad.addFlow(&quot;Flow1&quot;);&#xD;
     workLoad.setFlowDeadline(&quot;Flow1&quot;, 150);&#xD;
     // Assert that the flow deadline is updated to the set value&#xD;
     assertEquals(150, workLoad.getFlowDeadline(&quot;Flow1&quot;), &quot;Flow deadline should be updated to 150.&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjSAo4qFEe-CzNrO9SlQWA" name="setUp" visibility="package" method="_DyfhaoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjSAp4qFEe-CzNrO9SlQWA" name="testAddFlow" method="_Dyfha4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjSnsoqFEe-CzNrO9SlQWA" name="testAddNodeToFlow" method="_DyfhbIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjSntoqFEe-CzNrO9SlQWA" name="testGetTotalTxAttemptsInFlow" method="_DyfhbYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjSnuoqFEe-CzNrO9SlQWA" name="testGetFlowPriority" visibility="package" method="_DyfhboqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjSnvoqFEe-CzNrO9SlQWA" name="testSetFlowPriority" method="_Dyfhb4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjTOwoqFEe-CzNrO9SlQWA" name="testGetFlowTxAttemptsPerLink" method="_DyfhcIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjTOxoqFEe-CzNrO9SlQWA" name="testSetFlowsInRMorder" visibility="package" method="_DyfhcYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjTOyoqFEe-CzNrO9SlQWA" name="testGetNodeNamesOrderedAlphabetically" method="_DyfhcoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjTOzoqFEe-CzNrO9SlQWA" name="testGetFlowNames" method="_Dyfhc4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjT10oqFEe-CzNrO9SlQWA" name="testGetNodeIndex" method="_DyfhdIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjT11oqFEe-CzNrO9SlQWA" name="testGetNodesInFlow" method="_DyfhdYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjT12oqFEe-CzNrO9SlQWA" name="testGetHyperPeriod" method="_DyfhdoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjUc4IqFEe-CzNrO9SlQWA" name="testMaxFlowLength" method="_DygIYIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjUc5IqFEe-CzNrO9SlQWA" name="testGetFlowDeadline" method="_DygIYYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjUc6IqFEe-CzNrO9SlQWA" name="testSetFlowDeadline" method="_DygIYoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjVrAIqFEe-CzNrO9SlQWA" name="SchedulableObjectQueue">
              <generalization xmi:id="_DjWSEIqFEe-CzNrO9SlQWA" general="_DjKr5IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyAZIoqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyAZI4qFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIY4qFEe-CzNrO9SlQWA" name="SchedulableObjectQueue" specification="_Dxgp4oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygIZIqFEe-CzNrO9SlQWA" name="comparitor" type="_DwZPloqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygIZYqFEe-CzNrO9SlQWA" type="_DjVrAIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIZoqFEe-CzNrO9SlQWA" name="SchedulableObjectQueue" specification="_DxhQ9YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygIZ4qFEe-CzNrO9SlQWA" name="comparitor" type="_DwZPloqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygIaIqFEe-CzNrO9SlQWA" name="schedulableObjects" type="_DwogIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygIaYqFEe-CzNrO9SlQWA" type="_DjVrAIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dxgp4oqFEe-CzNrO9SlQWA" name="SchedulableObjectQueue" visibility="package" method="_DygIY4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxhQ8YqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxhQ8oqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DxhQ8IqFEe-CzNrO9SlQWA" name="comparitor" type="_DwZPloqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxhQ84qFEe-CzNrO9SlQWA" type="_DjVrAIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxhQ9YqFEe-CzNrO9SlQWA" name="SchedulableObjectQueue" visibility="package" method="_DygIZoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxhQ-IqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxhQ-YqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DxhQ9oqFEe-CzNrO9SlQWA" name="comparitor" type="_DwZPloqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxhQ94qFEe-CzNrO9SlQWA" name="schedulableObjects" type="_DwogIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxhQ-oqFEe-CzNrO9SlQWA" type="_DjVrAIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjW5IIqFEe-CzNrO9SlQWA" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_Dyux44qFEe-CzNrO9SlQWA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DyAZJIqFEe-CzNrO9SlQWA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyAZJYqFEe-CzNrO9SlQWA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyAZJoqFEe-CzNrO9SlQWA" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyBAMYqFEe-CzNrO9SlQWA" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyBAM4qFEe-CzNrO9SlQWA" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyBANIqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyBANoqFEe-CzNrO9SlQWA" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyBAOIqFEe-CzNrO9SlQWA" name="schedule" visibility="protected" type="_DjcYsIqFEe-CzNrO9SlQWA" association="_DzKPuoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyBAOoqFEe-CzNrO9SlQWA" name="poset" visibility="protected" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzK2wYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIaoqFEe-CzNrO9SlQWA" name="Schedule" specification="_DwyRIIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygIa4qFEe-CzNrO9SlQWA" name="poset" type="_Di3J4YqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygIbIqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygIbYqFEe-CzNrO9SlQWA" type="_DjW5IIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIeIqFEe-CzNrO9SlQWA" name="getSchedule" specification="_DjYuWoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygIeYqFEe-CzNrO9SlQWA" type="_DjcYsIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIeoqFEe-CzNrO9SlQWA" name="buildSchedule" specification="_DjYuW4qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIe4qFEe-CzNrO9SlQWA" name="toProgram" specification="_DjZVYIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygIfIqFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIfYqFEe-CzNrO9SlQWA" name="replaceNullWithSleep" specification="_DwyRKIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygIfoqFEe-CzNrO9SlQWA" name="program" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvcIqFEe-CzNrO9SlQWA" name="fakeSchedulingToTestRest" specification="_DwyRKoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvcYqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvcoqFEe-CzNrO9SlQWA" name="getChannelAndSetStartTime" specification="_DwyRLIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dygvc4qFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvdIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvdYqFEe-CzNrO9SlQWA" name="findChannelAndTime" specification="_DwyRL4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvdoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dygvd4qFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygveIqFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygveYqFEe-CzNrO9SlQWA" name="continueSearch" specification="_DwyRM4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygveoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dygve4qFEe-CzNrO9SlQWA" name="activation" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvfIqFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvfYqFEe-CzNrO9SlQWA" name="noOtherChannelConflicts" specification="_Dwy4MIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvfoqFEe-CzNrO9SlQWA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dygvf4qFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvgIqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvgYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvgoqFEe-CzNrO9SlQWA" name="conflictsExist" specification="_Dwy4NYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dygvg4qFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvhIqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvhYqFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvhoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dygvh4qFEe-CzNrO9SlQWA" name="freeOfCoordinatorConflicts" specification="_Dwy4OoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygviIqFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygviYqFEe-CzNrO9SlQWA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvioqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dygvi4qFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvjIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvjYqFEe-CzNrO9SlQWA" name="isAvailable" specification="_Dwy4QIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvjoqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dygvj4qFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvkIqFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvkYqFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvkoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dygvk4qFEe-CzNrO9SlQWA" name="isAvailable" specification="_Dwy4RoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvlIqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvlYqFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvloqFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dygvl4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvmIqFEe-CzNrO9SlQWA" name="timeRemaining" specification="_DjZ8cIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvmYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvmoqFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dygvm4qFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvnIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvnYqFEe-CzNrO9SlQWA" name="canCombineEntriesInPlace" specification="_Dwy4S4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvnoqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dygvn4qFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvoIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvoYqFEe-CzNrO9SlQWA" name="combinedEntriesInPlace" specification="_DwzfQIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvooqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dygvo4qFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvpIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DygvpYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvpoqFEe-CzNrO9SlQWA" name="addToSchedule" specification="_DwzfRYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dygvp4qFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DygvqIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvqYqFEe-CzNrO9SlQWA" name="reportNotSchedulable" specification="_DwzfSIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DygvqoqFEe-CzNrO9SlQWA" name="object" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dygvq4qFEe-CzNrO9SlQWA" name="printVerbose" specification="_DjZ8dYqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygvrIqFEe-CzNrO9SlQWA" name="print" specification="_DjZ8doqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjYuWoqFEe-CzNrO9SlQWA" name="getSchedule" method="_DygIeIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux5oqFEe-CzNrO9SlQWA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwyRJoqFEe-CzNrO9SlQWA" type="_DjcYsIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjYuW4qFEe-CzNrO9SlQWA" name="buildSchedule" visibility="private" method="_DygIeoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjZVYIqFEe-CzNrO9SlQWA" name="toProgram" method="_DygIe4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwyRJ4qFEe-CzNrO9SlQWA" type="_DjFzYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjZ8cIqFEe-CzNrO9SlQWA" name="timeRemaining" visibility="protected" method="_DygvmIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux7IqFEe-CzNrO9SlQWA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_DjZ8cYqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjZ8coqFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjZ8c4qFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjZ8dIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjZ8dYqFEe-CzNrO9SlQWA" name="printVerbose" method="_Dygvq4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DjZ8doqFEe-CzNrO9SlQWA" name="print" method="_DygvrIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DwyRIIqFEe-CzNrO9SlQWA" name="Schedule" visibility="package" method="_DygIaoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DwyRI4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DwyRJIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DwyRIYqFEe-CzNrO9SlQWA" name="poset" type="_Di3J4YqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwyRIoqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwyRJYqFEe-CzNrO9SlQWA" type="_DjW5IIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwyRKIqFEe-CzNrO9SlQWA" name="replaceNullWithSleep" visibility="private" method="_DygIfYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux54qFEe-CzNrO9SlQWA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwyRKYqFEe-CzNrO9SlQWA" name="program" type="_DjFzYIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwyRKoqFEe-CzNrO9SlQWA" name="fakeSchedulingToTestRest" visibility="private" method="_DygvcIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwyRK4qFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwyRLIqFEe-CzNrO9SlQWA" name="getChannelAndSetStartTime" visibility="protected" method="_DygvcoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux6IqFEe-CzNrO9SlQWA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwyRLYqFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwyRLoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwyRL4qFEe-CzNrO9SlQWA" name="findChannelAndTime" visibility="protected" method="_DygvdYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwyRMIqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwyRMYqFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwyRMoqFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DwyRM4qFEe-CzNrO9SlQWA" name="continueSearch" visibility="protected" method="_DygveYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux6YqFEe-CzNrO9SlQWA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_DwyRNIqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwyRNYqFEe-CzNrO9SlQWA" name="activation" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwyRNoqFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwy4MIqFEe-CzNrO9SlQWA" name="noOtherChannelConflicts" visibility="protected" method="_DygvfYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwy4MYqFEe-CzNrO9SlQWA" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4MoqFEe-CzNrO9SlQWA" name="schedulableObject" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwy4M4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4NIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwy4NYqFEe-CzNrO9SlQWA" name="conflictsExist" visibility="protected" method="_DygvgoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwy4NoqFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwy4N4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4OIqFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4OYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwy4OoqFEe-CzNrO9SlQWA" name="freeOfCoordinatorConflicts" visibility="protected" method="_Dygvh4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwy4O4qFEe-CzNrO9SlQWA" name="obj" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwy4PIqFEe-CzNrO9SlQWA" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4PYqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4PoqFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4P4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwy4QIqFEe-CzNrO9SlQWA" name="isAvailable" visibility="protected" method="_DygvjYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux6oqFEe-CzNrO9SlQWA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dwy4QYqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwy4QoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4Q4qFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4RIqFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4RYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwy4RoqFEe-CzNrO9SlQWA" name="isAvailable" visibility="protected" method="_Dygvk4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux64qFEe-CzNrO9SlQWA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dwy4R4qFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwy4SIqFEe-CzNrO9SlQWA" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4SYqFEe-CzNrO9SlQWA" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dwy4SoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dwy4S4qFEe-CzNrO9SlQWA" name="canCombineEntriesInPlace" visibility="private" method="_DygvnYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dwy4TIqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwy4TYqFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dwy4ToqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwzfQIqFEe-CzNrO9SlQWA" name="combinedEntriesInPlace" visibility="private" method="_DygvoYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwzfQYqFEe-CzNrO9SlQWA" name="a1" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwzfQoqFEe-CzNrO9SlQWA" name="a2" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwzfQ4qFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DwzfRIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwzfRYqFEe-CzNrO9SlQWA" name="addToSchedule" visibility="protected" method="_DygvpoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwzfRoqFEe-CzNrO9SlQWA" name="next" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DwzfR4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DwzfSIqFEe-CzNrO9SlQWA" name="reportNotSchedulable" visibility="private" method="_DygvqYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DwzfSYqFEe-CzNrO9SlQWA" name="object" type="_Dhpo8IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_DjYHQIqFEe-CzNrO9SlQWA" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_DyBAPIqFEe-CzNrO9SlQWA" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyBnQYqFEe-CzNrO9SlQWA" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIboqFEe-CzNrO9SlQWA" name="ScheduleLocation" specification="_DjYHQYqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DygIb4qFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIcIqFEe-CzNrO9SlQWA" name="ScheduleLocation" specification="_DjYuUIqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DygIcYqFEe-CzNrO9SlQWA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DygIcoqFEe-CzNrO9SlQWA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DygIc4qFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIdIqFEe-CzNrO9SlQWA" name="getChannel" specification="_DjYuVoqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DygIdYqFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DygIdoqFEe-CzNrO9SlQWA" name="getTime" specification="_DjYuWIqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DygId4qFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DjYHQYqFEe-CzNrO9SlQWA" name="ScheduleLocation" visibility="package" method="_DygIboqFEe-CzNrO9SlQWA">
                  <eAnnotations xmi:id="_DjYHQoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DjYHQ4qFEe-CzNrO9SlQWA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DjYHRIqFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DjYuUIqFEe-CzNrO9SlQWA" name="ScheduleLocation" visibility="package" method="_DygIcIqFEe-CzNrO9SlQWA">
                  <eAnnotations xmi:id="_DjYuU4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_DjYuVIqFEe-CzNrO9SlQWA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_DjYuUYqFEe-CzNrO9SlQWA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DjYuUoqFEe-CzNrO9SlQWA" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_DjYuVYqFEe-CzNrO9SlQWA" type="_DjYHQIqFEe-CzNrO9SlQWA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_DjYuVoqFEe-CzNrO9SlQWA" name="getChannel" visibility="protected" method="_DygIdIqFEe-CzNrO9SlQWA">
                  <ownedComment xmi:id="_Dyux5IqFEe-CzNrO9SlQWA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DjYuV4qFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_DjYuWIqFEe-CzNrO9SlQWA" name="getTime" visibility="protected" method="_DygIdoqFEe-CzNrO9SlQWA">
                  <ownedComment xmi:id="_Dyux5YqFEe-CzNrO9SlQWA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DjYuWYqFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjcYsIqFEe-CzNrO9SlQWA" name="ScheduleTable">
              <generalization xmi:id="_DwzfSoqFEe-CzNrO9SlQWA" general="_DjjGYIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyBnQ4qFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyBnRIqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWgIqFEe-CzNrO9SlQWA" name="ScheduleTable" specification="_Djc_wIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWgYqFEe-CzNrO9SlQWA" type="_DjcYsIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWgoqFEe-CzNrO9SlQWA" name="ScheduleTable" specification="_Djc_xIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWg4qFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWhIqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWhYqFEe-CzNrO9SlQWA" type="_DjcYsIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Djc_wIqFEe-CzNrO9SlQWA" name="ScheduleTable" visibility="package" method="_DyhWgIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Djc_wYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Djc_woqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Djc_w4qFEe-CzNrO9SlQWA" type="_DjcYsIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Djc_xIqFEe-CzNrO9SlQWA" name="ScheduleTable" visibility="package" method="_DyhWgoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Djdm0YqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Djdm0oqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Djc_xYqFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Djdm0IqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Djdm04qFEe-CzNrO9SlQWA" type="_DjcYsIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Djdm1IqFEe-CzNrO9SlQWA" name="ScheduleTime">
              <ownedAttribute xmi:id="_DyBnRYqFEe-CzNrO9SlQWA" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyBnRoqFEe-CzNrO9SlQWA" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWhoqFEe-CzNrO9SlQWA" name="ScheduleTime" specification="_Dje08IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWh4qFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWiIqFEe-CzNrO9SlQWA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWiYqFEe-CzNrO9SlQWA" type="_Djdm1IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dje08IqFEe-CzNrO9SlQWA" name="ScheduleTime" visibility="package" method="_DyhWhoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dje084qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dje09IqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dje08YqFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dje08oqFEe-CzNrO9SlQWA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dje09YqFEe-CzNrO9SlQWA" type="_Djdm1IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dje09oqFEe-CzNrO9SlQWA" name="SimulatorInput">
              <ownedComment xmi:id="_Dyux7YqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjfcAIqFEe-CzNrO9SlQWA" name="SortedPeriodQueue">
              <generalization xmi:id="_DjgDFIqFEe-CzNrO9SlQWA" general="_DjKr5IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyCOUIqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyCOUYqFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWioqFEe-CzNrO9SlQWA" name="SortedPeriodQueue" specification="_DjgDEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWi4qFEe-CzNrO9SlQWA" type="_DjfcAIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWjIqFEe-CzNrO9SlQWA" name="SortedPeriodQueue" specification="_Dw0GUYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWjYqFEe-CzNrO9SlQWA" name="schedulableObjects" type="_DwogIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyhWjoqFEe-CzNrO9SlQWA" type="_DjfcAIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjgDEIqFEe-CzNrO9SlQWA" name="SortedPeriodQueue" visibility="package" method="_DyhWioqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjgDEYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjgDEoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjgDE4qFEe-CzNrO9SlQWA" type="_DjfcAIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw0GUYqFEe-CzNrO9SlQWA" name="SortedPeriodQueue" visibility="package" method="_DyhWjIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dw0GU4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dw0GVIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dw0GUoqFEe-CzNrO9SlQWA" name="schedulableObjects" type="_DwogIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw0GVYqFEe-CzNrO9SlQWA" type="_DjfcAIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DjgqIYqFEe-CzNrO9SlQWA" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_Dw0GV4qFEe-CzNrO9SlQWA" general="_DjL6AoqFEe-CzNrO9SlQWA"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_DjhRMIqFEe-CzNrO9SlQWA" name="ScheduleChoices">
                <ownedLiteral xmi:id="_DjhRMoqFEe-CzNrO9SlQWA" name="PRIORITY"/>
                <ownedLiteral xmi:id="_DjhRM4qFEe-CzNrO9SlQWA" name="RM"/>
                <ownedLiteral xmi:id="_DjhRNIqFEe-CzNrO9SlQWA" name="DM"/>
                <ownedLiteral xmi:id="_DjhRNYqFEe-CzNrO9SlQWA" name="RTHART"/>
                <ownedLiteral xmi:id="_Djh4QIqFEe-CzNrO9SlQWA" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_Djh4QYqFEe-CzNrO9SlQWA" name="POSET_RM"/>
                <ownedLiteral xmi:id="_Djh4QoqFEe-CzNrO9SlQWA" name="POSET_DM"/>
                <ownedLiteral xmi:id="_Djh4Q4qFEe-CzNrO9SlQWA" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_Djh4RIqFEe-CzNrO9SlQWA" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_Djh4RYqFEe-CzNrO9SlQWA" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_Djh4RoqFEe-CzNrO9SlQWA" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_Djh4R4qFEe-CzNrO9SlQWA" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_Djh4SIqFEe-CzNrO9SlQWA" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_Djh4SYqFEe-CzNrO9SlQWA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Djh4SoqFEe-CzNrO9SlQWA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Djh4S4qFEe-CzNrO9SlQWA" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_Djh4TIqFEe-CzNrO9SlQWA" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DjifUIqFEe-CzNrO9SlQWA" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DjifUYqFEe-CzNrO9SlQWA" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjifUoqFEe-CzNrO9SlQWA" name="SystemFactory">
              <ownedComment xmi:id="_Dyux7oqFEe-CzNrO9SlQWA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWj4qFEe-CzNrO9SlQWA" name="create" specification="_Dw0tYoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWkIqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyhWkYqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWkoqFEe-CzNrO9SlQWA" name="choice" type="_DjhRMIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyhWk4qFEe-CzNrO9SlQWA" type="_Dj32gIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dw0tYoqFEe-CzNrO9SlQWA" name="create" isStatic="true" method="_DyhWj4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw0tY4qFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw0tZIqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw0tZYqFEe-CzNrO9SlQWA" name="choice" type="_DjhRMIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw0tZoqFEe-CzNrO9SlQWA" type="_Dj32gIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjjGYIqFEe-CzNrO9SlQWA" name="Table">
              <generalization xmi:id="_DxifFYqFEe-CzNrO9SlQWA" general="_DwSh4IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyCOUoqFEe-CzNrO9SlQWA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyCOU4qFEe-CzNrO9SlQWA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWlIqFEe-CzNrO9SlQWA" name="Table" specification="_DjjtcIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWlYqFEe-CzNrO9SlQWA" type="_DjjGYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWloqFEe-CzNrO9SlQWA" name="Table" specification="_DjjtdIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWl4qFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWmIqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWmYqFEe-CzNrO9SlQWA" type="_DjjGYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWmoqFEe-CzNrO9SlQWA" name="getNumRows" specification="_DjjteoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWm4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWnIqFEe-CzNrO9SlQWA" name="getNumColumns" specification="_DjjtfIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWnYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWnoqFEe-CzNrO9SlQWA" name="set" specification="_DxifEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWn4qFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWoIqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWoYqFEe-CzNrO9SlQWA" name="element" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWooqFEe-CzNrO9SlQWA" name="get" specification="_DjjtfoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWo4qFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWpIqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWpYqFEe-CzNrO9SlQWA" type="_DxT1kYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjjtcIqFEe-CzNrO9SlQWA" name="Table" method="_DyhWlIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DjjtcYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjjtcoqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Djjtc4qFEe-CzNrO9SlQWA" type="_DjjGYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjjtdIqFEe-CzNrO9SlQWA" name="Table" method="_DyhWloqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Djjtd4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DjjteIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DjjtdYqFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjjtdoqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjjteYqFEe-CzNrO9SlQWA" type="_DjjGYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjjteoqFEe-CzNrO9SlQWA" name="getNumRows" method="_DyhWmoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Djjte4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjjtfIqFEe-CzNrO9SlQWA" name="getNumColumns" method="_DyhWnIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjjtfYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjjtfoqFEe-CzNrO9SlQWA" name="get" method="_DyhWooqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Djjtf4qFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjkUgIqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxifFIqFEe-CzNrO9SlQWA" type="_DxT1kYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxifEIqFEe-CzNrO9SlQWA" name="set" method="_DyhWnoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxifEYqFEe-CzNrO9SlQWA" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxifEoqFEe-CzNrO9SlQWA" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxifE4qFEe-CzNrO9SlQWA" name="element" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DjkUgYqFEe-CzNrO9SlQWA" name="Visualization">
              <ownedComment xmi:id="_Dyux74qFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Djk7kIqFEe-CzNrO9SlQWA" name="SystemChoices">
                <ownedLiteral xmi:id="_Djk7koqFEe-CzNrO9SlQWA" name="SOURCE"/>
                <ownedLiteral xmi:id="_Djk7k4qFEe-CzNrO9SlQWA" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_Djk7lIqFEe-CzNrO9SlQWA" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_Djk7lYqFEe-CzNrO9SlQWA" name="LATENCY"/>
                <ownedLiteral xmi:id="_DjlioIqFEe-CzNrO9SlQWA" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_DjlioYqFEe-CzNrO9SlQWA" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_DjliooqFEe-CzNrO9SlQWA" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Djlio4qFEe-CzNrO9SlQWA" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_DjlipYqFEe-CzNrO9SlQWA" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_DjlipoqFEe-CzNrO9SlQWA" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_DjmJsIqFEe-CzNrO9SlQWA" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_DjmJsYqFEe-CzNrO9SlQWA" name="toDisplay"/>
              <ownedOperation xmi:id="_DjmJsoqFEe-CzNrO9SlQWA" name="toFile"/>
              <ownedOperation xmi:id="_DjmJs4qFEe-CzNrO9SlQWA" name="toString">
                <ownedParameter xmi:id="_DjmJtIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjmJtYqFEe-CzNrO9SlQWA" name="VisualizationFactory">
              <ownedComment xmi:id="_Dyux8IqFEe-CzNrO9SlQWA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWpoqFEe-CzNrO9SlQWA" name="createVisualization" specification="_Dw1Uc4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWp4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyhWqIqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWqYqFEe-CzNrO9SlQWA" name="choice" type="_Djk7kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyhWqoqFEe-CzNrO9SlQWA" type="_DjkUgYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyhWq4qFEe-CzNrO9SlQWA" name="createVisualization" specification="_Dw1UeIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyhWrIqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyhWrYqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyhWroqFEe-CzNrO9SlQWA" name="choice" type="_Djlio4qFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyhWr4qFEe-CzNrO9SlQWA" type="_DjkUgYqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dw1Uc4qFEe-CzNrO9SlQWA" name="createVisualization" isStatic="true" method="_DyhWpoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw1UdIqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw1UdYqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw1UdoqFEe-CzNrO9SlQWA" name="choice" type="_Djk7kIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw1Ud4qFEe-CzNrO9SlQWA" type="_DjkUgYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw1UeIqFEe-CzNrO9SlQWA" name="createVisualization" isStatic="true" method="_DyhWq4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw1UeYqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw1UeoqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw1Ue4qFEe-CzNrO9SlQWA" name="choice" type="_Djlio4qFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw1UfIqFEe-CzNrO9SlQWA" type="_DjkUgYqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjmwwIqFEe-CzNrO9SlQWA" name="VisualizationImplementation">
              <ownedComment xmi:id="_Dyux8YqFEe-CzNrO9SlQWA">
                <body>VisualizationImplementation provides the visualization functionality&#xD;
for different visualization options in the Warp system.&#xD;
It supports visualizing system choices and workload choices.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DyCOVIqFEe-CzNrO9SlQWA" name="visualization" visibility="private" type="_DiG78IqFEe-CzNrO9SlQWA" association="_DzK2xIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyCOVoqFEe-CzNrO9SlQWA" name="fileContent" visibility="private" type="_DiG78IqFEe-CzNrO9SlQWA" association="_DzK2x4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyCOWIqFEe-CzNrO9SlQWA" name="window" visibility="private" type="_DiogYIqFEe-CzNrO9SlQWA" association="_DzK2yoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyCOWoqFEe-CzNrO9SlQWA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyCOXIqFEe-CzNrO9SlQWA" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyCOXoqFEe-CzNrO9SlQWA" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyC1YYqFEe-CzNrO9SlQWA" name="fm" visibility="private" type="_Diad8IqFEe-CzNrO9SlQWA" association="_DzLd0IqFEe-CzNrO9SlQWA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyC1YoqFEe-CzNrO9SlQWA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyC1ZIqFEe-CzNrO9SlQWA" name="warp" visibility="private" type="_Dj32gIqFEe-CzNrO9SlQWA" association="_DzLd04qFEe-CzNrO9SlQWA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyC1ZYqFEe-CzNrO9SlQWA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyC1Z4qFEe-CzNrO9SlQWA" name="workLoad" visibility="private" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzLd1oqFEe-CzNrO9SlQWA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyC1aIqFEe-CzNrO9SlQWA" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyC1aoqFEe-CzNrO9SlQWA" name="visualizationObject" visibility="private" type="_Djp0EIqFEe-CzNrO9SlQWA" association="_DzLd2YqFEe-CzNrO9SlQWA"/>
              <interfaceRealization xmi:id="_Dw1UfYqFEe-CzNrO9SlQWA" client="_DjmwwIqFEe-CzNrO9SlQWA" supplier="_DjkUgYqFEe-CzNrO9SlQWA" contract="_DjkUgYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9kIqFEe-CzNrO9SlQWA" name="VisualizationImplementation" specification="_DxjGIoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9kYqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9koqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9k4qFEe-CzNrO9SlQWA" name="choice" type="_DxjGIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9lIqFEe-CzNrO9SlQWA" type="_DjmwwIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9lYqFEe-CzNrO9SlQWA" name="VisualizationImplementation" specification="_DxjGK4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9loqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9l4qFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9mIqFEe-CzNrO9SlQWA" name="choice" type="_DxjGKYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9mYqFEe-CzNrO9SlQWA" type="_DjmwwIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9moqFEe-CzNrO9SlQWA" name="toDisplay" specification="_DjnX0IqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9m4qFEe-CzNrO9SlQWA" name="toFile" specification="_Djn-44qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9nIqFEe-CzNrO9SlQWA" name="toString" specification="_Djn-54qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9nYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9noqFEe-CzNrO9SlQWA" name="createVisualization" specification="_DxjtMIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9n4qFEe-CzNrO9SlQWA" name="choice" type="_DxjGIIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
   case RELIABILITIES:&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
   case SIMULATOR_INPUT:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
   case LATENCY:&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
   case CHANNEL:&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp, new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9oIqFEe-CzNrO9SlQWA" name="createVisualization" specification="_DxjtMoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9oYqFEe-CzNrO9SlQWA" name="choice" type="_DxjGKYqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case COMUNICATION_GRAPH:&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9ooqFEe-CzNrO9SlQWA" name="createVisualization" specification="_DxjtNIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9o4qFEe-CzNrO9SlQWA" name="obj" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9pIqFEe-CzNrO9SlQWA" name="createFileNameTemplate" specification="_Djol8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9pYqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9poqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjnX0IqFEe-CzNrO9SlQWA" name="toDisplay" method="_Dyh9moqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Djn-44qFEe-CzNrO9SlQWA" name="toFile" method="_Dyh9m4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Djn-54qFEe-CzNrO9SlQWA" name="toString" method="_Dyh9nIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Djn-6IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Djol8IqFEe-CzNrO9SlQWA" name="createFileNameTemplate" visibility="private" method="_Dyh9pIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux9oqFEe-CzNrO9SlQWA">
                  <body>Creates a file name template using the provided output directory and input file name.&#xD;
   * &#xD;
   * @param outputDirectory the directory where the file will be saved&#xD;
   * @return the template for the file name</body>
                </ownedComment>
                <ownedParameter xmi:id="_Djol8YqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Djol8oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxjGIoqFEe-CzNrO9SlQWA" name="VisualizationImplementation" method="_Dyh9kIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxjGJoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxjGJ4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Dyux8oqFEe-CzNrO9SlQWA">
                  <body>Constructor that initializes the visualization using a WarpInterface and a system choice.&#xD;
   * &#xD;
   * @param warp the WarpInterface instance&#xD;
   * @param outputDirectory the directory to save output files&#xD;
   * @param choice the system choice for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxjGI4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxjGJIqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxjGJYqFEe-CzNrO9SlQWA" name="choice" type="_DxjGIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxjGKIqFEe-CzNrO9SlQWA" type="_DjmwwIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxjGK4qFEe-CzNrO9SlQWA" name="VisualizationImplementation" method="_Dyh9lYqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxjGL4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxjGMIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Dyux84qFEe-CzNrO9SlQWA">
                  <body>Constructor that initializes the visualization using a WorkLoad and a workload choice.&#xD;
   * &#xD;
   * @param workLoad the WorkLoad instance&#xD;
   * @param outputDirectory the directory to save output files&#xD;
   * @param choice the workload choice for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxjGLIqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxjGLYqFEe-CzNrO9SlQWA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxjGLoqFEe-CzNrO9SlQWA" name="choice" type="_DxjGKYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxjGMYqFEe-CzNrO9SlQWA" type="_DjmwwIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxjtMIqFEe-CzNrO9SlQWA" name="createVisualization" visibility="private" method="_Dyh9noqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux9IqFEe-CzNrO9SlQWA">
                  <body>Creates the visualization based on the system choice.&#xD;
   * &#xD;
   * @param choice the system choice for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxjtMYqFEe-CzNrO9SlQWA" name="choice" type="_DxjGIIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxjtMoqFEe-CzNrO9SlQWA" name="createVisualization" visibility="private" method="_Dyh9oIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyux9YqFEe-CzNrO9SlQWA">
                  <body>Creates the visualization based on the workload choice.&#xD;
   * &#xD;
   * @param choice the workload choice for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxjtM4qFEe-CzNrO9SlQWA" name="choice" type="_DxjGKYqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxjtNIqFEe-CzNrO9SlQWA" name="createVisualization" visibility="private" method="_Dyh9ooqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxjtNYqFEe-CzNrO9SlQWA" name="obj" type="_DxT1kYqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Djp0EIqFEe-CzNrO9SlQWA" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_DyvY8IqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DyC1bIqFEe-CzNrO9SlQWA" name="fm" visibility="private" type="_Diad8IqFEe-CzNrO9SlQWA" association="_DzLd3IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyEDgYqFEe-CzNrO9SlQWA" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEDg4qFEe-CzNrO9SlQWA" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEDhYqFEe-CzNrO9SlQWA" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyEDhoqFEe-CzNrO9SlQWA" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEDh4qFEe-CzNrO9SlQWA" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyEDiIqFEe-CzNrO9SlQWA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9p4qFEe-CzNrO9SlQWA" name="VisualizationObject" specification="_Dw2ikIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9qIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9qYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9qoqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9q4qFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9rIqFEe-CzNrO9SlQWA" name="VisualizationObject" specification="_Dw2il4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9rYqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9roqFEe-CzNrO9SlQWA" name="warp" type="_DjgqIYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9r4qFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9sIqFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9sYqFEe-CzNrO9SlQWA" name="VisualizationObject" specification="_Dw2inoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9soqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9s4qFEe-CzNrO9SlQWA" name="warp" type="_DjgqIYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9tIqFEe-CzNrO9SlQWA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9tYqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9toqFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9t4qFEe-CzNrO9SlQWA" name="VisualizationObject" specification="_Dw2ipoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9uIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9uYqFEe-CzNrO9SlQWA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9uoqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9u4qFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9vIqFEe-CzNrO9SlQWA" name="nameExtension" specification="_DxkUQIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9vYqFEe-CzNrO9SlQWA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9voqFEe-CzNrO9SlQWA" name="m" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyh9v4qFEe-CzNrO9SlQWA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9wIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyh9wYqFEe-CzNrO9SlQWA" name="nameExtension" specification="_DjrCMIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyh9woqFEe-CzNrO9SlQWA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9w4qFEe-CzNrO9SlQWA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyh9xIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyikoIqFEe-CzNrO9SlQWA" name="getFileManager" specification="_DjrpQIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyikoYqFEe-CzNrO9SlQWA" type="_Diad8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyikooqFEe-CzNrO9SlQWA" name="visualization" specification="_DjrpQYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyiko4qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyikpIqFEe-CzNrO9SlQWA" name="createFile" specification="_DjrpQoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyikpYqFEe-CzNrO9SlQWA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyikpoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyikp4qFEe-CzNrO9SlQWA" name="fileVisualization" specification="_DjrpRYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyikqIqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyikqYqFEe-CzNrO9SlQWA" name="displayVisualization" specification="_DjrpRoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyikqoqFEe-CzNrO9SlQWA" type="_DiogYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyikq4qFEe-CzNrO9SlQWA" name="createHeader" specification="_DjrpR4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyikrIqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyikrYqFEe-CzNrO9SlQWA" name="createFooter" specification="_DjsQUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyikroqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyikr4qFEe-CzNrO9SlQWA" name="createColumnHeader" specification="_DjsQUYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyiksIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyiksYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyiksoqFEe-CzNrO9SlQWA" name="createVisualizationData" specification="_DjsQVYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyiks4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyiktIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjrCMIqFEe-CzNrO9SlQWA" name="nameExtension" visibility="private" method="_Dyh9wYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjrCMYqFEe-CzNrO9SlQWA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjrCMoqFEe-CzNrO9SlQWA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjrCM4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjrpQIqFEe-CzNrO9SlQWA" name="getFileManager" method="_DyikoIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY8YqFEe-CzNrO9SlQWA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw3JoYqFEe-CzNrO9SlQWA" type="_Diad8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjrpQYqFEe-CzNrO9SlQWA" name="visualization" method="_DyikooqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw3JooqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjrpQoqFEe-CzNrO9SlQWA" name="createFile" method="_DyikpIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjrpQ4qFEe-CzNrO9SlQWA" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DjrpRIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjrpRYqFEe-CzNrO9SlQWA" name="fileVisualization" method="_Dyikp4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw3Jo4qFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjrpRoqFEe-CzNrO9SlQWA" name="displayVisualization" method="_DyikqYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw3JpIqFEe-CzNrO9SlQWA" type="_DiogYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjrpR4qFEe-CzNrO9SlQWA" name="createHeader" visibility="protected" method="_Dyikq4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw3JpYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjsQUIqFEe-CzNrO9SlQWA" name="createFooter" visibility="protected" method="_DyikrYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw3JpoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DjsQUYqFEe-CzNrO9SlQWA" name="createColumnHeader" visibility="protected" method="_Dyikr4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjsQUoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DjsQU4qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DjsQVYqFEe-CzNrO9SlQWA" name="createVisualizationData" visibility="protected" method="_DyiksoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DjsQVoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DjsQV4qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw2ikIqFEe-CzNrO9SlQWA" name="VisualizationObject" visibility="package" method="_Dyh9p4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dw2ilIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dw2ilYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dw2ikYqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw2ikoqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw2ik4qFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw2iloqFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw2il4qFEe-CzNrO9SlQWA" name="VisualizationObject" visibility="package" method="_Dyh9rIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dw2im4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dw2inIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dw2imIqFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw2imYqFEe-CzNrO9SlQWA" name="warp" type="_DjgqIYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw2imoqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw2inYqFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw2inoqFEe-CzNrO9SlQWA" name="VisualizationObject" visibility="package" method="_Dyh9sYqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dw2io4qFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dw2ipIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dw2in4qFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw2ioIqFEe-CzNrO9SlQWA" name="warp" type="_DjgqIYqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw2ioYqFEe-CzNrO9SlQWA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw2iooqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw2ipYqFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw2ipoqFEe-CzNrO9SlQWA" name="VisualizationObject" visibility="package" method="_Dyh9t4qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dw2iqoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dw2iq4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dw2ip4qFEe-CzNrO9SlQWA" name="fm" type="_Diad8IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw2iqIqFEe-CzNrO9SlQWA" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw2iqYqFEe-CzNrO9SlQWA" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw3JoIqFEe-CzNrO9SlQWA" type="_Djp0EIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxkUQIqFEe-CzNrO9SlQWA" name="nameExtension" visibility="private" method="_Dyh9vIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxkUQYqFEe-CzNrO9SlQWA" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxkUQoqFEe-CzNrO9SlQWA" name="m" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxkUQ4qFEe-CzNrO9SlQWA" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxkURIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DjuFgIqFEe-CzNrO9SlQWA" name="Warp">
              <ownedComment xmi:id="_DyvY8oqFEe-CzNrO9SlQWA">
                <body>The Warp class implements the main control logic for the WARP system, which synthesizes&#xD;
programs for network communication and schedules transmissions to meet end-to-end reliability &#xD;
and deadline requirements.&#xD;
&#xD;
This class parses command-line arguments to configure the system, sets up a workload, &#xD;
and visualizes different aspects of the network system. It supports multiple visualizations &#xD;
and analyses, including reliability, latency, and channel usage.&#xD;
&#xD;
WARP uses heuristics and a domain-specific language to adapt to varying network conditions &#xD;
and ensures the timely delivery of messages in the system.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DyEqkIqFEe-CzNrO9SlQWA" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyEqkYqFEe-CzNrO9SlQWA" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqkoqFEe-CzNrO9SlQWA" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_DxdmkIqFEe-CzNrO9SlQWA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyEqk4qFEe-CzNrO9SlQWA" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqlIqFEe-CzNrO9SlQWA" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_DxdmkIqFEe-CzNrO9SlQWA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyEqlYqFEe-CzNrO9SlQWA" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqloqFEe-CzNrO9SlQWA" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyEql4qFEe-CzNrO9SlQWA" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqmIqFEe-CzNrO9SlQWA" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_DjhRMIqFEe-CzNrO9SlQWA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyEqmYqFEe-CzNrO9SlQWA" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqmoqFEe-CzNrO9SlQWA" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyEqm4qFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqnIqFEe-CzNrO9SlQWA" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqnoqFEe-CzNrO9SlQWA" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyEqoIqFEe-CzNrO9SlQWA" name="minLQ" visibility="private" isStatic="true" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyFRoYqFEe-CzNrO9SlQWA" name="e2e" visibility="private" isStatic="true" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyFRo4qFEe-CzNrO9SlQWA" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyFRpYqFEe-CzNrO9SlQWA" name="guiRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyFRp4qFEe-CzNrO9SlQWA" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyFRqYqFEe-CzNrO9SlQWA" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyFRq4qFEe-CzNrO9SlQWA" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyFRrYqFEe-CzNrO9SlQWA" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyFRr4qFEe-CzNrO9SlQWA" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyF4sYqFEe-CzNrO9SlQWA" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyF4s4qFEe-CzNrO9SlQWA" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyF4tYqFEe-CzNrO9SlQWA" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyF4t4qFEe-CzNrO9SlQWA" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyF4uIqFEe-CzNrO9SlQWA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyF4uoqFEe-CzNrO9SlQWA" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyF4vIqFEe-CzNrO9SlQWA" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyF4voqFEe-CzNrO9SlQWA" name="schedulerSelected" visibility="private" isStatic="true" type="_DjhRMIqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyjywIqFEe-CzNrO9SlQWA" name="main" specification="_DjvToIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyjywYqFEe-CzNrO9SlQWA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyjywoqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>setWarpParameters(args);&#xD;
&#xD;
	    if (verboseMode) {&#xD;
	      printWarpParameters();&#xD;
	    }&#xD;
&#xD;
	    WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
	    if (allRequested) {&#xD;
	      for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
	        visualize(workLoad, choice);&#xD;
	      }&#xD;
&#xD;
	      if (schedulerRequested) {&#xD;
	        WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
	        verifyPerformanceRequirements(warp);&#xD;
	        for (SystemChoices choice : SystemChoices.values()) {&#xD;
	          visualize(warp, choice);&#xD;
	        }&#xD;
	      } else {&#xD;
	        for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
	          schedulerSelected = sch;&#xD;
	          WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
	          verifyPerformanceRequirements(warp);&#xD;
	          for (SystemChoices choice : SystemChoices.values()) {&#xD;
	            visualize(warp, choice);&#xD;
	          }&#xD;
	        }&#xD;
	      }&#xD;
	    } else {&#xD;
	      visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
	      if (wfRequested) {&#xD;
	        visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
	      }&#xD;
	      if (gvRequested) {&#xD;
	        visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
	      }&#xD;
&#xD;
	      WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
	      verifyPerformanceRequirements(warp);&#xD;
	      visualize(warp, SystemChoices.SOURCE);&#xD;
	      if (caRequested) {&#xD;
	        visualize(warp, SystemChoices.CHANNEL);&#xD;
	      }&#xD;
	      if (laRequested) {&#xD;
	        visualize(warp, SystemChoices.LATENCY);&#xD;
	      }&#xD;
	      if (latencyRequested || laRequested) {&#xD;
	        visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
	      }&#xD;
	      if (raRequested) {&#xD;
	        visualize(warp, SystemChoices.RELIABILITIES);&#xD;
	      }&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjyw4qFEe-CzNrO9SlQWA" name="visualize" specification="_Dw3ws4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyjyxIqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyjyxYqFEe-CzNrO9SlQWA" name="choice" type="_Djlio4qFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
	    if (viz != null) {&#xD;
	      if (verboseMode) {&#xD;
	        System.out.println(viz.toString());&#xD;
	      }&#xD;
	      viz.toFile();&#xD;
	      if (guiRequested) {&#xD;
	        viz.toDisplay();&#xD;
	      }&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyjyxoqFEe-CzNrO9SlQWA" name="visualize" specification="_Dw3wtoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyjyx4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyjyyIqFEe-CzNrO9SlQWA" name="choice" type="_Djk7kIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
	    if (viz != null) {&#xD;
	      viz.toFile();&#xD;
	      if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
	        viz.toDisplay();&#xD;
	      }&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyjyyYqFEe-CzNrO9SlQWA" name="verifyPerformanceRequirements" specification="_Dw4XwIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyjyyoqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
	    verifyReliabilities(warp);&#xD;
	    verifyNoChannelConflicts(warp);&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjyy4qFEe-CzNrO9SlQWA" name="verifyReliabilities" specification="_Dw4XwoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyjyzIqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
	      if (!warp.reliabilitiesMet()) {&#xD;
	        System.err.printf(&#xD;
	            &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
	                + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
	            String.valueOf(e2e), schedulerSelected.toString());&#xD;
	      } else if (verboseMode) {&#xD;
	        System.out.printf(&#xD;
	            &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
	            String.valueOf(e2e), schedulerSelected.toString());&#xD;
	      }&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyjyzYqFEe-CzNrO9SlQWA" name="verifyDeadlines" specification="_Dw4XxIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyjyzoqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
	      System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
	          schedulerSelected.toString());&#xD;
	      visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
	    } else if (verboseMode) {&#xD;
	      System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
	          schedulerSelected.toString());&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjyz4qFEe-CzNrO9SlQWA" name="verifyNoChannelConflicts" specification="_Dw4XxoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyjy0IqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
	      System.err.printf(&quot;\n\tERROR: Channel conflicts exist. See Channel Visualization for details.\n&quot;);&#xD;
	      if (!caRequested) {&#xD;
	        visualize(warp, SystemChoices.CHANNEL);&#xD;
	      }&#xD;
	    } else if (verboseMode) {&#xD;
	      System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjy0YqFEe-CzNrO9SlQWA" name="setWarpParameters" specification="_Djv6sIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyjy0oqFEe-CzNrO9SlQWA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dyjy04qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>StringHolder schedulerSelected = new StringHolder();&#xD;
	    IntHolder channels = new IntHolder();&#xD;
	    IntHolder faults = new IntHolder();&#xD;
	    DoubleHolder m = new DoubleHolder();&#xD;
	    DoubleHolder end2end = new DoubleHolder();&#xD;
	    BooleanHolder gui = new BooleanHolder();&#xD;
	    BooleanHolder gv = new BooleanHolder();&#xD;
	    BooleanHolder wf = new BooleanHolder();&#xD;
	    BooleanHolder ra = new BooleanHolder();&#xD;
	    BooleanHolder la = new BooleanHolder();&#xD;
	    BooleanHolder ca = new BooleanHolder();&#xD;
	    BooleanHolder s = new BooleanHolder();&#xD;
	    BooleanHolder all = new BooleanHolder();&#xD;
	    BooleanHolder latency = new BooleanHolder();&#xD;
	    BooleanHolder verbose = new BooleanHolder();&#xD;
	    StringHolder input = new StringHolder();&#xD;
	    StringHolder output = new StringHolder();&#xD;
&#xD;
	    ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
	    parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;, schedulerSelected);&#xD;
	    parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
	    parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
	    parser.addOption(&quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communication reliability for all flows&quot;, end2end);&#xD;
	    parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;, faults);&#xD;
	    parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
	    parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
	    parser.addOption(&quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;, wf);&#xD;
	    parser.addOption(&quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;, ra);&#xD;
	    parser.addOption(&quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
	    parser.addOption(&quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
	    parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
	    parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
	    parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
	    parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
	    parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;, output);&#xD;
	    parser.addOption(&quot;-v, --verbose %v #Echo input file name and parsed contents, and detailed flow information&quot;, verbose);&#xD;
&#xD;
	    parser.matchAllArgs(args);&#xD;
&#xD;
	    nChannels = channels.value > 0 ? channels.value : NUM_CHANNELS;&#xD;
	    numFaults = faults.value > 0 ? faults.value : DEFAULT_FAULTS_TOLERATED;&#xD;
	    minLQ = m.value > 0.0 ? m.value : MIN_LQ;&#xD;
	    e2e = end2end.value > 0.0 ? end2end.value : E2E;&#xD;
	    outputSubDirectory = output.value != null ? output.value : DEFAULT_OUTPUT_SUB_DIRECTORY;&#xD;
	    guiRequested = gui.value;&#xD;
	    gvRequested = gv.value;&#xD;
	    wfRequested = wf.value;&#xD;
	    raRequested = ra.value;&#xD;
	    laRequested = la.value;&#xD;
	    caRequested = ca.value;&#xD;
	    simRequested = s.value;&#xD;
	    allRequested = all.value;&#xD;
	    latencyRequested = latency.value;&#xD;
	    verboseMode = verbose.value;&#xD;
	    inputFile = input.value;&#xD;
&#xD;
	    if (schedulerSelected.value != null) {&#xD;
	      schedulerRequested = true;&#xD;
	      switch (schedulerSelected.value) {&#xD;
	        case &quot;priority&quot;:&#xD;
	          Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
	          break;&#xD;
	        case &quot;rm&quot;:&#xD;
	          Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
	          break;&#xD;
	        case &quot;dm&quot;:&#xD;
	          Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
	          break;&#xD;
	        case &quot;rtHart&quot;:&#xD;
	          Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
	          break;&#xD;
	        case &quot;poset&quot;:&#xD;
	          Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
	          break;&#xD;
	        default:&#xD;
	          Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
	          break;&#xD;
	      }&#xD;
	    } else {&#xD;
	      Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
	    }&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjy1IqFEe-CzNrO9SlQWA" name="printWarpParameters" specification="_Djv6tIqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
	    System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
	    System.out.println(&quot;\tnChannels=&quot; + nChannels);&#xD;
	    System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
	    System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
	    System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
	    System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
	    System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
	    System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
	    System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
	    System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
	    System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
	    System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
	    System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
	    System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
	    if (inputFile != null) {&#xD;
	      System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
	    } else {&#xD;
	      System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
	    }&#xD;
	    System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
	    System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
	  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DjvToIqFEe-CzNrO9SlQWA" name="main" isStatic="true" method="_DyjywIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY84qFEe-CzNrO9SlQWA">
                  <body>The main method of the WARP system, which sets up the environment, parses command-line&#xD;
	   * arguments, and visualizes the network system.&#xD;
	   * &#xD;
	   * @param args the command-line arguments</body>
                </ownedComment>
                <ownedParameter xmi:id="_DjvToYqFEe-CzNrO9SlQWA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DjvTooqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Djv6sIqFEe-CzNrO9SlQWA" name="setWarpParameters" visibility="private" isStatic="true" method="_Dyjy0YqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY-oqFEe-CzNrO9SlQWA">
                  <body>Parses the command-line arguments and sets the system parameters.&#xD;
	   * &#xD;
	   * @param args the command-line arguments</body>
                </ownedComment>
                <ownedParameter xmi:id="_Djv6sYqFEe-CzNrO9SlQWA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Djv6soqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Djv6tIqFEe-CzNrO9SlQWA" name="printWarpParameters" visibility="private" isStatic="true" method="_Dyjy1IqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY-4qFEe-CzNrO9SlQWA">
                  <body>Prints the WARP system parameters if verbose mode is enabled.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw3ws4qFEe-CzNrO9SlQWA" name="visualize" visibility="private" isStatic="true" method="_Dyjyw4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY9IqFEe-CzNrO9SlQWA">
                  <body>Visualizes the workload based on the specified choice.&#xD;
	   * &#xD;
	   * @param workLoad the workload to be visualized&#xD;
	   * @param choice the visualization choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw3wtIqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw3wtYqFEe-CzNrO9SlQWA" name="choice" type="_Djlio4qFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw3wtoqFEe-CzNrO9SlQWA" name="visualize" visibility="private" isStatic="true" method="_DyjyxoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY9YqFEe-CzNrO9SlQWA">
                  <body>Visualizes the system based on the specified choice.&#xD;
	   * &#xD;
	   * @param warp the WarpInterface representing the system&#xD;
	   * @param choice the system choice for visualization</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw3wt4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw3wuIqFEe-CzNrO9SlQWA" name="choice" type="_Djk7kIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw4XwIqFEe-CzNrO9SlQWA" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_DyjyyYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY9oqFEe-CzNrO9SlQWA">
                  <body>Verifies that the performance requirements of the system are met.&#xD;
	   * &#xD;
	   * @param warp the WarpInterface representing the system</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw4XwYqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw4XwoqFEe-CzNrO9SlQWA" name="verifyReliabilities" visibility="private" isStatic="true" method="_Dyjyy4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY94qFEe-CzNrO9SlQWA">
                  <body>Verifies that the system meets the required reliability criteria.&#xD;
	   * &#xD;
	   * @param warp the WarpInterface representing the system</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw4Xw4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw4XxIqFEe-CzNrO9SlQWA" name="verifyDeadlines" visibility="private" isStatic="true" method="_DyjyzYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY-IqFEe-CzNrO9SlQWA">
                  <body>Verifies that the system meets the deadline requirements.&#xD;
	   * &#xD;
	   * @param warp the WarpInterface representing the system</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw4XxYqFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw4XxoqFEe-CzNrO9SlQWA" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_Dyjyz4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyvY-YqFEe-CzNrO9SlQWA">
                  <body>Verifies that there are no channel conflicts in the system.&#xD;
	   * &#xD;
	   * @param warp the WarpInterface representing the system</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw4Xx4qFEe-CzNrO9SlQWA" name="warp" type="_Dj32gIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Djy-AIqFEe-CzNrO9SlQWA" name="WarpDSL">
              <ownedComment xmi:id="_DyvY_IqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DyGfwIqFEe-CzNrO9SlQWA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyGfwYqFEe-CzNrO9SlQWA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyGfwoqFEe-CzNrO9SlQWA" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyGfw4qFEe-CzNrO9SlQWA" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyGfxIqFEe-CzNrO9SlQWA" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyGfxYqFEe-CzNrO9SlQWA" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ2oqFEe-CzNrO9SlQWA" name="getInstructionParameters" specification="_Dj0zMIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DykZ24qFEe-CzNrO9SlQWA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DykZ3IqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dj0zMIqFEe-CzNrO9SlQWA" name="getInstructionParameters" method="_DykZ2oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj0zMYqFEe-CzNrO9SlQWA" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxliYIqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_DjzlEIqFEe-CzNrO9SlQWA" name="InstructionParameters">
                <ownedAttribute xmi:id="_DyGfxoqFEe-CzNrO9SlQWA" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyGfx4qFEe-CzNrO9SlQWA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyGfyIqFEe-CzNrO9SlQWA" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyGfyYqFEe-CzNrO9SlQWA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyGfyoqFEe-CzNrO9SlQWA" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyGfy4qFEe-CzNrO9SlQWA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyHG0IqFEe-CzNrO9SlQWA" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyHG0YqFEe-CzNrO9SlQWA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyHG0oqFEe-CzNrO9SlQWA" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyHG04qFEe-CzNrO9SlQWA" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyHG1IqFEe-CzNrO9SlQWA" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyHG1YqFEe-CzNrO9SlQWA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyHG14qFEe-CzNrO9SlQWA" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyHG2IqFEe-CzNrO9SlQWA" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjy1YqFEe-CzNrO9SlQWA" name="getCoordinator" specification="_DjzlEYqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dyjy1oqFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjy14qFEe-CzNrO9SlQWA" name="setCoordinator" specification="_Dj0MIIqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dyjy2IqFEe-CzNrO9SlQWA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyjy2YqFEe-CzNrO9SlQWA" name="setName" specification="_Dj0MIoqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dyjy2oqFEe-CzNrO9SlQWA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ0IqFEe-CzNrO9SlQWA" name="setFlow" specification="_Dj0MJIqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ0YqFEe-CzNrO9SlQWA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ0oqFEe-CzNrO9SlQWA" name="setSrc" specification="_Dj0MJoqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ04qFEe-CzNrO9SlQWA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ1IqFEe-CzNrO9SlQWA" name="setSnk" specification="_Dj0MKIqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ1YqFEe-CzNrO9SlQWA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ1oqFEe-CzNrO9SlQWA" name="setChannel" specification="_Dj0MKoqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ14qFEe-CzNrO9SlQWA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ2IqFEe-CzNrO9SlQWA" name="unused" specification="_Dj0MLIqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ2YqFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_DjzlEYqFEe-CzNrO9SlQWA" name="getCoordinator" method="_Dyjy1YqFEe-CzNrO9SlQWA">
                  <ownedComment xmi:id="_DyvY_YqFEe-CzNrO9SlQWA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_DjzlEoqFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj0MIIqFEe-CzNrO9SlQWA" name="setCoordinator" method="_Dyjy14qFEe-CzNrO9SlQWA">
                  <ownedComment xmi:id="_DyvY_oqFEe-CzNrO9SlQWA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Dj0MIYqFEe-CzNrO9SlQWA" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj0MIoqFEe-CzNrO9SlQWA" name="setName" visibility="private" method="_Dyjy2YqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dj0MI4qFEe-CzNrO9SlQWA" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj0MJIqFEe-CzNrO9SlQWA" name="setFlow" visibility="private" method="_DykZ0IqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dj0MJYqFEe-CzNrO9SlQWA" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj0MJoqFEe-CzNrO9SlQWA" name="setSrc" visibility="private" method="_DykZ0oqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dj0MJ4qFEe-CzNrO9SlQWA" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj0MKIqFEe-CzNrO9SlQWA" name="setSnk" visibility="private" method="_DykZ1IqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dj0MKYqFEe-CzNrO9SlQWA" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj0MKoqFEe-CzNrO9SlQWA" name="setChannel" visibility="private" method="_DykZ1oqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dj0MK4qFEe-CzNrO9SlQWA" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj0MLIqFEe-CzNrO9SlQWA" name="unused" method="_DykZ2IqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dj0MLYqFEe-CzNrO9SlQWA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_Dj1aQIqFEe-CzNrO9SlQWA" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_DxliZIqFEe-CzNrO9SlQWA" general="_DxliYYqFEe-CzNrO9SlQWA"/>
                <ownedAttribute xmi:id="_DyHG2YqFEe-CzNrO9SlQWA" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_DyHG24qFEe-CzNrO9SlQWA" name="instructionParametersArrayList" visibility="package" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzME4YqFEe-CzNrO9SlQWA"/>
                <ownedAttribute xmi:id="_DyHt4oqFEe-CzNrO9SlQWA" name="instructionParameters" visibility="package" type="_DjzlEIqFEe-CzNrO9SlQWA" association="_DzME5IqFEe-CzNrO9SlQWA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ3YqFEe-CzNrO9SlQWA" name="ListenerDsl" specification="_Dj1aQYqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ3oqFEe-CzNrO9SlQWA" type="_Dj1aQIqFEe-CzNrO9SlQWA" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ34qFEe-CzNrO9SlQWA" name="getInstructionParameters" specification="_Dj1aRYqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ4IqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ4YqFEe-CzNrO9SlQWA" name="enterAction" specification="_Dw4-0oqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ4oqFEe-CzNrO9SlQWA" name="ctx" type="_Dw4-0IqFEe-CzNrO9SlQWA"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ44qFEe-CzNrO9SlQWA" name="exitAction" specification="_Dw5l5IqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ5IqFEe-CzNrO9SlQWA" name="ctx" type="_Dw4-0IqFEe-CzNrO9SlQWA"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ5YqFEe-CzNrO9SlQWA" name="exitFlowName" specification="_Dw5l64qFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ5oqFEe-CzNrO9SlQWA" name="ctx" type="_Dw5l6YqFEe-CzNrO9SlQWA"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ54qFEe-CzNrO9SlQWA" name="exitCmd" specification="_Dw6M9IqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ6IqFEe-CzNrO9SlQWA" name="ctx" type="_Dw6M8oqFEe-CzNrO9SlQWA"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ6YqFEe-CzNrO9SlQWA" name="exitSrcNode" specification="_Dw6M-4qFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ6oqFEe-CzNrO9SlQWA" name="ctx" type="_Dw6M-YqFEe-CzNrO9SlQWA"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ64qFEe-CzNrO9SlQWA" name="exitSnkNode" specification="_Dw60A4qFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ7IqFEe-CzNrO9SlQWA" name="ctx" type="_Dw60AYqFEe-CzNrO9SlQWA"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ7YqFEe-CzNrO9SlQWA" name="exitChannel" specification="_Dw60CoqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DykZ7oqFEe-CzNrO9SlQWA" name="ctx" type="_Dw60CIqFEe-CzNrO9SlQWA"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Dj1aQYqFEe-CzNrO9SlQWA" name="ListenerDsl" visibility="package" method="_DykZ3YqFEe-CzNrO9SlQWA">
                  <eAnnotations xmi:id="_Dj1aQoqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Dj1aQ4qFEe-CzNrO9SlQWA" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Dj1aRIqFEe-CzNrO9SlQWA" type="_Dj1aQIqFEe-CzNrO9SlQWA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dj1aRYqFEe-CzNrO9SlQWA" name="getInstructionParameters" method="_DykZ34qFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_DxliY4qFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dw4-0oqFEe-CzNrO9SlQWA" name="enterAction" method="_DykZ4YqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dw5l4IqFEe-CzNrO9SlQWA" name="ctx" type="_Dw4-0IqFEe-CzNrO9SlQWA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dw5l5IqFEe-CzNrO9SlQWA" name="exitAction" method="_DykZ44qFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dw5l5YqFEe-CzNrO9SlQWA" name="ctx" type="_Dw4-0IqFEe-CzNrO9SlQWA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dw5l64qFEe-CzNrO9SlQWA" name="exitFlowName" method="_DykZ5YqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dw5l7IqFEe-CzNrO9SlQWA" name="ctx" type="_Dw5l6YqFEe-CzNrO9SlQWA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dw6M9IqFEe-CzNrO9SlQWA" name="exitCmd" method="_DykZ54qFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dw6M9YqFEe-CzNrO9SlQWA" name="ctx" type="_Dw6M8oqFEe-CzNrO9SlQWA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dw6M-4qFEe-CzNrO9SlQWA" name="exitSrcNode" method="_DykZ6YqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dw6M_IqFEe-CzNrO9SlQWA" name="ctx" type="_Dw6M-YqFEe-CzNrO9SlQWA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dw60A4qFEe-CzNrO9SlQWA" name="exitSnkNode" method="_DykZ64qFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dw60BIqFEe-CzNrO9SlQWA" name="ctx" type="_Dw60AYqFEe-CzNrO9SlQWA"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Dw60CoqFEe-CzNrO9SlQWA" name="exitChannel" method="_DykZ7YqFEe-CzNrO9SlQWA">
                  <ownedParameter xmi:id="_Dw60C4qFEe-CzNrO9SlQWA" name="ctx" type="_Dw60CIqFEe-CzNrO9SlQWA"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Dj32gIqFEe-CzNrO9SlQWA" name="WarpInterface">
              <ownedComment xmi:id="_DyvY_4qFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_Dw7bEIqFEe-CzNrO9SlQWA" general="_DjgqIYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_Dj32gYqFEe-CzNrO9SlQWA" name="toWorkload">
                <ownedParameter xmi:id="_Dw7bEYqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj32goqFEe-CzNrO9SlQWA" name="toProgram">
                <ownedParameter xmi:id="_Dw7bEoqFEe-CzNrO9SlQWA" type="_Di93kIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj32g4qFEe-CzNrO9SlQWA" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_Dw7bE4qFEe-CzNrO9SlQWA" type="_DjLS8YqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj4dkIqFEe-CzNrO9SlQWA" name="toSimulator">
                <ownedParameter xmi:id="_Dw7bFIqFEe-CzNrO9SlQWA" type="_Dje09oqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj4dkYqFEe-CzNrO9SlQWA" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_Dw7bFYqFEe-CzNrO9SlQWA" type="_DitY4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj4dkoqFEe-CzNrO9SlQWA" name="toChannelAnalysis">
                <ownedParameter xmi:id="_Dw7bFoqFEe-CzNrO9SlQWA" type="_Dh1PIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj4dk4qFEe-CzNrO9SlQWA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_Dj4dlIqFEe-CzNrO9SlQWA" name="reliabilitiesMet">
                <ownedParameter xmi:id="_Dj4dlYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj4dloqFEe-CzNrO9SlQWA" name="deadlinesMet">
                <ownedParameter xmi:id="_Dj4dl4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dj5EoIqFEe-CzNrO9SlQWA" name="WarpPoset">
              <ownedComment xmi:id="_DyvZAIqFEe-CzNrO9SlQWA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_Dw8CIoqFEe-CzNrO9SlQWA" general="_Di3J4YqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ74qFEe-CzNrO9SlQWA" name="WarpPoset" specification="_Dw7bF4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DykZ8IqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DykZ8YqFEe-CzNrO9SlQWA" type="_Dj5EoIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DykZ8oqFEe-CzNrO9SlQWA" name="findCoordinator" specification="_DxmJcIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DykZ84qFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DykZ9IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dw7bF4qFEe-CzNrO9SlQWA" name="WarpPoset" visibility="package" method="_DykZ74qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dw7bGYqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dw8CIIqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dw7bGIqFEe-CzNrO9SlQWA" name="workload" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dw8CIYqFEe-CzNrO9SlQWA" type="_Dj5EoIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxmJcIqFEe-CzNrO9SlQWA" name="findCoordinator" visibility="protected" method="_DykZ8oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxmJcYqFEe-CzNrO9SlQWA" name="nodesInFlow" type="_DwSh4IqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxmJcoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Dj5rsIqFEe-CzNrO9SlQWA" name="WarpSystem">
              <ownedComment xmi:id="_DyvZAYqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_DyHt5IqFEe-CzNrO9SlQWA" name="program" visibility="private" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzME54qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyIU8YqFEe-CzNrO9SlQWA" name="workLoad" visibility="private" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzME6oqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyIU84qFEe-CzNrO9SlQWA" name="ra" visibility="private" type="_DjLS8YqFEe-CzNrO9SlQWA" association="_DzMr8YqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyIU9YqFEe-CzNrO9SlQWA" name="la" visibility="private" type="_DitY4IqFEe-CzNrO9SlQWA" association="_DzMr9IqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyIU94qFEe-CzNrO9SlQWA" name="ca" visibility="private" type="_Dh1PIIqFEe-CzNrO9SlQWA" association="_DzMr94qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyIU-YqFEe-CzNrO9SlQWA" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyJjE4qFEe-CzNrO9SlQWA" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyJjFIqFEe-CzNrO9SlQWA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyJjFoqFEe-CzNrO9SlQWA" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyJjF4qFEe-CzNrO9SlQWA" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Dw8CI4qFEe-CzNrO9SlQWA" client="_Dj5rsIqFEe-CzNrO9SlQWA" supplier="_Dj32gIqFEe-CzNrO9SlQWA" contract="_Dj32gIqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA4oqFEe-CzNrO9SlQWA" name="WarpSystem" specification="_DxmwgIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA44qFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DylA5IqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DylA5YqFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DylA5oqFEe-CzNrO9SlQWA" type="_Dj5rsIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA54qFEe-CzNrO9SlQWA" name="toWorkload" specification="_Dj5rsYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA6IqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA6YqFEe-CzNrO9SlQWA" name="toProgram" specification="_Dj6504qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA6oqFEe-CzNrO9SlQWA" type="_Di93kIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA64qFEe-CzNrO9SlQWA" name="toReliabilityAnalysis" specification="_Dj6514qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA7IqFEe-CzNrO9SlQWA" type="_DjLS8YqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA7YqFEe-CzNrO9SlQWA" name="toSimulator" specification="_Dj7g44qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA7oqFEe-CzNrO9SlQWA" type="_Dje09oqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA74qFEe-CzNrO9SlQWA" name="toLatencyAnalysis" specification="_Dj7g54qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA8IqFEe-CzNrO9SlQWA" type="_DitY4IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA8YqFEe-CzNrO9SlQWA" name="toChannelAnalysis" specification="_Dj8H8YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA8oqFEe-CzNrO9SlQWA" type="_Dh1PIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA84qFEe-CzNrO9SlQWA" name="reliabilitiesMet" specification="_Dj8H9YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA9IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA9YqFEe-CzNrO9SlQWA" name="deadlinesMet" specification="_Dj8H-oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA9oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA94qFEe-CzNrO9SlQWA" name="createProgram" specification="_Dxmwh4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA-IqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DylA-YqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DylA-oqFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA-4qFEe-CzNrO9SlQWA" name="getNumFaults" specification="_Dj8vA4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA_IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA_YqFEe-CzNrO9SlQWA" name="getMinPacketReceptionRate" specification="_Dj8vCIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylA_oqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylA_4qFEe-CzNrO9SlQWA" name="getE2e" specification="_Dj9WEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylBAIqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylBAYqFEe-CzNrO9SlQWA" name="getName" specification="_Dj9WFIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylBAoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylBA4qFEe-CzNrO9SlQWA" name="getSchedulerName" specification="_Dj9WGYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylBBIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DylBBYqFEe-CzNrO9SlQWA" name="getNumTransmissions" specification="_Dj9WHoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DylBBoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyln8IqFEe-CzNrO9SlQWA" name="getOptimizationFlag" specification="_Dj99I4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyln8YqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Dj5rsYqFEe-CzNrO9SlQWA" name="toWorkload" method="_DylA54qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw8CJIqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj6504qFEe-CzNrO9SlQWA" name="toProgram" method="_DylA6YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw8CJYqFEe-CzNrO9SlQWA" type="_Di93kIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj6514qFEe-CzNrO9SlQWA" name="toReliabilityAnalysis" method="_DylA64qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw8CJoqFEe-CzNrO9SlQWA" type="_DjLS8YqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj7g44qFEe-CzNrO9SlQWA" name="toSimulator" method="_DylA7YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw8CJ4qFEe-CzNrO9SlQWA" type="_Dje09oqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj7g54qFEe-CzNrO9SlQWA" name="toLatencyAnalysis" method="_DylA74qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw8CKIqFEe-CzNrO9SlQWA" type="_DitY4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj8H8YqFEe-CzNrO9SlQWA" name="toChannelAnalysis" method="_DylA8YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dw8CKYqFEe-CzNrO9SlQWA" type="_Dh1PIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj8H9YqFEe-CzNrO9SlQWA" name="reliabilitiesMet" method="_DylA84qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj8H9oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj8H-oqFEe-CzNrO9SlQWA" name="deadlinesMet" method="_DylA9YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj8H-4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj8vA4qFEe-CzNrO9SlQWA" name="getNumFaults" method="_DylA-4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj8vBIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj8vCIqFEe-CzNrO9SlQWA" name="getMinPacketReceptionRate" method="_DylA_YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxnXkIqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj9WEIqFEe-CzNrO9SlQWA" name="getE2e" method="_DylA_4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxnXkYqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj9WFIqFEe-CzNrO9SlQWA" name="getName" method="_DylBAYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj9WFYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj9WGYqFEe-CzNrO9SlQWA" name="getSchedulerName" method="_DylBA4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj9WGoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj9WHoqFEe-CzNrO9SlQWA" name="getNumTransmissions" method="_DylBBYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj9WH4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj99I4qFEe-CzNrO9SlQWA" name="getOptimizationFlag" method="_Dyln8IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dj99JIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dj99KIqFEe-CzNrO9SlQWA" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_DxmwgIqFEe-CzNrO9SlQWA" name="WarpSystem" method="_DylA4oqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxmwhIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxmwhYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DxmwgYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxmwgoqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxmwg4qFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxmwhoqFEe-CzNrO9SlQWA" type="_Dj5rsIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxmwh4qFEe-CzNrO9SlQWA" name="createProgram" visibility="private" method="_DylA94qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxmwiIqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxmwiYqFEe-CzNrO9SlQWA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxmwioqFEe-CzNrO9SlQWA" name="choice" type="_DxcYdIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DkAZYIqFEe-CzNrO9SlQWA" name="WorkLoad">
              <ownedComment xmi:id="_TwMIUIsuEe-CzNrO9SlQWA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dw-eZYqFEe-CzNrO9SlQWA" general="_DkMmoIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyKKIIqFEe-CzNrO9SlQWA" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKIYqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKIoqFEe-CzNrO9SlQWA" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKI4qFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKJIqFEe-CzNrO9SlQWA" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKJYqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKJoqFEe-CzNrO9SlQWA" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKJ4qFEe-CzNrO9SlQWA" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKKIqFEe-CzNrO9SlQWA" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKKYqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKKoqFEe-CzNrO9SlQWA" name="minPacketReceptionRate" type="_DxdmkIqFEe-CzNrO9SlQWA" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKK4qFEe-CzNrO9SlQWA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKLIqFEe-CzNrO9SlQWA" name="e2e" visibility="private" type="_DxdmkIqFEe-CzNrO9SlQWA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKLYqFEe-CzNrO9SlQWA" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKL4qFEe-CzNrO9SlQWA" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKKMIqFEe-CzNrO9SlQWA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKKMYqFEe-CzNrO9SlQWA" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKxMIqFEe-CzNrO9SlQWA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKxMoqFEe-CzNrO9SlQWA" name="flows" type="_DijA0IqFEe-CzNrO9SlQWA" association="_DywAAYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyKxM4qFEe-CzNrO9SlQWA" name="nodes" type="_Di0toIqFEe-CzNrO9SlQWA" association="_DywAA4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyKxNIqFEe-CzNrO9SlQWA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKxNoqFEe-CzNrO9SlQWA" name="flowNamesInOriginalOrder" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzMr-oqFEe-CzNrO9SlQWA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyKxOIqFEe-CzNrO9SlQWA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyKxOYqFEe-CzNrO9SlQWA" name="flowNamesInPriorityOrder" type="_DwSh4IqFEe-CzNrO9SlQWA" association="_DzMr_YqFEe-CzNrO9SlQWA">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyLYQYqFEe-CzNrO9SlQWA" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Dw9QR4qFEe-CzNrO9SlQWA" client="_DkAZYIqFEe-CzNrO9SlQWA" supplier="_DjL6AoqFEe-CzNrO9SlQWA" contract="_DjL6AoqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyln8oqFEe-CzNrO9SlQWA" name="WorkLoad" specification="_Dxn-oIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyln84qFEe-CzNrO9SlQWA" name="m" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyln9IqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyln9YqFEe-CzNrO9SlQWA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyln9oqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyln94qFEe-CzNrO9SlQWA" name="WorkLoad" specification="_Dxn-p4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyln-IqFEe-CzNrO9SlQWA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyln-YqFEe-CzNrO9SlQWA" name="m" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyln-oqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyln-4qFEe-CzNrO9SlQWA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyln_IqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dyln_4qFEe-CzNrO9SlQWA" name="setDefaultParameters" specification="_DkBngYqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloAIqFEe-CzNrO9SlQWA" name="getE2e" specification="_DkBngoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloAYqFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloAoqFEe-CzNrO9SlQWA" name="getIntForFlowNames" specification="_DkBng4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloA4qFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloBIqFEe-CzNrO9SlQWA" name="getName" specification="_DkBnhYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloBYqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloBoqFEe-CzNrO9SlQWA" name="setMinPacketReceptionRate" specification="_Dxn-sIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloB4qFEe-CzNrO9SlQWA" name="minPacketReceptionRate" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloCIqFEe-CzNrO9SlQWA" name="getMaxPhase" specification="_DkCOkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloCYqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloCoqFEe-CzNrO9SlQWA" name="getMinPeriod" specification="_DkCOkoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloC4qFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloDIqFEe-CzNrO9SlQWA" name="setE2e" specification="_DxolsIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloDYqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloDoqFEe-CzNrO9SlQWA" name="setIntForFlowNames" specification="_DkCOlIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloD4qFEe-CzNrO9SlQWA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloEIqFEe-CzNrO9SlQWA" name="setName" specification="_DkCOloqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloEYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyloEoqFEe-CzNrO9SlQWA" name="setNodeChannel" specification="_DkCOmIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyloE4qFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyloFIqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPAIqFEe-CzNrO9SlQWA" name="getNodeChannel" specification="_DkC1oIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPAYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPAoqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPA4qFEe-CzNrO9SlQWA" name="addFlow" specification="_DkC1o4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPBIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPBYqFEe-CzNrO9SlQWA" name="isIntForNodeNames" specification="_DkC1pYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPBoqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPB4qFEe-CzNrO9SlQWA" name="isIntForFlowNames" specification="_DkC1p4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPCIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPCYqFEe-CzNrO9SlQWA" name="addNodeToFlow" specification="_DkC1qYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPCoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPC4qFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPDIqFEe-CzNrO9SlQWA" name="getFlowPriority" specification="_DkDcsYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPDYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPDoqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPD4qFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPEIqFEe-CzNrO9SlQWA" name="setFlowPriority" specification="_DkDctYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPEYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPEoqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPE4qFEe-CzNrO9SlQWA" name="setFlowPeriod" specification="_DkDcuIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPFIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPFYqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPFoqFEe-CzNrO9SlQWA" name="setFlowDeadline" specification="_DkEDwYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPF4qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPGIqFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPGYqFEe-CzNrO9SlQWA" name="setFlowPhase" specification="_DkEDxIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPGoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPG4qFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPHIqFEe-CzNrO9SlQWA" name="getFlowIndex" specification="_DkEDx4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPHYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPHoqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPH4qFEe-CzNrO9SlQWA" name="getFlowPriority" specification="_DkEDyoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPIIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPIYqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPIoqFEe-CzNrO9SlQWA" name="getFlowPeriod" specification="_DkEq0IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPI4qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPJIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPJYqFEe-CzNrO9SlQWA" name="getFlowDeadline" specification="_DkEq04qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPJoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPJ4qFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPKIqFEe-CzNrO9SlQWA" name="getFlowPhase" specification="_DkEq1oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPKYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPKoqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPK4qFEe-CzNrO9SlQWA" name="getFlowTxAttemptsPerLink" specification="_DkEq2YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPLIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPLYqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPLoqFEe-CzNrO9SlQWA" name="setFlowsInPriorityOrder" specification="_DkEq3IqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPL4qFEe-CzNrO9SlQWA" name="setFlowsInDMorder" specification="_DkEq3YqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPMIqFEe-CzNrO9SlQWA" name="setFlowsInRMorder" specification="_DkEq3oqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPMYqFEe-CzNrO9SlQWA" name="setFlowsInRealTimeHARTorder" specification="_DkFR4IqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPMoqFEe-CzNrO9SlQWA" name="finalizeCurrentFlow" specification="_DkFR4YqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPM4qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPNIqFEe-CzNrO9SlQWA" name="nextReleaseTime" specification="_DkFR44qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPNYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPNoqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPN4qFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPOIqFEe-CzNrO9SlQWA" name="nextAbsoluteDeadline" specification="_DkFR54qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPOYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPOoqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DymPO4qFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DymPPIqFEe-CzNrO9SlQWA" name="finalizeFlowWithE2eParameters" specification="_DkF48IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DymPPYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2EIqFEe-CzNrO9SlQWA" name="finalizeFlowWithFixedFaultTolerance" specification="_DkF48oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2EYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2EoqFEe-CzNrO9SlQWA" name="getFixedTxPerLinkAndTotalTxCost" specification="_Dw93UIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2E4qFEe-CzNrO9SlQWA" name="flow" type="_DidhQIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dym2FIqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2FYqFEe-CzNrO9SlQWA" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_Dxols4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2FoqFEe-CzNrO9SlQWA" name="flow" type="_DidhQIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dym2F4qFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dym2GIqFEe-CzNrO9SlQWA" name="M" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dym2GYqFEe-CzNrO9SlQWA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dym2GoqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2G4qFEe-CzNrO9SlQWA" name="getNodeNamesOrderedAlphabetically" specification="_DkF49IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2HIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dym2HYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2HoqFEe-CzNrO9SlQWA" name="getFlow" specification="_DkGgAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2H4qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dym2IIqFEe-CzNrO9SlQWA" type="_DidhQIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2IYqFEe-CzNrO9SlQWA" name="getFlowNames" specification="_DkGgAoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2IoqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dym2I4qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2JIqFEe-CzNrO9SlQWA" name="getNodeIndex" specification="_DkGgBoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2JYqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dym2JoqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2J4qFEe-CzNrO9SlQWA" name="getNodesInFlow" specification="_DkGgCYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2KIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dym2KYqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dym2KoqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2K4qFEe-CzNrO9SlQWA" name="getHyperPeriod" specification="_DkHHEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2LIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2LYqFEe-CzNrO9SlQWA" name="getTotalTxAttemptsInFlow" specification="_DkHHEoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2LoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dym2L4qFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2MIqFEe-CzNrO9SlQWA" name="getNumTxAttemptsPerLink" specification="_DkHHFYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2MYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dym2MoqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Dym2M4qFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2NIqFEe-CzNrO9SlQWA" name="addEdge" specification="_Dw-eYoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2NYqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dym2NoqFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Dym2N4qFEe-CzNrO9SlQWA" name="maxFlowLength" specification="_DkHHGoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dym2OIqFEe-CzNrO9SlQWA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DkBngYqFEe-CzNrO9SlQWA" name="setDefaultParameters" visibility="private" method="_Dyln_4qFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DkBngoqFEe-CzNrO9SlQWA" name="getE2e" method="_DyloAIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwPysIsuEe-CzNrO9SlQWA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dxn-r4qFEe-CzNrO9SlQWA" type="_DxdmkIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkBng4qFEe-CzNrO9SlQWA" name="getIntForFlowNames" method="_DyloAoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwPysYsuEe-CzNrO9SlQWA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkBnhIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkBnhYqFEe-CzNrO9SlQWA" name="getName" method="_DyloBIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwPysosuEe-CzNrO9SlQWA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkBnhoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkCOkIqFEe-CzNrO9SlQWA" name="getMaxPhase" method="_DyloCIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwQZwYsuEe-CzNrO9SlQWA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkCOkYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkCOkoqFEe-CzNrO9SlQWA" name="getMinPeriod" method="_DyloCoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwQZwosuEe-CzNrO9SlQWA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkCOk4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkCOlIqFEe-CzNrO9SlQWA" name="setIntForFlowNames" method="_DyloDoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwQZxIsuEe-CzNrO9SlQWA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkCOlYqFEe-CzNrO9SlQWA" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkCOloqFEe-CzNrO9SlQWA" name="setName" method="_DyloEIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwQZxYsuEe-CzNrO9SlQWA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkCOl4qFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkCOmIqFEe-CzNrO9SlQWA" name="setNodeChannel" method="_DyloEoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwQZxosuEe-CzNrO9SlQWA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkCOmYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkCOmoqFEe-CzNrO9SlQWA" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkC1oIqFEe-CzNrO9SlQWA" name="getNodeChannel" method="_DymPAIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwRn4IsuEe-CzNrO9SlQWA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkC1oYqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkC1ooqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkC1o4qFEe-CzNrO9SlQWA" name="addFlow" method="_DymPA4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwRn4YsuEe-CzNrO9SlQWA">
                  <body>Adds a flow to the workload.&#xD;
   *&#xD;
   * @param flow The flow to be added.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkC1pIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkC1pYqFEe-CzNrO9SlQWA" name="isIntForNodeNames" method="_DymPBYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkC1poqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkC1p4qFEe-CzNrO9SlQWA" name="isIntForFlowNames" method="_DymPB4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkC1qIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkC1qYqFEe-CzNrO9SlQWA" name="addNodeToFlow" method="_DymPCYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwTdEIsuEe-CzNrO9SlQWA">
                  <body>Adds a node to a specified flow.&#xD;
   *&#xD;
   * @param flow The flow to which the node is added.&#xD;
   * @param node The node to add to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkC1qoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkDcsIqFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkDcsYqFEe-CzNrO9SlQWA" name="getFlowPriority" method="_DymPDIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwTdEYsuEe-CzNrO9SlQWA">
                  <body>Retrieves the priority of a specified flow.&#xD;
   *&#xD;
   * @param flow The flow whose priority is to be retrieved.&#xD;
   * @return The priority of the specified flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkDcsoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkDcs4qFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkDctIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkDctYqFEe-CzNrO9SlQWA" name="setFlowPriority" method="_DymPEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkDctoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkDct4qFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkDcuIqFEe-CzNrO9SlQWA" name="setFlowPeriod" method="_DymPE4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkDcuYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEDwIqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEDwYqFEe-CzNrO9SlQWA" name="setFlowDeadline" method="_DymPFoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkEDwoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEDw4qFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEDxIqFEe-CzNrO9SlQWA" name="setFlowPhase" method="_DymPGYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkEDxYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEDxoqFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEDx4qFEe-CzNrO9SlQWA" name="getFlowIndex" method="_DymPHIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkEDyIqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEDyYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEDyoqFEe-CzNrO9SlQWA" name="getFlowPriority" method="_DymPH4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkEDy4qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEDzIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEq0IqFEe-CzNrO9SlQWA" name="getFlowPeriod" method="_DymPIoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwUEIIsuEe-CzNrO9SlQWA">
                  <body>Retrieves the period of the specified flow.&#xD;
   *&#xD;
   * @param flow The flow whose period is to be retrieved.&#xD;
   * @return The period of the specified flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkEq0YqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEq0oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEq04qFEe-CzNrO9SlQWA" name="getFlowDeadline" method="_DymPJYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwUrMIsuEe-CzNrO9SlQWA">
                  <body>Retrieves the deadline of a specified flow.&#xD;
   *&#xD;
   * @param flow The flow whose deadline is to be retrieved.&#xD;
   * @return The deadline of the specified flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkEq1IqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEq1YqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEq1oqFEe-CzNrO9SlQWA" name="getFlowPhase" method="_DymPKIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwUrMYsuEe-CzNrO9SlQWA">
                  <body>Retrieves the phase of the specified flow.&#xD;
   *&#xD;
   * @param flow The flow whose phase is to be retrieved.&#xD;
   * @return The phase of the specified flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkEq14qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEq2IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEq2YqFEe-CzNrO9SlQWA" name="getFlowTxAttemptsPerLink" method="_DymPK4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwVSQIsuEe-CzNrO9SlQWA">
                  <body>Retrieves the transmission attempts per link for a specified flow.&#xD;
   *&#xD;
   * @param flow The flow whose transmission attempts per link are to be retrieved.&#xD;
   * @return Transmission attempts per link.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkEq2oqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkEq24qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEq3IqFEe-CzNrO9SlQWA" name="setFlowsInPriorityOrder" method="_DymPLoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwV5UIsuEe-CzNrO9SlQWA">
                  <body>Sets the flows in priority order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEq3YqFEe-CzNrO9SlQWA" name="setFlowsInDMorder" method="_DymPL4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwV5UYsuEe-CzNrO9SlQWA">
                  <body>Sets the flows in Deadline Monotonic order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DkEq3oqFEe-CzNrO9SlQWA" name="setFlowsInRMorder" method="_DymPMIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwV5UosuEe-CzNrO9SlQWA">
                  <body>Sets the flows in Rate Monotonic order.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_DkFR4IqFEe-CzNrO9SlQWA" name="setFlowsInRealTimeHARTorder" method="_DymPMYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DkFR4YqFEe-CzNrO9SlQWA" name="finalizeCurrentFlow" method="_DymPMoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkFR4oqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkFR44qFEe-CzNrO9SlQWA" name="nextReleaseTime" method="_DymPNIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkFR5IqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkFR5YqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkFR5oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkFR54qFEe-CzNrO9SlQWA" name="nextAbsoluteDeadline" method="_DymPOIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkFR6IqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkFR6YqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkFR6oqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkF48IqFEe-CzNrO9SlQWA" name="finalizeFlowWithE2eParameters" visibility="private" method="_DymPPIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkF48YqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkF48oqFEe-CzNrO9SlQWA" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_Dym2EIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkF484qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkF49IqFEe-CzNrO9SlQWA" name="getNodeNamesOrderedAlphabetically" method="_Dym2G4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgYosuEe-CzNrO9SlQWA">
                  <body>Retrieves the names of nodes ordered alphabetically.&#xD;
   *&#xD;
   * @return A list of node names ordered alphabetically.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkF49YqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DkF49oqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkGgAIqFEe-CzNrO9SlQWA" name="getFlow" visibility="private" method="_Dym2HoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkGgAYqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw-eYYqFEe-CzNrO9SlQWA" type="_DidhQIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkGgAoqFEe-CzNrO9SlQWA" name="getFlowNames" method="_Dym2IYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgY4suEe-CzNrO9SlQWA">
                  <body>Retrieves the names of all flows in the workload.&#xD;
   *&#xD;
   * @return A list of all flow names.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkGgA4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DkGgBIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkGgBoqFEe-CzNrO9SlQWA" name="getNodeIndex" method="_Dym2JIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkGgB4qFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkGgCIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkGgCYqFEe-CzNrO9SlQWA" name="getNodesInFlow" method="_Dym2J4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgZIsuEe-CzNrO9SlQWA">
                  <body>Retrieves nodes that belong to a specific flow.&#xD;
   *&#xD;
   * @param flow The flow whose nodes are to be retrieved.&#xD;
   * @return A list of nodes in the specified flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkGgCoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkGgC4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DkGgDIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkHHEIqFEe-CzNrO9SlQWA" name="getHyperPeriod" method="_Dym2K4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgZYsuEe-CzNrO9SlQWA">
                  <body>Retrieves the hyper period of all flows in the workload.&#xD;
   *&#xD;
   * @return The hyper period.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkHHEYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkHHEoqFEe-CzNrO9SlQWA" name="getTotalTxAttemptsInFlow" method="_Dym2LYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgZosuEe-CzNrO9SlQWA">
                  <body>Retrieves the total number of transmission attempts in a specified flow.&#xD;
   *&#xD;
   * @param flow The flow whose total transmission attempts are to be retrieved.&#xD;
   * @return Total transmission attempts.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkHHE4qFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkHHFIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkHHFYqFEe-CzNrO9SlQWA" name="getNumTxAttemptsPerLink" method="_Dym2MIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgZ4suEe-CzNrO9SlQWA">
                  <body>Retrieves the number of transmission attempts per link for a specified flow.&#xD;
   *&#xD;
   * @param flow The flow whose number of transmission attempts per link is to be retrieved.&#xD;
   * @return Number of transmission attempts per link.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkHHFoqFEe-CzNrO9SlQWA" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkHHF4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DkHHGIqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkHHGoqFEe-CzNrO9SlQWA" name="maxFlowLength" method="_Dym2N4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwXHcYsuEe-CzNrO9SlQWA">
                  <body>Retrieves the maximum flow length in the workload.&#xD;
   *&#xD;
   * @return The maximum flow length.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkHHG4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw93UIqFEe-CzNrO9SlQWA" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_Dym2EoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgYIsuEe-CzNrO9SlQWA">
                  <body>Retrieves the fixed transmission costs per link and the total transmission cost for the flow.&#xD;
   *&#xD;
   * @return Fixed transmission costs and total transmission cost.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw93UYqFEe-CzNrO9SlQWA" name="flow" type="_DidhQIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxolsoqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dw-eYoqFEe-CzNrO9SlQWA" name="addEdge" method="_Dym2NIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwXHcIsuEe-CzNrO9SlQWA">
                  <body>Adds an edge to the workload.&#xD;
   *&#xD;
   * @param edge The edge to add.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dw-eY4qFEe-CzNrO9SlQWA" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dw-eZIqFEe-CzNrO9SlQWA" name="edge" type="_DiIxIIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxn-oIqFEe-CzNrO9SlQWA" name="WorkLoad" visibility="package" method="_Dyln8oqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dxn-pIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dxn-pYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Dxn-oYqFEe-CzNrO9SlQWA" name="m" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxn-ooqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxn-o4qFEe-CzNrO9SlQWA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxn-poqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxn-p4qFEe-CzNrO9SlQWA" name="WorkLoad" visibility="package" method="_Dyln94qFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_Dxn-rIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Dxn-rYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_TwOkkIsuEe-CzNrO9SlQWA">
                  <body>Constructs a WorkLoad object with default reliability parameters.&#xD;
   *&#xD;
   * @param m The packet reception rate.&#xD;
   * @param e2e The end-to-end reliability requirement.&#xD;
   * @param inputFileName The input file name containing the workload description.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dxn-qIqFEe-CzNrO9SlQWA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxn-qYqFEe-CzNrO9SlQWA" name="m" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxn-qoqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxn-q4qFEe-CzNrO9SlQWA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dxn-roqFEe-CzNrO9SlQWA" type="_DkAZYIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxn-sIqFEe-CzNrO9SlQWA" name="setMinPacketReceptionRate" method="_DyloBoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwQZwIsuEe-CzNrO9SlQWA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Dxn-sYqFEe-CzNrO9SlQWA" name="minPacketReceptionRate" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxolsIqFEe-CzNrO9SlQWA" name="setE2e" method="_DyloDIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwQZw4suEe-CzNrO9SlQWA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxolsYqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Dxols4qFEe-CzNrO9SlQWA" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_Dym2FYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_TwWgYYsuEe-CzNrO9SlQWA">
                  <body>Retrieves the number of transmission attempts per link and the total number of attempts.&#xD;
   *&#xD;
   * @return Number of attempts per link and total attempts.</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxoltIqFEe-CzNrO9SlQWA" name="flow" type="_DidhQIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxoltYqFEe-CzNrO9SlQWA" name="e2e" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxoltoqFEe-CzNrO9SlQWA" name="M" type="_DxdmkIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dxolt4qFEe-CzNrO9SlQWA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxoluYqFEe-CzNrO9SlQWA" type="_DwSh4IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DkMmoIqFEe-CzNrO9SlQWA" name="WorkLoadDescription">
              <ownedComment xmi:id="_DyxOIYqFEe-CzNrO9SlQWA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <generalization xmi:id="_DxATk4qFEe-CzNrO9SlQWA" general="_Djp0EIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyL_UIqFEe-CzNrO9SlQWA" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyL_UYqFEe-CzNrO9SlQWA" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyL_UoqFEe-CzNrO9SlQWA" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyL_U4qFEe-CzNrO9SlQWA" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyL_VIqFEe-CzNrO9SlQWA" name="description" visibility="private" type="_DiG78IqFEe-CzNrO9SlQWA" association="_DzNTAYqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyL_VoqFEe-CzNrO9SlQWA" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyL_WIqFEe-CzNrO9SlQWA" name="fm" visibility="private" type="_Diad8IqFEe-CzNrO9SlQWA" association="_DzNTBIqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyMmYYqFEe-CzNrO9SlQWA" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndIIqFEe-CzNrO9SlQWA" name="WorkLoadDescription" specification="_DkNNsIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndIYqFEe-CzNrO9SlQWA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyndIoqFEe-CzNrO9SlQWA" type="_DkMmoIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
     this.fm = this.getFileManager();&#xD;
     initialize(inputFileName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndI4qFEe-CzNrO9SlQWA" name="visualization" specification="_DkN0w4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndJIqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndJYqFEe-CzNrO9SlQWA" name="fileVisualization" specification="_DkN0x4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndJoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndJ4qFEe-CzNrO9SlQWA" name="toString" specification="_DkOb04qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndKIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndKYqFEe-CzNrO9SlQWA" name="initialize" specification="_DkOb2IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndKoqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
     InputGraphFile gf = new InputGraphFile(fm);&#xD;
     inputGraphString = gf.readGraphFile(inputFile);&#xD;
     this.inputFileName = gf.getGraphFileName();&#xD;
     description = new Description(inputGraphString);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndK4qFEe-CzNrO9SlQWA" name="main" specification="_DkPC4IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndLIqFEe-CzNrO9SlQWA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DyndLYqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (args.length &lt; 1) {&#xD;
         System.out.println(&quot;Usage: java WorkLoadDescription &lt;inputFileName>&quot;);&#xD;
         return;&#xD;
     }&#xD;
&#xD;
     String inputFileName = args[0];&#xD;
     WorkLoadDescription workload = new WorkLoadDescription(inputFileName);&#xD;
&#xD;
     System.out.println(&quot;Graph Name: &quot; + workload.getInputFileName());&#xD;
&#xD;
     // Extract and sort flows&#xD;
     Map&lt;Integer, String> flows = new TreeMap&lt;>();&#xD;
     Pattern flowPattern = Pattern.compile(&quot;(Flow\\s\\d+:\\s.*)&quot;);&#xD;
&#xD;
     for (String line : workload.description) {&#xD;
         Matcher matcher = flowPattern.matcher(line);&#xD;
         if (matcher.find()) {&#xD;
             String flowString = matcher.group(1);&#xD;
             // Extract flow number&#xD;
             int flowNumber = Integer.parseInt(flowString.split(&quot; &quot;)[1].replace(&quot;:&quot;, &quot;&quot;));&#xD;
             flows.put(flowNumber, flowString);&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Print each flow with its number&#xD;
     for (Map.Entry&lt;Integer, String> entry : flows.entrySet()) {&#xD;
         int flowNumber = entry.getKey();&#xD;
         String flow = entry.getValue();&#xD;
         System.out.println(&quot;Flow &quot; + flowNumber + &quot;: &quot; + flow);&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DkNNsIqFEe-CzNrO9SlQWA" name="WorkLoadDescription" visibility="package" method="_DyndIIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DkN0wIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DkN0wYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DkNNsYqFEe-CzNrO9SlQWA" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkN0woqFEe-CzNrO9SlQWA" type="_DkMmoIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkN0w4qFEe-CzNrO9SlQWA" name="visualization" method="_DyndI4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxATkYqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkN0x4qFEe-CzNrO9SlQWA" name="fileVisualization" method="_DyndJYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxATkoqFEe-CzNrO9SlQWA" type="_DiG78IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkOb04qFEe-CzNrO9SlQWA" name="toString" method="_DyndJ4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkOb1IqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkOb2IqFEe-CzNrO9SlQWA" name="initialize" visibility="private" method="_DyndKYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkOb2YqFEe-CzNrO9SlQWA" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkPC4IqFEe-CzNrO9SlQWA" name="main" isStatic="true" method="_DyndK4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkPC4YqFEe-CzNrO9SlQWA" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_DkPC4oqFEe-CzNrO9SlQWA" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DkPp8IqFEe-CzNrO9SlQWA" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_DyxOIoqFEe-CzNrO9SlQWA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Dxpz0IqFEe-CzNrO9SlQWA" general="_DwfWM4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyMmYoqFEe-CzNrO9SlQWA" name="workLoad" visibility="package" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzNTB4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyMmZIqFEe-CzNrO9SlQWA" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndLoqFEe-CzNrO9SlQWA" name="WorkLoadListener" specification="_DxATlIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndL4qFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyndMIqFEe-CzNrO9SlQWA" type="_DkPp8IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndMYqFEe-CzNrO9SlQWA" name="buildNodesAndFlows" specification="_DxATmYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndMoqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndM4qFEe-CzNrO9SlQWA" name="testPrintStdOut" specification="_DkQRAIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndNIqFEe-CzNrO9SlQWA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndNYqFEe-CzNrO9SlQWA" name="enterWarpName" specification="_DxBhsIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndNoqFEe-CzNrO9SlQWA" name="ctx" type="_Dwf9SIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndN4qFEe-CzNrO9SlQWA" name="enterFlowName" specification="_DxBhtYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndOIqFEe-CzNrO9SlQWA" name="ctx" type="_DwgkW4qFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndOYqFEe-CzNrO9SlQWA" name="exitPriority" specification="_DxCIwYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndOoqFEe-CzNrO9SlQWA" name="ctx" type="_DxBhuoqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndO4qFEe-CzNrO9SlQWA" name="exitPeriod" specification="_DxCIyIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndPIqFEe-CzNrO9SlQWA" name="ctx" type="_DxCIxoqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndPYqFEe-CzNrO9SlQWA" name="exitDeadline" specification="_DxCv04qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndPoqFEe-CzNrO9SlQWA" name="ctx" type="_DxCv0YqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyndP4qFEe-CzNrO9SlQWA" name="exitPhase" specification="_DxCv2oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyndQIqFEe-CzNrO9SlQWA" name="ctx" type="_DxCv2IqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEMIqFEe-CzNrO9SlQWA" name="exitSrcNode" specification="_DxDW4oqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEMYqFEe-CzNrO9SlQWA" name="ctx" type="_DwhLZoqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEMoqFEe-CzNrO9SlQWA" name="exitSnkNode" specification="_DxDW54qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEM4qFEe-CzNrO9SlQWA" name="ctx" type="_DwhycoqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoENIqFEe-CzNrO9SlQWA" name="exitFlow" specification="_DxDW7IqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoENYqFEe-CzNrO9SlQWA" name="ctx" type="_DwhyeYqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DkQRAIqFEe-CzNrO9SlQWA" name="testPrintStdOut" method="_DyndM4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkQRAYqFEe-CzNrO9SlQWA" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxATlIqFEe-CzNrO9SlQWA" name="WorkLoadListener" visibility="private" method="_DyndLoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxATloqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxATl4qFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DxATlYqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxATmIqFEe-CzNrO9SlQWA" type="_DkPp8IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxATmYqFEe-CzNrO9SlQWA" name="buildNodesAndFlows" isStatic="true" method="_DyndMYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxATmoqFEe-CzNrO9SlQWA" name="workLoad" type="_DkAZYIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxBhsIqFEe-CzNrO9SlQWA" name="enterWarpName" method="_DyndNYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxBhsYqFEe-CzNrO9SlQWA" name="ctx" type="_Dwf9SIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxBhtYqFEe-CzNrO9SlQWA" name="enterFlowName" method="_DyndN4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxBhtoqFEe-CzNrO9SlQWA" name="ctx" type="_DwgkW4qFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxCIwYqFEe-CzNrO9SlQWA" name="exitPriority" method="_DyndOYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxCIwoqFEe-CzNrO9SlQWA" name="ctx" type="_DxBhuoqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxCIyIqFEe-CzNrO9SlQWA" name="exitPeriod" method="_DyndO4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxCIyYqFEe-CzNrO9SlQWA" name="ctx" type="_DxCIxoqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxCv04qFEe-CzNrO9SlQWA" name="exitDeadline" method="_DyndPYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxCv1IqFEe-CzNrO9SlQWA" name="ctx" type="_DxCv0YqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxCv2oqFEe-CzNrO9SlQWA" name="exitPhase" method="_DyndP4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxCv24qFEe-CzNrO9SlQWA" name="ctx" type="_DxCv2IqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxDW4oqFEe-CzNrO9SlQWA" name="exitSrcNode" method="_DyoEMIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxDW44qFEe-CzNrO9SlQWA" name="ctx" type="_DwhLZoqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxDW54qFEe-CzNrO9SlQWA" name="exitSnkNode" method="_DyoEMoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxDW6IqFEe-CzNrO9SlQWA" name="ctx" type="_DwhycoqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxDW7IqFEe-CzNrO9SlQWA" name="exitFlow" method="_DyoENIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxDW7YqFEe-CzNrO9SlQWA" name="ctx" type="_DwhyeYqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DkRfIIqFEe-CzNrO9SlQWA" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_DyNNcIqFEe-CzNrO9SlQWA" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyNNcYqFEe-CzNrO9SlQWA" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNcoqFEe-CzNrO9SlQWA" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyNNc4qFEe-CzNrO9SlQWA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNdIqFEe-CzNrO9SlQWA" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyNNdYqFEe-CzNrO9SlQWA" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNdoqFEe-CzNrO9SlQWA" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyNNd4qFEe-CzNrO9SlQWA" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNeIqFEe-CzNrO9SlQWA" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyNNeYqFEe-CzNrO9SlQWA" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNeoqFEe-CzNrO9SlQWA" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNfIqFEe-CzNrO9SlQWA" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNfYqFEe-CzNrO9SlQWA" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyNNfoqFEe-CzNrO9SlQWA" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyN0gIqFEe-CzNrO9SlQWA" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyN0goqFEe-CzNrO9SlQWA" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyN0hIqFEe-CzNrO9SlQWA" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyN0hoqFEe-CzNrO9SlQWA" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyN0h4qFEe-CzNrO9SlQWA" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_DyN0iIqFEe-CzNrO9SlQWA" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_DyN0iYqFEe-CzNrO9SlQWA" name="predecessor" type="_DkRfIIqFEe-CzNrO9SlQWA" association="_DyxOI4qFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyN0ioqFEe-CzNrO9SlQWA" name="endTimes" visibility="private" type="_DjKr5IqFEe-CzNrO9SlQWA" association="_DzNTCoqFEe-CzNrO9SlQWA"/>
              <ownedAttribute xmi:id="_DyObkoqFEe-CzNrO9SlQWA" name="subObjects" type="_DxD98oqFEe-CzNrO9SlQWA" isReadOnly="true" association="_DzNTDYqFEe-CzNrO9SlQWA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoENoqFEe-CzNrO9SlQWA" name="SchedulableObject" specification="_DkSGMIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEN4qFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEOIqFEe-CzNrO9SlQWA" name="SchedulableObject" specification="_DxElAYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEOYqFEe-CzNrO9SlQWA" name="obj" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyoEOoqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoEO4qFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEPIqFEe-CzNrO9SlQWA" name="SchedulableObject" specification="_DkStQ4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEPYqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoEPoqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoEP4qFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoEQIqFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoEQYqFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEQoqFEe-CzNrO9SlQWA" name="SchedulableObject" specification="_DkStS4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEQ4qFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoERIqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoERYqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoERoqFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoER4qFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoESIqFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoESYqFEe-CzNrO9SlQWA" name="setDefaultParameters" specification="_DkTUU4qFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoESoqFEe-CzNrO9SlQWA" name="getAllEndTimes" specification="_DkTUVIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoES4qFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoETIqFEe-CzNrO9SlQWA" name="addToEndTimes" specification="_DkTUVoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoETYqFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEToqFEe-CzNrO9SlQWA" name="peekEndTimes" specification="_DkT7YIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoET4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEUIqFEe-CzNrO9SlQWA" name="pollEndTimes" specification="_DkT7YoqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEUYqFEe-CzNrO9SlQWA" name="addSubObject" specification="_DxElCIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEUoqFEe-CzNrO9SlQWA" name="obj" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEU4qFEe-CzNrO9SlQWA" name="getName" specification="_DkT7Y4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEVIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEVYqFEe-CzNrO9SlQWA" name="setName" specification="_DkT7ZYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEVoqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEV4qFEe-CzNrO9SlQWA" name="getReleaseTime" specification="_DkT7Z4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEWIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoEWYqFEe-CzNrO9SlQWA" name="getPhase" specification="_DkT7aYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoEWoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorQIqFEe-CzNrO9SlQWA" name="getStartTime" specification="_DkT7a4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorQYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorQoqFEe-CzNrO9SlQWA" name="setEndTime" specification="_DkUicIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorQ4qFEe-CzNrO9SlQWA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorRIqFEe-CzNrO9SlQWA" name="setStartTime" specification="_DkUicoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorRYqFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorRoqFEe-CzNrO9SlQWA" name="setReleaseTime" specification="_DkUidIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorR4qFEe-CzNrO9SlQWA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorSIqFEe-CzNrO9SlQWA" name="setPeriod" specification="_DkUidoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorSYqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorSoqFEe-CzNrO9SlQWA" name="setPhase" specification="_DkUieIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorS4qFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorTIqFEe-CzNrO9SlQWA" name="setNextReleaseTime" specification="_DkVJgIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorTYqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorToqFEe-CzNrO9SlQWA" name="maxPhaseComparison" specification="_DxFMEIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorT4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorUIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorUYqFEe-CzNrO9SlQWA" name="maxPhaseComparison" specification="_DxFME4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorUoqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorU4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorVIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorVYqFEe-CzNrO9SlQWA" name="deadlineComparison" specification="_DxFMF4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorVoqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorV4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorWIqFEe-CzNrO9SlQWA" name="deadlineComparison" specification="_DxFMGoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorWYqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorWoqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorW4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorXIqFEe-CzNrO9SlQWA" name="periodComparison" specification="_DxFMHoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorXYqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorXoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorX4qFEe-CzNrO9SlQWA" name="periodComparison" specification="_DxFMIYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorYIqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorYYqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorYoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorY4qFEe-CzNrO9SlQWA" name="priorityComparison" specification="_DxFzIIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorZIqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorZYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorZoqFEe-CzNrO9SlQWA" name="priorityComparison" specification="_DxFzI4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorZ4qFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyoraIqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyoraYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoraoqFEe-CzNrO9SlQWA" name="releaseTimeComparison" specification="_DxFzJ4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_Dyora4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorbIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorbYqFEe-CzNrO9SlQWA" name="releaseTimeComparison" specification="_DxFzKoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorboqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyorb4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyorcIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyorcYqFEe-CzNrO9SlQWA" name="LatestReleaseTimeComparison" specification="_DxFzLoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyorcoqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyorc4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyordIqFEe-CzNrO9SlQWA" name="LatestReleaseTimeComparison" specification="_DxFzMYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyordYqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DyordoqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_Dyord4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DyoreIqFEe-CzNrO9SlQWA" name="compareAscendingOrder" specification="_DkVwkIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DyoreYqFEe-CzNrO9SlQWA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DyoreoqFEe-CzNrO9SlQWA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Dyore4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DypSUIqFEe-CzNrO9SlQWA" name="compareDescendingOrder" specification="_DkVwlIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DypSUYqFEe-CzNrO9SlQWA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DypSUoqFEe-CzNrO9SlQWA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DypSU4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DypSVIqFEe-CzNrO9SlQWA" name="print" specification="_DkWXoIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DypSVYqFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_DypSVoqFEe-CzNrO9SlQWA" name="print" specification="_DkWXooqFEe-CzNrO9SlQWA">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_DkSGMIqFEe-CzNrO9SlQWA" name="SchedulableObject" visibility="package" method="_DyoENoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DkStQIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DkStQYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DkStQoqFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkStQ4qFEe-CzNrO9SlQWA" name="SchedulableObject" visibility="package" method="_DyoEPIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DkStSIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DkStSYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DkStRIqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStRYqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStRoqFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStR4qFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStSoqFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkStS4qFEe-CzNrO9SlQWA" name="SchedulableObject" visibility="package" method="_DyoEQoqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DkTUUIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DkTUUYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_DkStTIqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStTYqFEe-CzNrO9SlQWA" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStToqFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStT4qFEe-CzNrO9SlQWA" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkStUIqFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkTUUoqFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkTUU4qFEe-CzNrO9SlQWA" name="setDefaultParameters" visibility="private" method="_DyoESYqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DkTUVIqFEe-CzNrO9SlQWA" name="getAllEndTimes" method="_DyoESoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyxOJoqFEe-CzNrO9SlQWA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxElB4qFEe-CzNrO9SlQWA" type="_DjKr5IqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DkTUVoqFEe-CzNrO9SlQWA" name="addToEndTimes" method="_DyoETIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkTUV4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkT7YIqFEe-CzNrO9SlQWA" name="peekEndTimes" method="_DyoEToqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkT7YYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkT7YoqFEe-CzNrO9SlQWA" name="pollEndTimes" method="_DyoEUIqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DkT7Y4qFEe-CzNrO9SlQWA" name="getName" method="_DyoEU4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyxOJ4qFEe-CzNrO9SlQWA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkT7ZIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkT7ZYqFEe-CzNrO9SlQWA" name="setName" method="_DyoEVYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyxOKIqFEe-CzNrO9SlQWA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkT7ZoqFEe-CzNrO9SlQWA" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkT7Z4qFEe-CzNrO9SlQWA" name="getReleaseTime" method="_DyoEV4qFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyxOKYqFEe-CzNrO9SlQWA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkT7aIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkT7aYqFEe-CzNrO9SlQWA" name="getPhase" method="_DyoEWYqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_DyxOKoqFEe-CzNrO9SlQWA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkT7aoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkT7a4qFEe-CzNrO9SlQWA" name="getStartTime" method="_DyorQIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyx1MIqFEe-CzNrO9SlQWA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkT7bIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkUicIqFEe-CzNrO9SlQWA" name="setEndTime" method="_DyorQoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyx1MYqFEe-CzNrO9SlQWA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkUicYqFEe-CzNrO9SlQWA" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkUicoqFEe-CzNrO9SlQWA" name="setStartTime" method="_DyorRIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyx1MoqFEe-CzNrO9SlQWA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkUic4qFEe-CzNrO9SlQWA" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkUidIqFEe-CzNrO9SlQWA" name="setReleaseTime" method="_DyorRoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyx1M4qFEe-CzNrO9SlQWA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkUidYqFEe-CzNrO9SlQWA" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkUidoqFEe-CzNrO9SlQWA" name="setPeriod" method="_DyorSIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyx1NIqFEe-CzNrO9SlQWA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkUid4qFEe-CzNrO9SlQWA" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkUieIqFEe-CzNrO9SlQWA" name="setPhase" method="_DyorSoqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyx1NYqFEe-CzNrO9SlQWA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkUieYqFEe-CzNrO9SlQWA" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkVJgIqFEe-CzNrO9SlQWA" name="setNextReleaseTime" method="_DyorTIqFEe-CzNrO9SlQWA">
                <ownedComment xmi:id="_Dyx1NoqFEe-CzNrO9SlQWA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_DkVJgYqFEe-CzNrO9SlQWA" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkVwkIqFEe-CzNrO9SlQWA" name="compareAscendingOrder" method="_DyoreIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkVwkYqFEe-CzNrO9SlQWA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkVwkoqFEe-CzNrO9SlQWA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkVwk4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkVwlIqFEe-CzNrO9SlQWA" name="compareDescendingOrder" method="_DypSUIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkVwlYqFEe-CzNrO9SlQWA" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkVwloqFEe-CzNrO9SlQWA" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DkVwl4qFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkWXoIqFEe-CzNrO9SlQWA" name="print" method="_DypSVIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DkWXoYqFEe-CzNrO9SlQWA" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DkWXooqFEe-CzNrO9SlQWA" name="print" method="_DypSVoqFEe-CzNrO9SlQWA"/>
              <ownedOperation xmi:id="_DxElAYqFEe-CzNrO9SlQWA" name="SchedulableObject" visibility="package" method="_DyoEOIqFEe-CzNrO9SlQWA">
                <eAnnotations xmi:id="_DxElBIqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_DxElBYqFEe-CzNrO9SlQWA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_DyxOJYqFEe-CzNrO9SlQWA">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_DxElAoqFEe-CzNrO9SlQWA" name="obj" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxElA4qFEe-CzNrO9SlQWA" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_DxElBoqFEe-CzNrO9SlQWA" type="_DkRfIIqFEe-CzNrO9SlQWA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxElCIqFEe-CzNrO9SlQWA" name="addSubObject" method="_DyoEUYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxElCYqFEe-CzNrO9SlQWA" name="obj" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFMEIqFEe-CzNrO9SlQWA" name="maxPhaseComparison" method="_DyorToqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFMEYqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMEoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFME4qFEe-CzNrO9SlQWA" name="maxPhaseComparison" method="_DyorUYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFMFIqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMFYqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMFoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFMF4qFEe-CzNrO9SlQWA" name="deadlineComparison" method="_DyorVYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFMGIqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMGYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFMGoqFEe-CzNrO9SlQWA" name="deadlineComparison" method="_DyorWIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFMG4qFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMHIqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMHYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFMHoqFEe-CzNrO9SlQWA" name="periodComparison" method="_DyorXIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFMH4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMIIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFMIYqFEe-CzNrO9SlQWA" name="periodComparison" method="_DyorX4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFMIoqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMI4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFMJIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFzIIqFEe-CzNrO9SlQWA" name="priorityComparison" method="_DyorY4qFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFzIYqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzIoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFzI4qFEe-CzNrO9SlQWA" name="priorityComparison" method="_DyorZoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFzJIqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzJYqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzJoqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFzJ4qFEe-CzNrO9SlQWA" name="releaseTimeComparison" method="_DyoraoqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFzKIqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzKYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFzKoqFEe-CzNrO9SlQWA" name="releaseTimeComparison" method="_DyorbYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFzK4qFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzLIqFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzLYqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFzLoqFEe-CzNrO9SlQWA" name="LatestReleaseTimeComparison" method="_DyorcYqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFzL4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzMIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_DxFzMYqFEe-CzNrO9SlQWA" name="LatestReleaseTimeComparison" method="_DyordIqFEe-CzNrO9SlQWA">
                <ownedParameter xmi:id="_DxFzMoqFEe-CzNrO9SlQWA" name="obj1" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzM4qFEe-CzNrO9SlQWA" name="obj2" type="_DkRfIIqFEe-CzNrO9SlQWA"/>
                <ownedParameter xmi:id="_DxFzNIqFEe-CzNrO9SlQWA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_DxT1kYqFEe-CzNrO9SlQWA" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DxbKUYqFEe-CzNrO9SlQWA" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DxcYdIqFEe-CzNrO9SlQWA" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DxjGIIqFEe-CzNrO9SlQWA" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DxjGKYqFEe-CzNrO9SlQWA" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_Dys8sYqFEe-CzNrO9SlQWA" name="" memberEnd="_Dx0y94qFEe-CzNrO9SlQWA _Dys8soqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_Dys8soqFEe-CzNrO9SlQWA" name="" type="_DiIxIIqFEe-CzNrO9SlQWA" association="_Dys8sYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DywAAYqFEe-CzNrO9SlQWA" name="" memberEnd="_DyKxMoqFEe-CzNrO9SlQWA _DywAAoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DywAAoqFEe-CzNrO9SlQWA" name="" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DywAAYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DywAA4qFEe-CzNrO9SlQWA" name="" memberEnd="_DyKxM4qFEe-CzNrO9SlQWA _DywABIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DywABIqFEe-CzNrO9SlQWA" name="" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DywAA4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DyxOI4qFEe-CzNrO9SlQWA" name="" memberEnd="_DyN0iYqFEe-CzNrO9SlQWA _DyxOJIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DyxOJIqFEe-CzNrO9SlQWA" name="" type="_DkRfIIqFEe-CzNrO9SlQWA" association="_DyxOI4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzCT4IqFEe-CzNrO9SlQWA" name="" memberEnd="_DzCT4YqFEe-CzNrO9SlQWA _DxwhgYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzCT4YqFEe-CzNrO9SlQWA" name="" type="_Dhpo8IqFEe-CzNrO9SlQWA" association="_DzCT4IqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzCT44qFEe-CzNrO9SlQWA" name="" memberEnd="_DzCT5IqFEe-CzNrO9SlQWA _DxxIkIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzCT5IqFEe-CzNrO9SlQWA" name="" type="_Dhpo8IqFEe-CzNrO9SlQWA" association="_DzCT44qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzC68IqFEe-CzNrO9SlQWA" name="" memberEnd="_DzC68YqFEe-CzNrO9SlQWA _DxxIkoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzC68YqFEe-CzNrO9SlQWA" name="" type="_Dhpo8IqFEe-CzNrO9SlQWA" association="_DzC68IqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzC684qFEe-CzNrO9SlQWA" name="" memberEnd="_DzC69IqFEe-CzNrO9SlQWA _DxxvooqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzC69IqFEe-CzNrO9SlQWA" name="" type="_Dh1PIIqFEe-CzNrO9SlQWA" association="_DzC684qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzC69oqFEe-CzNrO9SlQWA" name="" memberEnd="_DzC694qFEe-CzNrO9SlQWA _DxyWsYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzC694qFEe-CzNrO9SlQWA" name="" type="_Dh1PIIqFEe-CzNrO9SlQWA" association="_DzC69oqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzDiAYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzDiAoqFEe-CzNrO9SlQWA _DxyWuYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzDiAoqFEe-CzNrO9SlQWA" name="" type="_Dh2dQIqFEe-CzNrO9SlQWA" association="_DzDiAYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzDiBIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzDiBYqFEe-CzNrO9SlQWA _DxyWu4qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzDiBYqFEe-CzNrO9SlQWA" name="" type="_Dh2dQIqFEe-CzNrO9SlQWA" association="_DzDiBIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzDiB4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzDiCIqFEe-CzNrO9SlQWA _Dxy9x4qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzDiCIqFEe-CzNrO9SlQWA" name="" type="_Dh3rYIqFEe-CzNrO9SlQWA" association="_DzDiB4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzDiCoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzDiC4qFEe-CzNrO9SlQWA _Dxy9zIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzDiC4qFEe-CzNrO9SlQWA" name="" type="_Dh780IqFEe-CzNrO9SlQWA" association="_DzDiCoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEJEYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzEJEoqFEe-CzNrO9SlQWA _Dxzk1IqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEJEoqFEe-CzNrO9SlQWA" name="" type="_Dh780IqFEe-CzNrO9SlQWA" association="_DzEJEYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEJFIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzEJFYqFEe-CzNrO9SlQWA _Dx0L5IqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEJFYqFEe-CzNrO9SlQWA" name="" type="_DiCqgIqFEe-CzNrO9SlQWA" association="_DzEJFIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEJF4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzEJGIqFEe-CzNrO9SlQWA _Dx0L6oqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEJGIqFEe-CzNrO9SlQWA" name="" type="_DiCqgIqFEe-CzNrO9SlQWA" association="_DzEJF4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEJGoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzEJG4qFEe-CzNrO9SlQWA _Dx2oJYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEJG4qFEe-CzNrO9SlQWA" name="" type="_DidhQIqFEe-CzNrO9SlQWA" association="_DzEJGoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEJHYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzEJHoqFEe-CzNrO9SlQWA _Dx2oKIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEJHoqFEe-CzNrO9SlQWA" name="" type="_DidhQIqFEe-CzNrO9SlQWA" association="_DzEJHYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEwIYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzEwIoqFEe-CzNrO9SlQWA _Dx3PMYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEwIoqFEe-CzNrO9SlQWA" name="" type="_DidhQIqFEe-CzNrO9SlQWA" association="_DzEwIYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEwJIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzEwJYqFEe-CzNrO9SlQWA _Dx3PNIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEwJYqFEe-CzNrO9SlQWA" name="" type="_DidhQIqFEe-CzNrO9SlQWA" association="_DzEwJIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEwJ4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzEwKIqFEe-CzNrO9SlQWA _Dx3PNoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEwKIqFEe-CzNrO9SlQWA" name="" type="_DidhQIqFEe-CzNrO9SlQWA" association="_DzEwJ4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzEwKoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzEwK4qFEe-CzNrO9SlQWA _Dx32SoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzEwK4qFEe-CzNrO9SlQWA" name="" type="_DikO8IqFEe-CzNrO9SlQWA" association="_DzEwKoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzFXMYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzFXMoqFEe-CzNrO9SlQWA _Dx4dUIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzFXMoqFEe-CzNrO9SlQWA" name="" type="_DikO8IqFEe-CzNrO9SlQWA" association="_DzFXMYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzFXNIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzFXNYqFEe-CzNrO9SlQWA _Dx4dUoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzFXNYqFEe-CzNrO9SlQWA" name="" type="_DimrMIqFEe-CzNrO9SlQWA" association="_DzFXNIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzFXN4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzFXOIqFEe-CzNrO9SlQWA _Dx4dVIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzFXOIqFEe-CzNrO9SlQWA" name="" type="_DiogYIqFEe-CzNrO9SlQWA" association="_DzFXN4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzF-QYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzF-QoqFEe-CzNrO9SlQWA _Dx4dVoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzF-QoqFEe-CzNrO9SlQWA" name="" type="_DiogYIqFEe-CzNrO9SlQWA" association="_DzF-QYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzF-RIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzF-RYqFEe-CzNrO9SlQWA _Dx5EYoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzF-RYqFEe-CzNrO9SlQWA" name="" type="_DiqVkIqFEe-CzNrO9SlQWA" association="_DzF-RIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzF-R4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzF-SIqFEe-CzNrO9SlQWA _Dx5rdoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzF-SIqFEe-CzNrO9SlQWA" name="" type="_DitY4IqFEe-CzNrO9SlQWA" association="_DzF-R4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzF-SoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzF-S4qFEe-CzNrO9SlQWA _Dx5reIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzF-S4qFEe-CzNrO9SlQWA" name="" type="_DitY4IqFEe-CzNrO9SlQWA" association="_DzF-SoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzF-TYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzF-ToqFEe-CzNrO9SlQWA _Dx5reoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzF-ToqFEe-CzNrO9SlQWA" name="" type="_DitY4IqFEe-CzNrO9SlQWA" association="_DzF-TYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzF-UIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzF-UYqFEe-CzNrO9SlQWA _Dx5rfIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzF-UYqFEe-CzNrO9SlQWA" name="" type="_DitY4IqFEe-CzNrO9SlQWA" association="_DzF-UIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHMYYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzHMYoqFEe-CzNrO9SlQWA _Dx6SgYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHMYoqFEe-CzNrO9SlQWA" name="" type="_DitY4IqFEe-CzNrO9SlQWA" association="_DzHMYYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHMZIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzHMZYqFEe-CzNrO9SlQWA _Dx6SiIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHMZYqFEe-CzNrO9SlQWA" name="" type="_Div1IIqFEe-CzNrO9SlQWA" association="_DzHMZIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHMZ4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzHMaIqFEe-CzNrO9SlQWA _Dx6SioqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHMaIqFEe-CzNrO9SlQWA" name="" type="_Div1IIqFEe-CzNrO9SlQWA" association="_DzHMZ4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHMaoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzHMa4qFEe-CzNrO9SlQWA _Dx65lYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHMa4qFEe-CzNrO9SlQWA" name="" type="_DixqUYqFEe-CzNrO9SlQWA" association="_DzHMaoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHzcIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzHzcYqFEe-CzNrO9SlQWA _Dx7gpoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHzcYqFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzHzcIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHzc4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzHzdIqFEe-CzNrO9SlQWA _Dx7gqIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHzdIqFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzHzc4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHzdoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzHzd4qFEe-CzNrO9SlQWA _Dx7gqoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHzd4qFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzHzdoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzHzeYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzHzeoqFEe-CzNrO9SlQWA _Dx7gr4qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzHzeoqFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzHzeYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzIagYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzIagoqFEe-CzNrO9SlQWA _Dx8Hs4qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzIagoqFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzIagYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzIahIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzIahYqFEe-CzNrO9SlQWA _Dx8HtYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzIahYqFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzIahIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzIah4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzIaiIqFEe-CzNrO9SlQWA _Dx8HuIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzIaiIqFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzIah4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJBkIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzJBkYqFEe-CzNrO9SlQWA _Dx8Hu4qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJBkYqFEe-CzNrO9SlQWA" name="" type="_Di3J4YqFEe-CzNrO9SlQWA" association="_DzJBkIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJBk4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzJBlIqFEe-CzNrO9SlQWA _Dx8uyYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJBlIqFEe-CzNrO9SlQWA" name="" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzJBk4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJBloqFEe-CzNrO9SlQWA" name="" memberEnd="_DzJBl4qFEe-CzNrO9SlQWA _Dx8uy4qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJBl4qFEe-CzNrO9SlQWA" name="" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzJBloqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJBmYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzJBmoqFEe-CzNrO9SlQWA _Dx9V0YqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJBmoqFEe-CzNrO9SlQWA" name="" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzJBmYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJooIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzJooYqFEe-CzNrO9SlQWA _Dx985YqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJooYqFEe-CzNrO9SlQWA" name="" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzJooIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJoo4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzJopIqFEe-CzNrO9SlQWA _Dx-j8YqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJopIqFEe-CzNrO9SlQWA" name="" type="_Di93kIqFEe-CzNrO9SlQWA" association="_DzJoo4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJopoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzJop4qFEe-CzNrO9SlQWA _Dx-j94qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJop4qFEe-CzNrO9SlQWA" name="" type="_DjHBgIqFEe-CzNrO9SlQWA" association="_DzJopoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJoqYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzJoqoqFEe-CzNrO9SlQWA _Dx-j-YqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJoqoqFEe-CzNrO9SlQWA" name="" type="_DjHBgIqFEe-CzNrO9SlQWA" association="_DzJoqYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzJorIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzJorYqFEe-CzNrO9SlQWA _Dx_LDYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzJorYqFEe-CzNrO9SlQWA" name="" type="_DjOWQIqFEe-CzNrO9SlQWA" association="_DzJorIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzKPsYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzKPsoqFEe-CzNrO9SlQWA _Dx_yEYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzKPsoqFEe-CzNrO9SlQWA" name="" type="_DjOWQIqFEe-CzNrO9SlQWA" association="_DzKPsYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzKPtIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzKPtYqFEe-CzNrO9SlQWA _Dx_yFYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzKPtYqFEe-CzNrO9SlQWA" name="" type="_DjO9UIqFEe-CzNrO9SlQWA" association="_DzKPtIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzKPt4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzKPuIqFEe-CzNrO9SlQWA _DyAZIIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzKPuIqFEe-CzNrO9SlQWA" name="" type="_DjRZlYqFEe-CzNrO9SlQWA" association="_DzKPt4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzKPuoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzKPu4qFEe-CzNrO9SlQWA _DyBAOIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzKPu4qFEe-CzNrO9SlQWA" name="" type="_DjW5IIqFEe-CzNrO9SlQWA" association="_DzKPuoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzK2wYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzK2woqFEe-CzNrO9SlQWA _DyBAOoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzK2woqFEe-CzNrO9SlQWA" name="" type="_DjW5IIqFEe-CzNrO9SlQWA" association="_DzK2wYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzK2xIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzK2xYqFEe-CzNrO9SlQWA _DyCOVIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzK2xYqFEe-CzNrO9SlQWA" name="" type="_DjmwwIqFEe-CzNrO9SlQWA" association="_DzK2xIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzK2x4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzK2yIqFEe-CzNrO9SlQWA _DyCOVoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzK2yIqFEe-CzNrO9SlQWA" name="" type="_DjmwwIqFEe-CzNrO9SlQWA" association="_DzK2x4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzK2yoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzK2y4qFEe-CzNrO9SlQWA _DyCOWIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzK2y4qFEe-CzNrO9SlQWA" name="" type="_DjmwwIqFEe-CzNrO9SlQWA" association="_DzK2yoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzLd0IqFEe-CzNrO9SlQWA" name="" memberEnd="_DzLd0YqFEe-CzNrO9SlQWA _DyC1YYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzLd0YqFEe-CzNrO9SlQWA" name="" type="_DjmwwIqFEe-CzNrO9SlQWA" association="_DzLd0IqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzLd04qFEe-CzNrO9SlQWA" name="" memberEnd="_DzLd1IqFEe-CzNrO9SlQWA _DyC1ZIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzLd1IqFEe-CzNrO9SlQWA" name="" type="_DjmwwIqFEe-CzNrO9SlQWA" association="_DzLd04qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzLd1oqFEe-CzNrO9SlQWA" name="" memberEnd="_DzLd14qFEe-CzNrO9SlQWA _DyC1Z4qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzLd14qFEe-CzNrO9SlQWA" name="" type="_DjmwwIqFEe-CzNrO9SlQWA" association="_DzLd1oqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzLd2YqFEe-CzNrO9SlQWA" name="" memberEnd="_DzLd2oqFEe-CzNrO9SlQWA _DyC1aoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzLd2oqFEe-CzNrO9SlQWA" name="" type="_DjmwwIqFEe-CzNrO9SlQWA" association="_DzLd2YqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzLd3IqFEe-CzNrO9SlQWA" name="" memberEnd="_DzLd3YqFEe-CzNrO9SlQWA _DyC1bIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzLd3YqFEe-CzNrO9SlQWA" name="" type="_Djp0EIqFEe-CzNrO9SlQWA" association="_DzLd3IqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzME4YqFEe-CzNrO9SlQWA" name="" memberEnd="_DzME4oqFEe-CzNrO9SlQWA _DyHG24qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzME4oqFEe-CzNrO9SlQWA" name="" type="_Dj1aQIqFEe-CzNrO9SlQWA" association="_DzME4YqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzME5IqFEe-CzNrO9SlQWA" name="" memberEnd="_DzME5YqFEe-CzNrO9SlQWA _DyHt4oqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzME5YqFEe-CzNrO9SlQWA" name="" type="_Dj1aQIqFEe-CzNrO9SlQWA" association="_DzME5IqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzME54qFEe-CzNrO9SlQWA" name="" memberEnd="_DzME6IqFEe-CzNrO9SlQWA _DyHt5IqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzME6IqFEe-CzNrO9SlQWA" name="" type="_Dj5rsIqFEe-CzNrO9SlQWA" association="_DzME54qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzME6oqFEe-CzNrO9SlQWA" name="" memberEnd="_DzME64qFEe-CzNrO9SlQWA _DyIU8YqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzME64qFEe-CzNrO9SlQWA" name="" type="_Dj5rsIqFEe-CzNrO9SlQWA" association="_DzME6oqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzMr8YqFEe-CzNrO9SlQWA" name="" memberEnd="_DzMr8oqFEe-CzNrO9SlQWA _DyIU84qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzMr8oqFEe-CzNrO9SlQWA" name="" type="_Dj5rsIqFEe-CzNrO9SlQWA" association="_DzMr8YqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzMr9IqFEe-CzNrO9SlQWA" name="" memberEnd="_DzMr9YqFEe-CzNrO9SlQWA _DyIU9YqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzMr9YqFEe-CzNrO9SlQWA" name="" type="_Dj5rsIqFEe-CzNrO9SlQWA" association="_DzMr9IqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzMr94qFEe-CzNrO9SlQWA" name="" memberEnd="_DzMr-IqFEe-CzNrO9SlQWA _DyIU94qFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzMr-IqFEe-CzNrO9SlQWA" name="" type="_Dj5rsIqFEe-CzNrO9SlQWA" association="_DzMr94qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzMr-oqFEe-CzNrO9SlQWA" name="" memberEnd="_DzMr-4qFEe-CzNrO9SlQWA _DyKxNoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzMr-4qFEe-CzNrO9SlQWA" name="" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzMr-oqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzMr_YqFEe-CzNrO9SlQWA" name="" memberEnd="_DzMr_oqFEe-CzNrO9SlQWA _DyKxOYqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzMr_oqFEe-CzNrO9SlQWA" name="" type="_DkAZYIqFEe-CzNrO9SlQWA" association="_DzMr_YqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzNTAYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzNTAoqFEe-CzNrO9SlQWA _DyL_VIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzNTAoqFEe-CzNrO9SlQWA" name="" type="_DkMmoIqFEe-CzNrO9SlQWA" association="_DzNTAYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzNTBIqFEe-CzNrO9SlQWA" name="" memberEnd="_DzNTBYqFEe-CzNrO9SlQWA _DyL_WIqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzNTBYqFEe-CzNrO9SlQWA" name="" type="_DkMmoIqFEe-CzNrO9SlQWA" association="_DzNTBIqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzNTB4qFEe-CzNrO9SlQWA" name="" memberEnd="_DzNTCIqFEe-CzNrO9SlQWA _DyMmYoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzNTCIqFEe-CzNrO9SlQWA" name="" type="_DkPp8IqFEe-CzNrO9SlQWA" association="_DzNTB4qFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzNTCoqFEe-CzNrO9SlQWA" name="" memberEnd="_DzNTC4qFEe-CzNrO9SlQWA _DyN0ioqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzNTC4qFEe-CzNrO9SlQWA" name="" type="_DkRfIIqFEe-CzNrO9SlQWA" association="_DzNTCoqFEe-CzNrO9SlQWA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_DzNTDYqFEe-CzNrO9SlQWA" name="" memberEnd="_DzNTDoqFEe-CzNrO9SlQWA _DyObkoqFEe-CzNrO9SlQWA">
              <ownedEnd xmi:id="_DzNTDoqFEe-CzNrO9SlQWA" name="" type="_DkRfIIqFEe-CzNrO9SlQWA" association="_DzNTDYqFEe-CzNrO9SlQWA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_DeoKJYqFEe-CzNrO9SlQWA" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_DwfWM4qFEe-CzNrO9SlQWA" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DwfWNYqFEe-CzNrO9SlQWA" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DwfWN4qFEe-CzNrO9SlQWA" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DxliYYqFEe-CzNrO9SlQWA" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_DfMx4IqFEe-CzNrO9SlQWA" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_Dwq8ZoqFEe-CzNrO9SlQWA" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DdbQQ4qFEe-CzNrO9SlQWA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_DdbQRIqFEe-CzNrO9SlQWA" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_Dd8NoIqFEe-CzNrO9SlQWA" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_DwWzUIqFEe-CzNrO9SlQWA" name="Pattern"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Dw_shIqFEe-CzNrO9SlQWA" name="Matcher"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_DgfLUIqFEe-CzNrO9SlQWA" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_Dw9QRYqFEe-CzNrO9SlQWA" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_DjKr5IqFEe-CzNrO9SlQWA" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwR60IqFEe-CzNrO9SlQWA" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwSh4IqFEe-CzNrO9SlQWA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwSh4oqFEe-CzNrO9SlQWA" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DwSh5IqFEe-CzNrO9SlQWA" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DwTI8YqFEe-CzNrO9SlQWA" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DwZPloqFEe-CzNrO9SlQWA" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DwogIIqFEe-CzNrO9SlQWA" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwrjcYqFEe-CzNrO9SlQWA" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Dw8pMIqFEe-CzNrO9SlQWA" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Dw9QQYqFEe-CzNrO9SlQWA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Dw9QQ4qFEe-CzNrO9SlQWA" name="Vector"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Dw_sgIqFEe-CzNrO9SlQWA" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Dw_sgoqFEe-CzNrO9SlQWA" name="TreeMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DxD98IqFEe-CzNrO9SlQWA" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_DxD98oqFEe-CzNrO9SlQWA" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DeVPMIqFEe-CzNrO9SlQWA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_DwadtYqFEe-CzNrO9SlQWA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Dwadt4qFEe-CzNrO9SlQWA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwjnooqFEe-CzNrO9SlQWA" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwkOsYqFEe-CzNrO9SlQWA" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DeVPMYqFEe-CzNrO9SlQWA" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_DeVPMoqFEe-CzNrO9SlQWA" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_DwbEwYqFEe-CzNrO9SlQWA" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_DwbEw4qFEe-CzNrO9SlQWA" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_DwbExYqFEe-CzNrO9SlQWA" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DetCoIqFEe-CzNrO9SlQWA" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_DwiZhoqFEe-CzNrO9SlQWA" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_DxNu8YqFEe-CzNrO9SlQWA" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_DxNu8oqFEe-CzNrO9SlQWA" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DxW444qFEe-CzNrO9SlQWA" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_DxdmkIqFEe-CzNrO9SlQWA" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DeUoIIqFEe-CzNrO9SlQWA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_DeUoIYqFEe-CzNrO9SlQWA" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_DeUoIoqFEe-CzNrO9SlQWA" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_Dwads4qFEe-CzNrO9SlQWA" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DeVPM4qFEe-CzNrO9SlQWA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_DeVPNIqFEe-CzNrO9SlQWA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_DeuQwIqFEe-CzNrO9SlQWA" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_DwjAl4qFEe-CzNrO9SlQWA" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_DwjnoIqFEe-CzNrO9SlQWA" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwbEx4qFEe-CzNrO9SlQWA" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwjAkYqFEe-CzNrO9SlQWA" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwjAk4qFEe-CzNrO9SlQWA" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_DwjAlYqFEe-CzNrO9SlQWA" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DeoKIIqFEe-CzNrO9SlQWA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_DeoKIYqFEe-CzNrO9SlQWA" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_DeoKIoqFEe-CzNrO9SlQWA" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_DeoKI4qFEe-CzNrO9SlQWA" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_DeoKJIqFEe-CzNrO9SlQWA" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_DweIFoqFEe-CzNrO9SlQWA" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_DwfWMYqFEe-CzNrO9SlQWA" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DweIEIqFEe-CzNrO9SlQWA" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DweIEoqFEe-CzNrO9SlQWA" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_DweIFIqFEe-CzNrO9SlQWA" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Dfo2wIqFEe-CzNrO9SlQWA" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_Dfo2wYqFEe-CzNrO9SlQWA" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_Dfo2woqFEe-CzNrO9SlQWA" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_Dwwb84qFEe-CzNrO9SlQWA" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Dwwb9YqFEe-CzNrO9SlQWA" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_DwxDAYqFEe-CzNrO9SlQWA" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Dep_UIqFEe-CzNrO9SlQWA" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_Dwf9SIqFEe-CzNrO9SlQWA" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DwgkVIqFEe-CzNrO9SlQWA" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DwgkW4qFEe-CzNrO9SlQWA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DwhLZoqFEe-CzNrO9SlQWA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DwhycoqFEe-CzNrO9SlQWA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DwhyeYqFEe-CzNrO9SlQWA" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DxBhuoqFEe-CzNrO9SlQWA" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DxCIxoqFEe-CzNrO9SlQWA" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DxCv0YqFEe-CzNrO9SlQWA" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_DxCv2IqFEe-CzNrO9SlQWA" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DgKbMIqFEe-CzNrO9SlQWA" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw3Jp4qFEe-CzNrO9SlQWA" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw3JqYqFEe-CzNrO9SlQWA" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw3Jq4qFEe-CzNrO9SlQWA" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw3JrYqFEe-CzNrO9SlQWA" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw3wsYqFEe-CzNrO9SlQWA" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_DgTlIIqFEe-CzNrO9SlQWA" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw4-0IqFEe-CzNrO9SlQWA" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw5l6YqFEe-CzNrO9SlQWA" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw6M8oqFEe-CzNrO9SlQWA" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw6M-YqFEe-CzNrO9SlQWA" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw60AYqFEe-CzNrO9SlQWA" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Dw60CIqFEe-CzNrO9SlQWA" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_DJhc04qFEe-CzNrO9SlQWA">
      <eAnnotations xmi:id="_DJiD4IqFEe-CzNrO9SlQWA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_DJiD4YqFEe-CzNrO9SlQWA" base_Package="_DHZ88IqFEe-CzNrO9SlQWA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_Dhoa0IqFEe-CzNrO9SlQWA" genericsValue="T,E" base_Element="_DhnzwIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dhq3EIqFEe-CzNrO9SlQWA" base_Element="_DhqQBYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dhq3EYqFEe-CzNrO9SlQWA" base_Element="_DhqQBYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dhq3EoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DhreIIqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_Dhq3E4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DhreIoqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DhreIYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DhsFMIqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DhreI4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DhsFMoqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DhsFMYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DhssQYqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DhssQIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dh6Hp4qFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_Dh6HpYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dh9K84qFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_Dh9K8oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiDRkYqFEe-CzNrO9SlQWA" base_Element="_DiDRkIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DiD4oIqFEe-CzNrO9SlQWA" base_Element="_DiDRkIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DiD4oYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiD4o4qFEe-CzNrO9SlQWA" base_Element="_DiD4ooqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DiD4pIqFEe-CzNrO9SlQWA" base_Element="_DiD4ooqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DiD4pYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiEfsIqFEe-CzNrO9SlQWA" base_Element="_DiD4poqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DiEfsYqFEe-CzNrO9SlQWA" base_Element="_DiD4poqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DiEfsoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DiGU4YqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_DiGU4IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiIKF4qFEe-CzNrO9SlQWA" base_Element="_DiIKFYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DiIKGIqFEe-CzNrO9SlQWA" base_Element="_DiIKFYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DiIKGYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiXaoYqFEe-CzNrO9SlQWA" base_Element="_DiXaoIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiYowoqFEe-CzNrO9SlQWA" base_Element="_DiYowIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DiYow4qFEe-CzNrO9SlQWA" base_Element="_DiYowIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DiYoxIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiYox4qFEe-CzNrO9SlQWA" base_Element="_DiYoxYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DiZP0IqFEe-CzNrO9SlQWA" base_Element="_DiYoxYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DiZP0YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DiZP04qFEe-CzNrO9SlQWA" base_Element="_DiZP0oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DiZP1IqFEe-CzNrO9SlQWA" base_Element="_DiZP0oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DiZP1YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DifWcIqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_DievaYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DifWcoqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DifWcYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dif9gYqFEe-CzNrO9SlQWA" genericsValue="Integer" base_Element="_Dif9gIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DigkkoqFEe-CzNrO9SlQWA" base_Element="_DigkkIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Digkk4qFEe-CzNrO9SlQWA" base_Element="_DigkkIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DigklIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dik2AYqFEe-CzNrO9SlQWA" base_Element="_Dik2AIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DildEIqFEe-CzNrO9SlQWA" base_Element="_Dik2AIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DildEYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DipHcoqFEe-CzNrO9SlQWA" dimensions="2" base_Element="_DiogZIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DixDQIqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_DiwcMIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DixqUIqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_DixDQYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Diy4coqFEe-CzNrO9SlQWA" base_Element="_Diy4cIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Diy4c4qFEe-CzNrO9SlQWA" base_Element="_Diy4cIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Diy4dIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DizfgoqFEe-CzNrO9SlQWA" base_Element="_DizfgIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dizfg4qFEe-CzNrO9SlQWA" base_Element="_DizfgIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DizfhIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DizfhoqFEe-CzNrO9SlQWA" base_Element="_DizfhYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dizfh4qFEe-CzNrO9SlQWA" base_Element="_DizfhYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DizfiIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Di17yoqFEe-CzNrO9SlQWA" base_Element="_Di17yYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Di2i0IqFEe-CzNrO9SlQWA" base_Element="_Di17yYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Di2i0YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Di3J4IqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_Di2i0oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Di3w8YqFEe-CzNrO9SlQWA" genericsValue="String, Integer" base_Element="_Di3w8IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Di4YAYqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_Di4YAIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_Di4YBYqFEe-CzNrO9SlQWA" base_Element="_Di4YAoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Di7bUYqFEe-CzNrO9SlQWA" base_Element="_Di7bUIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Di7bUoqFEe-CzNrO9SlQWA" base_Element="_Di7bUIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Di7bU4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Di9QgIqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_Di8pcIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjAT14qFEe-CzNrO9SlQWA" base_Element="_DjAT1YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjAT2IqFEe-CzNrO9SlQWA" base_Element="_DjAT1YqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjA64IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjA65YqFEe-CzNrO9SlQWA" base_Element="_DjA644qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjA65oqFEe-CzNrO9SlQWA" base_Element="_DjA644qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjA654qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjA66oqFEe-CzNrO9SlQWA" base_Element="_DjA66IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjA664qFEe-CzNrO9SlQWA" base_Element="_DjA66IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjA67IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjBh84qFEe-CzNrO9SlQWA" base_Element="_DjBh8oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjBh9IqFEe-CzNrO9SlQWA" base_Element="_DjBh8oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjBh9YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjBh94qFEe-CzNrO9SlQWA" base_Element="_DjBh9oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjBh-IqFEe-CzNrO9SlQWA" base_Element="_DjBh9oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjBh-YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjBh_IqFEe-CzNrO9SlQWA" base_Element="_DjBh-oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjCJAIqFEe-CzNrO9SlQWA" base_Element="_DjBh-oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjCJAYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjCJBIqFEe-CzNrO9SlQWA" base_Element="_DjCJAoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjCJBYqFEe-CzNrO9SlQWA" base_Element="_DjCJAoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjCJBoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjCJCoqFEe-CzNrO9SlQWA" base_Element="_DjCJCIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjCJC4qFEe-CzNrO9SlQWA" base_Element="_DjCJCIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjCJDIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DjCwEIqFEe-CzNrO9SlQWA" genericsValue="String, Integer" base_Element="_DjCJDYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjHokIqFEe-CzNrO9SlQWA" base_Element="_DjHBgYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjHokYqFEe-CzNrO9SlQWA" base_Element="_DjHBgYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjHokoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjHolIqFEe-CzNrO9SlQWA" base_Element="_DjHok4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjHolYqFEe-CzNrO9SlQWA" base_Element="_DjHok4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjHoloqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjHomIqFEe-CzNrO9SlQWA" base_Element="_DjHol4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjIPoIqFEe-CzNrO9SlQWA" base_Element="_DjHol4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjIPoYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DjIPpYqFEe-CzNrO9SlQWA" dimensions="1" base_Element="_DjIPooqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjIPpoqFEe-CzNrO9SlQWA" base_Element="_DjIPooqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjIPp4qFEe-CzNrO9SlQWA" base_Element="_DjIPooqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjIPqIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DjIPrIqFEe-CzNrO9SlQWA" dimensions="2" base_Element="_DjIPqYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjIPrYqFEe-CzNrO9SlQWA" base_Element="_DjIPqYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjI2sIqFEe-CzNrO9SlQWA" base_Element="_DjIPqYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjI2sYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DjJdwYqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_DjJdwIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DjKE0YqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_DjKE0IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DjKr5YqFEe-CzNrO9SlQWA" base_Element="_DjKr5IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DjLS8IqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DjKr5oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjO9UoqFEe-CzNrO9SlQWA" base_Element="_DjO9UYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjO9U4qFEe-CzNrO9SlQWA" base_Element="_DjO9UYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjO9VIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DjQygIqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DjQLcYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjSApIqFEe-CzNrO9SlQWA" base_Element="_DjSAo4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjSApYqFEe-CzNrO9SlQWA" base_Element="_DjSAo4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjSApoqFEe-CzNrO9SlQWA" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjSAqIqFEe-CzNrO9SlQWA" base_Element="_DjSAp4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjSnsIqFEe-CzNrO9SlQWA" base_Element="_DjSAp4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjSnsYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjSns4qFEe-CzNrO9SlQWA" base_Element="_DjSnsoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjSntIqFEe-CzNrO9SlQWA" base_Element="_DjSnsoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjSntYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjSnt4qFEe-CzNrO9SlQWA" base_Element="_DjSntoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjSnuIqFEe-CzNrO9SlQWA" base_Element="_DjSntoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjSnuYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjSnu4qFEe-CzNrO9SlQWA" base_Element="_DjSnuoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjSnvIqFEe-CzNrO9SlQWA" base_Element="_DjSnuoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjSnvYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjSnv4qFEe-CzNrO9SlQWA" base_Element="_DjSnvoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjTOwIqFEe-CzNrO9SlQWA" base_Element="_DjSnvoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjTOwYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjTOw4qFEe-CzNrO9SlQWA" base_Element="_DjTOwoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjTOxIqFEe-CzNrO9SlQWA" base_Element="_DjTOwoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjTOxYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjTOx4qFEe-CzNrO9SlQWA" base_Element="_DjTOxoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjTOyIqFEe-CzNrO9SlQWA" base_Element="_DjTOxoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjTOyYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjTOy4qFEe-CzNrO9SlQWA" base_Element="_DjTOyoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjTOzIqFEe-CzNrO9SlQWA" base_Element="_DjTOyoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjTOzYqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjTOz4qFEe-CzNrO9SlQWA" base_Element="_DjTOzoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjT10IqFEe-CzNrO9SlQWA" base_Element="_DjTOzoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjT10YqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjT104qFEe-CzNrO9SlQWA" base_Element="_DjT10oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjT11IqFEe-CzNrO9SlQWA" base_Element="_DjT10oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjT11YqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjT114qFEe-CzNrO9SlQWA" base_Element="_DjT11oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjT12IqFEe-CzNrO9SlQWA" base_Element="_DjT11oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjT12YqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjT124qFEe-CzNrO9SlQWA" base_Element="_DjT12oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjT13IqFEe-CzNrO9SlQWA" base_Element="_DjT12oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjT13YqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjUc4YqFEe-CzNrO9SlQWA" base_Element="_DjUc4IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjUc4oqFEe-CzNrO9SlQWA" base_Element="_DjUc4IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjUc44qFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjUc5YqFEe-CzNrO9SlQWA" base_Element="_DjUc5IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjUc5oqFEe-CzNrO9SlQWA" base_Element="_DjUc5IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjUc54qFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjUc6YqFEe-CzNrO9SlQWA" base_Element="_DjUc6IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DjVD8IqFEe-CzNrO9SlQWA" base_Element="_DjUc6IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DjVD8YqFEe-CzNrO9SlQWA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DjVrAYqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_DjVrAIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DjWSEYqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DjWSEIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DjfcAYqFEe-CzNrO9SlQWA" genericsValue="T extends SchedulableObject" base_Element="_DjfcAIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DjgqIIqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DjgDFIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjhRMYqFEe-CzNrO9SlQWA" base_Element="_DjhRMIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DjjGYYqFEe-CzNrO9SlQWA" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_DjjGYIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Djk7kYqFEe-CzNrO9SlQWA" base_Element="_Djk7kIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DjlipIqFEe-CzNrO9SlQWA" base_Element="_Djlio4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Djn-4IqFEe-CzNrO9SlQWA" base_Element="_DjnX0IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Djn-4YqFEe-CzNrO9SlQWA" base_Element="_DjnX0IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Djn-4oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Djn-5IqFEe-CzNrO9SlQWA" base_Element="_Djn-44qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Djn-5YqFEe-CzNrO9SlQWA" base_Element="_Djn-44qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Djn-5oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Djn-6YqFEe-CzNrO9SlQWA" base_Element="_Djn-54qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Djn-6oqFEe-CzNrO9SlQWA" base_Element="_Djn-54qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Djn-64qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DjsQVIqFEe-CzNrO9SlQWA" base_Element="_DjsQUYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_DjsQWIqFEe-CzNrO9SlQWA" dimensions="2" base_Element="_DjsQVYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_DjvTo4qFEe-CzNrO9SlQWA" dimensions="1" base_Element="_DjvToYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_Djv6s4qFEe-CzNrO9SlQWA" base_Element="_Djv6sYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dj0zMoqFEe-CzNrO9SlQWA" genericsValue="InstructionParameters" base_Element="_Dj0zMIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dj2BUIqFEe-CzNrO9SlQWA" genericsValue="InstructionParameters" base_Element="_Dj1aRYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj650IqFEe-CzNrO9SlQWA" base_Element="_Dj5rsYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj650YqFEe-CzNrO9SlQWA" base_Element="_Dj5rsYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj650oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj651IqFEe-CzNrO9SlQWA" base_Element="_Dj6504qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj651YqFEe-CzNrO9SlQWA" base_Element="_Dj6504qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj651oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj7g4IqFEe-CzNrO9SlQWA" base_Element="_Dj6514qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj7g4YqFEe-CzNrO9SlQWA" base_Element="_Dj6514qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj7g4oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj7g5IqFEe-CzNrO9SlQWA" base_Element="_Dj7g44qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj7g5YqFEe-CzNrO9SlQWA" base_Element="_Dj7g44qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj7g5oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj7g6IqFEe-CzNrO9SlQWA" base_Element="_Dj7g54qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj7g6YqFEe-CzNrO9SlQWA" base_Element="_Dj7g54qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj8H8IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj8H8oqFEe-CzNrO9SlQWA" base_Element="_Dj8H8YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj8H84qFEe-CzNrO9SlQWA" base_Element="_Dj8H8YqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj8H9IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj8H94qFEe-CzNrO9SlQWA" base_Element="_Dj8H9YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj8H-IqFEe-CzNrO9SlQWA" base_Element="_Dj8H9YqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj8H-YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj8vAIqFEe-CzNrO9SlQWA" base_Element="_Dj8H-oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj8vAYqFEe-CzNrO9SlQWA" base_Element="_Dj8H-oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj8vAoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj8vBYqFEe-CzNrO9SlQWA" base_Element="_Dj8vA4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj8vBoqFEe-CzNrO9SlQWA" base_Element="_Dj8vA4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj8vB4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj8vCYqFEe-CzNrO9SlQWA" base_Element="_Dj8vCIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj8vCoqFEe-CzNrO9SlQWA" base_Element="_Dj8vCIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj8vC4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj9WEYqFEe-CzNrO9SlQWA" base_Element="_Dj9WEIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj9WEoqFEe-CzNrO9SlQWA" base_Element="_Dj9WEIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj9WE4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj9WFoqFEe-CzNrO9SlQWA" base_Element="_Dj9WFIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj9WF4qFEe-CzNrO9SlQWA" base_Element="_Dj9WFIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj9WGIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj9WG4qFEe-CzNrO9SlQWA" base_Element="_Dj9WGYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj9WHIqFEe-CzNrO9SlQWA" base_Element="_Dj9WGYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj9WHYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj99IIqFEe-CzNrO9SlQWA" base_Element="_Dj9WHoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj99IYqFEe-CzNrO9SlQWA" base_Element="_Dj9WHoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj99IoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj99JYqFEe-CzNrO9SlQWA" base_Element="_Dj99I4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj99JoqFEe-CzNrO9SlQWA" base_Element="_Dj99I4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj99J4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dj99KYqFEe-CzNrO9SlQWA" base_Element="_Dj99KIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dj99KoqFEe-CzNrO9SlQWA" base_Element="_Dj99KIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dj99K4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_DkF494qFEe-CzNrO9SlQWA" base_Element="_DkF49IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_DkGgBYqFEe-CzNrO9SlQWA" base_Element="_DkGgAoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_DkGgDYqFEe-CzNrO9SlQWA" dimensions="1" base_Element="_DkGgCYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_DkHHGYqFEe-CzNrO9SlQWA" base_Element="_DkHHFYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DkN0xIqFEe-CzNrO9SlQWA" base_Element="_DkN0w4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DkN0xYqFEe-CzNrO9SlQWA" base_Element="_DkN0w4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DkN0xoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DkOb0IqFEe-CzNrO9SlQWA" base_Element="_DkN0x4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DkOb0YqFEe-CzNrO9SlQWA" base_Element="_DkN0x4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DkOb0oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DkOb1YqFEe-CzNrO9SlQWA" base_Element="_DkOb04qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DkOb1oqFEe-CzNrO9SlQWA" base_Element="_DkOb04qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DkOb14qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DkTUVYqFEe-CzNrO9SlQWA" genericsValue="Integer" base_Element="_DkTUVIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwR60YqFEe-CzNrO9SlQWA" base_Element="_DwR60IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwSh4YqFEe-CzNrO9SlQWA" base_Element="_DwSh4IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwSh44qFEe-CzNrO9SlQWA" base_Element="_DwSh4oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwTI8IqFEe-CzNrO9SlQWA" base_Element="_DwSh5IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwTI8oqFEe-CzNrO9SlQWA" base_Element="_DwTI8YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwTwCYqFEe-CzNrO9SlQWA" base_Element="_DwTwBoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwTwCoqFEe-CzNrO9SlQWA" base_Element="_DwTwBoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwTwC4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DwUXF4qFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DwUXFoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DwUXGoqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DwUXGYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DwVlMYqFEe-CzNrO9SlQWA" genericsValue="String, Activation" base_Element="_DwVlMIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwWzUYqFEe-CzNrO9SlQWA" base_Element="_DwWzUIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwXab4qFEe-CzNrO9SlQWA" base_Element="_DwXabIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwXacIqFEe-CzNrO9SlQWA" base_Element="_DwXabIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwXacYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwZPl4qFEe-CzNrO9SlQWA" base_Element="_DwZPloqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwZ2o4qFEe-CzNrO9SlQWA" base_Element="_DwZ2oIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwadsIqFEe-CzNrO9SlQWA" base_Element="_DwZ2oIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwadsYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwadtIqFEe-CzNrO9SlQWA" base_Element="_Dwads4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwadtoqFEe-CzNrO9SlQWA" base_Element="_DwadtYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwbEwIqFEe-CzNrO9SlQWA" base_Element="_Dwadt4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwbEwoqFEe-CzNrO9SlQWA" base_Element="_DwbEwYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwbExIqFEe-CzNrO9SlQWA" base_Element="_DwbEw4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwbExoqFEe-CzNrO9SlQWA" base_Element="_DwbExYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dwbr0IqFEe-CzNrO9SlQWA" base_Element="_DwbEx4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwcS4IqFEe-CzNrO9SlQWA" base_Element="_Dwbr1YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwcS4YqFEe-CzNrO9SlQWA" base_Element="_Dwbr1YqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwcS4oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Dwc58YqFEe-CzNrO9SlQWA" genericsValue="String, Flow" base_Element="_Dwc58IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dwc584qFEe-CzNrO9SlQWA" genericsValue="Node, Activation" base_Element="_Dwc58oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DweIEYqFEe-CzNrO9SlQWA" base_Element="_DweIEIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DweIE4qFEe-CzNrO9SlQWA" base_Element="_DweIEoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DweIFYqFEe-CzNrO9SlQWA" base_Element="_DweIFIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwfWMIqFEe-CzNrO9SlQWA" base_Element="_DweIFoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwfWMoqFEe-CzNrO9SlQWA" base_Element="_DwfWMYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwfWNIqFEe-CzNrO9SlQWA" base_Element="_DwfWM4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwfWNoqFEe-CzNrO9SlQWA" base_Element="_DwfWNYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dwf9QIqFEe-CzNrO9SlQWA" base_Element="_DwfWN4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dwf9SYqFEe-CzNrO9SlQWA" base_Element="_Dwf9SIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwgkUYqFEe-CzNrO9SlQWA" base_Element="_Dwf9SoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwgkUoqFEe-CzNrO9SlQWA" base_Element="_Dwf9SoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwgkU4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwgkVYqFEe-CzNrO9SlQWA" base_Element="_DwgkVIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwgkWIqFEe-CzNrO9SlQWA" base_Element="_DwgkVoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwgkWYqFEe-CzNrO9SlQWA" base_Element="_DwgkVoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwgkWoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwhLYIqFEe-CzNrO9SlQWA" base_Element="_DwgkW4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwhLY4qFEe-CzNrO9SlQWA" base_Element="_DwhLYYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwhLZIqFEe-CzNrO9SlQWA" base_Element="_DwhLYYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwhLZYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwhLZ4qFEe-CzNrO9SlQWA" base_Element="_DwhLZoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwhLaoqFEe-CzNrO9SlQWA" base_Element="_DwhLaIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwhycIqFEe-CzNrO9SlQWA" base_Element="_DwhLaIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwhycYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Dwhyc4qFEe-CzNrO9SlQWA" base_Element="_DwhycoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwhydoqFEe-CzNrO9SlQWA" base_Element="_DwhydIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dwhyd4qFEe-CzNrO9SlQWA" base_Element="_DwhydIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwhyeIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwiZgIqFEe-CzNrO9SlQWA" base_Element="_DwhyeYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwiZg4qFEe-CzNrO9SlQWA" base_Element="_DwiZgYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwiZhIqFEe-CzNrO9SlQWA" base_Element="_DwiZgYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwiZhYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwjAkIqFEe-CzNrO9SlQWA" base_Element="_DwiZhoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwjAkoqFEe-CzNrO9SlQWA" base_Element="_DwjAkYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwjAlIqFEe-CzNrO9SlQWA" base_Element="_DwjAk4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwjAloqFEe-CzNrO9SlQWA" base_Element="_DwjAlYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwjAmIqFEe-CzNrO9SlQWA" base_Element="_DwjAl4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwjnoYqFEe-CzNrO9SlQWA" base_Element="_DwjnoIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwkOsIqFEe-CzNrO9SlQWA" base_Element="_DwjnooqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwkOsoqFEe-CzNrO9SlQWA" base_Element="_DwkOsYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dwk1wYqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_Dwk1wIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwmD4IqFEe-CzNrO9SlQWA" base_Element="_Dwk1woqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwnSA4qFEe-CzNrO9SlQWA" base_Element="_DwnSAIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwnSBIqFEe-CzNrO9SlQWA" base_Element="_DwnSAIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwnSBYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Dwn5EYqFEe-CzNrO9SlQWA" genericsValue="String, Node" base_Element="_Dwn5EIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwogIYqFEe-CzNrO9SlQWA" base_Element="_DwogIIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DwpuSYqFEe-CzNrO9SlQWA" base_Element="_DwpuRoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DwqVUIqFEe-CzNrO9SlQWA" base_Element="_DwpuRoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DwqVUYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DwqVW4qFEe-CzNrO9SlQWA" genericsValue="ScheduleTime" base_Element="_DwqVVoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dwq8YoqFEe-CzNrO9SlQWA" base_Element="_DwqVaoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dwq8Y4qFEe-CzNrO9SlQWA" base_Element="_DwqVaoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dwq8ZIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DwrjcIqFEe-CzNrO9SlQWA" base_Element="_Dwq8ZoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwrjcoqFEe-CzNrO9SlQWA" base_Element="_DwrjcYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dwt_sYqFEe-CzNrO9SlQWA" genericsValue="String,InstructionTimeSlot" base_Element="_Dwt_sIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DwvN0IqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DwumyYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DwvN14qFEe-CzNrO9SlQWA" genericsValue="Double" base_Element="_DwvN1oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dwv04IqFEe-CzNrO9SlQWA" genericsValue="Double,ReliabilityRow" base_Element="_DwvN2IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dwwb9IqFEe-CzNrO9SlQWA" base_Element="_Dwwb84qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwxDAIqFEe-CzNrO9SlQWA" base_Element="_Dwwb9YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DwxDAoqFEe-CzNrO9SlQWA" base_Element="_DwxDAYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dw0GUIqFEe-CzNrO9SlQWA" genericsValue="Activation,Row&lt;Activation>" base_Element="_DwzfSoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dw0GVoqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_Dw0GUoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw0tYYqFEe-CzNrO9SlQWA" base_Element="_Dw0tYIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw1UcIqFEe-CzNrO9SlQWA" base_Element="_Dw0tZ4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw1UcoqFEe-CzNrO9SlQWA" base_Element="_Dw1UcYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw3JqIqFEe-CzNrO9SlQWA" base_Element="_Dw3Jp4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw3JqoqFEe-CzNrO9SlQWA" base_Element="_Dw3JqYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw3JrIqFEe-CzNrO9SlQWA" base_Element="_Dw3Jq4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw3wsIqFEe-CzNrO9SlQWA" base_Element="_Dw3JrYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw3wsoqFEe-CzNrO9SlQWA" base_Element="_Dw3wsYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw4-0YqFEe-CzNrO9SlQWA" base_Element="_Dw4-0IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dw5l4YqFEe-CzNrO9SlQWA" base_Element="_Dw4-0oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dw5l4oqFEe-CzNrO9SlQWA" base_Element="_Dw4-0oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dw5l44qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dw5l5oqFEe-CzNrO9SlQWA" base_Element="_Dw5l5IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dw5l54qFEe-CzNrO9SlQWA" base_Element="_Dw5l5IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dw5l6IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Dw5l6oqFEe-CzNrO9SlQWA" base_Element="_Dw5l6YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dw5l7YqFEe-CzNrO9SlQWA" base_Element="_Dw5l64qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dw6M8IqFEe-CzNrO9SlQWA" base_Element="_Dw5l64qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dw6M8YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Dw6M84qFEe-CzNrO9SlQWA" base_Element="_Dw6M8oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dw6M9oqFEe-CzNrO9SlQWA" base_Element="_Dw6M9IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dw6M94qFEe-CzNrO9SlQWA" base_Element="_Dw6M9IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dw6M-IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Dw6M-oqFEe-CzNrO9SlQWA" base_Element="_Dw6M-YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dw6M_YqFEe-CzNrO9SlQWA" base_Element="_Dw6M-4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dw6M_oqFEe-CzNrO9SlQWA" base_Element="_Dw6M-4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dw60AIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Dw60AoqFEe-CzNrO9SlQWA" base_Element="_Dw60AYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dw60BYqFEe-CzNrO9SlQWA" base_Element="_Dw60A4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dw60BoqFEe-CzNrO9SlQWA" base_Element="_Dw60A4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dw60B4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Dw60CYqFEe-CzNrO9SlQWA" base_Element="_Dw60CIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dw60DIqFEe-CzNrO9SlQWA" base_Element="_Dw60CoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_Dw60DYqFEe-CzNrO9SlQWA" base_Element="_Dw60CoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_Dw60DoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Dw9QQIqFEe-CzNrO9SlQWA" base_Element="_Dw8pMIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw9QQoqFEe-CzNrO9SlQWA" base_Element="_Dw9QQYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw9QRIqFEe-CzNrO9SlQWA" base_Element="_Dw9QQ4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw9QRoqFEe-CzNrO9SlQWA" base_Element="_Dw9QRYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dw-eYIqFEe-CzNrO9SlQWA" genericsValue="Integer" base_Element="_Dw93UIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw_sgYqFEe-CzNrO9SlQWA" base_Element="_Dw_sgIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_Dw_sg4qFEe-CzNrO9SlQWA" base_Element="_Dw_sgoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxATkIqFEe-CzNrO9SlQWA" base_Element="_Dw_shIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxBhsoqFEe-CzNrO9SlQWA" base_Element="_DxBhsIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxBhs4qFEe-CzNrO9SlQWA" base_Element="_DxBhsIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxBhtIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxBht4qFEe-CzNrO9SlQWA" base_Element="_DxBhtYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxBhuIqFEe-CzNrO9SlQWA" base_Element="_DxBhtYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxBhuYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DxCIwIqFEe-CzNrO9SlQWA" base_Element="_DxBhuoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxCIw4qFEe-CzNrO9SlQWA" base_Element="_DxCIwYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxCIxIqFEe-CzNrO9SlQWA" base_Element="_DxCIwYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxCIxYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DxCIx4qFEe-CzNrO9SlQWA" base_Element="_DxCIxoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxCIyoqFEe-CzNrO9SlQWA" base_Element="_DxCIyIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxCIy4qFEe-CzNrO9SlQWA" base_Element="_DxCIyIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxCv0IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DxCv0oqFEe-CzNrO9SlQWA" base_Element="_DxCv0YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxCv1YqFEe-CzNrO9SlQWA" base_Element="_DxCv04qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxCv1oqFEe-CzNrO9SlQWA" base_Element="_DxCv04qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxCv14qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DxCv2YqFEe-CzNrO9SlQWA" base_Element="_DxCv2IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxCv3IqFEe-CzNrO9SlQWA" base_Element="_DxCv2oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxDW4IqFEe-CzNrO9SlQWA" base_Element="_DxCv2oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxDW4YqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxDW5IqFEe-CzNrO9SlQWA" base_Element="_DxDW4oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxDW5YqFEe-CzNrO9SlQWA" base_Element="_DxDW4oqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxDW5oqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxDW6YqFEe-CzNrO9SlQWA" base_Element="_DxDW54qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxDW6oqFEe-CzNrO9SlQWA" base_Element="_DxDW54qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxDW64qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxDW7oqFEe-CzNrO9SlQWA" base_Element="_DxDW7IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxDW74qFEe-CzNrO9SlQWA" base_Element="_DxDW7IqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxDW8IqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DxD98YqFEe-CzNrO9SlQWA" base_Element="_DxD98IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxElAIqFEe-CzNrO9SlQWA" base_Element="_DxD98oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxNu8IqFEe-CzNrO9SlQWA" genericsValue="T, E" base_Element="_DxNH4IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxNu84qFEe-CzNrO9SlQWA" base_Element="_DxNu8oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxOWAIqFEe-CzNrO9SlQWA" genericsValue="Activation" base_Element="_DxNu9IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxOWA4qFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DxOWAoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxO9EoqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxO9EYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxO9FYqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxO9FIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxO9GIqFEe-CzNrO9SlQWA" genericsValue="ScheduleTime" base_Element="_DxO9F4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxQyQIqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxQLMIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxRZWIqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DxRZUoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxRZWYqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxRZU4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxSAY4qFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxSAYoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxSnc4qFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxSncYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxTOgIqFEe-CzNrO9SlQWA" genericsValue="Activation" base_Element="_DxSndIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxTOhIqFEe-CzNrO9SlQWA" base_Element="_DxTOgYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxTOhYqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_DxTOgoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxTOhoqFEe-CzNrO9SlQWA" base_Element="_DxTOgYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxTOh4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DxT1kIqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxTOiIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxT1koqFEe-CzNrO9SlQWA" base_Element="_DxT1kYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxT1l4qFEe-CzNrO9SlQWA" base_Element="_DxT1k4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxT1mIqFEe-CzNrO9SlQWA" base_Element="_DxT1k4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxT1mYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DxUcoYqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxUcoIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxUco4qFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DxUcooqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxVDsYqFEe-CzNrO9SlQWA" genericsValue="Flow" base_Element="_DxVDsIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxVqxYqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_DxVqxIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxVqyIqFEe-CzNrO9SlQWA" genericsValue="Integer" base_Element="_DxVqx4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxXf8IqFEe-CzNrO9SlQWA" base_Element="_DxW444qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxYHAYqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxYHAIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxYHBoqFEe-CzNrO9SlQWA" base_Element="_DxYHAoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxYHB4qFEe-CzNrO9SlQWA" base_Element="_DxYHAoqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxYuEIqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DxYuEoqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxYuEYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxYuF4qFEe-CzNrO9SlQWA" base_Element="_DxYuE4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxYuGIqFEe-CzNrO9SlQWA" base_Element="_DxYuE4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxYuGYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DxZVIYqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_DxZVIIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxZ8MIqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxZVIoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxZ8NYqFEe-CzNrO9SlQWA" base_Element="_DxZ8MYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxZ8NoqFEe-CzNrO9SlQWA" base_Element="_DxZ8MYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxZ8N4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DxajRIqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_DxajQoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_DxajSYqFEe-CzNrO9SlQWA" base_Element="_DxajRYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxbKUIqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_DxajRoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxbKUoqFEe-CzNrO9SlQWA" base_Element="_DxbKUYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxbxZIqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxbxY4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxcYcYqFEe-CzNrO9SlQWA" base_Element="_DxbxZYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxcYcoqFEe-CzNrO9SlQWA" base_Element="_DxbxZYqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxcYc4qFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_DxcYdYqFEe-CzNrO9SlQWA" base_Element="_DxcYdIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxdmkYqFEe-CzNrO9SlQWA" base_Element="_DxdmkIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dxe0sYqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_Dxe0sIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxfbw4qFEe-CzNrO9SlQWA" base_Element="_Dxe0soqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxfbxIqFEe-CzNrO9SlQWA" base_Element="_Dxe0soqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxfbxYqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Dxgp4YqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_Dxgp4IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxhQ9IqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxhQ8IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxhQ-4qFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxhQ9oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dxh4AIqFEe-CzNrO9SlQWA" genericsValue="T" base_Element="_DxhQ94qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxifFoqFEe-CzNrO9SlQWA" genericsValue="E" base_Element="_DxifFYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxjGIYqFEe-CzNrO9SlQWA" base_Element="_DxjGIIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxjGKoqFEe-CzNrO9SlQWA" base_Element="_DxjGKYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_DxjtNoqFEe-CzNrO9SlQWA" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_DxjtNIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxjtN4qFEe-CzNrO9SlQWA" base_Element="_DxjtNIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DxliYoqFEe-CzNrO9SlQWA" base_Element="_DxliYYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxmJc4qFEe-CzNrO9SlQWA" base_Element="_DxmJcIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxmJdIqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_DxmJcYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Annotations xmi:id="_DxmJdYqFEe-CzNrO9SlQWA" base_Element="_DxmJcIqFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DxmJdoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_DxoluIqFEe-CzNrO9SlQWA" genericsValue="Integer" base_Element="_Dxols4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxwhgoqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DxwhgYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxxIkYqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_DxxIkIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DxxIk4qFEe-CzNrO9SlQWA" genericsValue="ScheduleTime" base_Element="_DxxIkoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxyWsIqFEe-CzNrO9SlQWA" base_Element="_DxxvooqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxyWsoqFEe-CzNrO9SlQWA" base_Element="_DxyWsYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxyWtIqFEe-CzNrO9SlQWA" base_Element="_DxyWs4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DxyWuoqFEe-CzNrO9SlQWA" base_Element="_DxyWuYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxy9wIqFEe-CzNrO9SlQWA" base_Element="_DxyWu4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxy9xIqFEe-CzNrO9SlQWA" base_Element="_Dxy9w4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxy9xoqFEe-CzNrO9SlQWA" base_Element="_Dxy9xYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dxy9yIqFEe-CzNrO9SlQWA" genericsValue="ChannelSet" base_Element="_Dxy9x4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxy9yYqFEe-CzNrO9SlQWA" base_Element="_Dxy9x4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dxzk0IqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_Dxy9zIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxzk0YqFEe-CzNrO9SlQWA" base_Element="_Dxy9zIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxzk04qFEe-CzNrO9SlQWA" base_Element="_Dxzk0oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dxzk1YqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_Dxzk1IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dxzk1oqFEe-CzNrO9SlQWA" base_Element="_Dxzk1IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx0L4YqFEe-CzNrO9SlQWA" base_Element="_Dx0L4IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx0L44qFEe-CzNrO9SlQWA" base_Element="_Dx0L4oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx0L5YqFEe-CzNrO9SlQWA" base_Element="_Dx0L5IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx0L54qFEe-CzNrO9SlQWA" base_Element="_Dx0L5oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx0L6YqFEe-CzNrO9SlQWA" base_Element="_Dx0L6IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx0L64qFEe-CzNrO9SlQWA" base_Element="_Dx0L6oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx2BEIqFEe-CzNrO9SlQWA" base_Element="_Dx0y-oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx2oIIqFEe-CzNrO9SlQWA" base_Element="_Dx2BHYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx2oIoqFEe-CzNrO9SlQWA" base_Element="_Dx2oIYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx2oJIqFEe-CzNrO9SlQWA" base_Element="_Dx2oI4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dx2oJoqFEe-CzNrO9SlQWA" genericsValue="Node" base_Element="_Dx2oJYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx2oJ4qFEe-CzNrO9SlQWA" base_Element="_Dx2oJYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dx2oKYqFEe-CzNrO9SlQWA" genericsValue="Integer" base_Element="_Dx2oKIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx3PMIqFEe-CzNrO9SlQWA" base_Element="_Dx2oKIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dx3PMoqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_Dx3PMYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx3PM4qFEe-CzNrO9SlQWA" base_Element="_Dx3PMYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx3PNYqFEe-CzNrO9SlQWA" base_Element="_Dx3PNIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx3PN4qFEe-CzNrO9SlQWA" base_Element="_Dx3PNoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx32R4qFEe-CzNrO9SlQWA" base_Element="_Dx32RoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx32SYqFEe-CzNrO9SlQWA" base_Element="_Dx32SIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx32S4qFEe-CzNrO9SlQWA" base_Element="_Dx32SoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx32TYqFEe-CzNrO9SlQWA" base_Element="_Dx32TIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx32T4qFEe-CzNrO9SlQWA" base_Element="_Dx32ToqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx4dUYqFEe-CzNrO9SlQWA" base_Element="_Dx4dUIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx4dU4qFEe-CzNrO9SlQWA" base_Element="_Dx4dUoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx4dVYqFEe-CzNrO9SlQWA" base_Element="_Dx4dVIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx4dV4qFEe-CzNrO9SlQWA" base_Element="_Dx4dVoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5EY4qFEe-CzNrO9SlQWA" base_Element="_Dx5EYoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5EZoqFEe-CzNrO9SlQWA" base_Element="_Dx5EZYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5EaYqFEe-CzNrO9SlQWA" base_Element="_Dx5EZ4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5rcoqFEe-CzNrO9SlQWA" base_Element="_Dx5rcIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5rdIqFEe-CzNrO9SlQWA" base_Element="_Dx5rc4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5rd4qFEe-CzNrO9SlQWA" base_Element="_Dx5rdoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5reYqFEe-CzNrO9SlQWA" base_Element="_Dx5reIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx5re4qFEe-CzNrO9SlQWA" base_Element="_Dx5reoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx6SgIqFEe-CzNrO9SlQWA" base_Element="_Dx5rfIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dx6SgoqFEe-CzNrO9SlQWA" genericsValue="String, Integer" base_Element="_Dx6SgYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx6Sg4qFEe-CzNrO9SlQWA" base_Element="_Dx6SgYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx6SiYqFEe-CzNrO9SlQWA" base_Element="_Dx6SiIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx65kIqFEe-CzNrO9SlQWA" base_Element="_Dx6SioqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dx65loqFEe-CzNrO9SlQWA" genericsValue="Edge" base_Element="_Dx65lYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx7gp4qFEe-CzNrO9SlQWA" base_Element="_Dx7gpoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx7gqYqFEe-CzNrO9SlQWA" base_Element="_Dx7gqIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx7groqFEe-CzNrO9SlQWA" base_Element="_Dx7gqoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx8HsoqFEe-CzNrO9SlQWA" base_Element="_Dx7gr4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx8HtIqFEe-CzNrO9SlQWA" base_Element="_Dx8Hs4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dx8HtoqFEe-CzNrO9SlQWA" genericsValue="Activation" base_Element="_Dx8HtYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx8Ht4qFEe-CzNrO9SlQWA" base_Element="_Dx8HtYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_Dx8HuYqFEe-CzNrO9SlQWA" genericsValue="String, Integer" base_Element="_Dx8HuIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx8HuoqFEe-CzNrO9SlQWA" base_Element="_Dx8HuIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx8uwIqFEe-CzNrO9SlQWA" base_Element="_Dx8Hu4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx8uyoqFEe-CzNrO9SlQWA" base_Element="_Dx8uyYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx9V0IqFEe-CzNrO9SlQWA" base_Element="_Dx8uy4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx9V0oqFEe-CzNrO9SlQWA" base_Element="_Dx9V0YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx9V1IqFEe-CzNrO9SlQWA" base_Element="_Dx9V04qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx9V1oqFEe-CzNrO9SlQWA" base_Element="_Dx9V1YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx984IqFEe-CzNrO9SlQWA" base_Element="_Dx9V14qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx984oqFEe-CzNrO9SlQWA" base_Element="_Dx984YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx985IqFEe-CzNrO9SlQWA" base_Element="_Dx9844qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx985oqFEe-CzNrO9SlQWA" base_Element="_Dx985YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx986IqFEe-CzNrO9SlQWA" base_Element="_Dx9854qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx986oqFEe-CzNrO9SlQWA" base_Element="_Dx986YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx-j8IqFEe-CzNrO9SlQWA" base_Element="_Dx9864qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx-j8oqFEe-CzNrO9SlQWA" base_Element="_Dx-j8YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx-j-IqFEe-CzNrO9SlQWA" base_Element="_Dx-j94qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx_LAIqFEe-CzNrO9SlQWA" base_Element="_Dx-j-YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx_LAoqFEe-CzNrO9SlQWA" base_Element="_Dx_LAYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx_yEIqFEe-CzNrO9SlQWA" base_Element="_Dx_LDYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx_yEoqFEe-CzNrO9SlQWA" base_Element="_Dx_yEYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx_yFoqFEe-CzNrO9SlQWA" base_Element="_Dx_yFYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Dx_yGIqFEe-CzNrO9SlQWA" base_Element="_Dx_yF4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyAZIYqFEe-CzNrO9SlQWA" base_Element="_DyAZIIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBAMIqFEe-CzNrO9SlQWA" base_Element="_DyAZJoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBAMoqFEe-CzNrO9SlQWA" base_Element="_DyBAMYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBANYqFEe-CzNrO9SlQWA" base_Element="_DyBAM4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBAN4qFEe-CzNrO9SlQWA" base_Element="_DyBANoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBAOYqFEe-CzNrO9SlQWA" base_Element="_DyBAOIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBAO4qFEe-CzNrO9SlQWA" base_Element="_DyBAOoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBnQIqFEe-CzNrO9SlQWA" base_Element="_DyBAPIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyBnQoqFEe-CzNrO9SlQWA" base_Element="_DyBnQYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyCOVYqFEe-CzNrO9SlQWA" base_Element="_DyCOVIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyCOV4qFEe-CzNrO9SlQWA" base_Element="_DyCOVoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyCOWYqFEe-CzNrO9SlQWA" base_Element="_DyCOWIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyCOW4qFEe-CzNrO9SlQWA" base_Element="_DyCOWoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyCOXYqFEe-CzNrO9SlQWA" base_Element="_DyCOXIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyC1YIqFEe-CzNrO9SlQWA" base_Element="_DyCOXoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyC1Y4qFEe-CzNrO9SlQWA" base_Element="_DyC1YYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyC1ZoqFEe-CzNrO9SlQWA" base_Element="_DyC1ZIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyC1aYqFEe-CzNrO9SlQWA" base_Element="_DyC1Z4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyC1a4qFEe-CzNrO9SlQWA" base_Element="_DyC1aoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyEDgIqFEe-CzNrO9SlQWA" base_Element="_DyC1bIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyEDgoqFEe-CzNrO9SlQWA" base_Element="_DyEDgYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyEDhIqFEe-CzNrO9SlQWA" base_Element="_DyEDg4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Array xmi:id="_DyEDiYqFEe-CzNrO9SlQWA" dimensions="2" base_Element="_DyEDh4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyEDioqFEe-CzNrO9SlQWA" base_Element="_DyEDh4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyEqnYqFEe-CzNrO9SlQWA" base_Element="_DyEqnIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyEqn4qFEe-CzNrO9SlQWA" base_Element="_DyEqnoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRoIqFEe-CzNrO9SlQWA" base_Element="_DyEqoIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRooqFEe-CzNrO9SlQWA" base_Element="_DyFRoYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRpIqFEe-CzNrO9SlQWA" base_Element="_DyFRo4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRpoqFEe-CzNrO9SlQWA" base_Element="_DyFRpYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRqIqFEe-CzNrO9SlQWA" base_Element="_DyFRp4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRqoqFEe-CzNrO9SlQWA" base_Element="_DyFRqYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRrIqFEe-CzNrO9SlQWA" base_Element="_DyFRq4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyFRroqFEe-CzNrO9SlQWA" base_Element="_DyFRrYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4sIqFEe-CzNrO9SlQWA" base_Element="_DyFRr4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4soqFEe-CzNrO9SlQWA" base_Element="_DyF4sYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4tIqFEe-CzNrO9SlQWA" base_Element="_DyF4s4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4toqFEe-CzNrO9SlQWA" base_Element="_DyF4tYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4uYqFEe-CzNrO9SlQWA" base_Element="_DyF4t4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4u4qFEe-CzNrO9SlQWA" base_Element="_DyF4uoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4vYqFEe-CzNrO9SlQWA" base_Element="_DyF4vIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyF4v4qFEe-CzNrO9SlQWA" base_Element="_DyF4voqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyHG1oqFEe-CzNrO9SlQWA" base_Element="_DyHG1IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyHG2oqFEe-CzNrO9SlQWA" base_Element="_DyHG2YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DyHt4IqFEe-CzNrO9SlQWA" genericsValue="InstructionParameters" base_Element="_DyHG24qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyHt4YqFEe-CzNrO9SlQWA" base_Element="_DyHG24qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyHt44qFEe-CzNrO9SlQWA" base_Element="_DyHt4oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyIU8IqFEe-CzNrO9SlQWA" base_Element="_DyHt5IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyIU8oqFEe-CzNrO9SlQWA" base_Element="_DyIU8YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyIU9IqFEe-CzNrO9SlQWA" base_Element="_DyIU84qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyIU9oqFEe-CzNrO9SlQWA" base_Element="_DyIU9YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyIU-IqFEe-CzNrO9SlQWA" base_Element="_DyIU94qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyIU-oqFEe-CzNrO9SlQWA" base_Element="_DyIU-YqFEe-CzNrO9SlQWA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_DyIU-4qFEe-CzNrO9SlQWA" name="getNumChannels" method="_DylA4IqFEe-CzNrO9SlQWA">
      <ownedParameter xmi:id="_DyJjEIqFEe-CzNrO9SlQWA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_DyJjEYqFEe-CzNrO9SlQWA" base_Element="_DyIU-4qFEe-CzNrO9SlQWA">
    <annotations xmi:id="_DyJjEoqFEe-CzNrO9SlQWA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyJjFYqFEe-CzNrO9SlQWA" base_Element="_DyJjE4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyJjGIqFEe-CzNrO9SlQWA" base_Element="_DyJjFoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyKKLoqFEe-CzNrO9SlQWA" base_Element="_DyKKLIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyKxMYqFEe-CzNrO9SlQWA" base_Element="_DyKKMYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyKxNYqFEe-CzNrO9SlQWA" base_Element="_DyKxNIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DyKxN4qFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DyKxNoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DyLYQIqFEe-CzNrO9SlQWA" genericsValue="String" base_Element="_DyKxOYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyL_VYqFEe-CzNrO9SlQWA" base_Element="_DyL_VIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyL_V4qFEe-CzNrO9SlQWA" base_Element="_DyL_VoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyMmYIqFEe-CzNrO9SlQWA" base_Element="_DyL_WIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyMmY4qFEe-CzNrO9SlQWA" base_Element="_DyMmYoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyMmZYqFEe-CzNrO9SlQWA" base_Element="_DyMmZIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyNNe4qFEe-CzNrO9SlQWA" base_Element="_DyNNeoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyN0gYqFEe-CzNrO9SlQWA" base_Element="_DyN0gIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyN0g4qFEe-CzNrO9SlQWA" base_Element="_DyN0goqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyN0hYqFEe-CzNrO9SlQWA" base_Element="_DyN0hIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DyObkIqFEe-CzNrO9SlQWA" genericsValue="Integer" base_Element="_DyN0ioqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_DyObkYqFEe-CzNrO9SlQWA" base_Element="_DyN0ioqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Generics xmi:id="_DyObk4qFEe-CzNrO9SlQWA" genericsValue="SchedulableObject" base_Element="_DyObkoqFEe-CzNrO9SlQWA"/>
  <uml:OpaqueBehavior xmi:id="_DylA4IqFEe-CzNrO9SlQWA" name="getNumChannels" specification="_DyIU-4qFEe-CzNrO9SlQWA">
    <ownedParameter xmi:id="_DylA4YqFEe-CzNrO9SlQWA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_DzCT4oqFEe-CzNrO9SlQWA" base_Element="_DzCT4IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzCT5YqFEe-CzNrO9SlQWA" base_Element="_DzCT44qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzC68oqFEe-CzNrO9SlQWA" base_Element="_DzC68IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzC69YqFEe-CzNrO9SlQWA" base_Element="_DzC684qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzDiAIqFEe-CzNrO9SlQWA" base_Element="_DzC69oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzDiA4qFEe-CzNrO9SlQWA" base_Element="_DzDiAYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzDiBoqFEe-CzNrO9SlQWA" base_Element="_DzDiBIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzDiCYqFEe-CzNrO9SlQWA" base_Element="_DzDiB4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEJEIqFEe-CzNrO9SlQWA" base_Element="_DzDiCoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEJE4qFEe-CzNrO9SlQWA" base_Element="_DzEJEYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEJFoqFEe-CzNrO9SlQWA" base_Element="_DzEJFIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEJGYqFEe-CzNrO9SlQWA" base_Element="_DzEJF4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEJHIqFEe-CzNrO9SlQWA" base_Element="_DzEJGoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEwIIqFEe-CzNrO9SlQWA" base_Element="_DzEJHYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEwI4qFEe-CzNrO9SlQWA" base_Element="_DzEwIYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEwJoqFEe-CzNrO9SlQWA" base_Element="_DzEwJIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzEwKYqFEe-CzNrO9SlQWA" base_Element="_DzEwJ4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzFXMIqFEe-CzNrO9SlQWA" base_Element="_DzEwKoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzFXM4qFEe-CzNrO9SlQWA" base_Element="_DzFXMYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzFXNoqFEe-CzNrO9SlQWA" base_Element="_DzFXNIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzF-QIqFEe-CzNrO9SlQWA" base_Element="_DzFXN4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzF-Q4qFEe-CzNrO9SlQWA" base_Element="_DzF-QYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzF-RoqFEe-CzNrO9SlQWA" base_Element="_DzF-RIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzF-SYqFEe-CzNrO9SlQWA" base_Element="_DzF-R4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzF-TIqFEe-CzNrO9SlQWA" base_Element="_DzF-SoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzF-T4qFEe-CzNrO9SlQWA" base_Element="_DzF-TYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHMYIqFEe-CzNrO9SlQWA" base_Element="_DzF-UIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHMY4qFEe-CzNrO9SlQWA" base_Element="_DzHMYYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHMZoqFEe-CzNrO9SlQWA" base_Element="_DzHMZIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHMaYqFEe-CzNrO9SlQWA" base_Element="_DzHMZ4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHMbIqFEe-CzNrO9SlQWA" base_Element="_DzHMaoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHzcoqFEe-CzNrO9SlQWA" base_Element="_DzHzcIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHzdYqFEe-CzNrO9SlQWA" base_Element="_DzHzc4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzHzeIqFEe-CzNrO9SlQWA" base_Element="_DzHzdoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzIagIqFEe-CzNrO9SlQWA" base_Element="_DzHzeYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzIag4qFEe-CzNrO9SlQWA" base_Element="_DzIagYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzIahoqFEe-CzNrO9SlQWA" base_Element="_DzIahIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzIaiYqFEe-CzNrO9SlQWA" base_Element="_DzIah4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJBkoqFEe-CzNrO9SlQWA" base_Element="_DzJBkIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJBlYqFEe-CzNrO9SlQWA" base_Element="_DzJBk4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJBmIqFEe-CzNrO9SlQWA" base_Element="_DzJBloqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJBm4qFEe-CzNrO9SlQWA" base_Element="_DzJBmYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJoooqFEe-CzNrO9SlQWA" base_Element="_DzJooIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJopYqFEe-CzNrO9SlQWA" base_Element="_DzJoo4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJoqIqFEe-CzNrO9SlQWA" base_Element="_DzJopoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzJoq4qFEe-CzNrO9SlQWA" base_Element="_DzJoqYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzKPsIqFEe-CzNrO9SlQWA" base_Element="_DzJorIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzKPs4qFEe-CzNrO9SlQWA" base_Element="_DzKPsYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzKPtoqFEe-CzNrO9SlQWA" base_Element="_DzKPtIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzKPuYqFEe-CzNrO9SlQWA" base_Element="_DzKPt4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzK2wIqFEe-CzNrO9SlQWA" base_Element="_DzKPuoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzK2w4qFEe-CzNrO9SlQWA" base_Element="_DzK2wYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzK2xoqFEe-CzNrO9SlQWA" base_Element="_DzK2xIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzK2yYqFEe-CzNrO9SlQWA" base_Element="_DzK2x4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzK2zIqFEe-CzNrO9SlQWA" base_Element="_DzK2yoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzLd0oqFEe-CzNrO9SlQWA" base_Element="_DzLd0IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzLd1YqFEe-CzNrO9SlQWA" base_Element="_DzLd04qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzLd2IqFEe-CzNrO9SlQWA" base_Element="_DzLd1oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzLd24qFEe-CzNrO9SlQWA" base_Element="_DzLd2YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzME4IqFEe-CzNrO9SlQWA" base_Element="_DzLd3IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzME44qFEe-CzNrO9SlQWA" base_Element="_DzME4YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzME5oqFEe-CzNrO9SlQWA" base_Element="_DzME5IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzME6YqFEe-CzNrO9SlQWA" base_Element="_DzME54qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzMr8IqFEe-CzNrO9SlQWA" base_Element="_DzME6oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzMr84qFEe-CzNrO9SlQWA" base_Element="_DzMr8YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzMr9oqFEe-CzNrO9SlQWA" base_Element="_DzMr9IqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzMr-YqFEe-CzNrO9SlQWA" base_Element="_DzMr94qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzMr_IqFEe-CzNrO9SlQWA" base_Element="_DzMr-oqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzNTAIqFEe-CzNrO9SlQWA" base_Element="_DzMr_YqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzNTA4qFEe-CzNrO9SlQWA" base_Element="_DzNTAYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzNTBoqFEe-CzNrO9SlQWA" base_Element="_DzNTBIqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzNTCYqFEe-CzNrO9SlQWA" base_Element="_DzNTB4qFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzNTDIqFEe-CzNrO9SlQWA" base_Element="_DzNTCoqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Reference xmi:id="_DzN6EIqFEe-CzNrO9SlQWA" base_Element="_DzNTDYqFEe-CzNrO9SlQWA"/>
  <UMLLabProfile:Patch xmi:id="_EP9gcIqFEe-CzNrO9SlQWA" base_Element="_DiIxIIqFEe-CzNrO9SlQWA" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_EP-HgIqFEe-CzNrO9SlQWA" base_Element="_DitY4IqFEe-CzNrO9SlQWA" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_EP-ukIqFEe-CzNrO9SlQWA" base_Element="_DjgqIYqFEe-CzNrO9SlQWA" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_EP_VoIqFEe-CzNrO9SlQWA" base_Element="_DjkUgYqFEe-CzNrO9SlQWA" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
</xmi:XMI>
