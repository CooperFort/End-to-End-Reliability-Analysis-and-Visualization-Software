<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_DJMOMIgrEe-IO4NVFhexhw" name="SchedualableObject">
    <eAnnotations xmi:id="_DRYg4IgrEe-IO4NVFhexhw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_DRZH8IgrEe-IO4NVFhexhw" source="codegen">
        <details xmi:id="_DRZH8YgrEe-IO4NVFhexhw" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_ILQZ4IgrEe-IO4NVFhexhw" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;3024343258/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;3853306824/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;2034073373/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;432695560/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;872941976/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2726194203/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;1667435476/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;1603794739/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;2969006210/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;4032503718/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;3954342433/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_Ei398IgrEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_Ei398YgrEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_Ei398ogrEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_Ei3984grEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_Ei4lAIgrEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_Ei4lAYgrEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_Ei4lAogrEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_Ei4lA4grEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_Ei5MEIgrEe-IO4NVFhexhw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_EhYJIIgrEe-IO4NVFhexhw" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_EhbMcIgrEe-IO4NVFhexhw" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_EhbMcYgrEe-IO4NVFhexhw" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_EhihMIgrEe-IO4NVFhexhw" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_EjFZUIgrEe-IO4NVFhexhw" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_FD2kEYgrEe-IO4NVFhexhw" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_EkLlgIgrEe-IO4NVFhexhw" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_FEnZEIgrEe-IO4NVFhexhw" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_EkP28IgrEe-IO4NVFhexhw" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_FEonMIgrEe-IO4NVFhexhw" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_FEpOQYgrEe-IO4NVFhexhw" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EnWOQIgrEe-IO4NVFhexhw" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_FFaDQIgrEe-IO4NVFhexhw" general="_FDIyYIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHGFUIgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHGFUYgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FISYIIgrEe-IO4NVFhexhw" name="AbstractMap" specification="_EnfYMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FISYIYgrEe-IO4NVFhexhw" type="_EnWOQIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EnfYMIgrEe-IO4NVFhexhw" name="AbstractMap" method="_FISYIIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EngmUIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EnhNYIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EnhNYYgrEe-IO4NVFhexhw" type="_EnWOQIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EnibgIgrEe-IO4NVFhexhw" name="Activation">
              <generalization xmi:id="_FDPgEIgrEe-IO4NVFhexhw" general="_EscJoIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHGsYIgrEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw" isReadOnly="true" association="_FJq4MIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHGsYogrEe-IO4NVFhexhw" name="edges" type="_FDJZcIgrEe-IO4NVFhexhw" isReadOnly="true" association="_FJrfQYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHHTcYgrEe-IO4NVFhexhw" name="additionalScheduleTimes" type="_FDJZcIgrEe-IO4NVFhexhw" isReadOnly="true" association="_FJsGUYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHH6gYgrEe-IO4NVFhexhw" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FHH6gogrEe-IO4NVFhexhw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_FFbRYYgrEe-IO4NVFhexhw" client="_EnibgIgrEe-IO4NVFhexhw" supplier="_FFaqUYgrEe-IO4NVFhexhw" contract="_FFaqUYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIXQoIgrEe-IO4NVFhexhw" name="Activation" specification="_Enle0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIXQoYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIXQoogrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIX3sIgrEe-IO4NVFhexhw" name="Activation" specification="_FDLOoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIX3sYgrEe-IO4NVFhexhw" name="elem" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIX3sogrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIX3s4grEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIX3tIgrEe-IO4NVFhexhw" name="clone" specification="_Enms8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIX3tYgrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIX3togrEe-IO4NVFhexhw" name="getEdgesByReleaseTime" specification="_EnuowIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIX3t4grEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYewIgrEe-IO4NVFhexhw" name="getEdgesByLatestReleaseTime" specification="_Enwd8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYewYgrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYewogrEe-IO4NVFhexhw" name="getEdgesByPeriod" specification="_EnyTIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYew4grEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYexIgrEe-IO4NVFhexhw" name="getEdgesByDeadline" specification="_En0IUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYexYgrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYexogrEe-IO4NVFhexhw" name="getEdgesByPriority" specification="_En19gIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYex4grEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYeyIgrEe-IO4NVFhexhw" name="addEdges" specification="_FFcfgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYeyYgrEe-IO4NVFhexhw" name="edges" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYeyogrEe-IO4NVFhexhw" name="addEdge" specification="_FDL1tYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYey4grEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYezIgrEe-IO4NVFhexhw" name="increaseEdgePhases" specification="_En4ZwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYezYgrEe-IO4NVFhexhw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIYezogrEe-IO4NVFhexhw" name="updatePriorityAndRelease" specification="_En5A0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIYez4grEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZF0IgrEe-IO4NVFhexhw" name="addConflict" specification="_En6O8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZF0YgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZF0ogrEe-IO4NVFhexhw" name="addConflicts" specification="_FFdGkYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZF04grEe-IO4NVFhexhw" name="conflicts" type="_FDKnkYgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZF1IgrEe-IO4NVFhexhw" name="addCoordinator" specification="_En62AIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZF1YgrEe-IO4NVFhexhw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZF1ogrEe-IO4NVFhexhw" name="addCoordinators" specification="_FFeUsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZF14grEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZF2IgrEe-IO4NVFhexhw" name="addScheduleTimes" specification="_FFfi0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZF2YgrEe-IO4NVFhexhw" name="scheduleTime" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZF2ogrEe-IO4NVFhexhw" name="getNextScheduleTime" specification="_En8EIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZF24grEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIZF3IgrEe-IO4NVFhexhw" type="_EtPa4IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZF3YgrEe-IO4NVFhexhw" name="getMatchingEndTime" specification="_En9SQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZF3ogrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIZF34grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZs4IgrEe-IO4NVFhexhw" name="getNextStartTime" specification="_En-gYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZs4YgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIZs4ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZs44grEe-IO4NVFhexhw" name="getNextEndTime" specification="_En_ugIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZs5IgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIZs5YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZs5ogrEe-IO4NVFhexhw" name="getNumEdges" specification="_EoAVkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZs54grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIZs6IgrEe-IO4NVFhexhw" name="compareTo" specification="_FDMcwYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIZs6YgrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIZs6ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaT8IgrEe-IO4NVFhexhw" name="conflictExists" specification="_FDND04grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIaT8YgrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIaT8ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaT84grEe-IO4NVFhexhw" name="canCombine" specification="_FDNq4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIaT9IgrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIaT9YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaT9ogrEe-IO4NVFhexhw" name="getDelta" specification="_EoCKwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIaT94grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaT-IgrEe-IO4NVFhexhw" name="getExecutionDuration" specification="_EoCx0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIaT-YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaT-ogrEe-IO4NVFhexhw" name="getCombinedExecutionDuration" specification="_FDNq44grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIaT-4grEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIaT_IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaT_YgrEe-IO4NVFhexhw" name="printAll" specification="_EoDY4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIaT_ogrEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaT_4grEe-IO4NVFhexhw" name="printAll" specification="_EoD_8YgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIaUAIgrEe-IO4NVFhexhw" name="printEdges" specification="_FDNq5ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIaUAYgrEe-IO4NVFhexhw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIaUAogrEe-IO4NVFhexhw" name="edges" type="_EsChAIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIa7AIgrEe-IO4NVFhexhw" name="printEdges" specification="_FDO5AIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIa7AYgrEe-IO4NVFhexhw" name="edges" type="_EsChAIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Enle0IgrEe-IO4NVFhexhw" name="Activation" visibility="package" method="_FIXQoIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Enle0ogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EnmF4IgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Enle0YgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EnmF4YgrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Enms8IgrEe-IO4NVFhexhw" name="clone" method="_FIX3tIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDLOpogrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EnuowIgrEe-IO4NVFhexhw" name="getEdgesByReleaseTime" method="_FIX3togrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI8IgrEe-IO4NVFhexhw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_FDL1sIgrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Enwd8IgrEe-IO4NVFhexhw" name="getEdgesByLatestReleaseTime" method="_FIYewIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI8YgrEe-IO4NVFhexhw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_FDL1sYgrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EnyTIIgrEe-IO4NVFhexhw" name="getEdgesByPeriod" method="_FIYewogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI8ogrEe-IO4NVFhexhw">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_FDL1sogrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_En0IUIgrEe-IO4NVFhexhw" name="getEdgesByDeadline" method="_FIYexIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI84grEe-IO4NVFhexhw">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_FDL1s4grEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_En19gIgrEe-IO4NVFhexhw" name="getEdgesByPriority" method="_FIYexogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI9IgrEe-IO4NVFhexhw">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_FDL1tIgrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_En4ZwIgrEe-IO4NVFhexhw" name="increaseEdgePhases" method="_FIYezIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI9YgrEe-IO4NVFhexhw">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_En4ZwYgrEe-IO4NVFhexhw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_En5A0IgrEe-IO4NVFhexhw" name="updatePriorityAndRelease" method="_FIYezogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI9ogrEe-IO4NVFhexhw">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_En5n4IgrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_En6O8IgrEe-IO4NVFhexhw" name="addConflict" method="_FIZF0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_En6O8YgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_En62AIgrEe-IO4NVFhexhw" name="addCoordinator" method="_FIZF1IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_En62AYgrEe-IO4NVFhexhw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_En8EIIgrEe-IO4NVFhexhw" name="getNextScheduleTime" method="_FIZF2ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI-IgrEe-IO4NVFhexhw">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_En8rMIgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDMcwIgrEe-IO4NVFhexhw" type="_EtPa4IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_En9SQIgrEe-IO4NVFhexhw" name="getMatchingEndTime" method="_FIZF3YgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI-YgrEe-IO4NVFhexhw">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_En95UIgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_En95UYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_En-gYIgrEe-IO4NVFhexhw" name="getNextStartTime" method="_FIZs4IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI-ogrEe-IO4NVFhexhw">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_En-gYYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_En-gYogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_En_ugIgrEe-IO4NVFhexhw" name="getNextEndTime" method="_FIZs44grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI-4grEe-IO4NVFhexhw">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_En_ugYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_En_ugogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EoAVkIgrEe-IO4NVFhexhw" name="getNumEdges" method="_FIZs5ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EoAVkYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EoCKwIgrEe-IO4NVFhexhw" name="getDelta" method="_FIaT9ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI_IgrEe-IO4NVFhexhw">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_EoCKwYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EoCx0IgrEe-IO4NVFhexhw" name="getExecutionDuration" method="_FIaT-IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EoCx0YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EoDY4IgrEe-IO4NVFhexhw" name="printAll" method="_FIaT_YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EoD_8IgrEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EoD_8YgrEe-IO4NVFhexhw" name="printAll" method="_FIaT_4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_FDLOoIgrEe-IO4NVFhexhw" name="Activation" visibility="package" method="_FIX3sIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDLOo4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDLOpIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDLOoYgrEe-IO4NVFhexhw" name="elem" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDLOoogrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDLOpYgrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDL1tYgrEe-IO4NVFhexhw" name="addEdge" method="_FIYeyogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDL1togrEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDMcwYgrEe-IO4NVFhexhw" name="compareTo" method="_FIZs6IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDMcwogrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDMcw4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDND04grEe-IO4NVFhexhw" name="conflictExists" method="_FIaT8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDND1IgrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDND1YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDNq4IgrEe-IO4NVFhexhw" name="canCombine" method="_FIaT84grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDNq4YgrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDNq4ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDNq44grEe-IO4NVFhexhw" name="getCombinedExecutionDuration" method="_FIaT-ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDNq5IgrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDNq5YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDNq5ogrEe-IO4NVFhexhw" name="printEdges" visibility="private" method="_FIaUAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDNq54grEe-IO4NVFhexhw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDOR8IgrEe-IO4NVFhexhw" name="edges" type="_EsChAIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDO5AIgrEe-IO4NVFhexhw" name="printEdges" visibility="private" method="_FIa7AIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDO5AYgrEe-IO4NVFhexhw" name="edges" type="_EsChAIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFcfgIgrEe-IO4NVFhexhw" name="addEdges" method="_FIYeyIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFcfgYgrEe-IO4NVFhexhw" name="edges" type="_FDJZcIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFdGkYgrEe-IO4NVFhexhw" name="addConflicts" method="_FIZF0ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFdtoIgrEe-IO4NVFhexhw" name="conflicts" type="_FDKnkYgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFeUsIgrEe-IO4NVFhexhw" name="addCoordinators" method="_FIZF1ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFeUsYgrEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFfi0IgrEe-IO4NVFhexhw" name="addScheduleTimes" method="_FIZF2IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLI94grEe-IO4NVFhexhw">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFfi0YgrEe-IO4NVFhexhw" name="scheduleTime" type="_FDJZcIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EoQ0QIgrEe-IO4NVFhexhw" name="Activations">
              <generalization xmi:id="_FDR8UIgrEe-IO4NVFhexhw" general="_EnWOQIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHIhkIgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHIhkYgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EoSCYIgrEe-IO4NVFhexhw" name="BasicPoset">
              <ownedComment xmi:id="_FJLI_YgrEe-IO4NVFhexhw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_FDTKcIgrEe-IO4NVFhexhw" general="_Eq6foIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIa7AogrEe-IO4NVFhexhw" name="BasicPoset" specification="_FDSjYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIa7A4grEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIa7BIgrEe-IO4NVFhexhw" type="_EoSCYIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FDSjYIgrEe-IO4NVFhexhw" name="BasicPoset" visibility="package" method="_FIa7AogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDSjYogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDSjY4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDSjYYgrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDSjZIgrEe-IO4NVFhexhw" type="_EoSCYIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EoT3kIgrEe-IO4NVFhexhw" name="ChannelAnalysis">
              <ownedComment xmi:id="_FJLI_ogrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHIhkogrEe-IO4NVFhexhw" name="program" visibility="private" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJsGVIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHIhlIgrEe-IO4NVFhexhw" name="programTable" visibility="private" type="_Er0ekIgrEe-IO4NVFhexhw" association="_FJstYYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHJIoYgrEe-IO4NVFhexhw" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIa7BYgrEe-IO4NVFhexhw" name="ChannelAnalysis" specification="_FDTKcYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIbiEIgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIbiEYgrEe-IO4NVFhexhw" type="_EoT3kIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIbiEogrEe-IO4NVFhexhw" name="ChannelAnalysis" specification="_FDTxg4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIbiE4grEe-IO4NVFhexhw" name="program" type="_ErVWYIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIbiFIgrEe-IO4NVFhexhw" type="_EoT3kIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcJIIgrEe-IO4NVFhexhw" name="isChannelConflict" specification="_EoVswIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIcJIYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EoVswIgrEe-IO4NVFhexhw" name="isChannelConflict" method="_FIcJIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EoWT0IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDTKcYgrEe-IO4NVFhexhw" name="ChannelAnalysis" visibility="package" method="_FIa7BYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDTxgIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDTxgYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDTKcogrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDTxgogrEe-IO4NVFhexhw" type="_EoT3kIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDTxg4grEe-IO4NVFhexhw" name="ChannelAnalysis" visibility="package" method="_FIbiEogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDTxhYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDTxhogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDTxhIgrEe-IO4NVFhexhw" name="program" type="_ErVWYIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDTxh4grEe-IO4NVFhexhw" type="_EoT3kIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EoYwEIgrEe-IO4NVFhexhw" name="ChannelVisualization">
              <ownedComment xmi:id="_FJLI_4grEe-IO4NVFhexhw">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FDU_pIgrEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHJIo4grEe-IO4NVFhexhw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHJIpIgrEe-IO4NVFhexhw" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHJIpYgrEe-IO4NVFhexhw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHJvsIgrEe-IO4NVFhexhw" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHJvsYgrEe-IO4NVFhexhw" name="warp" visibility="private" type="_Euc70IgrEe-IO4NVFhexhw" association="_FJtUcIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHJvs4grEe-IO4NVFhexhw" name="ca" visibility="private" type="_EoT3kIgrEe-IO4NVFhexhw" association="_FJtUc4grEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcJIogrEe-IO4NVFhexhw" name="ChannelVisualization" specification="_FDUYkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIcJI4grEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIcJJIgrEe-IO4NVFhexhw" type="_EoYwEIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FDUYkIgrEe-IO4NVFhexhw" name="ChannelVisualization" visibility="package" method="_FIcJIogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDU_oYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDU_oogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDU_oIgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDU_o4grEe-IO4NVFhexhw" type="_EoYwEIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EocacIgrEe-IO4NVFhexhw" name="Channels">
              <ownedComment xmi:id="_FJLJAIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHKWwYgrEe-IO4NVFhexhw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHKWw4grEe-IO4NVFhexhw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHK90YgrEe-IO4NVFhexhw" name="channelsAvailable" visibility="package" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FJt7gYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcwMIgrEe-IO4NVFhexhw" name="Channels" specification="_Eoh6AIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIcwMYgrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwMogrEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwM4grEe-IO4NVFhexhw" type="_EocacIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcwNIgrEe-IO4NVFhexhw" name="getChannelSet" specification="_EojIIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIcwNYgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwNogrEe-IO4NVFhexhw" type="_FDKAgYgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcwN4grEe-IO4NVFhexhw" name="addNewChannelSet" specification="_Eok9UIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcwOIgrEe-IO4NVFhexhw" name="isEmpty" specification="_Eok9UYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIcwOYgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwOogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcwO4grEe-IO4NVFhexhw" name="removeChannel" specification="_EomLcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIcwPIgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwPYgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwPogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcwP4grEe-IO4NVFhexhw" name="addChannel" specification="_EomygIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIcwQIgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwQYgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIcwQogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIdXQIgrEe-IO4NVFhexhw" name="getNumChannels" specification="_EooAoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIdXQYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Eoh6AIgrEe-IO4NVFhexhw" name="Channels" visibility="package" method="_FIcwMIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EoihEogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EoihE4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EoihEIgrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EoihEYgrEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EoihFIgrEe-IO4NVFhexhw" type="_EocacIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EojIIIgrEe-IO4NVFhexhw" name="getChannelSet" method="_FIcwNIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EojIIYgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FFh_EIgrEe-IO4NVFhexhw" type="_FDKAgYgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eok9UIgrEe-IO4NVFhexhw" name="addNewChannelSet" method="_FIcwN4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Eok9UYgrEe-IO4NVFhexhw" name="isEmpty" method="_FIcwOIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EolkYIgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EolkYYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EomLcIgrEe-IO4NVFhexhw" name="removeChannel" method="_FIcwO4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EomLcYgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EomLcogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EomLc4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EomygIgrEe-IO4NVFhexhw" name="addChannel" method="_FIcwP4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EomygYgrEe-IO4NVFhexhw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EonZkIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EonZkYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EooAoIgrEe-IO4NVFhexhw" name="getNumChannels" method="_FIdXQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EooAoYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_EodokIgrEe-IO4NVFhexhw" name="ChannelSet" visibility="private">
                <generalization xmi:id="_FFhYAIgrEe-IO4NVFhexhw" general="_FDKAgYgrEe-IO4NVFhexhw"/>
                <ownedAttribute xmi:id="_FHJvtYgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHKWwIgrEe-IO4NVFhexhw" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcJJYgrEe-IO4NVFhexhw" name="ChannelSet" specification="_EoePoIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FIcJJogrEe-IO4NVFhexhw" type="_EodokIgrEe-IO4NVFhexhw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIcJJ4grEe-IO4NVFhexhw" name="ChannelSet" specification="_EogE0IgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FIcJKIgrEe-IO4NVFhexhw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_FIcJKYgrEe-IO4NVFhexhw" type="_EodokIgrEe-IO4NVFhexhw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_EoePoIgrEe-IO4NVFhexhw" name="ChannelSet" visibility="private" method="_FIcJJYgrEe-IO4NVFhexhw">
                  <eAnnotations xmi:id="_Eoe2sIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Eoe2sYgrEe-IO4NVFhexhw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Eoe2sogrEe-IO4NVFhexhw" type="_EodokIgrEe-IO4NVFhexhw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_EogE0IgrEe-IO4NVFhexhw" name="ChannelSet" visibility="private" method="_FIcJJ4grEe-IO4NVFhexhw">
                  <eAnnotations xmi:id="_EogE0ogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_EogE04grEe-IO4NVFhexhw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_EogE0YgrEe-IO4NVFhexhw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_EogE1IgrEe-IO4NVFhexhw" type="_EodokIgrEe-IO4NVFhexhw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EorD8IgrEe-IO4NVFhexhw" name="CodeFragment">
              <ownedAttribute xmi:id="_FHLk4IgrEe-IO4NVFhexhw" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHLk4YgrEe-IO4NVFhexhw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHLk4ogrEe-IO4NVFhexhw" name="edges" visibility="package" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FJt7hIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHML8ogrEe-IO4NVFhexhw" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHML9IgrEe-IO4NVFhexhw" name="codeFragment" visibility="package" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FJuikYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHMzAogrEe-IO4NVFhexhw" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHMzBIgrEe-IO4NVFhexhw" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIdXQogrEe-IO4NVFhexhw" name="CodeFragment" specification="_EotgMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIdXQ4grEe-IO4NVFhexhw" type="_EorD8IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIdXRIgrEe-IO4NVFhexhw" name="CodeFragment" specification="_FFimIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIdXRYgrEe-IO4NVFhexhw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIdXRogrEe-IO4NVFhexhw" name="edges" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIdXR4grEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIdXSIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIdXSYgrEe-IO4NVFhexhw" type="_EorD8IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIdXSogrEe-IO4NVFhexhw" name="getCoordinator" specification="_EouuUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIdXS4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIdXTIgrEe-IO4NVFhexhw" name="instructions" specification="_EovVYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIdXTYgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIdXTogrEe-IO4NVFhexhw" name="size" specification="_EowjgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIdXT4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIdXUIgrEe-IO4NVFhexhw" name="generateCodeFragment" specification="_EoxKkIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FId-UIgrEe-IO4NVFhexhw" name="getBaseInstruction" specification="_EoxKkYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FId-UYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-UogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-U4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-VIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FId-VYgrEe-IO4NVFhexhw" name="push" specification="_EoyYsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FId-VogrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-V4grEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-WIgrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-WYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FId-WogrEe-IO4NVFhexhw" name="pull" specification="_Eozm0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FId-W4grEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-XIgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-XYgrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-XogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FId-X4grEe-IO4NVFhexhw" name="ifHas" specification="_Eo0N4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FId-YIgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-YYgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-YogrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-Y4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FId-ZIgrEe-IO4NVFhexhw" name="ifNotHas" specification="_Eo2DEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FId-ZYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-ZogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-Z4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-aIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FId-aYgrEe-IO4NVFhexhw" name="wait" specification="_Eo2qIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FId-aogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FId-a4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIelYIgrEe-IO4NVFhexhw" name="sleep" specification="_Eo3RMYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIelYYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIelYogrEe-IO4NVFhexhw" name="reportIfDifferentCoordinators" specification="_FFj0QogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIelY4grEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIelZIgrEe-IO4NVFhexhw" name="multipleCoordinators" specification="_FFkbUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIelZYgrEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIelZogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EotgMIgrEe-IO4NVFhexhw" name="CodeFragment" visibility="package" method="_FIdXQogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EotgMYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EotgMogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJLwAIgrEe-IO4NVFhexhw">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_EotgM4grEe-IO4NVFhexhw" type="_EorD8IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EouuUIgrEe-IO4NVFhexhw" name="getCoordinator" method="_FIdXSogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLwAogrEe-IO4NVFhexhw">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_EouuUYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EovVYIgrEe-IO4NVFhexhw" name="instructions" method="_FIdXTIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLwA4grEe-IO4NVFhexhw">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFj0QYgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EowjgIgrEe-IO4NVFhexhw" name="size" method="_FIdXTogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJLwBIgrEe-IO4NVFhexhw">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_EowjgYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EoxKkIgrEe-IO4NVFhexhw" name="generateCodeFragment" visibility="private" method="_FIdXUIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EoxKkYgrEe-IO4NVFhexhw" name="getBaseInstruction" visibility="private" method="_FId-UIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EoxKkogrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EoxxoIgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EoxxoYgrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EoxxoogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EoyYsIgrEe-IO4NVFhexhw" name="push" visibility="private" method="_FId-VYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EoyYsYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EoyYsogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EoyYs4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eoy_wIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eozm0IgrEe-IO4NVFhexhw" name="pull" visibility="private" method="_FId-WogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eozm0YgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eozm0ogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eozm04grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eozm1IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eo0N4IgrEe-IO4NVFhexhw" name="ifHas" visibility="private" method="_FId-X4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eo008IgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo008YgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo008ogrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo0084grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eo2DEIgrEe-IO4NVFhexhw" name="ifNotHas" visibility="private" method="_FId-ZIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eo2DEYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo2DEogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo2DE4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo2DFIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eo2qIIgrEe-IO4NVFhexhw" name="wait" method="_FId-aYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eo2qIYgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo3RMIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eo3RMYgrEe-IO4NVFhexhw" name="sleep" isStatic="true" method="_FIelYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eo34QIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FFimIIgrEe-IO4NVFhexhw" name="CodeFragment" visibility="package" method="_FIdXRIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FFimJYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FFimJogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJLwAYgrEe-IO4NVFhexhw">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFimIYgrEe-IO4NVFhexhw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FFimIogrEe-IO4NVFhexhw" name="edges" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FFimI4grEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FFimJIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FFimJ4grEe-IO4NVFhexhw" type="_EorD8IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFj0QogrEe-IO4NVFhexhw" name="reportIfDifferentCoordinators" visibility="private" method="_FIelYogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFj0Q4grEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFkbUYgrEe-IO4NVFhexhw" name="multipleCoordinators" visibility="private" method="_FIelZIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFkbUogrEe-IO4NVFhexhw" name="coordinators" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FFlCYIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Eo7ioIgrEe-IO4NVFhexhw" name="CombinedActivation">
              <generalization xmi:id="_FDafM4grEe-IO4NVFhexhw" general="_EnibgIgrEe-IO4NVFhexhw"/>
              <interfaceRealization xmi:id="_FFlpcIgrEe-IO4NVFhexhw" client="_Eo7ioIgrEe-IO4NVFhexhw" supplier="_FFaqUYgrEe-IO4NVFhexhw" contract="_FFaqUYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfMcIgrEe-IO4NVFhexhw" name="CombinedActivation" specification="_Eo8wwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfMcYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIfMcogrEe-IO4NVFhexhw" type="_Eo7ioIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfMc4grEe-IO4NVFhexhw" name="CombinedActivation" specification="_FDZREIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfMdIgrEe-IO4NVFhexhw" name="elem" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfMdYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIfMdogrEe-IO4NVFhexhw" type="_Eo7ioIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfMd4grEe-IO4NVFhexhw" name="CombinedActivation" specification="_FDZ4IIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfMeIgrEe-IO4NVFhexhw" name="priorEntry" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfMeYgrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfMeogrEe-IO4NVFhexhw" type="_Eo7ioIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfMe4grEe-IO4NVFhexhw" name="canCombine" specification="_FDZ4JogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfMfIgrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfMfYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Eo8wwIgrEe-IO4NVFhexhw" name="CombinedActivation" visibility="package" method="_FIfMcIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Eo8wwogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Eo8ww4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Eo8wwYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eo8wxIgrEe-IO4NVFhexhw" type="_Eo7ioIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDZREIgrEe-IO4NVFhexhw" name="CombinedActivation" visibility="package" method="_FIfMc4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDZRE4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDZRFIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDZREYgrEe-IO4NVFhexhw" name="elem" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDZREogrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDZRFYgrEe-IO4NVFhexhw" type="_Eo7ioIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDZ4IIgrEe-IO4NVFhexhw" name="CombinedActivation" visibility="package" method="_FIfMd4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDZ4I4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDZ4JIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDZ4IYgrEe-IO4NVFhexhw" name="priorEntry" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDZ4IogrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDZ4JYgrEe-IO4NVFhexhw" type="_Eo7ioIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDZ4JogrEe-IO4NVFhexhw" name="canCombine" method="_FIfMe4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDZ4J4grEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDZ4KIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EpAbIIgrEe-IO4NVFhexhw" name="CommunicationGraph">
              <ownedComment xmi:id="_FJLwBYgrEe-IO4NVFhexhw">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FDcUYogrEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHNaEYgrEe-IO4NVFhexhw" name="wfm" visibility="package" type="_Epe8QIgrEe-IO4NVFhexhw" association="_FJuilIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHOBIIgrEe-IO4NVFhexhw" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHOBIogrEe-IO4NVFhexhw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHOBJIgrEe-IO4NVFhexhw" name="workLoad" visibility="package" type="_Eu614IgrEe-IO4NVFhexhw" association="_FJvJoogrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfMfogrEe-IO4NVFhexhw" name="CommunicationGraph" specification="_FDbGQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfMf4grEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfMgIgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfMgYgrEe-IO4NVFhexhw" type="_EpAbIIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfzgIgrEe-IO4NVFhexhw" name="CommunicationGraph" specification="_FDbtUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfzgYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfzgogrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfzg4grEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIfzhIgrEe-IO4NVFhexhw" type="_EpAbIIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfzhYgrEe-IO4NVFhexhw" name="createHeader" specification="_EpBpQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfzhogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfzh4grEe-IO4NVFhexhw" name="createFooter" specification="_EpDecIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfziIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfziYgrEe-IO4NVFhexhw" name="visualization" specification="_EpEFgogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfziogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfzi4grEe-IO4NVFhexhw" name="createWarpFileContent" specification="_EpF6sIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfzjIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EpBpQIgrEe-IO4NVFhexhw" name="createHeader" method="_FIfzhYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDbtV4grEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpDecIgrEe-IO4NVFhexhw" name="createFooter" method="_FIfzh4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDcUYIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpEFgogrEe-IO4NVFhexhw" name="visualization" method="_FIfziYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDcUYYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpF6sIgrEe-IO4NVFhexhw" name="createWarpFileContent" method="_FIfzi4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EpF6sYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDbGQIgrEe-IO4NVFhexhw" name="CommunicationGraph" method="_FIfMfogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDbGQ4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDbGRIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDbGQYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDbGQogrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDbGRYgrEe-IO4NVFhexhw" type="_EpAbIIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDbtUIgrEe-IO4NVFhexhw" name="CommunicationGraph" method="_FIfzgIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDbtVIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDbtVYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDbtUYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDbtUogrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDbtU4grEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDbtVogrEe-IO4NVFhexhw" type="_EpAbIIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EpI-AIgrEe-IO4NVFhexhw" name="ConnectivityPoset">
              <ownedComment xmi:id="_FJLwBogrEe-IO4NVFhexhw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_FDc7dIgrEe-IO4NVFhexhw" general="_Eq6foIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIfzjYgrEe-IO4NVFhexhw" name="ConnectivityPoset" specification="_FDcUY4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIfzjogrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIfzj4grEe-IO4NVFhexhw" type="_EpI-AIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIgakIgrEe-IO4NVFhexhw" name="findCoordinator" specification="_FFm3kIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIgakYgrEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIgakogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FDcUY4grEe-IO4NVFhexhw" name="ConnectivityPoset" visibility="package" method="_FIfzjYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDc7cYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDc7cogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDc7cIgrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDc7c4grEe-IO4NVFhexhw" type="_EpI-AIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFm3kIgrEe-IO4NVFhexhw" name="findCoordinator" visibility="protected" method="_FIgakIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFm3kYgrEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FFneoIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EpLaQIgrEe-IO4NVFhexhw" name="DeadlineComparator">
              <interfaceRealization xmi:id="_FFoFsogrEe-IO4NVFhexhw" client="_EpLaQIgrEe-IO4NVFhexhw" supplier="_FDdigIgrEe-IO4NVFhexhw" contract="_FDdigIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIgak4grEe-IO4NVFhexhw" name="compare" specification="_FFpT0YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIgalIgrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIgalYgrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIgalogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FFpT0YgrEe-IO4NVFhexhw" name="compare" method="_FIgak4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFpT0ogrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FFpT04grEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FFp64IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EpOdkIgrEe-IO4NVFhexhw" name="Description">
              <ownedComment xmi:id="_FJLwB4grEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FFqh8IgrEe-IO4NVFhexhw" general="_FDJZcIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHOoMIgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHOoMYgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIgal4grEe-IO4NVFhexhw" name="Description" specification="_EpPEoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIgamIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhBoIgrEe-IO4NVFhexhw" name="Description" specification="_EpPrsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhBoYgrEe-IO4NVFhexhw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBoogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhBo4grEe-IO4NVFhexhw" name="toString" specification="_EpQSwYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhBpIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EpPEoIgrEe-IO4NVFhexhw" name="Description" method="_FIgal4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EpPEoYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EpPEoogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EpPEo4grEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpPrsIgrEe-IO4NVFhexhw" name="Description" method="_FIhBoIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EpPrsogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EpPrs4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EpPrsYgrEe-IO4NVFhexhw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpQSwIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpQSwYgrEe-IO4NVFhexhw" name="toString" method="_FIhBo4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EpQSwogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EpRg4IgrEe-IO4NVFhexhw" name="Edge">
              <generalization xmi:id="_FDf-wIgrEe-IO4NVFhexhw" general="_EscJoIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHOoMogrEe-IO4NVFhexhw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHOoM4grEe-IO4NVFhexhw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHPPQIgrEe-IO4NVFhexhw" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHPPQYgrEe-IO4NVFhexhw" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHPPQogrEe-IO4NVFhexhw" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHPPQ4grEe-IO4NVFhexhw" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHPPRIgrEe-IO4NVFhexhw" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHP2UIgrEe-IO4NVFhexhw" name="state" type="_EpT9IIgrEe-IO4NVFhexhw" association="_FJM-IIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHP2UYgrEe-IO4NVFhexhw" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_FFrJAIgrEe-IO4NVFhexhw" client="_EpRg4IgrEe-IO4NVFhexhw" supplier="_FFaqUYgrEe-IO4NVFhexhw" contract="_FFaqUYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhBpYgrEe-IO4NVFhexhw" name="Edge" specification="_EpVLQogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhBpogrEe-IO4NVFhexhw" type="_EpRg4IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhBp4grEe-IO4NVFhexhw" name="Edge" specification="_EpWZYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhBqIgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBqYgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBqogrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBq4grEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBrIgrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBrYgrEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBrogrEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBr4grEe-IO4NVFhexhw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhBsIgrEe-IO4NVFhexhw" type="_EpRg4IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhBsYgrEe-IO4NVFhexhw" name="compareTo" specification="_FDewoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhBsogrEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIhBs4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhosIgrEe-IO4NVFhexhw" name="toString" specification="_EpXngIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhosYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhosogrEe-IO4NVFhexhw" name="print" specification="_EpY1oIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhos4grEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhotIgrEe-IO4NVFhexhw" name="print" specification="_EpZcsogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EpVLQogrEe-IO4NVFhexhw" name="Edge" visibility="package" method="_FIhBpYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EpVLQ4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EpVyUIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EpVyUYgrEe-IO4NVFhexhw" type="_EpRg4IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpWZYIgrEe-IO4NVFhexhw" name="Edge" visibility="package" method="_FIhBp4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EpXAcIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EpXAcYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EpWZYYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpWZYogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpWZY4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpWZZIgrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpWZZYgrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpWZZogrEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpWZZ4grEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpWZaIgrEe-IO4NVFhexhw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpXAcogrEe-IO4NVFhexhw" type="_EpRg4IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpXngIgrEe-IO4NVFhexhw" name="toString" method="_FIhosIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EpXngYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpY1oIgrEe-IO4NVFhexhw" name="print" method="_FIhosogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EpY1oYgrEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpZcsogrEe-IO4NVFhexhw" name="print" method="_FIhotIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_FDewoIgrEe-IO4NVFhexhw" name="compareTo" method="_FIhBsYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDfXsIgrEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDfXsYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_EpT9IIgrEe-IO4NVFhexhw" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_EpUkMYgrEe-IO4NVFhexhw" name="RELEASED"/>
                <ownedLiteral xmi:id="_EpVLQIgrEe-IO4NVFhexhw" name="EXECUTING"/>
                <ownedLiteral xmi:id="_EpVLQYgrEe-IO4NVFhexhw" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Epe8QIgrEe-IO4NVFhexhw" name="FileManager">
              <ownedComment xmi:id="_FJNlMIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHQdYIgrEe-IO4NVFhexhw" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHQdYYgrEe-IO4NVFhexhw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhotYgrEe-IO4NVFhexhw" name="FileManager" specification="_EpgxcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhotogrEe-IO4NVFhexhw" type="_Epe8QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhot4grEe-IO4NVFhexhw" name="FileManager" specification="_EphYgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhouIgrEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIhouYgrEe-IO4NVFhexhw" type="_Epe8QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIhouogrEe-IO4NVFhexhw" name="getDocumentsDirectory" specification="_Eph_kIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIhou4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIiPwIgrEe-IO4NVFhexhw" name="getCurrentDirectory" specification="_Eph_kogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIiPwYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIiPwogrEe-IO4NVFhexhw" name="createFile" specification="_EpimoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIiPw4grEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiPxIgrEe-IO4NVFhexhw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiPxYgrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiPxogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIiPx4grEe-IO4NVFhexhw" name="createFile" specification="_EpjNsogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIiPyIgrEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiPyYgrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiPyogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIiPy4grEe-IO4NVFhexhw" name="createDirectory" specification="_Epkb0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIiPzIgrEe-IO4NVFhexhw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiPzYgrEe-IO4NVFhexhw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiPzogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIiPz4grEe-IO4NVFhexhw" name="writeFile" specification="_EplC4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIiP0IgrEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiP0YgrEe-IO4NVFhexhw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIiP0ogrEe-IO4NVFhexhw" name="readFile" specification="_EplC44grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIiP04grEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIiP1IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EpgxcIgrEe-IO4NVFhexhw" name="FileManager" method="_FIhotYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EpgxcYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EpgxcogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJNlMYgrEe-IO4NVFhexhw">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_Epgxc4grEe-IO4NVFhexhw" type="_Epe8QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EphYgIgrEe-IO4NVFhexhw" name="FileManager" method="_FIhot4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EphYgogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EphYg4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EphYgYgrEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EphYhIgrEe-IO4NVFhexhw" type="_Epe8QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eph_kIgrEe-IO4NVFhexhw" name="getDocumentsDirectory" method="_FIhouogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eph_kYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eph_kogrEe-IO4NVFhexhw" name="getCurrentDirectory" method="_FIiPwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eph_k4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpimoIgrEe-IO4NVFhexhw" name="createFile" method="_FIiPwogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlMogrEe-IO4NVFhexhw">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_EpimoYgrEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpimoogrEe-IO4NVFhexhw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpjNsIgrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EpjNsYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpjNsogrEe-IO4NVFhexhw" name="createFile" method="_FIiPx4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EpjNs4grEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Epj0wIgrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Epj0wYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Epkb0IgrEe-IO4NVFhexhw" name="createDirectory" method="_FIiPy4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Epkb0YgrEe-IO4NVFhexhw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Epkb0ogrEe-IO4NVFhexhw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Epkb04grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EplC4IgrEe-IO4NVFhexhw" name="writeFile" method="_FIiPz4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EplC4YgrEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EplC4ogrEe-IO4NVFhexhw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EplC44grEe-IO4NVFhexhw" name="readFile" method="_FIiP0ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eplp8IgrEe-IO4NVFhexhw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eplp8YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Epm4EIgrEe-IO4NVFhexhw" name="Flow">
              <ownedComment xmi:id="_FJNlM4grEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
Allows for Schedulable Objects to be compared to flow charataristics and tracks faults  &#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FDleUogrEe-IO4NVFhexhw" general="_EscJoIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHREcIgrEe-IO4NVFhexhw" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHREcYgrEe-IO4NVFhexhw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHREcogrEe-IO4NVFhexhw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHREc4grEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHREdIgrEe-IO4NVFhexhw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHRrgIgrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHRrgYgrEe-IO4NVFhexhw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHRrgogrEe-IO4NVFhexhw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHRrg4grEe-IO4NVFhexhw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHRrhIgrEe-IO4NVFhexhw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHRrhYgrEe-IO4NVFhexhw" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHRrhogrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHRrh4grEe-IO4NVFhexhw" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHRriIgrEe-IO4NVFhexhw" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHSSkYgrEe-IO4NVFhexhw" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHS5oIgrEe-IO4NVFhexhw" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHS5oogrEe-IO4NVFhexhw" name="nodes" visibility="package" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FJvwsIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHTgsogrEe-IO4NVFhexhw" name="linkTxAndTotalCost" visibility="package" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FJvws4grEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHUHwogrEe-IO4NVFhexhw" name="edges" visibility="package" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FJwXwYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHUu0ogrEe-IO4NVFhexhw" name="nodePredecessor" visibility="package" type="_Eqm9oIgrEe-IO4NVFhexhw" association="_FJwXxIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHVV4IgrEe-IO4NVFhexhw" name="edgePredecessor" visibility="package" type="_EpRg4IgrEe-IO4NVFhexhw" association="_FJw-0YgrEe-IO4NVFhexhw"/>
              <interfaceRealization xmi:id="_FFsXIIgrEe-IO4NVFhexhw" client="_Epm4EIgrEe-IO4NVFhexhw" supplier="_FFaqUYgrEe-IO4NVFhexhw" contract="_FFaqUYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIi20IgrEe-IO4NVFhexhw" name="Flow" specification="_EppUUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIi20YgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIi20ogrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIi204grEe-IO4NVFhexhw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIi21IgrEe-IO4NVFhexhw" type="_Epm4EIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIi21YgrEe-IO4NVFhexhw" name="Flow" specification="_Epp7YIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIi21ogrEe-IO4NVFhexhw" type="_Epm4EIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIi214grEe-IO4NVFhexhw" name="getInitialPriority" specification="_EpqicIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIi22IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIi22YgrEe-IO4NVFhexhw" name="getIndex" specification="_EpqicogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIi22ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd4IgrEe-IO4NVFhexhw" name="getNumTxPerLink" specification="_EprJgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd4YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd4ogrEe-IO4NVFhexhw" name="getNodes" specification="_EprwkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd44grEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd5IgrEe-IO4NVFhexhw" name="getEdges" specification="_Eps-sIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd5YgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd5ogrEe-IO4NVFhexhw" name="addEdge" specification="_FDkQMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd54grEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd6IgrEe-IO4NVFhexhw" name="addNode" specification="_FDk3QIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd6YgrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd6ogrEe-IO4NVFhexhw" name="getLinkTxAndTotalCost" specification="_EpuM0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd64grEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd7IgrEe-IO4NVFhexhw" name="setInitialPriority" specification="_Epva8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd7YgrEe-IO4NVFhexhw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIjd7ogrEe-IO4NVFhexhw" name="setIndex" specification="_EpwCAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIjd74grEe-IO4NVFhexhw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIkE8IgrEe-IO4NVFhexhw" name="setNumTxPerLink" specification="_EpwpEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIkE8YgrEe-IO4NVFhexhw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIkE8ogrEe-IO4NVFhexhw" name="setNodes" specification="_FFuMUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIkE84grEe-IO4NVFhexhw" name="nodes" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIkE9IgrEe-IO4NVFhexhw" name="setLinkTxAndTotalCost" specification="_FFuzYYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIkE9YgrEe-IO4NVFhexhw" name="linkTxAndTotalCost" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIkE9ogrEe-IO4NVFhexhw" name="compareTo" specification="_FDk3QogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIkE94grEe-IO4NVFhexhw" name="flow" type="_Epm4EIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIkE-IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIkE-YgrEe-IO4NVFhexhw" name="toString" specification="_EpxQIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIkE-ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EppUUIgrEe-IO4NVFhexhw" name="Flow" visibility="package" method="_FIi20IgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EppUVIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EppUVYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJNlNIgrEe-IO4NVFhexhw">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_EppUUYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EppUUogrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EppUU4grEe-IO4NVFhexhw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EppUVogrEe-IO4NVFhexhw" type="_Epm4EIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Epp7YIgrEe-IO4NVFhexhw" name="Flow" visibility="package" method="_FIi21YgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Epp7YYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Epp7YogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJNlNYgrEe-IO4NVFhexhw">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_Epp7Y4grEe-IO4NVFhexhw" type="_Epm4EIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpqicIgrEe-IO4NVFhexhw" name="getInitialPriority" method="_FIi214grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlNogrEe-IO4NVFhexhw">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_EpqicYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpqicogrEe-IO4NVFhexhw" name="getIndex" method="_FIi22YgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlN4grEe-IO4NVFhexhw">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_Epqic4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EprJgIgrEe-IO4NVFhexhw" name="getNumTxPerLink" method="_FIjd4IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlOIgrEe-IO4NVFhexhw">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_EprJgYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EprwkIgrEe-IO4NVFhexhw" name="getNodes" method="_FIjd4ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlOYgrEe-IO4NVFhexhw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFtlQIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eps-sIgrEe-IO4NVFhexhw" name="getEdges" method="_FIjd5IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlOogrEe-IO4NVFhexhw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFtlQYgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EpuM0IgrEe-IO4NVFhexhw" name="getLinkTxAndTotalCost" method="_FIjd6ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlPYgrEe-IO4NVFhexhw">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFuMUIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Epva8IgrEe-IO4NVFhexhw" name="setInitialPriority" method="_FIjd7IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlPogrEe-IO4NVFhexhw">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Epva8YgrEe-IO4NVFhexhw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpwCAIgrEe-IO4NVFhexhw" name="setIndex" method="_FIjd7ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlP4grEe-IO4NVFhexhw">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EpwCAYgrEe-IO4NVFhexhw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpwpEIgrEe-IO4NVFhexhw" name="setNumTxPerLink" method="_FIkE8IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlQIgrEe-IO4NVFhexhw">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EpwpEYgrEe-IO4NVFhexhw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EpxQIIgrEe-IO4NVFhexhw" name="toString" method="_FIkE-YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Epx3MIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDkQMIgrEe-IO4NVFhexhw" name="addEdge" method="_FIjd5ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlO4grEe-IO4NVFhexhw">
                  <body>@param takes in an edge &#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_FDkQMYgrEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDk3QIgrEe-IO4NVFhexhw" name="addNode" method="_FIjd6IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlPIgrEe-IO4NVFhexhw">
                  <body>@param takes in a node&#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_FDk3QYgrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDk3QogrEe-IO4NVFhexhw" name="compareTo" method="_FIkE9ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDk3Q4grEe-IO4NVFhexhw" name="flow" type="_Epm4EIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDk3RIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FFuMUYgrEe-IO4NVFhexhw" name="setNodes" method="_FIkE8ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlQYgrEe-IO4NVFhexhw">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFuMUogrEe-IO4NVFhexhw" name="nodes" type="_FDJZcIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFuzYYgrEe-IO4NVFhexhw" name="setLinkTxAndTotalCost" method="_FIkE9IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJNlQogrEe-IO4NVFhexhw">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFuzYogrEe-IO4NVFhexhw" name="linkTxAndTotalCost" type="_FDJZcIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ep5L8IgrEe-IO4NVFhexhw" name="FlowMap">
              <ownedComment xmi:id="_FJNlQ4grEe-IO4NVFhexhw">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FDmscIgrEe-IO4NVFhexhw" general="_EnWOQIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHV88IgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHV88YgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ep6aEIgrEe-IO4NVFhexhw" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_FJNlRIgrEe-IO4NVFhexhw">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FDnTgYgrEe-IO4NVFhexhw" general="_EnWOQIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHV88ogrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHV884grEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ep7BIIgrEe-IO4NVFhexhw" name="GraphViz">
              <ownedComment xmi:id="_FJOMQIgrEe-IO4NVFhexhw">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FDohqIgrEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHV89IgrEe-IO4NVFhexhw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHWkAIgrEe-IO4NVFhexhw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHWkAYgrEe-IO4NVFhexhw" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHWkAogrEe-IO4NVFhexhw" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHWkA4grEe-IO4NVFhexhw" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHWkBYgrEe-IO4NVFhexhw" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHXLEYgrEe-IO4NVFhexhw" name="wfm" visibility="package" type="_Epe8QIgrEe-IO4NVFhexhw" association="_FJxl4IgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHXLE4grEe-IO4NVFhexhw" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHXyIIgrEe-IO4NVFhexhw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHXyIogrEe-IO4NVFhexhw" name="gv" visibility="package" type="_Ep7BIIgrEe-IO4NVFhexhw" association="_FJxl44grEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIksAIgrEe-IO4NVFhexhw" name="GraphViz" specification="_FDn6kYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIksAYgrEe-IO4NVFhexhw" name="wfm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIksAogrEe-IO4NVFhexhw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIksA4grEe-IO4NVFhexhw" type="_Ep7BIIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIksBIgrEe-IO4NVFhexhw" name="GraphViz" specification="_FDohoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIksBYgrEe-IO4NVFhexhw" name="wfm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIksBogrEe-IO4NVFhexhw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIksB4grEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIksCIgrEe-IO4NVFhexhw" type="_Ep7BIIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIksCYgrEe-IO4NVFhexhw" name="visualization" specification="_Ep9dYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIksCogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTEIgrEe-IO4NVFhexhw" name="initializeGraphVizContent" specification="_Ep-rgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIlTEYgrEe-IO4NVFhexhw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTEogrEe-IO4NVFhexhw" name="finalizeGraphVizContent" specification="_Ep_SkIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTE4grEe-IO4NVFhexhw" name="getGraphVizContent" specification="_Ep_SkYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIlTFIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTFYgrEe-IO4NVFhexhw" name="createGraphVizContent" specification="_Ep_Sk4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIlTFogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTF4grEe-IO4NVFhexhw" name="addFlowToGraphViz" specification="_Ep_5oYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIlTGIgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTGYgrEe-IO4NVFhexhw" name="addSrcNodeToGraphViz" specification="_EqAgsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIlTGogrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTG4grEe-IO4NVFhexhw" name="addSnkNodeToGraphViz" specification="_EqBHwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIlTHIgrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTHYgrEe-IO4NVFhexhw" name="finalizeCurrentFlowInGraphViz" specification="_EqBHwogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIlTHogrEe-IO4NVFhexhw" name="addNodeName" specification="_EqBu0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIlTH4grEe-IO4NVFhexhw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIlTIIgrEe-IO4NVFhexhw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ep9dYIgrEe-IO4NVFhexhw" name="visualization" method="_FIksCYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDohp4grEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ep-rgIgrEe-IO4NVFhexhw" name="initializeGraphVizContent" method="_FIlTEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Ep-rgYgrEe-IO4NVFhexhw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ep_SkIgrEe-IO4NVFhexhw" name="finalizeGraphVizContent" method="_FIlTEogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ep_SkYgrEe-IO4NVFhexhw" name="getGraphVizContent" method="_FIlTE4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOMQYgrEe-IO4NVFhexhw">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ep_SkogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ep_Sk4grEe-IO4NVFhexhw" name="createGraphVizContent" method="_FIlTFYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Ep_5oIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ep_5oYgrEe-IO4NVFhexhw" name="addFlowToGraphViz" method="_FIlTF4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Ep_5oogrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqAgsIgrEe-IO4NVFhexhw" name="addSrcNodeToGraphViz" method="_FIlTGYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqAgsYgrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqBHwIgrEe-IO4NVFhexhw" name="addSnkNodeToGraphViz" method="_FIlTG4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqBHwYgrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqBHwogrEe-IO4NVFhexhw" name="finalizeCurrentFlowInGraphViz" method="_FIlTHYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EqBu0IgrEe-IO4NVFhexhw" name="addNodeName" visibility="private" method="_FIlTHogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqBu0YgrEe-IO4NVFhexhw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqBu0ogrEe-IO4NVFhexhw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FDn6kYgrEe-IO4NVFhexhw" name="GraphViz" visibility="package" method="_FIksAIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDn6lIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDn6lYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDn6kogrEe-IO4NVFhexhw" name="wfm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDn6k4grEe-IO4NVFhexhw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDn6logrEe-IO4NVFhexhw" type="_Ep7BIIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDohoIgrEe-IO4NVFhexhw" name="GraphViz" visibility="package" method="_FIksBIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDohpIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDohpYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDohoYgrEe-IO4NVFhexhw" name="wfm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDohoogrEe-IO4NVFhexhw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDoho4grEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FDohpogrEe-IO4NVFhexhw" type="_Ep7BIIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqFZMIgrEe-IO4NVFhexhw" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_FJOMQogrEe-IO4NVFhexhw">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_FFwokIgrEe-IO4NVFhexhw" general="_FDq94YgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHYZMIgrEe-IO4NVFhexhw" name="gv" visibility="package" type="_Ep7BIIgrEe-IO4NVFhexhw" association="_FJyM8IgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIl6IIgrEe-IO4NVFhexhw" name="GraphVizListener" specification="_FDsMAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIl6IYgrEe-IO4NVFhexhw" name="gv" type="_Ep7BIIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIl6IogrEe-IO4NVFhexhw" type="_EqFZMIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIl6I4grEe-IO4NVFhexhw" name="buildGraphViz" specification="_FDsMBYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIl6JIgrEe-IO4NVFhexhw" name="gv" type="_Ep7BIIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIl6JYgrEe-IO4NVFhexhw" name="enterWarpName" specification="_FDszEYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIl6JogrEe-IO4NVFhexhw" name="ctx" type="_FDsMB4grEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIl6J4grEe-IO4NVFhexhw" name="exitWarp" specification="_FDtaI4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIl6KIgrEe-IO4NVFhexhw" name="ctx" type="_FDtaIYgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIl6KYgrEe-IO4NVFhexhw" name="enterFlowName" specification="_FDuoQYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIl6KogrEe-IO4NVFhexhw" name="ctx" type="_FDuBM4grEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIl6K4grEe-IO4NVFhexhw" name="exitSrcNode" specification="_FDvPUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIl6LIgrEe-IO4NVFhexhw" name="ctx" type="_FDuoRogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIl6LYgrEe-IO4NVFhexhw" name="exitSnkNode" specification="_FDv2YYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIl6LogrEe-IO4NVFhexhw" name="ctx" type="_FDvPVogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FImhMIgrEe-IO4NVFhexhw" name="exitFlow" specification="_FDwddIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FImhMYgrEe-IO4NVFhexhw" name="ctx" type="_FDwdcogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FDsMAIgrEe-IO4NVFhexhw" name="GraphVizListener" visibility="private" method="_FIl6IIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FDsMAogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FDsMA4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FDsMAYgrEe-IO4NVFhexhw" name="gv" type="_Ep7BIIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FDsMBIgrEe-IO4NVFhexhw" type="_EqFZMIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDsMBYgrEe-IO4NVFhexhw" name="buildGraphViz" isStatic="true" method="_FIl6I4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDsMBogrEe-IO4NVFhexhw" name="gv" type="_Ep7BIIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDszEYgrEe-IO4NVFhexhw" name="enterWarpName" method="_FIl6JYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDszEogrEe-IO4NVFhexhw" name="ctx" type="_FDsMB4grEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDtaI4grEe-IO4NVFhexhw" name="exitWarp" method="_FIl6J4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDtaJIgrEe-IO4NVFhexhw" name="ctx" type="_FDtaIYgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDuoQYgrEe-IO4NVFhexhw" name="enterFlowName" method="_FIl6KYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDuoQogrEe-IO4NVFhexhw" name="ctx" type="_FDuBM4grEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDvPUYgrEe-IO4NVFhexhw" name="exitSrcNode" method="_FIl6K4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDvPUogrEe-IO4NVFhexhw" name="ctx" type="_FDuoRogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDv2YYgrEe-IO4NVFhexhw" name="exitSnkNode" method="_FIl6LYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDv2YogrEe-IO4NVFhexhw" name="ctx" type="_FDvPVogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FDwddIgrEe-IO4NVFhexhw" name="exitFlow" method="_FImhMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FDxEgIgrEe-IO4NVFhexhw" name="ctx" type="_FDwdcogrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqJqoIgrEe-IO4NVFhexhw" name="GuiVisualization">
              <ownedComment xmi:id="_FJOMQ4grEe-IO4NVFhexhw">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHZAQIgrEe-IO4NVFhexhw" name="frame" visibility="package" type="_FDxrkogrEe-IO4NVFhexhw" association="_FJyM84grEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHZAQogrEe-IO4NVFhexhw" name="jtable" visibility="package" type="_FDy5sIgrEe-IO4NVFhexhw" association="_FJy0AYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FImhMogrEe-IO4NVFhexhw" name="GuiVisualization" specification="_EqK4wIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FImhM4grEe-IO4NVFhexhw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FImhNIgrEe-IO4NVFhexhw" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FImhNYgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FImhNogrEe-IO4NVFhexhw" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FImhN4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FImhOIgrEe-IO4NVFhexhw" type="_EqJqoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FImhOYgrEe-IO4NVFhexhw" name="setVisible" specification="_EqMG4IgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInIQIgrEe-IO4NVFhexhw" name="resizeColumnWidth" specification="_FFxPoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInIQYgrEe-IO4NVFhexhw" name="table" type="_FDy5sIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EqK4wIgrEe-IO4NVFhexhw" name="GuiVisualization" method="_FImhMogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EqK4xIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EqK4xYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJOMRIgrEe-IO4NVFhexhw">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_EqK4wYgrEe-IO4NVFhexhw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqK4wogrEe-IO4NVFhexhw" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EqLf0IgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqK4w4grEe-IO4NVFhexhw" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EqLf0YgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqK4xogrEe-IO4NVFhexhw" type="_EqJqoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EqMG4IgrEe-IO4NVFhexhw" name="setVisible" method="_FImhOYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOMRYgrEe-IO4NVFhexhw">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_FFxPoIgrEe-IO4NVFhexhw" name="resizeColumnWidth" visibility="private" method="_FInIQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFxPoYgrEe-IO4NVFhexhw" name="table" type="_FDy5sIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqN8EIgrEe-IO4NVFhexhw" name="InputGraphFile">
              <ownedComment xmi:id="_FJOMRogrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHZnUIgrEe-IO4NVFhexhw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHZnUYgrEe-IO4NVFhexhw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHZnUogrEe-IO4NVFhexhw" name="wfm" visibility="private" type="_Epe8QIgrEe-IO4NVFhexhw" association="_FJy0BIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHaOYIgrEe-IO4NVFhexhw" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHaOYYgrEe-IO4NVFhexhw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHaOY4grEe-IO4NVFhexhw" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHaOZIgrEe-IO4NVFhexhw" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInIQogrEe-IO4NVFhexhw" name="InputGraphFile" specification="_FD0u44grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInIQ4grEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FInIRIgrEe-IO4NVFhexhw" type="_EqN8EIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInIRYgrEe-IO4NVFhexhw" name="InputGraphFile" specification="_FD1V84grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInIRogrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FInIR4grEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FInISIgrEe-IO4NVFhexhw" type="_EqN8EIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInISYgrEe-IO4NVFhexhw" name="setGraphFileName" specification="_EqPxQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInISogrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInvUIgrEe-IO4NVFhexhw" name="verifyGraphFileName" specification="_EqPxQogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInvUYgrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInvUogrEe-IO4NVFhexhw" name="readGraphFile" specification="_EqQYUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInvU4grEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FInvVIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInvVYgrEe-IO4NVFhexhw" name="getInputGraphFileName" specification="_EqQ_YYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInvVogrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FInvV4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FInvWIgrEe-IO4NVFhexhw" name="readGraphFileContents" specification="_EqRmcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FInvWYgrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FInvWogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIoWYIgrEe-IO4NVFhexhw" name="printVerboseMessage" specification="_EqSNgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIoWYYgrEe-IO4NVFhexhw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIoWYogrEe-IO4NVFhexhw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIoWY4grEe-IO4NVFhexhw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EqPxQIgrEe-IO4NVFhexhw" name="setGraphFileName" visibility="private" method="_FInISYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqPxQYgrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqPxQogrEe-IO4NVFhexhw" name="verifyGraphFileName" visibility="private" method="_FInvUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqQYUIgrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqQYUYgrEe-IO4NVFhexhw" name="readGraphFile" method="_FInvUogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqQYUogrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqQ_YIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqQ_YYgrEe-IO4NVFhexhw" name="getInputGraphFileName" visibility="private" method="_FInvVYgrEe-IO4NVFhexhw" raisedException="_FFydwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqQ_YogrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqQ_Y4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqRmcIgrEe-IO4NVFhexhw" name="readGraphFileContents" visibility="private" method="_FInvWIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqRmcYgrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqRmcogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqSNgIgrEe-IO4NVFhexhw" name="printVerboseMessage" visibility="private" method="_FIoWYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqSNgYgrEe-IO4NVFhexhw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqSNgogrEe-IO4NVFhexhw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqSNg4grEe-IO4NVFhexhw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FD0u44grEe-IO4NVFhexhw" name="InputGraphFile" method="_FInIQogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FD1V8IgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FD1V8YgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FD0u5IgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD1V8ogrEe-IO4NVFhexhw" type="_EqN8EIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FD1V84grEe-IO4NVFhexhw" name="InputGraphFile" method="_FInIRYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FD1V9ogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FD1V94grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FD1V9IgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD1V9YgrEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FD1V-IgrEe-IO4NVFhexhw" type="_EqN8EIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqUpwIgrEe-IO4NVFhexhw" name="InstructionTimeSlot">
              <generalization xmi:id="_FD19AIgrEe-IO4NVFhexhw" general="_EsX4MIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHa1cYgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHa1cogrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIoWZIgrEe-IO4NVFhexhw" name="InstructionTimeSlot" specification="_EqV34IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIoWZYgrEe-IO4NVFhexhw" type="_EqUpwIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIoWZogrEe-IO4NVFhexhw" name="InstructionTimeSlot" specification="_EqXGAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIoWZ4grEe-IO4NVFhexhw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIoWaIgrEe-IO4NVFhexhw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIoWaYgrEe-IO4NVFhexhw" type="_EqUpwIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIoWaogrEe-IO4NVFhexhw" name="InstructionTimeSlot" specification="_EqXtEYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIoWa4grEe-IO4NVFhexhw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIoWbIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIoWbYgrEe-IO4NVFhexhw" type="_EqUpwIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EqV34IgrEe-IO4NVFhexhw" name="InstructionTimeSlot" method="_FIoWZIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EqV34YgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EqV34ogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EqV344grEe-IO4NVFhexhw" type="_EqUpwIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EqXGAIgrEe-IO4NVFhexhw" name="InstructionTimeSlot" visibility="package" method="_FIoWZogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EqXGA4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EqXGBIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EqXGAYgrEe-IO4NVFhexhw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqXGAogrEe-IO4NVFhexhw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqXtEIgrEe-IO4NVFhexhw" type="_EqUpwIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EqXtEYgrEe-IO4NVFhexhw" name="InstructionTimeSlot" visibility="package" method="_FIoWaogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EqYUIYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EqYUIogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EqYUIIgrEe-IO4NVFhexhw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EqYUJIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EqYUI4grEe-IO4NVFhexhw" type="_EqUpwIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqY7MIgrEe-IO4NVFhexhw" name="LatencyAnalysis">
              <ownedComment xmi:id="_FJOMR4grEe-IO4NVFhexhw">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHa1c4grEe-IO4NVFhexhw" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHbcgIgrEe-IO4NVFhexhw" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHbcgogrEe-IO4NVFhexhw" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHbchIgrEe-IO4NVFhexhw" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHcDkIgrEe-IO4NVFhexhw" name="latencyReport" visibility="private" type="_EpOdkIgrEe-IO4NVFhexhw" association="_FJzbEYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHcDkogrEe-IO4NVFhexhw" name="program" visibility="private" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJzbFIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHcDlIgrEe-IO4NVFhexhw" name="workload" visibility="private" type="_Eu614IgrEe-IO4NVFhexhw" association="_FJ0CIYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHcqoYgrEe-IO4NVFhexhw" name="programTable" visibility="private" type="_Er0ekIgrEe-IO4NVFhexhw" association="_FJ0CJIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHcqo4grEe-IO4NVFhexhw" name="nodeIndex" visibility="private" type="_FDIyYIgrEe-IO4NVFhexhw" association="_FJ0pMYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIoWbogrEe-IO4NVFhexhw" name="LatencyAnalysis" specification="_FD3yMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIoWb4grEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIoWcIgrEe-IO4NVFhexhw" type="_EqY7MIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIo9cIgrEe-IO4NVFhexhw" name="LatencyAnalysis" specification="_FD3yNYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIo9cYgrEe-IO4NVFhexhw" name="program" type="_ErVWYIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIo9cogrEe-IO4NVFhexhw" type="_EqY7MIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIo9c4grEe-IO4NVFhexhw" name="latencyReport" specification="_EqawYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIo9dIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIo9dYgrEe-IO4NVFhexhw" name="numMatchingTx" specification="_EqbXcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIo9dogrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIo9d4grEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIo9eIgrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIo9eYgrEe-IO4NVFhexhw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIo9eogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EqawYIgrEe-IO4NVFhexhw" name="latencyReport" method="_FIo9c4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FD3yOogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EqbXcIgrEe-IO4NVFhexhw" name="numMatchingTx" method="_FIo9dYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eqb-gIgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eqb-gYgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eqb-gogrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eqb-g4grEe-IO4NVFhexhw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eqb-hIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FD3yMIgrEe-IO4NVFhexhw" name="LatencyAnalysis" visibility="package" method="_FIoWbogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FD3yMogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FD3yM4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FD3yMYgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD3yNIgrEe-IO4NVFhexhw" type="_EqY7MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FD3yNYgrEe-IO4NVFhexhw" name="LatencyAnalysis" visibility="package" method="_FIo9cIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FD3yN4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FD3yOIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FD3yNogrEe-IO4NVFhexhw" name="program" type="_ErVWYIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD3yOYgrEe-IO4NVFhexhw" type="_EqY7MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqfB0IgrEe-IO4NVFhexhw" name="LatencyVisualization">
              <ownedComment xmi:id="_FJOMSIgrEe-IO4NVFhexhw">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FD5AVYgrEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHdRsogrEe-IO4NVFhexhw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHdRs4grEe-IO4NVFhexhw" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHdRtIgrEe-IO4NVFhexhw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHd4wIgrEe-IO4NVFhexhw" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHd4wYgrEe-IO4NVFhexhw" name="warp" visibility="private" type="_Euc70IgrEe-IO4NVFhexhw" association="_FJ1QQIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHd4w4grEe-IO4NVFhexhw" name="la" visibility="private" type="_EqY7MIgrEe-IO4NVFhexhw" association="_FJ1QQ4grEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIo9e4grEe-IO4NVFhexhw" name="LatencyVisualization" specification="_FD5AUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIo9fIgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIo9fYgrEe-IO4NVFhexhw" type="_EqfB0IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FD5AUIgrEe-IO4NVFhexhw" name="LatencyVisualization" visibility="package" method="_FIo9e4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FD5AUogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FD5AU4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FD5AUYgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD5AVIgrEe-IO4NVFhexhw" type="_EqfB0IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqisMIgrEe-IO4NVFhexhw" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_FF0S8IgrEe-IO4NVFhexhw" client="_EqisMIgrEe-IO4NVFhexhw" supplier="_FDdigIgrEe-IO4NVFhexhw" contract="_FDdigIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIo9fogrEe-IO4NVFhexhw" name="compare" specification="_FF1hEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIo9f4grEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIo9gIgrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIo9gYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FF1hEIgrEe-IO4NVFhexhw" name="compare" method="_FIo9fogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FF1hEYgrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF1hEogrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF1hE4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqlIcIgrEe-IO4NVFhexhw" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_FF2IIogrEe-IO4NVFhexhw" client="_EqlIcIgrEe-IO4NVFhexhw" supplier="_FDdigIgrEe-IO4NVFhexhw" contract="_FDdigIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIo9gogrEe-IO4NVFhexhw" name="compare" specification="_FF3WQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIo9g4grEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIo9hIgrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIo9hYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FF3WQIgrEe-IO4NVFhexhw" name="compare" method="_FIo9gogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FF3WQYgrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF3WQogrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF3WQ4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Eqm9oIgrEe-IO4NVFhexhw" name="Node">
              <generalization xmi:id="_FD61hIgrEe-IO4NVFhexhw" general="_EscJoIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHd4xYgrEe-IO4NVFhexhw" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHef0IgrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHef0YgrEe-IO4NVFhexhw" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHef0ogrEe-IO4NVFhexhw" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHef04grEe-IO4NVFhexhw" name="edges" type="_FDJZcIgrEe-IO4NVFhexhw" isReadOnly="true" association="_FJ13UIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHfG4IgrEe-IO4NVFhexhw" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FHfG4YgrEe-IO4NVFhexhw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_FF39UogrEe-IO4NVFhexhw" client="_Eqm9oIgrEe-IO4NVFhexhw" supplier="_FFaqUYgrEe-IO4NVFhexhw" contract="_FFaqUYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkgIgrEe-IO4NVFhexhw" name="Node" specification="_Eqoy0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIpkgYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIpkgogrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIpkg4grEe-IO4NVFhexhw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIpkhIgrEe-IO4NVFhexhw" type="_Eqm9oIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkhYgrEe-IO4NVFhexhw" name="compareTo" specification="_FD6OcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIpkhogrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIpkh4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkiIgrEe-IO4NVFhexhw" name="toString" specification="_EqpZ4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIpkiYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkiogrEe-IO4NVFhexhw" name="addEdge" specification="_FD61gogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIpki4grEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkjIgrEe-IO4NVFhexhw" name="addConflict" specification="_EqqoAYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIpkjYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkjogrEe-IO4NVFhexhw" name="numEdges" specification="_EqrPEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIpkj4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkkIgrEe-IO4NVFhexhw" name="print" specification="_EqrPEogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIpkkYgrEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIpkkogrEe-IO4NVFhexhw" name="print" specification="_EqsdMIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Eqoy0IgrEe-IO4NVFhexhw" name="Node" visibility="package" method="_FIpkgIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Eqoy1IgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Eqoy1YgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Eqoy0YgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eqoy0ogrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eqoy04grEe-IO4NVFhexhw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eqoy1ogrEe-IO4NVFhexhw" type="_Eqm9oIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EqpZ4IgrEe-IO4NVFhexhw" name="toString" method="_FIpkiIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqqA8IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqqoAYgrEe-IO4NVFhexhw" name="addConflict" method="_FIpkjIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqqoAogrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqrPEIgrEe-IO4NVFhexhw" name="numEdges" method="_FIpkjogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqrPEYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqrPEogrEe-IO4NVFhexhw" name="print" method="_FIpkkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EqrPE4grEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EqsdMIgrEe-IO4NVFhexhw" name="print" method="_FIpkkogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_FD6OcIgrEe-IO4NVFhexhw" name="compareTo" method="_FIpkhYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FD6OcYgrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD6OcogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FD61gogrEe-IO4NVFhexhw" name="addEdge" method="_FIpkiogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FD61g4grEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqvggIgrEe-IO4NVFhexhw" name="NodeMap">
              <ownedComment xmi:id="_FJOMSYgrEe-IO4NVFhexhw">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FD7ckIgrEe-IO4NVFhexhw" general="_EnWOQIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHfG4ogrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHfG44grEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EqwuoIgrEe-IO4NVFhexhw" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_FJOzUIgrEe-IO4NVFhexhw">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FD8qsIgrEe-IO4NVFhexhw" general="_Es6DsIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIqLkIgrEe-IO4NVFhexhw" name="NonPreemptiveSchedule" specification="_FD8DoYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIqLkYgrEe-IO4NVFhexhw" name="poset" type="_Eq6foIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIqLkogrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIqLk4grEe-IO4NVFhexhw" type="_EqwuoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FD8DoYgrEe-IO4NVFhexhw" name="NonPreemptiveSchedule" visibility="package" method="_FIqLkIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FD8DpIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FD8DpYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FD8DoogrEe-IO4NVFhexhw" name="poset" type="_Eq6foIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD8Do4grEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FD8DpogrEe-IO4NVFhexhw" type="_EqwuoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Eqx8wIgrEe-IO4NVFhexhw" name="NotImplentedVisualization">
              <generalization xmi:id="_FD8qsogrEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHfG5IgrEe-IO4NVFhexhw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHft8IgrEe-IO4NVFhexhw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHft8YgrEe-IO4NVFhexhw" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHft8ogrEe-IO4NVFhexhw" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHft84grEe-IO4NVFhexhw" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHft9IgrEe-IO4NVFhexhw" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIqLlIgrEe-IO4NVFhexhw" name="NotImplentedVisualization" specification="_EqzK4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIqLlYgrEe-IO4NVFhexhw" type="_Eqx8wIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIqLlogrEe-IO4NVFhexhw" name="NotImplentedVisualization" specification="_Eqzx8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIqLl4grEe-IO4NVFhexhw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIqLmIgrEe-IO4NVFhexhw" type="_Eqx8wIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIqLmYgrEe-IO4NVFhexhw" name="visualization" specification="_Eq0ZBIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIqLmogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EqzK4IgrEe-IO4NVFhexhw" name="NotImplentedVisualization" visibility="package" method="_FIqLlIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EqzK4YgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EqzK4ogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EqzK44grEe-IO4NVFhexhw" type="_Eqx8wIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eqzx8IgrEe-IO4NVFhexhw" name="NotImplentedVisualization" visibility="package" method="_FIqLlogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Eq0ZAYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Eq0ZAogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Eq0ZAIgrEe-IO4NVFhexhw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Eq0ZA4grEe-IO4NVFhexhw" type="_Eqx8wIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eq0ZBIgrEe-IO4NVFhexhw" name="visualization" method="_FIqLmYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FD8qsYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Eq3cUIgrEe-IO4NVFhexhw" name="PeriodComparator">
              <interfaceRealization xmi:id="_FF5ygIgrEe-IO4NVFhexhw" client="_Eq3cUIgrEe-IO4NVFhexhw" supplier="_FDdigIgrEe-IO4NVFhexhw" contract="_FDdigIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIqLm4grEe-IO4NVFhexhw" name="compare" specification="_FF6ZkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIqLnIgrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIqLnYgrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIqLnogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FF6ZkIgrEe-IO4NVFhexhw" name="compare" method="_FIqLm4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FF6ZkYgrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF6ZkogrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF6Zk4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Eq6foIgrEe-IO4NVFhexhw" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_FJOzUYgrEe-IO4NVFhexhw">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHft9YgrEe-IO4NVFhexhw" name="activations" visibility="private" type="_EoQ0QIgrEe-IO4NVFhexhw" association="_FJ13U4grEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHgVAIgrEe-IO4NVFhexhw" name="workload" visibility="private" type="_Eu614IgrEe-IO4NVFhexhw" association="_FJ2eYYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHgVAogrEe-IO4NVFhexhw" name="flows" visibility="protected" type="_Epm4EIgrEe-IO4NVFhexhw" association="_FJ2eZIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FHgVBIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FHgVBYgrEe-IO4NVFhexhw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FHgVA4grEe-IO4NVFhexhw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHg8EIgrEe-IO4NVFhexhw" name="nodes" visibility="private" type="_Eqm9oIgrEe-IO4NVFhexhw" association="_FJ3FcYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FHg8EogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FHg8E4grEe-IO4NVFhexhw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FHg8EYgrEe-IO4NVFhexhw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHg8FYgrEe-IO4NVFhexhw" name="nodeMap" visibility="private" type="_EqvggIgrEe-IO4NVFhexhw" association="_FJ3sgIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHg8F4grEe-IO4NVFhexhw" name="priorityQueue" visibility="private" type="_EsE9QIgrEe-IO4NVFhexhw" association="_FJ3sg4grEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHhjIogrEe-IO4NVFhexhw" name="nodeConnectivityMap" visibility="protected" type="_FDIyYIgrEe-IO4NVFhexhw" association="_FJ4TkYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHiKMogrEe-IO4NVFhexhw" name="activationMap" visibility="package" type="_Ep6aEIgrEe-IO4NVFhexhw" association="_FJ4TlIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIqyoIgrEe-IO4NVFhexhw" name="Poset" specification="_FD940YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIqyoYgrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIqyoogrEe-IO4NVFhexhw" type="_Eq6foIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIqyo4grEe-IO4NVFhexhw" name="getNodeConnectivity" specification="_Eq8U0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIqypIgrEe-IO4NVFhexhw" type="_FDIyYIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZsIgrEe-IO4NVFhexhw" name="getNodeNames" specification="_Eq9i8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIrZsYgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZsogrEe-IO4NVFhexhw" name="getNodesNamesOrderedAlphabetically" specification="_Eq_YIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIrZs4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIrZtIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZtYgrEe-IO4NVFhexhw" name="buildPosetOfActivations" specification="_Eq__MYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZtogrEe-IO4NVFhexhw" name="createEdgeLists" specification="_ErAmQIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZt4grEe-IO4NVFhexhw" name="createConflictLists" specification="_ErAmQYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZuIgrEe-IO4NVFhexhw" name="createGlobalConflictLists" specification="_ErAmQogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZuYgrEe-IO4NVFhexhw" name="createLocalConflictLists" specification="_ErBNUIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIrZuogrEe-IO4NVFhexhw" name="findCoordinator" specification="_FF810IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsAwIgrEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIsAwYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsAwogrEe-IO4NVFhexhw" name="buildTxArray" specification="_FF9c4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsAw4grEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIsAxIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIsAxYgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsAxogrEe-IO4NVFhexhw" name="createInitialActivations" specification="_ErBNUYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsAx4grEe-IO4NVFhexhw" name="getMaxTx" specification="_FD-f5IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsAyIgrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIsAyYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsAyogrEe-IO4NVFhexhw" name="getActivation" specification="_FD_G8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsAy4grEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIsAzIgrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIsAzYgrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsAzogrEe-IO4NVFhexhw" name="getHyperPeriod" specification="_ErCbcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsAz4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsA0IgrEe-IO4NVFhexhw" name="getMaxPhase" specification="_ErCbcogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsA0YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsA0ogrEe-IO4NVFhexhw" name="orderActivations" specification="_ErDCgYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsn0IgrEe-IO4NVFhexhw" name="getNextActivation" specification="_ErDCgogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsn0YgrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsn0ogrEe-IO4NVFhexhw" name="addActivation" specification="_FD_G9YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsn04grEe-IO4NVFhexhw" name="activation" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsn1IgrEe-IO4NVFhexhw" name="findBaseStation" specification="_ErDpkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsn1YgrEe-IO4NVFhexhw" type="_Eqm9oIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Eq8U0IgrEe-IO4NVFhexhw" name="getNodeConnectivity" visibility="private" method="_FIqyo4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FF8OwIgrEe-IO4NVFhexhw" type="_FDIyYIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eq9i8IgrEe-IO4NVFhexhw" name="getNodeNames" method="_FIrZsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FF8OwYgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eq_YIIgrEe-IO4NVFhexhw" name="getNodesNamesOrderedAlphabetically" method="_FIrZsogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eq_YIYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Eq_YIogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eq__MYgrEe-IO4NVFhexhw" name="buildPosetOfActivations" method="_FIrZtYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErAmQIgrEe-IO4NVFhexhw" name="createEdgeLists" visibility="private" method="_FIrZtogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErAmQYgrEe-IO4NVFhexhw" name="createConflictLists" visibility="private" method="_FIrZt4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErAmQogrEe-IO4NVFhexhw" name="createGlobalConflictLists" visibility="private" method="_FIrZuIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErBNUIgrEe-IO4NVFhexhw" name="createLocalConflictLists" visibility="private" method="_FIrZuYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErBNUYgrEe-IO4NVFhexhw" name="createInitialActivations" visibility="private" method="_FIsAxogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErCbcIgrEe-IO4NVFhexhw" name="getHyperPeriod" method="_FIsAzogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErCbcYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErCbcogrEe-IO4NVFhexhw" name="getMaxPhase" method="_FIsA0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErDCgIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErDCgYgrEe-IO4NVFhexhw" name="orderActivations" method="_FIsA0ogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErDCgogrEe-IO4NVFhexhw" name="getNextActivation" method="_FIsn0IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOzVIgrEe-IO4NVFhexhw">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_FD_G9IgrEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ErDpkIgrEe-IO4NVFhexhw" name="findBaseStation" visibility="protected" method="_FIsn1IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOzVogrEe-IO4NVFhexhw">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_FD_G94grEe-IO4NVFhexhw" type="_Eqm9oIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FD940YgrEe-IO4NVFhexhw" name="Poset" visibility="package" method="_FIqyoIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FD-f4YgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FD-f4ogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJOzUogrEe-IO4NVFhexhw">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_FD-f4IgrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD-f44grEe-IO4NVFhexhw" type="_Eq6foIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FD-f5IgrEe-IO4NVFhexhw" name="getMaxTx" visibility="private" method="_FIsAx4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FD-f5YgrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD-f5ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FD_G8IgrEe-IO4NVFhexhw" name="getActivation" visibility="private" method="_FIsAyogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FD_G8YgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FD_G8ogrEe-IO4NVFhexhw" name="node" type="_Eqm9oIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FD_G84grEe-IO4NVFhexhw" type="_EnibgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FD_G9YgrEe-IO4NVFhexhw" name="addActivation" method="_FIsn0ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOzVYgrEe-IO4NVFhexhw">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_FD_G9ogrEe-IO4NVFhexhw" name="activation" type="_EnibgIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FF810IgrEe-IO4NVFhexhw" name="findCoordinator" visibility="protected" method="_FIrZuogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOzU4grEe-IO4NVFhexhw">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_FF810YgrEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF810ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FF9c4IgrEe-IO4NVFhexhw" name="buildTxArray" visibility="private" method="_FIsAwogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FF9c4YgrEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF9c4ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FF9c44grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ErKXQIgrEe-IO4NVFhexhw" name="PreemptiveSchedule">
              <ownedComment xmi:id="_FJOzV4grEe-IO4NVFhexhw">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FED_cogrEe-IO4NVFhexhw" general="_Es6DsIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsn1ogrEe-IO4NVFhexhw" name="PreemptiveSchedule" specification="_FEAVEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsn14grEe-IO4NVFhexhw" name="poset" type="_Eq6foIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIsn2IgrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIsn2YgrEe-IO4NVFhexhw" type="_ErKXQIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsn2ogrEe-IO4NVFhexhw" name="continueSearch" specification="_FEA8IIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsn24grEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIsn3IgrEe-IO4NVFhexhw" name="activation" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIsn3YgrEe-IO4NVFhexhw" type="_FF-rAIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIsn3ogrEe-IO4NVFhexhw" name="toProgram" specification="_ErLlYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIsn34grEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FItO4IgrEe-IO4NVFhexhw" name="findPreeptiveChannelAndTime" specification="_FEBjM4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FItO4YgrEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO4ogrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FItO44grEe-IO4NVFhexhw" type="_FF-rAIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FItO5IgrEe-IO4NVFhexhw" name="findAdditionalTime" specification="_FECKQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FItO5YgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO5ogrEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO54grEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FItO6IgrEe-IO4NVFhexhw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO6YgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FItO6ogrEe-IO4NVFhexhw" name="findMaxTimeAvailable" specification="_FECxUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FItO64grEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO7IgrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FItO7YgrEe-IO4NVFhexhw" type="_FF-rAIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FItO7ogrEe-IO4NVFhexhw" name="availableTime" specification="_FECxVIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FItO74grEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FItO8IgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO8YgrEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO8ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FItO84grEe-IO4NVFhexhw" name="addToSchedule" specification="_FEDYYYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FItO9IgrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FItO9YgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO9ogrEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO94grEe-IO4NVFhexhw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FItO-IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FItO-YgrEe-IO4NVFhexhw" name="addToSchedule" specification="_FEDYZ4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FItO-ogrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FItO-4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ErLlYIgrEe-IO4NVFhexhw" name="toProgram" method="_FIsn3ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEBjMogrEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEAVEIgrEe-IO4NVFhexhw" name="PreemptiveSchedule" visibility="package" method="_FIsn1ogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEAVE4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEAVFIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEAVEYgrEe-IO4NVFhexhw" name="poset" type="_Eq6foIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEAVEogrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEAVFYgrEe-IO4NVFhexhw" type="_ErKXQIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEA8IIgrEe-IO4NVFhexhw" name="continueSearch" visibility="protected" method="_FIsn2ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEA8IYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEA8IogrEe-IO4NVFhexhw" name="activation" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF-rAogrEe-IO4NVFhexhw" type="_FF-rAIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEBjM4grEe-IO4NVFhexhw" name="findPreeptiveChannelAndTime" visibility="private" method="_FItO4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEBjNIgrEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEBjNYgrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF_SEIgrEe-IO4NVFhexhw" type="_FF-rAIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FECKQIgrEe-IO4NVFhexhw" name="findAdditionalTime" visibility="private" method="_FItO5IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FECKQYgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FECKQogrEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FECKQ4grEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FECKRIgrEe-IO4NVFhexhw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FF_SEYgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FECxUYgrEe-IO4NVFhexhw" name="findMaxTimeAvailable" visibility="private" method="_FItO6ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FECxUogrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FECxU4grEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF_SEogrEe-IO4NVFhexhw" type="_FF-rAIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FECxVIgrEe-IO4NVFhexhw" name="availableTime" visibility="private" method="_FItO7ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FECxVYgrEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FECxVogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FECxV4grEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEDYYIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEDYYYgrEe-IO4NVFhexhw" name="addToSchedule" visibility="private" method="_FItO84grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEDYYogrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEDYY4grEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEDYZIgrEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEDYZYgrEe-IO4NVFhexhw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEDYZogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEDYZ4grEe-IO4NVFhexhw" name="addToSchedule" visibility="protected" method="_FItO-YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEDYaIgrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEDYaYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ErS6IIgrEe-IO4NVFhexhw" name="PriorityComparator">
              <interfaceRealization xmi:id="_FF_SE4grEe-IO4NVFhexhw" client="_ErS6IIgrEe-IO4NVFhexhw" supplier="_FDdigIgrEe-IO4NVFhexhw" contract="_FDdigIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIt18IgrEe-IO4NVFhexhw" name="compare" specification="_FF_5IYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIt18YgrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIt18ogrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIt184grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FF_5IYgrEe-IO4NVFhexhw" name="compare" method="_FIt18IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FF_5IogrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FF_5I4grEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGAgMIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ErVWYIgrEe-IO4NVFhexhw" name="Program">
              <ownedComment xmi:id="_FJOzWIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHixQIgrEe-IO4NVFhexhw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHixQYgrEe-IO4NVFhexhw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHixQogrEe-IO4NVFhexhw" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHixQ4grEe-IO4NVFhexhw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHixRIgrEe-IO4NVFhexhw" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHixRYgrEe-IO4NVFhexhw" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHjYUIgrEe-IO4NVFhexhw" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHjYUYgrEe-IO4NVFhexhw" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHjYUogrEe-IO4NVFhexhw" name="workLoad" visibility="package" type="_Eu614IgrEe-IO4NVFhexhw" association="_FJ46oYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHjYVIgrEe-IO4NVFhexhw" name="scheduleBuilt" visibility="package" type="_Er0ekIgrEe-IO4NVFhexhw" association="_FJ46pIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHjYVogrEe-IO4NVFhexhw" name="SchedulerSelected" visibility="package" type="_FGBHQIgrEe-IO4NVFhexhw" association="_FJ5hsYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHj_YYgrEe-IO4NVFhexhw" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHj_Y4grEe-IO4NVFhexhw" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHj_ZYgrEe-IO4NVFhexhw" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHkmcYgrEe-IO4NVFhexhw" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHkmc4grEe-IO4NVFhexhw" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHkmdYgrEe-IO4NVFhexhw" name="channelsAvailable" visibility="package" type="_EocacIgrEe-IO4NVFhexhw" association="_FJ6IwIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHlNgYgrEe-IO4NVFhexhw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHlNg4grEe-IO4NVFhexhw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHlNhYgrEe-IO4NVFhexhw" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHl0kYgrEe-IO4NVFhexhw" name="deadlineMisses" visibility="private" type="_EpOdkIgrEe-IO4NVFhexhw" association="_FJ6Iw4grEe-IO4NVFhexhw"/>
              <interfaceRealization xmi:id="_FELUMIgrEe-IO4NVFhexhw" client="_ErVWYIgrEe-IO4NVFhexhw" supplier="_EtU6cIgrEe-IO4NVFhexhw" contract="_EtU6cIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIt19IgrEe-IO4NVFhexhw" name="Program" specification="_FGBuUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIt19YgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIt19ogrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIt194grEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIt1-IgrEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIt1-YgrEe-IO4NVFhexhw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIt1-ogrEe-IO4NVFhexhw" type="_ErVWYIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIt1-4grEe-IO4NVFhexhw" name="Program" specification="_FGCVYogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIt1_IgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIt1_YgrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIt1_ogrEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIt1_4grEe-IO4NVFhexhw" type="_ErVWYIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIt2AIgrEe-IO4NVFhexhw" name="setDefaultParameters" specification="_FEMiUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIt2AYgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIt2AogrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIt2A4grEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIt2BIgrEe-IO4NVFhexhw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIt2BYgrEe-IO4NVFhexhw" name="toWorkLoad" specification="_ErZn0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIt2BogrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIt2B4grEe-IO4NVFhexhw" name="buildProgram" specification="_FGC8cIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIt2CIgrEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIt2CYgrEe-IO4NVFhexhw" name="buildOriginalProgram" specification="_ErZn0YgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIudAIgrEe-IO4NVFhexhw" name="waitInstruction" specification="_EraO4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIudAYgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudAogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIudA4grEe-IO4NVFhexhw" name="elseWaitInstruction" specification="_Era18IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIudBIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudBYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIudBogrEe-IO4NVFhexhw" name="elsePullClause" specification="_ErbdAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIudB4grEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudCIgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudCYgrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudCogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudC4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIudDIgrEe-IO4NVFhexhw" name="hasPushInstruction" specification="_ErcEEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIudDYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudDogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudD4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudEIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudEYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIudEogrEe-IO4NVFhexhw" name="pushInstruction" specification="_ErcrIYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIudE4grEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudFIgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudFYgrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudFogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudF4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIudGIgrEe-IO4NVFhexhw" name="getFirstChannelInInstruction" specification="_ErdSNYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIudGYgrEe-IO4NVFhexhw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIudGogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvEEIgrEe-IO4NVFhexhw" name="findNextAvailableInstructionTimeSlot" specification="_FENJYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvEEYgrEe-IO4NVFhexhw" name="schedule" type="_Er0ekIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIvEEogrEe-IO4NVFhexhw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEE4grEe-IO4NVFhexhw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEFIgrEe-IO4NVFhexhw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEFYgrEe-IO4NVFhexhw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEFogrEe-IO4NVFhexhw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIvEF4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEGIgrEe-IO4NVFhexhw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIvEGYgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEGogrEe-IO4NVFhexhw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEG4grEe-IO4NVFhexhw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEHIgrEe-IO4NVFhexhw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEHYgrEe-IO4NVFhexhw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEHogrEe-IO4NVFhexhw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEH4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvEIIgrEe-IO4NVFhexhw" name="slotIsAvailable" specification="_FENwcogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvEIYgrEe-IO4NVFhexhw" name="currentInstructionTimeSlot" type="_EqUpwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIvEIogrEe-IO4NVFhexhw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEI4grEe-IO4NVFhexhw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEJIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvEJYgrEe-IO4NVFhexhw" name="findNextAvailableChannel" specification="_FENwd4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvEJogrEe-IO4NVFhexhw" name="schedule" type="_Er0ekIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIvEJ4grEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEKIgrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEKYgrEe-IO4NVFhexhw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEKogrEe-IO4NVFhexhw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIvEK4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvELIgrEe-IO4NVFhexhw" name="selectPriority" specification="_ErfHYIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvELYgrEe-IO4NVFhexhw" name="selectRM" specification="_ErfHYYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvELogrEe-IO4NVFhexhw" name="selectDM" specification="_ErfucIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvEL4grEe-IO4NVFhexhw" name="selectRtHART" specification="_ErfucYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrIIgrEe-IO4NVFhexhw" name="setScheduleSelected" specification="_FGC8cogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrIYgrEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrIogrEe-IO4NVFhexhw" name="setSchedule" specification="_FEOXgYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrI4grEe-IO4NVFhexhw" name="schedule" type="_Er0ekIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrJIgrEe-IO4NVFhexhw" name="getSchedule" specification="_ErfucogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrJYgrEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrJogrEe-IO4NVFhexhw" name="getSchedulerName" specification="_ErgVgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrJ4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrKIgrEe-IO4NVFhexhw" name="getSchChoice" specification="_ErhjoogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrKYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrKogrEe-IO4NVFhexhw" name="getNumChannels" specification="_ErhjpIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrK4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrLIgrEe-IO4NVFhexhw" name="getNumTransmissions" specification="_ErixwogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrLYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrLogrEe-IO4NVFhexhw" name="getRealTimeHartFlag" specification="_ErjY04grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrL4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIvrMIgrEe-IO4NVFhexhw" name="setRealTimeHartFlag" specification="_Erj_4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIvrMYgrEe-IO4NVFhexhw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIwSMIgrEe-IO4NVFhexhw" name="getMinPacketReceptionRate" specification="_Erkm8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIwSMYgrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIwSMogrEe-IO4NVFhexhw" name="getE2e" specification="_ErlOAogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIwSM4grEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIwSNIgrEe-IO4NVFhexhw" name="getName" specification="_ErmcIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIwSNYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIwSNogrEe-IO4NVFhexhw" name="getOptimizationFlag" specification="_ErnDM4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIwSN4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIwSOIgrEe-IO4NVFhexhw" name="deadlineMisses" specification="_ErnqRIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIwSOYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIwSOogrEe-IO4NVFhexhw" name="getNumFaults" specification="_EroRUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIwSO4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIwSPIgrEe-IO4NVFhexhw" name="getNodeMapIndex" specification="_Ero4Y4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIwSPYgrEe-IO4NVFhexhw" type="_FDIyYIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ErZn0IgrEe-IO4NVFhexhw" name="toWorkLoad" method="_FIt2BYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOzWYgrEe-IO4NVFhexhw">
                  <body>Returns the work load &#xD;
   * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEMiVYgrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ErZn0YgrEe-IO4NVFhexhw" name="buildOriginalProgram" method="_FIt2CYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EraO4IgrEe-IO4NVFhexhw" name="waitInstruction" visibility="private" method="_FIudAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EraO4YgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EraO4ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Era18IgrEe-IO4NVFhexhw" name="elseWaitInstruction" visibility="private" method="_FIudA4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Era18YgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Era18ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErbdAIgrEe-IO4NVFhexhw" name="elsePullClause" visibility="private" method="_FIudBogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErbdAYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErbdAogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErbdA4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErbdBIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErbdBYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErcEEIgrEe-IO4NVFhexhw" name="hasPushInstruction" visibility="private" method="_FIudDIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErcEEYgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErcEEogrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErcEE4grEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErcEFIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErcrIIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErcrIYgrEe-IO4NVFhexhw" name="pushInstruction" visibility="private" method="_FIudEogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErdSMIgrEe-IO4NVFhexhw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErdSMYgrEe-IO4NVFhexhw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErdSMogrEe-IO4NVFhexhw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErdSM4grEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ErdSNIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErdSNYgrEe-IO4NVFhexhw" name="getFirstChannelInInstruction" visibility="private" method="_FIudGIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Erd5QIgrEe-IO4NVFhexhw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Erd5QYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErfHYIgrEe-IO4NVFhexhw" name="selectPriority" method="_FIvELIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErfHYYgrEe-IO4NVFhexhw" name="selectRM" method="_FIvELYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErfucIgrEe-IO4NVFhexhw" name="selectDM" method="_FIvELogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErfucYgrEe-IO4NVFhexhw" name="selectRtHART" method="_FIvEL4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_ErfucogrEe-IO4NVFhexhw" name="getSchedule" method="_FIvrJIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOzWogrEe-IO4NVFhexhw">
                  <body>Returns the built schulde&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEOXg4grEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ErgVgIgrEe-IO4NVFhexhw" name="getSchedulerName" method="_FIvrJogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Erg8kIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErhjoogrEe-IO4NVFhexhw" name="getSchChoice" method="_FIvrKIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Erhjo4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErhjpIgrEe-IO4NVFhexhw" name="getNumChannels" method="_FIvrKogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EriKsIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErixwogrEe-IO4NVFhexhw" name="getNumTransmissions" method="_FIvrLIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Erixw4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErjY04grEe-IO4NVFhexhw" name="getRealTimeHartFlag" visibility="private" method="_FIvrLogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErjY1IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Erj_4IgrEe-IO4NVFhexhw" name="setRealTimeHartFlag" visibility="private" method="_FIvrMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Erj_4YgrEe-IO4NVFhexhw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Erkm8IgrEe-IO4NVFhexhw" name="getMinPacketReceptionRate" method="_FIwSMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGDjgYgrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ErlOAogrEe-IO4NVFhexhw" name="getE2e" method="_FIwSMogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGDjgogrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ErmcIIgrEe-IO4NVFhexhw" name="getName" method="_FIwSNIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErmcIYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErnDM4grEe-IO4NVFhexhw" name="getOptimizationFlag" method="_FIwSNogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_ErnqQIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ErnqRIgrEe-IO4NVFhexhw" name="deadlineMisses" method="_FIwSOIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEOXhIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EroRUIgrEe-IO4NVFhexhw" name="getNumFaults" method="_FIwSOogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EroRUYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ero4Y4grEe-IO4NVFhexhw" name="getNodeMapIndex" method="_FIwSPIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJOzW4grEe-IO4NVFhexhw">
                  <body>Retrieves a mapping of node names to their respective indices in the schedule table.&#xD;
   * @return nodeIndexMap</body>
                </ownedComment>
                <ownedParameter xmi:id="_FGEKkIgrEe-IO4NVFhexhw" type="_FDIyYIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEMiUIgrEe-IO4NVFhexhw" name="setDefaultParameters" visibility="private" method="_FIt2AIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEMiUYgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEMiUogrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEMiU4grEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEMiVIgrEe-IO4NVFhexhw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FENJYIgrEe-IO4NVFhexhw" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_FIvEEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FENJYYgrEe-IO4NVFhexhw" name="schedule" type="_Er0ekIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FENJYogrEe-IO4NVFhexhw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJY4grEe-IO4NVFhexhw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJZIgrEe-IO4NVFhexhw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJZYgrEe-IO4NVFhexhw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJZogrEe-IO4NVFhexhw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FENwcIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJZ4grEe-IO4NVFhexhw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FENwcYgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJaIgrEe-IO4NVFhexhw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJaYgrEe-IO4NVFhexhw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJaogrEe-IO4NVFhexhw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJa4grEe-IO4NVFhexhw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJbIgrEe-IO4NVFhexhw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENJbYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FENwcogrEe-IO4NVFhexhw" name="slotIsAvailable" visibility="private" method="_FIvEIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FENwc4grEe-IO4NVFhexhw" name="currentInstructionTimeSlot" type="_EqUpwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FENwdIgrEe-IO4NVFhexhw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENwdYgrEe-IO4NVFhexhw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENwdogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FENwd4grEe-IO4NVFhexhw" name="findNextAvailableChannel" visibility="private" method="_FIvEJYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FENweIgrEe-IO4NVFhexhw" name="schedule" type="_Er0ekIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FENweYgrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENweogrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENwe4grEe-IO4NVFhexhw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FENwfIgrEe-IO4NVFhexhw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEOXgIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEOXgYgrEe-IO4NVFhexhw" name="setSchedule" visibility="private" method="_FIvrIogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEOXgogrEe-IO4NVFhexhw" name="schedule" type="_Er0ekIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGBuUIgrEe-IO4NVFhexhw" name="Program" visibility="package" method="_FIt19IgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGBuVogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGCVYIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGBuUYgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGBuUogrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGBuU4grEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGBuVIgrEe-IO4NVFhexhw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGBuVYgrEe-IO4NVFhexhw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGCVYYgrEe-IO4NVFhexhw" type="_ErVWYIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGCVYogrEe-IO4NVFhexhw" name="Program" visibility="package" method="_FIt1-4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGCVZogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGCVZ4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGCVY4grEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGCVZIgrEe-IO4NVFhexhw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGCVZYgrEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGCVaIgrEe-IO4NVFhexhw" type="_ErVWYIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGC8cIgrEe-IO4NVFhexhw" name="buildProgram" method="_FIt2B4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGC8cYgrEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGC8cogrEe-IO4NVFhexhw" name="setScheduleSelected" visibility="private" method="_FIvrIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGC8c4grEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Er0ekIgrEe-IO4NVFhexhw" name="ProgramSchedule">
              <generalization xmi:id="_FEQzwIgrEe-IO4NVFhexhw" general="_Etc2QIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHmboIgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHmboYgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIw5QIgrEe-IO4NVFhexhw" name="ProgramSchedule" specification="_Er1FoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIw5QYgrEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIw5QogrEe-IO4NVFhexhw" name="ProgramSchedule" specification="_Er1ssIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIw5Q4grEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIw5RIgrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIw5RYgrEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Er1FoIgrEe-IO4NVFhexhw" name="ProgramSchedule" method="_FIw5QIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Er1FoYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Er1FoogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Er1Fo4grEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Er1ssIgrEe-IO4NVFhexhw" name="ProgramSchedule" visibility="package" method="_FIw5QogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Er1ss4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Er1stIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Er1ssYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Er1ssogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Er1stYgrEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Er260IgrEe-IO4NVFhexhw" name="ProgramVisualization">
              <ownedComment xmi:id="_FJPaYIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
@version 1.5&#xD;
ProgramVisualiztion builds graph based on data; checks if flows have passed their deadlines&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FESB44grEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHmboogrEe-IO4NVFhexhw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHmbo4grEe-IO4NVFhexhw" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHnCsIgrEe-IO4NVFhexhw" name="sourceCode" visibility="private" type="_Er0ekIgrEe-IO4NVFhexhw" association="_FJ6v0YgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHnCsogrEe-IO4NVFhexhw" name="program" visibility="private" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJ6v1IgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHnCtIgrEe-IO4NVFhexhw" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIw5RogrEe-IO4NVFhexhw" name="ProgramVisualization" specification="_FERa0YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIw5R4grEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIw5SIgrEe-IO4NVFhexhw" type="_Er260IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIw5SYgrEe-IO4NVFhexhw" name="displayVisualization" specification="_Er3h4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIw5SogrEe-IO4NVFhexhw" type="_EqJqoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIw5S4grEe-IO4NVFhexhw" name="createHeader" specification="_Er4wAogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIw5TIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIxgUIgrEe-IO4NVFhexhw" name="createFooter" specification="_Er5-IogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIxgUYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIxgUogrEe-IO4NVFhexhw" name="createColumnHeader" specification="_Er7MQYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIxgU4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIxgVIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIxgVYgrEe-IO4NVFhexhw" name="createVisualizationData" specification="_Er8aYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIxgVogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIxgV4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIxgWIgrEe-IO4NVFhexhw" name="createTitle" specification="_Er9ogYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIxgWYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Er3h4IgrEe-IO4NVFhexhw" name="displayVisualization" method="_FIw5SYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FESB4IgrEe-IO4NVFhexhw" type="_EqJqoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Er4wAogrEe-IO4NVFhexhw" name="createHeader" visibility="protected" method="_FIw5S4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FESB4YgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Er5-IogrEe-IO4NVFhexhw" name="createFooter" visibility="protected" method="_FIxgUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FESB4ogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Er7MQYgrEe-IO4NVFhexhw" name="createColumnHeader" visibility="protected" method="_FIxgUogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Er7MQogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Er7MQ4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Er8aYIgrEe-IO4NVFhexhw" name="createVisualizationData" visibility="protected" method="_FIxgVYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Er8aYYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Er8aYogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Er9ogYgrEe-IO4NVFhexhw" name="createTitle" visibility="private" method="_FIxgWIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJPaYYgrEe-IO4NVFhexhw">
                  <body>Returns title&#xD;
   * @return returns the title of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_Er9ogogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FERa0YgrEe-IO4NVFhexhw" name="ProgramVisualization" visibility="package" method="_FIw5RogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FERa04grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FERa1IgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FERa0ogrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FERa1YgrEe-IO4NVFhexhw" type="_Er260IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsAEwIgrEe-IO4NVFhexhw" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_FGFYsIgrEe-IO4NVFhexhw" client="_EsAEwIgrEe-IO4NVFhexhw" supplier="_FDdigIgrEe-IO4NVFhexhw" contract="_FDdigIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIxgWogrEe-IO4NVFhexhw" name="compare" specification="_FGF_wIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIxgW4grEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIxgXIgrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIxgXYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FGF_wIgrEe-IO4NVFhexhw" name="compare" method="_FIxgWogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGF_wYgrEe-IO4NVFhexhw" name="obj1" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGF_wogrEe-IO4NVFhexhw" name="obj2" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGF_w4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsChAIgrEe-IO4NVFhexhw" name="ReleaseTimeQueue">
              <generalization xmi:id="_EsFkUYgrEe-IO4NVFhexhw" general="_EsE9QIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHnpwYgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHnpwogrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIxgXogrEe-IO4NVFhexhw" name="ReleaseTimeQueue" specification="_EsDvIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIxgX4grEe-IO4NVFhexhw" type="_EsChAIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIxgYIgrEe-IO4NVFhexhw" name="ReleaseTimeQueue" specification="_FESo8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIxgYYgrEe-IO4NVFhexhw" name="schedulableObjects" type="_FD9RwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIxgYogrEe-IO4NVFhexhw" type="_EsChAIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EsDvIIgrEe-IO4NVFhexhw" name="ReleaseTimeQueue" visibility="package" method="_FIxgXogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EsEWMIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EsEWMYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EsEWMogrEe-IO4NVFhexhw" type="_EsChAIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FESo8IgrEe-IO4NVFhexhw" name="ReleaseTimeQueue" visibility="package" method="_FIxgYIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FESo8ogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FESo84grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FESo8YgrEe-IO4NVFhexhw" name="schedulableObjects" type="_FD9RwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FESo9IgrEe-IO4NVFhexhw" type="_EsChAIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsHZgIgrEe-IO4NVFhexhw" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_FJPaYogrEe-IO4NVFhexhw">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to compute the probabilities that comprise the&#xD;
ReliablityMatrix, which is the core of the reliability visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined in the project assignment.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyHYIgrEe-IO4NVFhexhw" name="ReliabilityAnalysis" specification="_FETQAYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyHYYgrEe-IO4NVFhexhw" name="program" type="_ErVWYIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIyHYogrEe-IO4NVFhexhw" type="_EsHZgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyHY4grEe-IO4NVFhexhw" name="verifyReliabilities" specification="_EsIAkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyHZIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EsIAkIgrEe-IO4NVFhexhw" name="verifyReliabilities" method="_FIyHY4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EsIAkYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FETQAYgrEe-IO4NVFhexhw" name="ReliabilityAnalysis" method="_FIyHYIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FETQA4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FETQBIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FETQAogrEe-IO4NVFhexhw" name="program" type="_ErVWYIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FETQBYgrEe-IO4NVFhexhw" type="_EsHZgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_EsJOsIgrEe-IO4NVFhexhw" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_FJPaY4grEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_EsJ1wIgrEe-IO4NVFhexhw" name="minPacketReceptionRate" type="_FGC8dIgrEe-IO4NVFhexhw" isReadOnly="true"/>
              <ownedAttribute xmi:id="_EsKc0IgrEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsLD4IgrEe-IO4NVFhexhw" name="ReliabilityRow">
              <generalization xmi:id="_FEUeIIgrEe-IO4NVFhexhw" general="_EsX4MIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHnpw4grEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHnpxIgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyHZYgrEe-IO4NVFhexhw" name="ReliabilityRow" specification="_EsMSAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyHZogrEe-IO4NVFhexhw" type="_EsLD4IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyHZ4grEe-IO4NVFhexhw" name="ReliabilityRow" specification="_FGGm0ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyHaIgrEe-IO4NVFhexhw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIyHaYgrEe-IO4NVFhexhw" name="element" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIyHaogrEe-IO4NVFhexhw" type="_EsLD4IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyHa4grEe-IO4NVFhexhw" name="ReliabilityRow" specification="_FGHN5YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyHbIgrEe-IO4NVFhexhw" name="rowArray" type="_FGC8dIgrEe-IO4NVFhexhw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIyHbYgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIyHbogrEe-IO4NVFhexhw" type="_EsLD4IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EsMSAIgrEe-IO4NVFhexhw" name="ReliabilityRow" method="_FIyHZYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EsMSAYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EsMSAogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EsMSA4grEe-IO4NVFhexhw" type="_EsLD4IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGGm0ogrEe-IO4NVFhexhw" name="ReliabilityRow" visibility="package" method="_FIyHZ4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGHN4ogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGHN44grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGHN4IgrEe-IO4NVFhexhw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGHN4YgrEe-IO4NVFhexhw" name="element" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGHN5IgrEe-IO4NVFhexhw" type="_EsLD4IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGHN5YgrEe-IO4NVFhexhw" name="ReliabilityRow" visibility="package" method="_FIyHa4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGHN54grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGHN6IgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGHN5ogrEe-IO4NVFhexhw" name="rowArray" type="_FGC8dIgrEe-IO4NVFhexhw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FGHN6ogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGHN6YgrEe-IO4NVFhexhw" type="_EsLD4IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsOHMIgrEe-IO4NVFhexhw" name="ReliabilityTable">
              <generalization xmi:id="_FEVsQIgrEe-IO4NVFhexhw" general="_Etc2QIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHnpxYgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHoQ0IgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyHb4grEe-IO4NVFhexhw" name="ReliabilityTable" specification="_EsPVUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyHcIgrEe-IO4NVFhexhw" type="_EsOHMIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyHcYgrEe-IO4NVFhexhw" name="ReliabilityTable" specification="_EsP8YIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyHcogrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIyHc4grEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIyHdIgrEe-IO4NVFhexhw" type="_EsOHMIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EsPVUIgrEe-IO4NVFhexhw" name="ReliabilityTable" method="_FIyHb4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EsPVUYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EsPVUogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EsPVU4grEe-IO4NVFhexhw" type="_EsOHMIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EsP8YIgrEe-IO4NVFhexhw" name="ReliabilityTable" visibility="package" method="_FIyHcYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EsP8Y4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EsP8ZIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EsP8YYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EsP8YogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EsP8ZYgrEe-IO4NVFhexhw" type="_EsOHMIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsRKgIgrEe-IO4NVFhexhw" name="ReliabilityVisualization">
              <ownedComment xmi:id="_FJPaZIgrEe-IO4NVFhexhw">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FEW6Y4grEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHoQ0YgrEe-IO4NVFhexhw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHoQ0ogrEe-IO4NVFhexhw" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHoQ04grEe-IO4NVFhexhw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHoQ1IgrEe-IO4NVFhexhw" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHoQ1YgrEe-IO4NVFhexhw" name="warp" visibility="private" type="_Euc70IgrEe-IO4NVFhexhw" association="_FJ7W4YgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHoQ14grEe-IO4NVFhexhw" name="ra" visibility="private" type="_EsHZgIgrEe-IO4NVFhexhw" association="_FJ7W5IgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyucIgrEe-IO4NVFhexhw" name="ReliabilityVisualization" specification="_FEWTUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyucYgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIyucogrEe-IO4NVFhexhw" type="_EsRKgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FEWTUYgrEe-IO4NVFhexhw" name="ReliabilityVisualization" visibility="package" method="_FIyucIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEW6YIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEW6YYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEWTUogrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEW6YogrEe-IO4NVFhexhw" type="_EsRKgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsTmwIgrEe-IO4NVFhexhw" name="ReportVisualization">
              <generalization xmi:id="_FEXheYgrEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHo34YgrEe-IO4NVFhexhw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHo34ogrEe-IO4NVFhexhw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHo344grEe-IO4NVFhexhw" name="content" visibility="private" type="_EpOdkIgrEe-IO4NVFhexhw" association="_FJ798YgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHo35YgrEe-IO4NVFhexhw" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyuc4grEe-IO4NVFhexhw" name="ReportVisualization" specification="_FEW6ZIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyudIgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIyudYgrEe-IO4NVFhexhw" name="warp" type="_EtU6cIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIyudogrEe-IO4NVFhexhw" name="content" type="_EpOdkIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIyud4grEe-IO4NVFhexhw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIyueIgrEe-IO4NVFhexhw" type="_EsTmwIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyueYgrEe-IO4NVFhexhw" name="visualization" specification="_EsU04IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyueogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyue4grEe-IO4NVFhexhw" name="createReport" specification="_EsVb8ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyufIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EsU04IgrEe-IO4NVFhexhw" name="visualization" method="_FIyueYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEXhd4grEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EsVb8ogrEe-IO4NVFhexhw" name="createReport" visibility="private" method="_FIyue4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEXheIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEW6ZIgrEe-IO4NVFhexhw" name="ReportVisualization" visibility="package" method="_FIyuc4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEXhdIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEXhdYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEXhcIgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEXhcYgrEe-IO4NVFhexhw" name="warp" type="_EtU6cIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEXhcogrEe-IO4NVFhexhw" name="content" type="_EpOdkIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEXhc4grEe-IO4NVFhexhw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEXhdogrEe-IO4NVFhexhw" type="_EsTmwIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EsX4MIgrEe-IO4NVFhexhw" name="Row">
              <generalization xmi:id="_FGIcCYgrEe-IO4NVFhexhw" general="_FDJZcIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHpe8YgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHpe8ogrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyufYgrEe-IO4NVFhexhw" name="Row" specification="_EsZGUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyufogrEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyuf4grEe-IO4NVFhexhw" name="Row" specification="_FGH08IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyugIgrEe-IO4NVFhexhw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIyugYgrEe-IO4NVFhexhw" name="element" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIyugogrEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIyug4grEe-IO4NVFhexhw" name="Row" specification="_FGIcA4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIyuhIgrEe-IO4NVFhexhw" name="rowArray" type="_FFoswYgrEe-IO4NVFhexhw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FIyuhYgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIyuhogrEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIzVgIgrEe-IO4NVFhexhw" name="Row" specification="_EsaUcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIzVgYgrEe-IO4NVFhexhw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVgogrEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EsZGUIgrEe-IO4NVFhexhw" name="Row" method="_FIyufYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EsZGUYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EsZGUogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EsZtYIgrEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EsaUcIgrEe-IO4NVFhexhw" name="Row" visibility="package" method="_FIzVgIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EsaUcogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EsaUc4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EsaUcYgrEe-IO4NVFhexhw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EsaUdIgrEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGH08IgrEe-IO4NVFhexhw" name="Row" visibility="package" method="_FIyuf4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGIcAIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGIcAYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGH08YgrEe-IO4NVFhexhw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGH08ogrEe-IO4NVFhexhw" name="element" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGIcAogrEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGIcA4grEe-IO4NVFhexhw" name="Row" visibility="package" method="_FIyug4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGIcBYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGIcBogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGIcBIgrEe-IO4NVFhexhw" name="rowArray" type="_FFoswYgrEe-IO4NVFhexhw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FGIcCIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGIcB4grEe-IO4NVFhexhw" type="_EsX4MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EscJoIgrEe-IO4NVFhexhw" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_FHpe84grEe-IO4NVFhexhw" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHpe9IgrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHpe9YgrEe-IO4NVFhexhw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHqGAIgrEe-IO4NVFhexhw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqGAYgrEe-IO4NVFhexhw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHqGAogrEe-IO4NVFhexhw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqGA4grEe-IO4NVFhexhw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHqGBIgrEe-IO4NVFhexhw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqGBYgrEe-IO4NVFhexhw" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHqGBogrEe-IO4NVFhexhw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqGB4grEe-IO4NVFhexhw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqtEYgrEe-IO4NVFhexhw" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqtEogrEe-IO4NVFhexhw" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqtE4grEe-IO4NVFhexhw" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqtFIgrEe-IO4NVFhexhw" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHqtFogrEe-IO4NVFhexhw" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHrUIYgrEe-IO4NVFhexhw" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHrUI4grEe-IO4NVFhexhw" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHrUJIgrEe-IO4NVFhexhw" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHrUJYgrEe-IO4NVFhexhw" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHr7MIgrEe-IO4NVFhexhw" name="predecessor" type="_EscJoIgrEe-IO4NVFhexhw" association="_FJPaZYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHr7MYgrEe-IO4NVFhexhw" name="endTimes" visibility="private" type="_EsE9QIgrEe-IO4NVFhexhw" association="_FJ8lAIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHsiQIgrEe-IO4NVFhexhw" name="subObjects" type="_FEZWoYgrEe-IO4NVFhexhw" isReadOnly="true" association="_FJ8lA4grEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIzVg4grEe-IO4NVFhexhw" name="SchedulableObject" specification="_Esel4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIzVhIgrEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIzVhYgrEe-IO4NVFhexhw" name="SchedulableObject" specification="_FEZ9sIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIzVhogrEe-IO4NVFhexhw" name="obj" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FIzVh4grEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzViIgrEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIzViYgrEe-IO4NVFhexhw" name="SchedulableObject" specification="_Esf0AIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIzViogrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVi4grEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVjIgrEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVjYgrEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVjogrEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIzVj4grEe-IO4NVFhexhw" name="SchedulableObject" specification="_EsgbEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIzVkIgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVkYgrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVkogrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVk4grEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVlIgrEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FIzVlYgrEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIz8kIgrEe-IO4NVFhexhw" name="setDefaultParameters" specification="_EshpMIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FIz8kYgrEe-IO4NVFhexhw" name="getAllEndTimes" specification="_EshpMYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FIz8kogrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI0joIgrEe-IO4NVFhexhw" name="addToEndTimes" specification="_Esi3UIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI0joYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI0joogrEe-IO4NVFhexhw" name="peekEndTimes" specification="_Esi3UogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI0jo4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI0jpIgrEe-IO4NVFhexhw" name="pollEndTimes" specification="_EsjeYIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI0jpYgrEe-IO4NVFhexhw" name="addSubObject" specification="_FEakxYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI0jpogrEe-IO4NVFhexhw" name="obj" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1KsIgrEe-IO4NVFhexhw" name="getName" specification="_EsjeYYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1KsYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1KsogrEe-IO4NVFhexhw" name="setName" specification="_EskFcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1Ks4grEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1KtIgrEe-IO4NVFhexhw" name="getReleaseTime" specification="_EskFcogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1KtYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1KtogrEe-IO4NVFhexhw" name="getPhase" specification="_EsksgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1Kt4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1KuIgrEe-IO4NVFhexhw" name="getStartTime" specification="_EsksgogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1KuYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xwIgrEe-IO4NVFhexhw" name="setEndTime" specification="_EslTkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1xwYgrEe-IO4NVFhexhw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xwogrEe-IO4NVFhexhw" name="setStartTime" specification="_EslTkogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1xw4grEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xxIgrEe-IO4NVFhexhw" name="setReleaseTime" specification="_Esl6oIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1xxYgrEe-IO4NVFhexhw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xxogrEe-IO4NVFhexhw" name="setPeriod" specification="_EsmhsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1xx4grEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xyIgrEe-IO4NVFhexhw" name="setPhase" specification="_EsmhsogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1xyYgrEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xyogrEe-IO4NVFhexhw" name="setNextReleaseTime" specification="_EsnIwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1xy4grEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xzIgrEe-IO4NVFhexhw" name="maxPhaseComparison" specification="_FEakx4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1xzYgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI1xzogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1xz4grEe-IO4NVFhexhw" name="maxPhaseComparison" specification="_FEakyogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1x0IgrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI1x0YgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI1x0ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1x04grEe-IO4NVFhexhw" name="deadlineComparison" specification="_FEakzogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1x1IgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI1x1YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI1x1ogrEe-IO4NVFhexhw" name="deadlineComparison" specification="_FEak0YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI1x14grEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI1x2IgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI1x2YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y0IgrEe-IO4NVFhexhw" name="periodComparison" specification="_FEbL0YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y0YgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y0ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y04grEe-IO4NVFhexhw" name="periodComparison" specification="_FEbL1IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y1IgrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y1YgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y1ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y14grEe-IO4NVFhexhw" name="priorityComparison" specification="_FEbL2IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y2IgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y2YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y2ogrEe-IO4NVFhexhw" name="priorityComparison" specification="_FEby4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y24grEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y3IgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y3YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y3ogrEe-IO4NVFhexhw" name="releaseTimeComparison" specification="_FEby5IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y34grEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y4IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y4YgrEe-IO4NVFhexhw" name="releaseTimeComparison" specification="_FEby54grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y4ogrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y44grEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y5IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y5YgrEe-IO4NVFhexhw" name="LatestReleaseTimeComparison" specification="_FEby64grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y5ogrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y54grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2Y6IgrEe-IO4NVFhexhw" name="LatestReleaseTimeComparison" specification="_FEcZ8YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2Y6YgrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y6ogrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2Y64grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2_4IgrEe-IO4NVFhexhw" name="compareAscendingOrder" specification="_EsplAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2_4YgrEe-IO4NVFhexhw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI2_4ogrEe-IO4NVFhexhw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI2_44grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2_5IgrEe-IO4NVFhexhw" name="compareDescendingOrder" specification="_EsqMEogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2_5YgrEe-IO4NVFhexhw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI2_5ogrEe-IO4NVFhexhw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI2_54grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2_6IgrEe-IO4NVFhexhw" name="print" specification="_EsqzI4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2_6YgrEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2_6ogrEe-IO4NVFhexhw" name="print" specification="_EsraMIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Esel4IgrEe-IO4NVFhexhw" name="SchedulableObject" visibility="package" method="_FIzVg4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Esel4YgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Esel4ogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Esel44grEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Esf0AIgrEe-IO4NVFhexhw" name="SchedulableObject" visibility="package" method="_FIzViYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_Esf0BYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Esf0BogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Esf0AYgrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Esf0AogrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Esf0A4grEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Esf0BIgrEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Esf0B4grEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EsgbEIgrEe-IO4NVFhexhw" name="SchedulableObject" visibility="package" method="_FIzVj4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EshCJIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EshCJYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EsgbEYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EshCIIgrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EshCIYgrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EshCIogrEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EshCI4grEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EshCJogrEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EshpMIgrEe-IO4NVFhexhw" name="setDefaultParameters" visibility="private" method="_FIz8kIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EshpMYgrEe-IO4NVFhexhw" name="getAllEndTimes" method="_FIz8kYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBcogrEe-IO4NVFhexhw">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEakxIgrEe-IO4NVFhexhw" type="_EsE9QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Esi3UIgrEe-IO4NVFhexhw" name="addToEndTimes" method="_FI0joIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Esi3UYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Esi3UogrEe-IO4NVFhexhw" name="peekEndTimes" method="_FI0joogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Esi3U4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsjeYIgrEe-IO4NVFhexhw" name="pollEndTimes" method="_FI0jpIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EsjeYYgrEe-IO4NVFhexhw" name="getName" method="_FI1KsIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBc4grEe-IO4NVFhexhw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_EsjeYogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EskFcIgrEe-IO4NVFhexhw" name="setName" method="_FI1KsogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBdIgrEe-IO4NVFhexhw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EskFcYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EskFcogrEe-IO4NVFhexhw" name="getReleaseTime" method="_FI1KtIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBdYgrEe-IO4NVFhexhw">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_EskFc4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsksgIgrEe-IO4NVFhexhw" name="getPhase" method="_FI1KtogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBdogrEe-IO4NVFhexhw">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_EsksgYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsksgogrEe-IO4NVFhexhw" name="getStartTime" method="_FI1KuIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBd4grEe-IO4NVFhexhw">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_Esksg4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EslTkIgrEe-IO4NVFhexhw" name="setEndTime" method="_FI1xwIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBeIgrEe-IO4NVFhexhw">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EslTkYgrEe-IO4NVFhexhw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EslTkogrEe-IO4NVFhexhw" name="setStartTime" method="_FI1xwogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBeYgrEe-IO4NVFhexhw">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EslTk4grEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Esl6oIgrEe-IO4NVFhexhw" name="setReleaseTime" method="_FI1xxIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBeogrEe-IO4NVFhexhw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Esl6oYgrEe-IO4NVFhexhw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsmhsIgrEe-IO4NVFhexhw" name="setPeriod" method="_FI1xxogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBe4grEe-IO4NVFhexhw">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EsmhsYgrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsmhsogrEe-IO4NVFhexhw" name="setPhase" method="_FI1xyIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBfIgrEe-IO4NVFhexhw">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Esmhs4grEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsnIwIgrEe-IO4NVFhexhw" name="setNextReleaseTime" method="_FI1xyogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQBfYgrEe-IO4NVFhexhw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EsnIwYgrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsplAIgrEe-IO4NVFhexhw" name="compareAscendingOrder" method="_FI2_4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EsplAYgrEe-IO4NVFhexhw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EsqMEIgrEe-IO4NVFhexhw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EsqMEYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsqMEogrEe-IO4NVFhexhw" name="compareDescendingOrder" method="_FI2_5IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EsqzIIgrEe-IO4NVFhexhw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EsqzIYgrEe-IO4NVFhexhw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EsqzIogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsqzI4grEe-IO4NVFhexhw" name="print" method="_FI2_6IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EsqzJIgrEe-IO4NVFhexhw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EsraMIgrEe-IO4NVFhexhw" name="print" method="_FI2_6ogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_FEZ9sIgrEe-IO4NVFhexhw" name="SchedulableObject" visibility="package" method="_FIzVhYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEakwYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEakwogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJQBcYgrEe-IO4NVFhexhw">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEZ9sYgrEe-IO4NVFhexhw" name="obj" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEakwIgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEakw4grEe-IO4NVFhexhw" type="_EscJoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEakxYgrEe-IO4NVFhexhw" name="addSubObject" method="_FI0jpYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEakxogrEe-IO4NVFhexhw" name="obj" type="_EscJoIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEakx4grEe-IO4NVFhexhw" name="maxPhaseComparison" method="_FI1xzIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEakyIgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEakyYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEakyogrEe-IO4NVFhexhw" name="maxPhaseComparison" method="_FI1xz4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEaky4grEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEakzIgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEakzYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEakzogrEe-IO4NVFhexhw" name="deadlineComparison" method="_FI1x04grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEakz4grEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEak0IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEak0YgrEe-IO4NVFhexhw" name="deadlineComparison" method="_FI1x1ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEak0ogrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEak04grEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEbL0IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEbL0YgrEe-IO4NVFhexhw" name="periodComparison" method="_FI2Y0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEbL0ogrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEbL04grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEbL1IgrEe-IO4NVFhexhw" name="periodComparison" method="_FI2Y04grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEbL1YgrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEbL1ogrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEbL14grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEbL2IgrEe-IO4NVFhexhw" name="priorityComparison" method="_FI2Y14grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEbL2YgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEbL2ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEby4IgrEe-IO4NVFhexhw" name="priorityComparison" method="_FI2Y2ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEby4YgrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEby4ogrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEby44grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEby5IgrEe-IO4NVFhexhw" name="releaseTimeComparison" method="_FI2Y3ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEby5YgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEby5ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEby54grEe-IO4NVFhexhw" name="releaseTimeComparison" method="_FI2Y4YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEby6IgrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEby6YgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEby6ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEby64grEe-IO4NVFhexhw" name="LatestReleaseTimeComparison" method="_FI2Y5YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEby7IgrEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEcZ8IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEcZ8YgrEe-IO4NVFhexhw" name="LatestReleaseTimeComparison" method="_FI2Y6IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEcZ8ogrEe-IO4NVFhexhw" name="obj1" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEcZ84grEe-IO4NVFhexhw" name="obj2" type="_EscJoIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEcZ9IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Es1yQIgrEe-IO4NVFhexhw" name="SchedulableObjectQueue">
              <generalization xmi:id="_Es4OgIgrEe-IO4NVFhexhw" general="_EsE9QIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHtJUIgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHtJUYgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI2_64grEe-IO4NVFhexhw" name="SchedulableObjectQueue" specification="_FGK4QIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI2_7IgrEe-IO4NVFhexhw" name="comparitor" type="_FDdigIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI2_7YgrEe-IO4NVFhexhw" type="_Es1yQIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI3m8IgrEe-IO4NVFhexhw" name="SchedulableObjectQueue" specification="_FGLfUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI3m8YgrEe-IO4NVFhexhw" name="comparitor" type="_FDdigIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI3m8ogrEe-IO4NVFhexhw" name="schedulableObjects" type="_FD9RwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI3m84grEe-IO4NVFhexhw" type="_Es1yQIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FGK4QIgrEe-IO4NVFhexhw" name="SchedulableObjectQueue" visibility="package" method="_FI2_64grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGK4QogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGK4Q4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGK4QYgrEe-IO4NVFhexhw" name="comparitor" type="_FDdigIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGK4RIgrEe-IO4NVFhexhw" type="_Es1yQIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGLfUYgrEe-IO4NVFhexhw" name="SchedulableObjectQueue" visibility="package" method="_FI3m8IgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGLfVIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGLfVYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGLfUogrEe-IO4NVFhexhw" name="comparitor" type="_FDdigIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGLfU4grEe-IO4NVFhexhw" name="schedulableObjects" type="_FD9RwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGLfVogrEe-IO4NVFhexhw" type="_Es1yQIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Es6DsIgrEe-IO4NVFhexhw" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_FJQogIgrEe-IO4NVFhexhw">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHtJUogrEe-IO4NVFhexhw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHtwYIgrEe-IO4NVFhexhw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHtwYYgrEe-IO4NVFhexhw" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHtwY4grEe-IO4NVFhexhw" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHtwZYgrEe-IO4NVFhexhw" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHuXcIgrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHuXcogrEe-IO4NVFhexhw" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHuXdIgrEe-IO4NVFhexhw" name="schedule" visibility="protected" type="_EtMXkIgrEe-IO4NVFhexhw" association="_FJ9MEIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHu-gYgrEe-IO4NVFhexhw" name="poset" visibility="protected" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ9ME4grEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI3m9IgrEe-IO4NVFhexhw" name="Schedule" specification="_FEfdQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI3m9YgrEe-IO4NVFhexhw" name="poset" type="_Eq6foIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI3m9ogrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI3m94grEe-IO4NVFhexhw" type="_Es6DsIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI3nAogrEe-IO4NVFhexhw" name="getSchedule" specification="_Es-8MIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI3nA4grEe-IO4NVFhexhw" type="_EtMXkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OAIgrEe-IO4NVFhexhw" name="buildSchedule" specification="_Es_jQIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OAYgrEe-IO4NVFhexhw" name="toProgram" specification="_Es_jQYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OAogrEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OA4grEe-IO4NVFhexhw" name="replaceNullWithSleep" specification="_FEfdSIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OBIgrEe-IO4NVFhexhw" name="program" type="_Er0ekIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OBYgrEe-IO4NVFhexhw" name="fakeSchedulingToTestRest" specification="_FEfdSogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OBogrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OB4grEe-IO4NVFhexhw" name="getChannelAndSetStartTime" specification="_FEgrYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OCIgrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI4OCYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OCogrEe-IO4NVFhexhw" name="findChannelAndTime" specification="_FEgrY4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OC4grEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI4ODIgrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI4ODYgrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4ODogrEe-IO4NVFhexhw" name="continueSearch" specification="_FEhScYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OD4grEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI4OEIgrEe-IO4NVFhexhw" name="activation" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI4OEYgrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OEogrEe-IO4NVFhexhw" name="noOtherChannelConflicts" specification="_FEhSdYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OE4grEe-IO4NVFhexhw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI4OFIgrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI4OFYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI4OFogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI4OF4grEe-IO4NVFhexhw" name="conflictsExist" specification="_FEh5gIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI4OGIgrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI4OGYgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI4OGogrEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI4OG4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI41EIgrEe-IO4NVFhexhw" name="freeOfCoordinatorConflicts" specification="_FEh5hYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI41EYgrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41EogrEe-IO4NVFhexhw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41E4grEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41FIgrEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41FYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI41FogrEe-IO4NVFhexhw" name="isAvailable" specification="_FEigkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI41F4grEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41GIgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41GYgrEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41GogrEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41G4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI41HIgrEe-IO4NVFhexhw" name="isAvailable" specification="_FEiglogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI41HYgrEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41HogrEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41H4grEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41IIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI41IYgrEe-IO4NVFhexhw" name="timeRemaining" specification="_EtCmkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI41IogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41I4grEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41JIgrEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41JYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI41JogrEe-IO4NVFhexhw" name="canCombineEntriesInPlace" specification="_FEjHoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI41J4grEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41KIgrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41KYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI41KogrEe-IO4NVFhexhw" name="combinedEntriesInPlace" specification="_FEjHpIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI41K4grEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41LIgrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41LYgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI41LogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI41L4grEe-IO4NVFhexhw" name="addToSchedule" specification="_FEjusIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI41MIgrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI41MYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI5cIIgrEe-IO4NVFhexhw" name="reportNotSchedulable" specification="_FEjus4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI5cIYgrEe-IO4NVFhexhw" name="object" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI5cIogrEe-IO4NVFhexhw" name="printVerbose" specification="_EtD0sIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI5cI4grEe-IO4NVFhexhw" name="print" specification="_EtD0sYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Es-8MIgrEe-IO4NVFhexhw" name="getSchedule" method="_FI3nAogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQog4grEe-IO4NVFhexhw">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEfdRogrEe-IO4NVFhexhw" type="_EtMXkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Es_jQIgrEe-IO4NVFhexhw" name="buildSchedule" visibility="private" method="_FI4OAIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Es_jQYgrEe-IO4NVFhexhw" name="toProgram" method="_FI4OAYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEfdR4grEe-IO4NVFhexhw" type="_Er0ekIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EtCmkIgrEe-IO4NVFhexhw" name="timeRemaining" visibility="protected" method="_FI41IYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQoiYgrEe-IO4NVFhexhw">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_EtCmkYgrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtCmkogrEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtCmk4grEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtCmlIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EtD0sIgrEe-IO4NVFhexhw" name="printVerbose" method="_FI5cIogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EtD0sYgrEe-IO4NVFhexhw" name="print" method="_FI5cI4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_FEfdQIgrEe-IO4NVFhexhw" name="Schedule" visibility="package" method="_FI3m9IgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEfdQ4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEfdRIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEfdQYgrEe-IO4NVFhexhw" name="poset" type="_Eq6foIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEfdQogrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEfdRYgrEe-IO4NVFhexhw" type="_Es6DsIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEfdSIgrEe-IO4NVFhexhw" name="replaceNullWithSleep" visibility="private" method="_FI4OA4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQohIgrEe-IO4NVFhexhw">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEfdSYgrEe-IO4NVFhexhw" name="program" type="_Er0ekIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEfdSogrEe-IO4NVFhexhw" name="fakeSchedulingToTestRest" visibility="private" method="_FI4OBYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEfdS4grEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEgrYIgrEe-IO4NVFhexhw" name="getChannelAndSetStartTime" visibility="protected" method="_FI4OB4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQohYgrEe-IO4NVFhexhw">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEgrYYgrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEgrYogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEgrY4grEe-IO4NVFhexhw" name="findChannelAndTime" visibility="protected" method="_FI4OCogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEgrZIgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEgrZYgrEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEhScIgrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEhScYgrEe-IO4NVFhexhw" name="continueSearch" visibility="protected" method="_FI4ODogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQohogrEe-IO4NVFhexhw">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEhScogrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEhSc4grEe-IO4NVFhexhw" name="activation" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEhSdIgrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEhSdYgrEe-IO4NVFhexhw" name="noOtherChannelConflicts" visibility="protected" method="_FI4OEogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEhSdogrEe-IO4NVFhexhw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEhSd4grEe-IO4NVFhexhw" name="schedulableObject" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEhSeIgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEhSeYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEh5gIgrEe-IO4NVFhexhw" name="conflictsExist" visibility="protected" method="_FI4OF4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEh5gYgrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEh5gogrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEh5g4grEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEh5hIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEh5hYgrEe-IO4NVFhexhw" name="freeOfCoordinatorConflicts" visibility="protected" method="_FI41EIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEh5hogrEe-IO4NVFhexhw" name="obj" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEh5h4grEe-IO4NVFhexhw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEh5iIgrEe-IO4NVFhexhw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEh5iYgrEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEh5iogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEigkIgrEe-IO4NVFhexhw" name="isAvailable" visibility="protected" method="_FI41FogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQoh4grEe-IO4NVFhexhw">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEigkYgrEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEigkogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEigk4grEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEiglIgrEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEiglYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEiglogrEe-IO4NVFhexhw" name="isAvailable" visibility="protected" method="_FI41HIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJQoiIgrEe-IO4NVFhexhw">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEigl4grEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEigmIgrEe-IO4NVFhexhw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEigmYgrEe-IO4NVFhexhw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEigmogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEjHoIgrEe-IO4NVFhexhw" name="canCombineEntriesInPlace" visibility="private" method="_FI41JogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEjHoYgrEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEjHoogrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEjHo4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEjHpIgrEe-IO4NVFhexhw" name="combinedEntriesInPlace" visibility="private" method="_FI41KogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEjHpYgrEe-IO4NVFhexhw" name="a1" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEjHpogrEe-IO4NVFhexhw" name="a2" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEjHp4grEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEjHqIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEjusIgrEe-IO4NVFhexhw" name="addToSchedule" visibility="protected" method="_FI41L4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEjusYgrEe-IO4NVFhexhw" name="next" type="_EnibgIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEjusogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEjus4grEe-IO4NVFhexhw" name="reportNotSchedulable" visibility="private" method="_FI5cIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEjutIgrEe-IO4NVFhexhw" name="object" type="_EnibgIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_Es744IgrEe-IO4NVFhexhw" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_FHu-g4grEe-IO4NVFhexhw" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FHu-hYgrEe-IO4NVFhexhw" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI3m-IgrEe-IO4NVFhexhw" name="ScheduleLocation" specification="_Es8f8IgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI3m-YgrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI3m-ogrEe-IO4NVFhexhw" name="ScheduleLocation" specification="_Es9uEIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI3m-4grEe-IO4NVFhexhw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_FI3m_IgrEe-IO4NVFhexhw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_FI3m_YgrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI3m_ogrEe-IO4NVFhexhw" name="getChannel" specification="_Es9uFogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI3m_4grEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI3nAIgrEe-IO4NVFhexhw" name="getTime" specification="_Es-VIYgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI3nAYgrEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Es8f8IgrEe-IO4NVFhexhw" name="ScheduleLocation" visibility="package" method="_FI3m-IgrEe-IO4NVFhexhw">
                  <eAnnotations xmi:id="_Es9HAIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Es9HAYgrEe-IO4NVFhexhw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Es9HAogrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Es9uEIgrEe-IO4NVFhexhw" name="ScheduleLocation" visibility="package" method="_FI3m-ogrEe-IO4NVFhexhw">
                  <eAnnotations xmi:id="_Es9uE4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Es9uFIgrEe-IO4NVFhexhw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Es9uEYgrEe-IO4NVFhexhw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Es9uEogrEe-IO4NVFhexhw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Es9uFYgrEe-IO4NVFhexhw" type="_Es744IgrEe-IO4NVFhexhw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Es9uFogrEe-IO4NVFhexhw" name="getChannel" visibility="protected" method="_FI3m_ogrEe-IO4NVFhexhw">
                  <ownedComment xmi:id="_FJQogYgrEe-IO4NVFhexhw">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Es-VIIgrEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Es-VIYgrEe-IO4NVFhexhw" name="getTime" visibility="protected" method="_FI3nAIgrEe-IO4NVFhexhw">
                  <ownedComment xmi:id="_FJQogogrEe-IO4NVFhexhw">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Es-VIogrEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EtMXkIgrEe-IO4NVFhexhw" name="ScheduleTable">
              <generalization xmi:id="_FEk80IgrEe-IO4NVFhexhw" general="_Etc2QIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHvlkYgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHvlkogrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI5cJIgrEe-IO4NVFhexhw" name="ScheduleTable" specification="_EtM-oIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI5cJYgrEe-IO4NVFhexhw" type="_EtMXkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI5cJogrEe-IO4NVFhexhw" name="ScheduleTable" specification="_EtOMwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI5cJ4grEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI5cKIgrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI5cKYgrEe-IO4NVFhexhw" type="_EtMXkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EtM-oIgrEe-IO4NVFhexhw" name="ScheduleTable" visibility="package" method="_FI5cJIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EtNlsIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EtNlsYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EtNlsogrEe-IO4NVFhexhw" type="_EtMXkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EtOMwIgrEe-IO4NVFhexhw" name="ScheduleTable" visibility="package" method="_FI5cJogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EtOMw4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EtOMxIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EtOMwYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtOMwogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtOMxYgrEe-IO4NVFhexhw" type="_EtMXkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EtPa4IgrEe-IO4NVFhexhw" name="ScheduleTime">
              <ownedAttribute xmi:id="_FHwMoIgrEe-IO4NVFhexhw" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHwMoYgrEe-IO4NVFhexhw" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI5cKogrEe-IO4NVFhexhw" name="ScheduleTime" specification="_EtQB8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI5cK4grEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI5cLIgrEe-IO4NVFhexhw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI5cLYgrEe-IO4NVFhexhw" type="_EtPa4IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EtQB8IgrEe-IO4NVFhexhw" name="ScheduleTime" visibility="package" method="_FI5cKogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EtQpAYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EtQpAogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EtQB8YgrEe-IO4NVFhexhw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtQpAIgrEe-IO4NVFhexhw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtQpA4grEe-IO4NVFhexhw" type="_EtPa4IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EtRQEIgrEe-IO4NVFhexhw" name="SimulatorInput">
              <ownedComment xmi:id="_FJQoiogrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EtR3IIgrEe-IO4NVFhexhw" name="SortedPeriodQueue">
              <generalization xmi:id="_EtTsUIgrEe-IO4NVFhexhw" general="_EsE9QIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHwMoogrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHwMo4grEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DMIgrEe-IO4NVFhexhw" name="SortedPeriodQueue" specification="_EtTFQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DMYgrEe-IO4NVFhexhw" type="_EtR3IIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DMogrEe-IO4NVFhexhw" name="SortedPeriodQueue" specification="_FEmK8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DM4grEe-IO4NVFhexhw" name="schedulableObjects" type="_FD9RwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6DNIgrEe-IO4NVFhexhw" type="_EtR3IIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EtTFQIgrEe-IO4NVFhexhw" name="SortedPeriodQueue" visibility="package" method="_FI6DMIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EtTFQYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EtTFQogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EtTFQ4grEe-IO4NVFhexhw" type="_EtR3IIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEmK8IgrEe-IO4NVFhexhw" name="SortedPeriodQueue" visibility="package" method="_FI6DMogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEmK8ogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEmK84grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEmK8YgrEe-IO4NVFhexhw" name="schedulableObjects" type="_FD9RwIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEmK9IgrEe-IO4NVFhexhw" type="_EtR3IIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_EtU6cIgrEe-IO4NVFhexhw" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_FEmyAYgrEe-IO4NVFhexhw" general="_EsJOsIgrEe-IO4NVFhexhw"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_EtWIkIgrEe-IO4NVFhexhw" name="ScheduleChoices">
                <ownedLiteral xmi:id="_EtWvoYgrEe-IO4NVFhexhw" name="PRIORITY"/>
                <ownedLiteral xmi:id="_EtWvoogrEe-IO4NVFhexhw" name="RM"/>
                <ownedLiteral xmi:id="_EtWvo4grEe-IO4NVFhexhw" name="DM"/>
                <ownedLiteral xmi:id="_EtWvpIgrEe-IO4NVFhexhw" name="RTHART"/>
                <ownedLiteral xmi:id="_EtWvpYgrEe-IO4NVFhexhw" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_EtXWsIgrEe-IO4NVFhexhw" name="POSET_RM"/>
                <ownedLiteral xmi:id="_EtXWsYgrEe-IO4NVFhexhw" name="POSET_DM"/>
                <ownedLiteral xmi:id="_EtXWsogrEe-IO4NVFhexhw" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_EtXWs4grEe-IO4NVFhexhw" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_EtXWtIgrEe-IO4NVFhexhw" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_EtX9wIgrEe-IO4NVFhexhw" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_EtX9wYgrEe-IO4NVFhexhw" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_EtX9wogrEe-IO4NVFhexhw" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_EtX9w4grEe-IO4NVFhexhw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_EtYk0IgrEe-IO4NVFhexhw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_EtZL4IgrEe-IO4NVFhexhw" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_EtZL4YgrEe-IO4NVFhexhw" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_EtZy8IgrEe-IO4NVFhexhw" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_EtZy8YgrEe-IO4NVFhexhw" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EtbBEIgrEe-IO4NVFhexhw" name="SystemFactory">
              <ownedComment xmi:id="_FJQoi4grEe-IO4NVFhexhw">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DNYgrEe-IO4NVFhexhw" name="create" specification="_FEnZEogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DNogrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6DN4grEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6DOIgrEe-IO4NVFhexhw" name="choice" type="_EtWIkIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6DOYgrEe-IO4NVFhexhw" type="_Euc70IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FEnZEogrEe-IO4NVFhexhw" name="create" isStatic="true" method="_FI6DNYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEoAIIgrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEoAIYgrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEoAIogrEe-IO4NVFhexhw" name="choice" type="_EtWIkIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEoAI4grEe-IO4NVFhexhw" type="_Euc70IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Etc2QIgrEe-IO4NVFhexhw" name="Table">
              <generalization xmi:id="_FGN7kYgrEe-IO4NVFhexhw" general="_FDJZcIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHwzsIgrEe-IO4NVFhexhw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHwzsYgrEe-IO4NVFhexhw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DOogrEe-IO4NVFhexhw" name="Table" specification="_EteEYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DO4grEe-IO4NVFhexhw" type="_Etc2QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DPIgrEe-IO4NVFhexhw" name="Table" specification="_Eterc4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DPYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6DPogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6DP4grEe-IO4NVFhexhw" type="_Etc2QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DQIgrEe-IO4NVFhexhw" name="getNumRows" specification="_EtfShIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DQYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DQogrEe-IO4NVFhexhw" name="getNumColumns" specification="_Etf5kIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DQ4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6DRIgrEe-IO4NVFhexhw" name="set" specification="_FGNUgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6DRYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6DRogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6DR4grEe-IO4NVFhexhw" name="element" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6qQIgrEe-IO4NVFhexhw" name="get" specification="_EtggoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6qQYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6qQogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6qQ4grEe-IO4NVFhexhw" type="_FFoswYgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EteEYIgrEe-IO4NVFhexhw" name="Table" method="_FI6DOogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EtercIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EtercYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EtercogrEe-IO4NVFhexhw" type="_Etc2QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eterc4grEe-IO4NVFhexhw" name="Table" method="_FI6DPIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EtfSgYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EtfSgogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EterdIgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtfSgIgrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtfSg4grEe-IO4NVFhexhw" type="_Etc2QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EtfShIgrEe-IO4NVFhexhw" name="getNumRows" method="_FI6DQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EtfShYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Etf5kIgrEe-IO4NVFhexhw" name="getNumColumns" method="_FI6DQogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Etf5kYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EtggoIgrEe-IO4NVFhexhw" name="get" method="_FI6qQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EtggoYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtggoogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGN7kIgrEe-IO4NVFhexhw" type="_FFoswYgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGNUgIgrEe-IO4NVFhexhw" name="set" method="_FI6DRIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGNUgYgrEe-IO4NVFhexhw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGNUgogrEe-IO4NVFhexhw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGNUg4grEe-IO4NVFhexhw" name="element" type="_FFoswYgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_EtiV0IgrEe-IO4NVFhexhw" name="Visualization">
              <ownedComment xmi:id="_FJQojIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Eti84IgrEe-IO4NVFhexhw" name="SystemChoices">
                <ownedLiteral xmi:id="_Etjj8YgrEe-IO4NVFhexhw" name="SOURCE"/>
                <ownedLiteral xmi:id="_Etjj8ogrEe-IO4NVFhexhw" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_Etjj84grEe-IO4NVFhexhw" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_Etjj9IgrEe-IO4NVFhexhw" name="LATENCY"/>
                <ownedLiteral xmi:id="_Etjj9YgrEe-IO4NVFhexhw" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_EtkLAIgrEe-IO4NVFhexhw" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_EtkLAYgrEe-IO4NVFhexhw" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_EtkLAogrEe-IO4NVFhexhw" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_EtkyEYgrEe-IO4NVFhexhw" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_EtkyEogrEe-IO4NVFhexhw" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_EtkyE4grEe-IO4NVFhexhw" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_EtlZIIgrEe-IO4NVFhexhw" name="toDisplay"/>
              <ownedOperation xmi:id="_EtlZIYgrEe-IO4NVFhexhw" name="toFile"/>
              <ownedOperation xmi:id="_EtlZIogrEe-IO4NVFhexhw" name="toString">
                <ownedParameter xmi:id="_EtmAMIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EtmnQIgrEe-IO4NVFhexhw" name="VisualizationFactory">
              <ownedComment xmi:id="_FJQojYgrEe-IO4NVFhexhw">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6qRIgrEe-IO4NVFhexhw" name="createVisualization" specification="_FEp1UIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6qRYgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qRogrEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6qR4grEe-IO4NVFhexhw" name="choice" type="_Eti84IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qSIgrEe-IO4NVFhexhw" type="_EtiV0IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6qSYgrEe-IO4NVFhexhw" name="createVisualization" specification="_FEp1VYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6qSogrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qS4grEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6qTIgrEe-IO4NVFhexhw" name="choice" type="_EtkLAogrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qTYgrEe-IO4NVFhexhw" type="_EtiV0IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FEp1UIgrEe-IO4NVFhexhw" name="createVisualization" isStatic="true" method="_FI6qRIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEp1UYgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEp1UogrEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEp1U4grEe-IO4NVFhexhw" name="choice" type="_Eti84IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEp1VIgrEe-IO4NVFhexhw" type="_EtiV0IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEp1VYgrEe-IO4NVFhexhw" name="createVisualization" isStatic="true" method="_FI6qSYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEp1VogrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEp1V4grEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEp1WIgrEe-IO4NVFhexhw" name="choice" type="_EtkLAogrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEp1WYgrEe-IO4NVFhexhw" type="_EtiV0IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EtpqkIgrEe-IO4NVFhexhw" name="VisualizationImplementation">
              <ownedComment xmi:id="_FJQojogrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHwzsogrEe-IO4NVFhexhw" name="visualization" visibility="private" type="_EpOdkIgrEe-IO4NVFhexhw" association="_FJ9MFogrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHwztIgrEe-IO4NVFhexhw" name="fileContent" visibility="private" type="_EpOdkIgrEe-IO4NVFhexhw" association="_FJ9zIYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHxawYgrEe-IO4NVFhexhw" name="window" visibility="private" type="_EqJqoIgrEe-IO4NVFhexhw" association="_FJ9zJIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHxaw4grEe-IO4NVFhexhw" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHxaxYgrEe-IO4NVFhexhw" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHyB0IgrEe-IO4NVFhexhw" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHyB0ogrEe-IO4NVFhexhw" name="fm" visibility="private" type="_Epe8QIgrEe-IO4NVFhexhw" association="_FJ-aMYgrEe-IO4NVFhexhw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHyB04grEe-IO4NVFhexhw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHyB1YgrEe-IO4NVFhexhw" name="warp" visibility="private" type="_Euc70IgrEe-IO4NVFhexhw" association="_FJ-aNIgrEe-IO4NVFhexhw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHyB1ogrEe-IO4NVFhexhw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHyo4IgrEe-IO4NVFhexhw" name="workLoad" visibility="private" type="_Eu614IgrEe-IO4NVFhexhw" association="_FJ_BQYgrEe-IO4NVFhexhw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHyo4YgrEe-IO4NVFhexhw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHyo44grEe-IO4NVFhexhw" name="visualizationObject" visibility="private" type="_Et0psIgrEe-IO4NVFhexhw" association="_FJ_BRIgrEe-IO4NVFhexhw"/>
              <interfaceRealization xmi:id="_FEqcYIgrEe-IO4NVFhexhw" client="_EtpqkIgrEe-IO4NVFhexhw" supplier="_EtiV0IgrEe-IO4NVFhexhw" contract="_EtiV0IgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6qTogrEe-IO4NVFhexhw" name="VisualizationImplementation" specification="_FGu48YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6qT4grEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qUIgrEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6qUYgrEe-IO4NVFhexhw" name="choice" type="_FGuR4IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qUogrEe-IO4NVFhexhw" type="_EtpqkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI6qU4grEe-IO4NVFhexhw" name="VisualizationImplementation" specification="_FGvgAogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI6qVIgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qVYgrEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI6qVogrEe-IO4NVFhexhw" name="choice" type="_FGvgAIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI6qV4grEe-IO4NVFhexhw" type="_EtpqkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI7RUIgrEe-IO4NVFhexhw" name="toDisplay" specification="_EtrfwIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI7RUYgrEe-IO4NVFhexhw" name="toFile" specification="_Etst4ogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI7RUogrEe-IO4NVFhexhw" name="toString" specification="_EttU84grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI7RU4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI7RVIgrEe-IO4NVFhexhw" name="createVisualization" specification="_FGwHEYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI7RVYgrEe-IO4NVFhexhw" name="choice" type="_FGuR4IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI7RVogrEe-IO4NVFhexhw" name="createVisualization" specification="_FGwHE4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI7RV4grEe-IO4NVFhexhw" name="choice" type="_FGvgAIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI7RWIgrEe-IO4NVFhexhw" name="createVisualization" specification="_FGwuIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI7RWYgrEe-IO4NVFhexhw" name="obj" type="_FFoswYgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI7RWogrEe-IO4NVFhexhw" name="createFileNameTemplate" specification="_EtvKIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI7RW4grEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI7RXIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EtrfwIgrEe-IO4NVFhexhw" name="toDisplay" method="_FI7RUIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Etst4ogrEe-IO4NVFhexhw" name="toFile" method="_FI7RUYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EttU84grEe-IO4NVFhexhw" name="toString" method="_FI7RUogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Ett8AIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EtvKIIgrEe-IO4NVFhexhw" name="createFileNameTemplate" visibility="private" method="_FI7RWogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EtvKIYgrEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EtvKIogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FGu48YgrEe-IO4NVFhexhw" name="VisualizationImplementation" method="_FI6qTogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGu49YgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGu49ogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGu48ogrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGu484grEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGu49IgrEe-IO4NVFhexhw" name="choice" type="_FGuR4IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGu494grEe-IO4NVFhexhw" type="_EtpqkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGvgAogrEe-IO4NVFhexhw" name="VisualizationImplementation" method="_FI6qU4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FGvgBogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FGvgB4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FGvgA4grEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGvgBIgrEe-IO4NVFhexhw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGvgBYgrEe-IO4NVFhexhw" name="choice" type="_FGvgAIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGwHEIgrEe-IO4NVFhexhw" type="_EtpqkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGwHEYgrEe-IO4NVFhexhw" name="createVisualization" visibility="private" method="_FI7RVIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGwHEogrEe-IO4NVFhexhw" name="choice" type="_FGuR4IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGwHE4grEe-IO4NVFhexhw" name="createVisualization" visibility="private" method="_FI7RVogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGwHFIgrEe-IO4NVFhexhw" name="choice" type="_FGvgAIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGwuIIgrEe-IO4NVFhexhw" name="createVisualization" visibility="private" method="_FI7RWIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGwuIYgrEe-IO4NVFhexhw" name="obj" type="_FFoswYgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Et0psIgrEe-IO4NVFhexhw" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_FJRPkIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FHzP8IgrEe-IO4NVFhexhw" name="fm" visibility="private" type="_Epe8QIgrEe-IO4NVFhexhw" association="_FJ_oUYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FHzP8ogrEe-IO4NVFhexhw" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHzP9IgrEe-IO4NVFhexhw" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHzP9ogrEe-IO4NVFhexhw" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FHz3AIgrEe-IO4NVFhexhw" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FHz3AYgrEe-IO4NVFhexhw" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FHz3AogrEe-IO4NVFhexhw" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI74YIgrEe-IO4NVFhexhw" name="VisualizationObject" specification="_FEsRkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI74YYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74YogrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74Y4grEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74ZIgrEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI74ZYgrEe-IO4NVFhexhw" name="VisualizationObject" specification="_FEsRl4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI74ZogrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74Z4grEe-IO4NVFhexhw" name="warp" type="_EtU6cIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74aIgrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74aYgrEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI74aogrEe-IO4NVFhexhw" name="VisualizationObject" specification="_FEs4oIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI74a4grEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74bIgrEe-IO4NVFhexhw" name="warp" type="_EtU6cIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74bYgrEe-IO4NVFhexhw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74bogrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74b4grEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI74cIgrEe-IO4NVFhexhw" name="VisualizationObject" specification="_FEs4qIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI74cYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74cogrEe-IO4NVFhexhw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74c4grEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74dIgrEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI74dYgrEe-IO4NVFhexhw" name="nameExtension" specification="_FGx8QIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI74dogrEe-IO4NVFhexhw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74d4grEe-IO4NVFhexhw" name="m" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI74eIgrEe-IO4NVFhexhw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74eYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI74eogrEe-IO4NVFhexhw" name="nameExtension" specification="_Et4UEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI74e4grEe-IO4NVFhexhw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74fIgrEe-IO4NVFhexhw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI74fYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI74fogrEe-IO4NVFhexhw" name="getFileManager" specification="_Et47IIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI74f4grEe-IO4NVFhexhw" type="_Epe8QIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8fcIgrEe-IO4NVFhexhw" name="visualization" specification="_Et47IYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8fcYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8fcogrEe-IO4NVFhexhw" name="createFile" specification="_Et5iMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8fc4grEe-IO4NVFhexhw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI8fdIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8fdYgrEe-IO4NVFhexhw" name="fileVisualization" specification="_Et5iM4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8fdogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8fd4grEe-IO4NVFhexhw" name="displayVisualization" specification="_Et6JQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8feIgrEe-IO4NVFhexhw" type="_EqJqoIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8feYgrEe-IO4NVFhexhw" name="createHeader" specification="_Et6JQYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8feogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8fe4grEe-IO4NVFhexhw" name="createFooter" specification="_Et6JQogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8ffIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8ffYgrEe-IO4NVFhexhw" name="createColumnHeader" specification="_Et6wUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8ffogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FI8ff4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI8fgIgrEe-IO4NVFhexhw" name="createVisualizationData" specification="_Et7XYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI8fgYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FI8fgogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Et4UEIgrEe-IO4NVFhexhw" name="nameExtension" visibility="private" method="_FI74eogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Et4UEYgrEe-IO4NVFhexhw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Et4UEogrEe-IO4NVFhexhw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Et4UE4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Et47IIgrEe-IO4NVFhexhw" name="getFileManager" method="_FI74fogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPkYgrEe-IO4NVFhexhw">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEtfsIgrEe-IO4NVFhexhw" type="_Epe8QIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Et47IYgrEe-IO4NVFhexhw" name="visualization" method="_FI8fcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEtfsYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Et5iMIgrEe-IO4NVFhexhw" name="createFile" method="_FI8fcogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Et5iMYgrEe-IO4NVFhexhw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Et5iMogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Et5iM4grEe-IO4NVFhexhw" name="fileVisualization" method="_FI8fdYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEtfsogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Et6JQIgrEe-IO4NVFhexhw" name="displayVisualization" method="_FI8fd4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEtfs4grEe-IO4NVFhexhw" type="_EqJqoIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Et6JQYgrEe-IO4NVFhexhw" name="createHeader" visibility="protected" method="_FI8feYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEtftIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Et6JQogrEe-IO4NVFhexhw" name="createFooter" visibility="protected" method="_FI8fe4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FEtftYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Et6wUIgrEe-IO4NVFhexhw" name="createColumnHeader" visibility="protected" method="_FI8ffYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Et6wUYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Et6wUogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Et7XYIgrEe-IO4NVFhexhw" name="createVisualizationData" visibility="protected" method="_FI8fgIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Et7XYYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Et7XYogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FEsRkIgrEe-IO4NVFhexhw" name="VisualizationObject" visibility="package" method="_FI74YIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEsRlIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEsRlYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEsRkYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEsRkogrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEsRk4grEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEsRlogrEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEsRl4grEe-IO4NVFhexhw" name="VisualizationObject" visibility="package" method="_FI74ZYgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEsRm4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEsRnIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEsRmIgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEsRmYgrEe-IO4NVFhexhw" name="warp" type="_EtU6cIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEsRmogrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEsRnYgrEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEs4oIgrEe-IO4NVFhexhw" name="VisualizationObject" visibility="package" method="_FI74aogrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEs4pYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEs4pogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEs4oYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEs4oogrEe-IO4NVFhexhw" name="warp" type="_EtU6cIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEs4o4grEe-IO4NVFhexhw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEs4pIgrEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEs4p4grEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEs4qIgrEe-IO4NVFhexhw" name="VisualizationObject" visibility="package" method="_FI74cIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FEs4rIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FEs4rYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FEs4qYgrEe-IO4NVFhexhw" name="fm" type="_Epe8QIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEs4qogrEe-IO4NVFhexhw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEs4q4grEe-IO4NVFhexhw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FEs4rogrEe-IO4NVFhexhw" type="_Et0psIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FGx8QIgrEe-IO4NVFhexhw" name="nameExtension" visibility="private" method="_FI74dYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FGx8QYgrEe-IO4NVFhexhw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGx8QogrEe-IO4NVFhexhw" name="m" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FGx8Q4grEe-IO4NVFhexhw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGx8RIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EuA28IgrEe-IO4NVFhexhw" name="Warp">
              <ownedComment xmi:id="_FJRPkogrEe-IO4NVFhexhw">
                <body>The Warp class sets default values of constants and also sets the warp parameters for the&#xD;
given input. It creates and visualizes any requested output files and runs verification&#xD;
checks to make sure deadlines and reliability targets are met, and that there are no &#xD;
channel conflicts. Runs additional tests to make sure everything will run smoothly. This&#xD;
class also prints out all warp parameters along with Boolean expressions for if any flags&#xD;
are requested. &#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FH0eEIgrEe-IO4NVFhexhw" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH0eEYgrEe-IO4NVFhexhw" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH0eEogrEe-IO4NVFhexhw" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_FGC8dIgrEe-IO4NVFhexhw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH0eE4grEe-IO4NVFhexhw" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH0eFIgrEe-IO4NVFhexhw" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_FGC8dIgrEe-IO4NVFhexhw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH0eFYgrEe-IO4NVFhexhw" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH0eFogrEe-IO4NVFhexhw" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH1FIIgrEe-IO4NVFhexhw" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH1FIYgrEe-IO4NVFhexhw" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_EtWIkIgrEe-IO4NVFhexhw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH1FIogrEe-IO4NVFhexhw" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH1FI4grEe-IO4NVFhexhw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH1FJIgrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH1FJYgrEe-IO4NVFhexhw" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH1FJ4grEe-IO4NVFhexhw" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH1sMYgrEe-IO4NVFhexhw" name="minLQ" visibility="private" isStatic="true" type="_FGC8dIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FH1sM4grEe-IO4NVFhexhw" name="e2e" visibility="private" isStatic="true" type="_FGC8dIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FH1sNYgrEe-IO4NVFhexhw" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH2TQIgrEe-IO4NVFhexhw" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH2TQogrEe-IO4NVFhexhw" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH2TRIgrEe-IO4NVFhexhw" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH2TRogrEe-IO4NVFhexhw" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH26UYgrEe-IO4NVFhexhw" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH26U4grEe-IO4NVFhexhw" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH26VYgrEe-IO4NVFhexhw" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH3hYYgrEe-IO4NVFhexhw" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH3hY4grEe-IO4NVFhexhw" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH3hZYgrEe-IO4NVFhexhw" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH3hZogrEe-IO4NVFhexhw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH4IcYgrEe-IO4NVFhexhw" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH4Ic4grEe-IO4NVFhexhw" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH4IdYgrEe-IO4NVFhexhw" name="schedulerSelected" visibility="private" isStatic="true" type="_EtWIkIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9GgIgrEe-IO4NVFhexhw" name="main" specification="_EuEhUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9GgYgrEe-IO4NVFhexhw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FI9GgogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9Gg4grEe-IO4NVFhexhw" name="visualize" specification="_FEwjAIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9GhIgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI9GhYgrEe-IO4NVFhexhw" name="choice" type="_EtkLAogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9GhogrEe-IO4NVFhexhw" name="visualize" specification="_FEwjA4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9Gh4grEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI9GiIgrEe-IO4NVFhexhw" name="choice" type="_Eti84IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9GiYgrEe-IO4NVFhexhw" name="verifyPerformanceRequirements" specification="_FExKEogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9GiogrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9Gi4grEe-IO4NVFhexhw" name="verifyReliabilities" specification="_FExKFIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9GjIgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9GjYgrEe-IO4NVFhexhw" name="verifyDeadlines" specification="_FExKFogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9GjogrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9Gj4grEe-IO4NVFhexhw" name="verifyNoChannelConflicts" specification="_FExKGIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9GkIgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9tkIgrEe-IO4NVFhexhw" name="setWarpParameters" specification="_EuFvcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI9tkYgrEe-IO4NVFhexhw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FI9tkogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9tk4grEe-IO4NVFhexhw" name="printWarpParameters" specification="_EuGWgogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EuEhUIgrEe-IO4NVFhexhw" name="main" isStatic="true" method="_FI9GgIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPk4grEe-IO4NVFhexhw">
                  <body>Main method sets warp parameters with given input arguments and prints out the parameters&#xD;
   * if in verbose mode. It creates and visualizes the new workload. If the all output files &#xD;
   * flag is requested, it visualizes all workLoad Program choices and creates and visualizes&#xD;
   * the Warp System with all warp System choices. If not all output files are requested, it&#xD;
   * still visualizes the ones asked for of warp workload, source program, and other requested&#xD;
   * output items.&#xD;
   * @param args Command-line arguments passed to the application.</body>
                </ownedComment>
                <ownedParameter xmi:id="_EuEhUYgrEe-IO4NVFhexhw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EuEhUogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EuFvcIgrEe-IO4NVFhexhw" name="setWarpParameters" visibility="private" isStatic="true" method="_FI9tkIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPmogrEe-IO4NVFhexhw">
                  <body>Creates holder objects to store results and creates the parser to process and comprehend &#xD;
   * the input data. Also checks that all arguments are valid and sets values for parser. It &#xD;
   * checks which flags are present and stores this as a Boolean value. Additionally, checks &#xD;
   * if schedulerSelected value is null and cannot run is null. Then checks value of &#xD;
   * schedulerSelected to see what the value wants to do and runs method before it breaks.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_EuFvcYgrEe-IO4NVFhexhw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EuGWgIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EuGWgogrEe-IO4NVFhexhw" name="printWarpParameters" visibility="private" isStatic="true" method="_FI9tk4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPm4grEe-IO4NVFhexhw">
                  <body>Prints out all system configuration parameters including the scheduler, channels,&#xD;
   * number of faults, minimum Link Quality, end-to-end reliability, and if any flags&#xD;
   * are requested. Prints out the input file if given and if there is not one, it &#xD;
   * alerts that one will be needed.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_FEwjAIgrEe-IO4NVFhexhw" name="visualize" visibility="private" isStatic="true" method="_FI9Gg4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPlIgrEe-IO4NVFhexhw">
                  <body>Creates a visualization instance of input WorkLoad workLoad and WorkLoadChoices&#xD;
   * choice. If the visualization is null and if verboseMode holds True, prints out&#xD;
   * viz as a String, otherwise, convert viz to a file and if gui flag is requested,&#xD;
   * convert viz to a display.&#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_FEwjAYgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FEwjAogrEe-IO4NVFhexhw" name="choice" type="_EtkLAogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FEwjA4grEe-IO4NVFhexhw" name="visualize" visibility="private" isStatic="true" method="_FI9GhogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPlYgrEe-IO4NVFhexhw">
                  <body>Creates a visualization instance of input WarpInterface warp with SystemChoices &#xD;
   * choice. If visualization is null, turns viz to a file, and if gui and schedule &#xD;
   * flags are requested, turn viz into a display.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_FExKEIgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FExKEYgrEe-IO4NVFhexhw" name="choice" type="_Eti84IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FExKEogrEe-IO4NVFhexhw" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_FI9GiYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPlogrEe-IO4NVFhexhw">
                  <body>Runs verification checks over if deadlines are met, if reliability targets&#xD;
   * are met, and if there are channel conflicts for the input WarpInterface warp.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_FExKE4grEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FExKFIgrEe-IO4NVFhexhw" name="verifyReliabilities" visibility="private" isStatic="true" method="_FI9Gi4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPl4grEe-IO4NVFhexhw">
                  <body>Checks that the reliability targets are met in input warp. If reliability&#xD;
   * is not met, prints an error statement. If verboseMode is True with the input, &#xD;
   * prints out statement that flows meet reliability in this instance.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_FExKFYgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FExKFogrEe-IO4NVFhexhw" name="verifyDeadlines" visibility="private" isStatic="true" method="_FI9GjYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPmIgrEe-IO4NVFhexhw">
                  <body>Checks if the deadlines are met in input warp. If deadlines are not met, prints&#xD;
   * out an error message and visualizes a Deadline Report. If verboseMode is true for&#xD;
   * input, prints out a message telling the deadlines are all met.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_FExKF4grEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FExKGIgrEe-IO4NVFhexhw" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_FI9Gj4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJRPmYgrEe-IO4NVFhexhw">
                  <body>Determines if there is a channel conflict in the WarpInterface warp given &#xD;
   * as input. Creates a Channel Analysis visualization if not already requested.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_FExKGYgrEe-IO4NVFhexhw" name="warp" type="_Euc70IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EuNrQIgrEe-IO4NVFhexhw" name="WarpDSL">
              <ownedComment xmi:id="_FJRPnIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FH4vgYgrEe-IO4NVFhexhw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH4vgogrEe-IO4NVFhexhw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH4vg4grEe-IO4NVFhexhw" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH4vhIgrEe-IO4NVFhexhw" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH5WkIgrEe-IO4NVFhexhw" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH5WkYgrEe-IO4NVFhexhw" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-UqogrEe-IO4NVFhexhw" name="getInstructionParameters" specification="_EuTK0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI-Uq4grEe-IO4NVFhexhw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FI-UrIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EuTK0IgrEe-IO4NVFhexhw" name="getInstructionParameters" method="_FI-UqogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EuTK0YgrEe-IO4NVFhexhw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FGzxcIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_EuOSUIgrEe-IO4NVFhexhw" name="InstructionParameters">
                <ownedAttribute xmi:id="_FH5WkogrEe-IO4NVFhexhw" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH5Wk4grEe-IO4NVFhexhw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FH5WlIgrEe-IO4NVFhexhw" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH5WlYgrEe-IO4NVFhexhw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FH5WlogrEe-IO4NVFhexhw" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH5Wl4grEe-IO4NVFhexhw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FH5WmIgrEe-IO4NVFhexhw" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH59oIgrEe-IO4NVFhexhw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FH59oYgrEe-IO4NVFhexhw" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH59oogrEe-IO4NVFhexhw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FH59o4grEe-IO4NVFhexhw" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH59pIgrEe-IO4NVFhexhw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FH59pogrEe-IO4NVFhexhw" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH59p4grEe-IO4NVFhexhw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9tlIgrEe-IO4NVFhexhw" name="getCoordinator" specification="_EuPgcIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI9tlYgrEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9tlogrEe-IO4NVFhexhw" name="setCoordinator" specification="_EuQHgIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI9tl4grEe-IO4NVFhexhw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI9tmIgrEe-IO4NVFhexhw" name="setName" specification="_EuQHgogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI9tmYgrEe-IO4NVFhexhw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-UoIgrEe-IO4NVFhexhw" name="setFlow" specification="_EuQukIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-UoYgrEe-IO4NVFhexhw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-UoogrEe-IO4NVFhexhw" name="setSrc" specification="_EuQukogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-Uo4grEe-IO4NVFhexhw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-UpIgrEe-IO4NVFhexhw" name="setSnk" specification="_EuRVoYgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-UpYgrEe-IO4NVFhexhw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-UpogrEe-IO4NVFhexhw" name="setChannel" specification="_EuRVo4grEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-Up4grEe-IO4NVFhexhw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-UqIgrEe-IO4NVFhexhw" name="unused" specification="_EuR8sYgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-UqYgrEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_EuPgcIgrEe-IO4NVFhexhw" name="getCoordinator" method="_FI9tlIgrEe-IO4NVFhexhw">
                  <ownedComment xmi:id="_FJRPnYgrEe-IO4NVFhexhw">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_EuPgcYgrEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_EuQHgIgrEe-IO4NVFhexhw" name="setCoordinator" method="_FI9tlogrEe-IO4NVFhexhw">
                  <ownedComment xmi:id="_FJRPnogrEe-IO4NVFhexhw">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_EuQHgYgrEe-IO4NVFhexhw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_EuQHgogrEe-IO4NVFhexhw" name="setName" visibility="private" method="_FI9tmIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_EuQHg4grEe-IO4NVFhexhw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_EuQukIgrEe-IO4NVFhexhw" name="setFlow" visibility="private" method="_FI-UoIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_EuQukYgrEe-IO4NVFhexhw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_EuQukogrEe-IO4NVFhexhw" name="setSrc" visibility="private" method="_FI-UoogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_EuRVoIgrEe-IO4NVFhexhw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_EuRVoYgrEe-IO4NVFhexhw" name="setSnk" visibility="private" method="_FI-UpIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_EuRVoogrEe-IO4NVFhexhw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_EuRVo4grEe-IO4NVFhexhw" name="setChannel" visibility="private" method="_FI-UpogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_EuR8sIgrEe-IO4NVFhexhw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_EuR8sYgrEe-IO4NVFhexhw" name="unused" method="_FI-UqIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_EuR8sogrEe-IO4NVFhexhw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_EuUY8IgrEe-IO4NVFhexhw" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_FG0_kYgrEe-IO4NVFhexhw" general="_FG0YgIgrEe-IO4NVFhexhw"/>
                <ownedAttribute xmi:id="_FH6ksIgrEe-IO4NVFhexhw" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_FH6ksogrEe-IO4NVFhexhw" name="instructionParametersArrayList" visibility="package" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FJ_oVIgrEe-IO4NVFhexhw"/>
                <ownedAttribute xmi:id="_FH7LwogrEe-IO4NVFhexhw" name="instructionParameters" visibility="package" type="_EuOSUIgrEe-IO4NVFhexhw" association="_FKAPYYgrEe-IO4NVFhexhw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-UrYgrEe-IO4NVFhexhw" name="ListenerDsl" specification="_EuVAAIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-UrogrEe-IO4NVFhexhw" type="_EuUY8IgrEe-IO4NVFhexhw" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-Ur4grEe-IO4NVFhexhw" name="getInstructionParameters" specification="_EuVnEogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-UsIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-7sIgrEe-IO4NVFhexhw" name="enterAction" specification="_FEzmUogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-7sYgrEe-IO4NVFhexhw" name="ctx" type="_FEzmUIgrEe-IO4NVFhexhw"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-7sogrEe-IO4NVFhexhw" name="exitAction" specification="_FE0NY4grEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-7s4grEe-IO4NVFhexhw" name="ctx" type="_FEzmUIgrEe-IO4NVFhexhw"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-7tIgrEe-IO4NVFhexhw" name="exitFlowName" specification="_FE1bgIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-7tYgrEe-IO4NVFhexhw" name="ctx" type="_FE00cogrEe-IO4NVFhexhw"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-7togrEe-IO4NVFhexhw" name="exitCmd" specification="_FE2CkogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-7t4grEe-IO4NVFhexhw" name="ctx" type="_FE2CkIgrEe-IO4NVFhexhw"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-7uIgrEe-IO4NVFhexhw" name="exitSrcNode" specification="_FE2ppYgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-7uYgrEe-IO4NVFhexhw" name="ctx" type="_FE2po4grEe-IO4NVFhexhw"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-7uogrEe-IO4NVFhexhw" name="exitSnkNode" specification="_FE33wYgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-7u4grEe-IO4NVFhexhw" name="ctx" type="_FE3QtIgrEe-IO4NVFhexhw"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI-7vIgrEe-IO4NVFhexhw" name="exitChannel" specification="_FE4e0YgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FI-7vYgrEe-IO4NVFhexhw" name="ctx" type="_FE33xogrEe-IO4NVFhexhw"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_EuVAAIgrEe-IO4NVFhexhw" name="ListenerDsl" visibility="package" method="_FI-UrYgrEe-IO4NVFhexhw">
                  <eAnnotations xmi:id="_EuVAAYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_EuVnEIgrEe-IO4NVFhexhw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_EuVnEYgrEe-IO4NVFhexhw" type="_EuUY8IgrEe-IO4NVFhexhw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_EuVnEogrEe-IO4NVFhexhw" name="getInstructionParameters" method="_FI-Ur4grEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FG0_kIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_FEzmUogrEe-IO4NVFhexhw" name="enterAction" method="_FI-7sIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FEzmU4grEe-IO4NVFhexhw" name="ctx" type="_FEzmUIgrEe-IO4NVFhexhw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_FE0NY4grEe-IO4NVFhexhw" name="exitAction" method="_FI-7sogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FE0NZIgrEe-IO4NVFhexhw" name="ctx" type="_FEzmUIgrEe-IO4NVFhexhw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_FE1bgIgrEe-IO4NVFhexhw" name="exitFlowName" method="_FI-7tIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FE1bgYgrEe-IO4NVFhexhw" name="ctx" type="_FE00cogrEe-IO4NVFhexhw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_FE2CkogrEe-IO4NVFhexhw" name="exitCmd" method="_FI-7togrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FE2Ck4grEe-IO4NVFhexhw" name="ctx" type="_FE2CkIgrEe-IO4NVFhexhw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_FE2ppYgrEe-IO4NVFhexhw" name="exitSrcNode" method="_FI-7uIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FE3QsIgrEe-IO4NVFhexhw" name="ctx" type="_FE2po4grEe-IO4NVFhexhw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_FE33wYgrEe-IO4NVFhexhw" name="exitSnkNode" method="_FI-7uogrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FE33wogrEe-IO4NVFhexhw" name="ctx" type="_FE3QtIgrEe-IO4NVFhexhw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_FE4e0YgrEe-IO4NVFhexhw" name="exitChannel" method="_FI-7vIgrEe-IO4NVFhexhw">
                  <ownedParameter xmi:id="_FE4e0ogrEe-IO4NVFhexhw" name="ctx" type="_FE33xogrEe-IO4NVFhexhw"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Euc70IgrEe-IO4NVFhexhw" name="WarpInterface">
              <ownedComment xmi:id="_FJR2oIgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_FE5s8IgrEe-IO4NVFhexhw" general="_EtU6cIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EueJ8IgrEe-IO4NVFhexhw" name="toWorkload">
                <ownedParameter xmi:id="_FE6UAIgrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EuexAIgrEe-IO4NVFhexhw" name="toProgram">
                <ownedParameter xmi:id="_FE6UAYgrEe-IO4NVFhexhw" type="_ErVWYIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EuexAYgrEe-IO4NVFhexhw" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_FE6UAogrEe-IO4NVFhexhw" type="_EsHZgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EuexAogrEe-IO4NVFhexhw" name="toSimulator">
                <ownedParameter xmi:id="_FE6UA4grEe-IO4NVFhexhw" type="_EtRQEIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EufYEIgrEe-IO4NVFhexhw" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_FE6UBIgrEe-IO4NVFhexhw" type="_EqY7MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EufYEYgrEe-IO4NVFhexhw" name="toChannelAnalysis">
                <ownedParameter xmi:id="_FE6UBYgrEe-IO4NVFhexhw" type="_EoT3kIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EufYEogrEe-IO4NVFhexhw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_Euf_IIgrEe-IO4NVFhexhw" name="reliabilitiesMet">
                <ownedParameter xmi:id="_Euf_IYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Euf_IogrEe-IO4NVFhexhw" name="deadlinesMet">
                <ownedParameter xmi:id="_Euf_I4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Euh0UIgrEe-IO4NVFhexhw" name="WarpPoset">
              <ownedComment xmi:id="_FJR2oYgrEe-IO4NVFhexhw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_FE67EIgrEe-IO4NVFhexhw" general="_Eq6foIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI_iwIgrEe-IO4NVFhexhw" name="WarpPoset" specification="_FE6UBogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI_iwYgrEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI_iwogrEe-IO4NVFhexhw" type="_Euh0UIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FI_iw4grEe-IO4NVFhexhw" name="findCoordinator" specification="_FG2NsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FI_ixIgrEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FI_ixYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_FE6UBogrEe-IO4NVFhexhw" name="WarpPoset" visibility="package" method="_FI_iwIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FE6UCIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FE6UCYgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FE6UB4grEe-IO4NVFhexhw" name="workload" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FE6UCogrEe-IO4NVFhexhw" type="_Euh0UIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FG2NsIgrEe-IO4NVFhexhw" name="findCoordinator" visibility="protected" method="_FI_iw4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FG2NsYgrEe-IO4NVFhexhw" name="nodesInFlow" type="_FDJZcIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG2NsogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Euk3oIgrEe-IO4NVFhexhw" name="WarpSystem">
              <ownedComment xmi:id="_FJR2oogrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_FH8Z4IgrEe-IO4NVFhexhw" name="program" visibility="private" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FKAPZIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FH8Z4ogrEe-IO4NVFhexhw" name="workLoad" visibility="private" type="_Eu614IgrEe-IO4NVFhexhw" association="_FKA2cYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FH9A8IgrEe-IO4NVFhexhw" name="ra" visibility="private" type="_EsHZgIgrEe-IO4NVFhexhw" association="_FKA2dIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FH9A8ogrEe-IO4NVFhexhw" name="la" visibility="private" type="_EqY7MIgrEe-IO4NVFhexhw" association="_FKBdgYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FH9A9IgrEe-IO4NVFhexhw" name="ca" visibility="private" type="_EoT3kIgrEe-IO4NVFhexhw" association="_FKBdhIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FH9oAYgrEe-IO4NVFhexhw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH-2IYgrEe-IO4NVFhexhw" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH-2IogrEe-IO4NVFhexhw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FH-2JIgrEe-IO4NVFhexhw" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FH_dMIgrEe-IO4NVFhexhw" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_FE67EYgrEe-IO4NVFhexhw" client="_Euk3oIgrEe-IO4NVFhexhw" supplier="_Euc70IgrEe-IO4NVFhexhw" contract="_Euc70IgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ0IgrEe-IO4NVFhexhw" name="WarpSystem" specification="_FG3b0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ0YgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJAJ0ogrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJAJ04grEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJAJ1IgrEe-IO4NVFhexhw" type="_Euk3oIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ1YgrEe-IO4NVFhexhw" name="toWorkload" specification="_Eums0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ1ogrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ14grEe-IO4NVFhexhw" name="toProgram" specification="_Eun68IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ2IgrEe-IO4NVFhexhw" type="_ErVWYIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ2YgrEe-IO4NVFhexhw" name="toReliabilityAnalysis" specification="_EuoiAogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ2ogrEe-IO4NVFhexhw" type="_EsHZgIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(program);&#xD;
 return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ24grEe-IO4NVFhexhw" name="toSimulator" specification="_EupwIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ3IgrEe-IO4NVFhexhw" type="_EtRQEIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ3YgrEe-IO4NVFhexhw" name="toLatencyAnalysis" specification="_EuqXMogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ3ogrEe-IO4NVFhexhw" type="_EqY7MIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ34grEe-IO4NVFhexhw" name="toChannelAnalysis" specification="_EurlUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ4IgrEe-IO4NVFhexhw" type="_EoT3kIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAJ4YgrEe-IO4NVFhexhw" name="reliabilitiesMet" specification="_EusMYogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAJ4ogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
   ra = new ReliabilityAnalysis(program);&#xD;
 }&#xD;
 return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw4IgrEe-IO4NVFhexhw" name="deadlinesMet" specification="_EutagIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw4YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw4ogrEe-IO4NVFhexhw" name="createProgram" specification="_FG4C44grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw44grEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJAw5IgrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJAw5YgrEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw5ogrEe-IO4NVFhexhw" name="getNumFaults" specification="_EuuBkogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw54grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw6IgrEe-IO4NVFhexhw" name="getMinPacketReceptionRate" specification="_EuvPsogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw6YgrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw6ogrEe-IO4NVFhexhw" name="getE2e" specification="_Euv2wogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw64grEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw7IgrEe-IO4NVFhexhw" name="getName" specification="_EuxE4ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw7YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw7ogrEe-IO4NVFhexhw" name="getSchedulerName" specification="_EuyTAYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw74grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw8IgrEe-IO4NVFhexhw" name="getNumTransmissions" specification="_Euy6EogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw8YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJAw8ogrEe-IO4NVFhexhw" name="getOptimizationFlag" specification="_EuzhI4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJAw84grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Eums0IgrEe-IO4NVFhexhw" name="toWorkload" method="_FJAJ1YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FE7iIIgrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eun68IgrEe-IO4NVFhexhw" name="toProgram" method="_FJAJ14grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FE7iIYgrEe-IO4NVFhexhw" type="_ErVWYIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EuoiAogrEe-IO4NVFhexhw" name="toReliabilityAnalysis" method="_FJAJ2YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FE7iIogrEe-IO4NVFhexhw" type="_EsHZgIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EupwIIgrEe-IO4NVFhexhw" name="toSimulator" method="_FJAJ24grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FE7iI4grEe-IO4NVFhexhw" type="_EtRQEIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EuqXMogrEe-IO4NVFhexhw" name="toLatencyAnalysis" method="_FJAJ3YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FE7iJIgrEe-IO4NVFhexhw" type="_EqY7MIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EurlUIgrEe-IO4NVFhexhw" name="toChannelAnalysis" method="_FJAJ34grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FE7iJYgrEe-IO4NVFhexhw" type="_EoT3kIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EusMYogrEe-IO4NVFhexhw" name="reliabilitiesMet" method="_FJAJ4YgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EuszcIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EutagIgrEe-IO4NVFhexhw" name="deadlinesMet" method="_FJAw4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EutagYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EuuBkogrEe-IO4NVFhexhw" name="getNumFaults" method="_FJAw5ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EuuooIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EuvPsogrEe-IO4NVFhexhw" name="getMinPacketReceptionRate" method="_FJAw6IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FG4p8IgrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Euv2wogrEe-IO4NVFhexhw" name="getE2e" method="_FJAw6ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FG4p8YgrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EuxE4ogrEe-IO4NVFhexhw" name="getName" method="_FJAw7IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Euxr8IgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EuyTAYgrEe-IO4NVFhexhw" name="getSchedulerName" method="_FJAw7ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EuyTAogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Euy6EogrEe-IO4NVFhexhw" name="getNumTransmissions" method="_FJAw8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Euy6E4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EuzhI4grEe-IO4NVFhexhw" name="getOptimizationFlag" method="_FJAw8ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eu0IMIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eu0vQIgrEe-IO4NVFhexhw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_FG3b0IgrEe-IO4NVFhexhw" name="WarpSystem" method="_FJAJ0IgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FG4C4IgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FG4C4YgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FG3b0YgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG3b0ogrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FG3b04grEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG4C4ogrEe-IO4NVFhexhw" type="_Euk3oIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FG4C44grEe-IO4NVFhexhw" name="createProgram" visibility="private" method="_FJAw4ogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FG4C5IgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG4C5YgrEe-IO4NVFhexhw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FG4C5ogrEe-IO4NVFhexhw" name="choice" type="_FGBHQIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Eu614IgrEe-IO4NVFhexhw" name="WorkLoad">
              <ownedComment xmi:id="_FJR2o4grEe-IO4NVFhexhw">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
Initializes nodes and flows from the specified workload description file (`inputFileName`). &#xD;
Default values for the second constructor are m = 0.9, e2e = 0.99, and numFaults = 1.&#xD;
&#xD;
@author sgoddard&#xD;
@jcbates&#xD;
@version 1.4&#xD;
&#xD;
 *&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FFCP0IgrEe-IO4NVFhexhw" general="_EvbzQIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIAEQIgrEe-IO4NVFhexhw" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIAEQYgrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIAEQogrEe-IO4NVFhexhw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIAEQ4grEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIAERIgrEe-IO4NVFhexhw" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIAERYgrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIAERogrEe-IO4NVFhexhw" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIArUIgrEe-IO4NVFhexhw" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIArUYgrEe-IO4NVFhexhw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIArUogrEe-IO4NVFhexhw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIArU4grEe-IO4NVFhexhw" name="minPacketReceptionRate" type="_FGC8dIgrEe-IO4NVFhexhw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIArVIgrEe-IO4NVFhexhw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIArVYgrEe-IO4NVFhexhw" name="e2e" visibility="private" type="_FGC8dIgrEe-IO4NVFhexhw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIArVogrEe-IO4NVFhexhw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIBSYIgrEe-IO4NVFhexhw" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIBSYYgrEe-IO4NVFhexhw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIBSYogrEe-IO4NVFhexhw" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIBSY4grEe-IO4NVFhexhw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIBSZYgrEe-IO4NVFhexhw" name="flows" type="_Ep5L8IgrEe-IO4NVFhexhw" association="_FJR2pIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIB5cIgrEe-IO4NVFhexhw" name="nodes" type="_EqvggIgrEe-IO4NVFhexhw" association="_FJSdsIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIB5cYgrEe-IO4NVFhexhw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIB5c4grEe-IO4NVFhexhw" name="flowNamesInOriginalOrder" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FKCEkYgrEe-IO4NVFhexhw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FICggYgrEe-IO4NVFhexhw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FICggogrEe-IO4NVFhexhw" name="flowNamesInPriorityOrder" type="_FDJZcIgrEe-IO4NVFhexhw" association="_FKCroIgrEe-IO4NVFhexhw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIDHkYgrEe-IO4NVFhexhw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_FE_zkIgrEe-IO4NVFhexhw" client="_Eu614IgrEe-IO4NVFhexhw" supplier="_EsJOsIgrEe-IO4NVFhexhw" contract="_EsJOsIgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJBX8IgrEe-IO4NVFhexhw" name="WorkLoad" specification="_FG54EIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJBX8YgrEe-IO4NVFhexhw" name="m" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJBX8ogrEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJBX84grEe-IO4NVFhexhw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJBX9IgrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJBX9YgrEe-IO4NVFhexhw" name="WorkLoad" specification="_FG6fIogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJBX9ogrEe-IO4NVFhexhw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJBX94grEe-IO4NVFhexhw" name="m" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJBX-IgrEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJBX-YgrEe-IO4NVFhexhw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJBX-ogrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJBX-4grEe-IO4NVFhexhw" name="setDefaultParameters" specification="_Eu-gQIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJBX_IgrEe-IO4NVFhexhw" name="getE2e" specification="_Eu_HUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJBX_YgrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJBX_ogrEe-IO4NVFhexhw" name="getIntForFlowNames" specification="_Eu_HUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJBX_4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJBYAIgrEe-IO4NVFhexhw" name="getName" specification="_Eu_uYYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJBYAYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_AIgrEe-IO4NVFhexhw" name="setMinPacketReceptionRate" specification="_FG7GMYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_AYgrEe-IO4NVFhexhw" name="minPacketReceptionRate" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_AogrEe-IO4NVFhexhw" name="getMaxPhase" specification="_EvAVcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_A4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_BIgrEe-IO4NVFhexhw" name="getMinPeriod" specification="_EvAVcogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_BYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_BogrEe-IO4NVFhexhw" name="setE2e" specification="_FG7GM4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_B4grEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_CIgrEe-IO4NVFhexhw" name="setIntForFlowNames" specification="_EvA8gYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_CYgrEe-IO4NVFhexhw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_CogrEe-IO4NVFhexhw" name="setName" specification="_EvBjkIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_C4grEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_DIgrEe-IO4NVFhexhw" name="setNodeChannel" specification="_EvCKoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_DYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJB_DogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_D4grEe-IO4NVFhexhw" name="getNodeChannel" specification="_EvCxsIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_EIgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJB_EYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_EogrEe-IO4NVFhexhw" name="addFlow" specification="_EvDYwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_E4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_FIgrEe-IO4NVFhexhw" name="isIntForNodeNames" specification="_EvDYwogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_FYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJB_FogrEe-IO4NVFhexhw" name="isIntForFlowNames" specification="_EvD_0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJB_F4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmEIgrEe-IO4NVFhexhw" name="addNodeToFlow" specification="_EvEm4IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmEYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmEogrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmE4grEe-IO4NVFhexhw" name="getFlowPriority" specification="_EvFN8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmFIgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmFYgrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmFogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmF4grEe-IO4NVFhexhw" name="setFlowPriority" specification="_EvF1AIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmGIgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmGYgrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmGogrEe-IO4NVFhexhw" name="setFlowPeriod" specification="_EvGcEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmG4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmHIgrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmHYgrEe-IO4NVFhexhw" name="setFlowDeadline" specification="_EvHDIIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmHogrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmH4grEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmIIgrEe-IO4NVFhexhw" name="setFlowPhase" specification="_EvHqMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmIYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmIogrEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmI4grEe-IO4NVFhexhw" name="getFlowIndex" specification="_EvHqM4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmJIgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmJYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJCmJogrEe-IO4NVFhexhw" name="getFlowPriority" specification="_EvIRQogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJCmJ4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJCmKIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNIIgrEe-IO4NVFhexhw" name="getFlowPeriod" specification="_EvI4UYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJDNIYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNIogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNI4grEe-IO4NVFhexhw" name="getFlowDeadline" specification="_EvJfYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJDNJIgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNJYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNJogrEe-IO4NVFhexhw" name="getFlowPhase" specification="_EvKGcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJDNJ4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNKIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNKYgrEe-IO4NVFhexhw" name="getFlowTxAttemptsPerLink" specification="_EvKGc4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJDNKogrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNK4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNLIgrEe-IO4NVFhexhw" name="setFlowsInPriorityOrder" specification="_EvKtgogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNLYgrEe-IO4NVFhexhw" name="setFlowsInDMorder" specification="_EvKtg4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNLogrEe-IO4NVFhexhw" name="setFlowsInRMorder" specification="_EvLUkIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNL4grEe-IO4NVFhexhw" name="setFlowsInRealTimeHARTorder" specification="_EvLUkYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNMIgrEe-IO4NVFhexhw" name="finalizeCurrentFlow" specification="_EvLUkogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJDNMYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNMogrEe-IO4NVFhexhw" name="nextReleaseTime" specification="_EvL7oIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJDNM4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNNIgrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNNYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJDNNogrEe-IO4NVFhexhw" name="nextAbsoluteDeadline" specification="_EvMisIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJDNN4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNOIgrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJDNOYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0MIgrEe-IO4NVFhexhw" name="finalizeFlowWithE2eParameters" specification="_EvNJwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0MYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost =&#xD;
       numTxAttemptsPerLinkAndTotalTxAttempts(flowNode, e2e, m, true);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0MogrEe-IO4NVFhexhw" name="finalizeFlowWithFixedFaultTolerance" specification="_EvNw0IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0M4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = getFixedTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0NIgrEe-IO4NVFhexhw" name="getFixedTxPerLinkAndTotalTxCost" specification="_FFAaoIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0NYgrEe-IO4NVFhexhw" name="flow" type="_Epm4EIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJD0NogrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size();&#xD;
 ArrayList&lt;Integer> txArrayList = new ArrayList&lt;Integer>();&#xD;
 /*&#xD;
  * Each node will have at most numFaults+1 transmissions. Because we don't know which nodes will&#xD;
  * send the message over an edge, we give the cost to each node.&#xD;
  */&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txArrayList.add(numFaults + 1);&#xD;
 }&#xD;
 /*&#xD;
  * now compute the maximum # of TX, assuming at most numFaults occur on an edge per period, and&#xD;
  * each edge requires at least one successful TX.&#xD;
  */&#xD;
 var numEdgesInFlow = nNodesInFlow - 1;&#xD;
 var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
 txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0N4grEe-IO4NVFhexhw" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_FG7tQYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0OIgrEe-IO4NVFhexhw" name="flow" type="_Epm4EIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJD0OYgrEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJD0OogrEe-IO4NVFhexhw" name="M" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJD0O4grEe-IO4NVFhexhw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJD0PIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
 var nNodesInFlow = nodesInFlow.size(); // The last entry will contain the worst-case cost of&#xD;
                                        // transmitting E2E in isolation&#xD;
 // var nPushes = Array(repeating: 0, count: nNodesInFlow+1);&#xD;
 var nPushes = new Integer[nNodesInFlow + 1]; // Array to track nPushes for each node in this&#xD;
                                              // flow (same as nTx per link)&#xD;
 Arrays.fill(nPushes, 0); // initialize to all 0 values&#xD;
 var nHops = nNodesInFlow - 1;&#xD;
 // minLinkReliablityNeded is the minimum reliability needed per link in a flow to hit E2E&#xD;
 // reliability for the flow&#xD;
 Double minLinkReliablityNeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops))); // use max&#xD;
                                                                                       // to&#xD;
                                                                                       // handle&#xD;
                                                                                       // rounding&#xD;
                                                                                       // error&#xD;
                                                                                       // when&#xD;
                                                                                       // e2e ==&#xD;
                                                                                       // 1.0&#xD;
 // Now compute reliability of packet reaching each node in the given time slot&#xD;
 // Start with a 2-D reliability window that is a 2-D matrix of no size&#xD;
 // each row is a time slot, stating at time 0&#xD;
 // each column represents the reliability of the packet reaching that node at the&#xD;
 // current time slot (i.e., the row it is in)&#xD;
 // will add rows as we compute reliabilities until the final reliability is reached&#xD;
 // for all nodes.&#xD;
 var reliabilityWindow = new Vector&lt;Vector&lt;Double>>();&#xD;
 var newReliabilityRow = new Vector&lt;Double>();&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   newReliabilityRow.add(0.0); // create the the row initialized with 0.0 values&#xD;
 }&#xD;
 reliabilityWindow.add(newReliabilityRow); // now add row to the reliability window, Time 0&#xD;
 Vector&lt;Double> tmpVector = reliabilityWindow.get(0);&#xD;
 var currentReliabilityRow = tmpVector.toArray(new Double[tmpVector.size()]);&#xD;
 // var currentReliabilityRow = (Double[]) reliabilityWindow.get(0).toArray();&#xD;
 // Want reliabilityWindow[0][0] = 1.0 (i.e., P(packet@FlowSrc) = 1&#xD;
 // but I din't want to mess with the newReliablityRow vector I use below&#xD;
 // So, we initialize this first entry to 1.0, wich is reliabilityWindow[0][0]&#xD;
 // We will then update this row with computed values for each node and put it&#xD;
 // back in the matrix&#xD;
 currentReliabilityRow[0] = 1.0; // initialize (i.e., P(packet@FlowSrc) = 1&#xD;
 Double e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1]; // the analysis will end&#xD;
                                                                       // when the 2e2&#xD;
                                                                       // reliability metrix is&#xD;
                                                                       // met, initially the&#xD;
                                                                       // state is not met and&#xD;
                                                                       // will be 0 with this&#xD;
                                                                       // statement&#xD;
 var timeSlot = 0; // start time at 0&#xD;
 while (e2eReliabilityState &lt; e2e) { // change to while and increment increment timeSlot becuase&#xD;
                                     // we don't know how long this schedule window will last&#xD;
   var prevReliabilityRow = currentReliabilityRow;&#xD;
   currentReliabilityRow = newReliabilityRow.toArray(new Double[newReliabilityRow.size()]); // would&#xD;
                                                                                            // be&#xD;
                                                                                            // reliabilityWindow[timeSlot]&#xD;
                                                                                            // if&#xD;
                                                                                            // working&#xD;
                                                                                            // through&#xD;
                                                                                            // a&#xD;
                                                                                            // schedule&#xD;
   // Now use each flow:src->sink to update reliability computations&#xD;
   // this is the update formula for the state probabilities&#xD;
   // nextState = (1 - M) * prevState + M*NextHighestFlowState&#xD;
   // use MinLQ for M in above equation&#xD;
   // NewSinkNodeState = (1-M)*PrevSnkNodeState + M*PrevSrcNodeState&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) { // loop through each&#xD;
                                                                          // node in the flow and&#xD;
                                                                          // update the sates for&#xD;
                                                                          // each link (i.e.,&#xD;
                                                                          // sink->src pair)&#xD;
     var flowSrcNodeindex = nodeIndex;&#xD;
     var flowSnkNodeindex = nodeIndex + 1;&#xD;
     var prevSrcNodeState = prevReliabilityRow[flowSrcNodeindex];&#xD;
     var prevSnkNodeState = prevReliabilityRow[flowSnkNodeindex];&#xD;
     Double nextSnkState;&#xD;
     if ((prevSnkNodeState &lt; minLinkReliablityNeded) &amp;&amp; prevSrcNodeState > 0) { // do a push&#xD;
                                                                                // until PrevSnk&#xD;
                                                                                // state > e2e to&#xD;
                                                                                // ensure next&#xD;
                                                                                // node reaches&#xD;
                                                                                // target E2E BUT&#xD;
                                                                                // skip if no&#xD;
                                                                                // chance of&#xD;
                                                                                // success (i.e.,&#xD;
                                                                                // source doesn't&#xD;
                                                                                // have packet)&#xD;
       nextSnkState = ((1.0 - M) * prevSnkNodeState) + (M * prevSrcNodeState); // need to&#xD;
                                                                               // continue&#xD;
                                                                               // attempting to&#xD;
                                                                               // Tx, so update&#xD;
                                                                               // current state&#xD;
       nPushes[nodeIndex] += 1; // increment the number of pushes for for this node to snk node&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState; // snkNode has met its reliability. Thus move on to the&#xD;
                                        // next node and record the reliability met&#xD;
     }&#xD;
&#xD;
     if (currentReliabilityRow[flowSrcNodeindex] &lt; prevReliabilityRow[flowSrcNodeindex]) { // probabilities&#xD;
                                                                                           // are&#xD;
                                                                                           // non-decreasing&#xD;
                                                                                           // so&#xD;
                                                                                           // update&#xD;
                                                                                           // if&#xD;
                                                                                           // we&#xD;
                                                                                           // were&#xD;
                                                                                           // higher&#xD;
                                                                                           // by&#xD;
                                                                                           // carring&#xD;
                                                                                           // old&#xD;
                                                                                           // value&#xD;
                                                                                           // forward&#xD;
       currentReliabilityRow[flowSrcNodeindex] = prevReliabilityRow[flowSrcNodeindex]; // carry&#xD;
                                                                                       // forward&#xD;
                                                                                       // the&#xD;
                                                                                       // previous&#xD;
                                                                                       // state&#xD;
                                                                                       // for the&#xD;
                                                                                       // src&#xD;
                                                                                       // node,&#xD;
                                                                                       // which&#xD;
                                                                                       // may get&#xD;
                                                                                       // over&#xD;
                                                                                       // written&#xD;
                                                                                       // later&#xD;
                                                                                       // by&#xD;
                                                                                       // another&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in this&#xD;
                                                                                       // slot&#xD;
     }&#xD;
     currentReliabilityRow[flowSnkNodeindex] = nextSnkState;&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow[nNodesInFlow - 1];&#xD;
   Vector&lt;Double> currentReliabilityVector = new Vector&lt;Double>();&#xD;
   // convert the row to a vector so we can add it to the reliability window&#xD;
   Collections.addAll(currentReliabilityVector, currentReliabilityRow);&#xD;
   if (timeSlot &lt; reliabilityWindow.size()) {&#xD;
     reliabilityWindow.set(timeSlot, (currentReliabilityVector));&#xD;
   } else {&#xD;
     reliabilityWindow.add(currentReliabilityVector);&#xD;
   }&#xD;
   timeSlot += 1; // increase to next time slot&#xD;
 }&#xD;
 var size = reliabilityWindow.size();&#xD;
 nPushes[nNodesInFlow] = size; // The total (worst-case) cost to transmit E2E in isolation with&#xD;
                               // specified reliability target is the number of rows in the&#xD;
                               // reliabilityWindow&#xD;
 // Now convert the array to the ArrayList needed to return&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;Integer>();&#xD;
 Collections.addAll(nPushesArrayList, nPushes);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0PYgrEe-IO4NVFhexhw" name="getNodeNamesOrderedAlphabetically" specification="_EvO-8IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0PogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FJD0P4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0QIgrEe-IO4NVFhexhw" name="getFlow" specification="_EvPmAYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0QYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJD0QogrEe-IO4NVFhexhw" type="_Epm4EIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0Q4grEe-IO4NVFhexhw" name="getFlowNames" specification="_EvQNEIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0RIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FJD0RYgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJD0RogrEe-IO4NVFhexhw" name="getNodeIndex" specification="_EvRbMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJD0R4grEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJD0SIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJEbQIgrEe-IO4NVFhexhw" name="getNodesInFlow" specification="_EvSCQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJEbQYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJEbQogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FJEbQ4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJEbRIgrEe-IO4NVFhexhw" name="getHyperPeriod" specification="_EvSCRYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJEbRYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJEbRogrEe-IO4NVFhexhw" name="getTotalTxAttemptsInFlow" specification="_EvSpUYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJEbR4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJEbSIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJEbSYgrEe-IO4NVFhexhw" name="getNumTxAttemptsPerLink" specification="_EvTQYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJEbSogrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJEbS4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_FJEbTIgrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJEbTYgrEe-IO4NVFhexhw" name="addEdge" specification="_FFBowYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJEbTogrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJEbT4grEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJEbUIgrEe-IO4NVFhexhw" name="maxFlowLength" specification="_EvT3cYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJEbUYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Eu-gQIgrEe-IO4NVFhexhw" name="setDefaultParameters" visibility="private" method="_FJBX-4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdtIgrEe-IO4NVFhexhw">
                  <body>Initialize the default parameters for the WorkLoad object</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_Eu_HUIgrEe-IO4NVFhexhw" name="getE2e" method="_FJBX_IgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdtYgrEe-IO4NVFhexhw">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_FG7GMIgrEe-IO4NVFhexhw" type="_FGC8dIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eu_HUYgrEe-IO4NVFhexhw" name="getIntForFlowNames" method="_FJBX_ogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdtogrEe-IO4NVFhexhw">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_Eu_uYIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Eu_uYYgrEe-IO4NVFhexhw" name="getName" method="_FJBYAIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdt4grEe-IO4NVFhexhw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_Eu_uYogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvAVcIgrEe-IO4NVFhexhw" name="getMaxPhase" method="_FJB_AogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSduYgrEe-IO4NVFhexhw">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvAVcYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvAVcogrEe-IO4NVFhexhw" name="getMinPeriod" method="_FJB_BIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSduogrEe-IO4NVFhexhw">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvA8gIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvA8gYgrEe-IO4NVFhexhw" name="setIntForFlowNames" method="_FJB_CIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdvIgrEe-IO4NVFhexhw">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvA8gogrEe-IO4NVFhexhw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvBjkIgrEe-IO4NVFhexhw" name="setName" method="_FJB_CogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdvYgrEe-IO4NVFhexhw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvBjkYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvCKoIgrEe-IO4NVFhexhw" name="setNodeChannel" method="_FJB_DIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdvogrEe-IO4NVFhexhw">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvCKoYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvCKoogrEe-IO4NVFhexhw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvCxsIgrEe-IO4NVFhexhw" name="getNodeChannel" method="_FJB_D4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdv4grEe-IO4NVFhexhw">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvCxsYgrEe-IO4NVFhexhw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvCxsogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvDYwIgrEe-IO4NVFhexhw" name="addFlow" method="_FJB_EogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdwIgrEe-IO4NVFhexhw">
                  <body>add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
    default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
    This will create a default priority equal to the order listed in the input graph file. We&#xD;
    also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
    initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
    optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
    over written&#xD;
    &#xD;
    Initializes default parameters for the WorkLoad object, including settings for node and flow names,  &#xD;
    and initializes maps for flow and node storage.&#xD;
 @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvDYwYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvDYwogrEe-IO4NVFhexhw" name="isIntForNodeNames" method="_FJB_FIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdwYgrEe-IO4NVFhexhw">
                  <body>@return returns true if all node names are ints</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvDYw4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvD_0IgrEe-IO4NVFhexhw" name="isIntForFlowNames" method="_FJB_FogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EvD_0YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvEm4IgrEe-IO4NVFhexhw" name="addNodeToFlow" method="_FJCmEIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdwogrEe-IO4NVFhexhw">
                  <body>Adds node to flow creating one if no node exists &#xD;
@param flowName&#xD;
@param nodeName</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvEm4YgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvEm4ogrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvFN8IgrEe-IO4NVFhexhw" name="getFlowPriority" method="_FJCmE4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdw4grEe-IO4NVFhexhw">
                  <body>Iterates over nodes and returns the priority node &#xD;
&#xD;
@param flowName&#xD;
@param nodeName&#xD;
@return the node priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvFN8YgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvFN8ogrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvFN84grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvF1AIgrEe-IO4NVFhexhw" name="setFlowPriority" method="_FJCmF4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdxIgrEe-IO4NVFhexhw">
                  <body>Sets the flow node and makes it priority&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvF1AYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvF1AogrEe-IO4NVFhexhw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvGcEIgrEe-IO4NVFhexhw" name="setFlowPeriod" method="_FJCmGogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdxYgrEe-IO4NVFhexhw">
                  <body>Takes in the flowNode and sets the period&#xD;
	 * @param flowName&#xD;
	 * @param period</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvGcEYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvGcEogrEe-IO4NVFhexhw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvHDIIgrEe-IO4NVFhexhw" name="setFlowDeadline" method="_FJCmHYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdxogrEe-IO4NVFhexhw">
                  <body>Gets the flow Node and sets the deadline &#xD;
   * @param flowName&#xD;
   * @param deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvHDIYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvHDIogrEe-IO4NVFhexhw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvHqMIgrEe-IO4NVFhexhw" name="setFlowPhase" method="_FJCmIIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdx4grEe-IO4NVFhexhw">
                  <body>Gets the flow Node and sets the Phase&#xD;
   * @param flowName&#xD;
   * @param phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvHqMYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvHqMogrEe-IO4NVFhexhw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvHqM4grEe-IO4NVFhexhw" name="getFlowIndex" method="_FJCmI4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdyIgrEe-IO4NVFhexhw">
                  <body>Sets the flowNode with the flowName and Returns the Nodes Index&#xD;
   * @param flowName&#xD;
   * @return flowNode Index</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvIRQIgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvIRQYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvIRQogrEe-IO4NVFhexhw" name="getFlowPriority" method="_FJCmJogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEwIgrEe-IO4NVFhexhw">
                  <body>Takes in the flowName, sets it to flowNode, and returns the Node Priority&#xD;
   * @param flowName&#xD;
   * @return flowNode Priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvIRQ4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvI4UIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvI4UYgrEe-IO4NVFhexhw" name="getFlowPeriod" method="_FJDNIIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEwYgrEe-IO4NVFhexhw">
                  <body>Takes in flowName, sets it to flowNode, and returns the Nodes Period&#xD;
   * @param flowName&#xD;
   * @return flowNode Period</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvI4UogrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvI4U4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvJfYIgrEe-IO4NVFhexhw" name="getFlowDeadline" method="_FJDNI4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEwogrEe-IO4NVFhexhw">
                  <body>gets flow deadline from flowname&#xD;
   * @param flowName&#xD;
   * @return flowDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvJfYYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvJfYogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvKGcIgrEe-IO4NVFhexhw" name="getFlowPhase" method="_FJDNJogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEw4grEe-IO4NVFhexhw">
                  <body>Retrieves the phase of a flow node based on the specified flow name.&#xD;
   * @param flowName&#xD;
   * @return Flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvKGcYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvKGcogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvKGc4grEe-IO4NVFhexhw" name="getFlowTxAttemptsPerLink" method="_FJDNKYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTExIgrEe-IO4NVFhexhw">
                  <body>Retrieves priority of a specified node within a given flow&#xD;
   * @param flowName&#xD;
   * @return flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvKtgIgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvKtgYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvKtgogrEe-IO4NVFhexhw" name="setFlowsInPriorityOrder" method="_FJDNLIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTExYgrEe-IO4NVFhexhw">
                  <body>Sorts the flows in priority order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_EvKtg4grEe-IO4NVFhexhw" name="setFlowsInDMorder" method="_FJDNLYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTExogrEe-IO4NVFhexhw">
                  <body>Sorts the flows in Deadline-Monotonic (DM) order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_EvLUkIgrEe-IO4NVFhexhw" name="setFlowsInRMorder" method="_FJDNLogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEx4grEe-IO4NVFhexhw">
                  <body>Create list Flow objects and sort them by the secondary key (Priority)&#xD;
   * Next sort them by the primary key (Period) and create flowNamesInPriority Order&#xD;
   * With names in requested order</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_EvLUkYgrEe-IO4NVFhexhw" name="setFlowsInRealTimeHARTorder" method="_FJDNL4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEyIgrEe-IO4NVFhexhw">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_EvLUkogrEe-IO4NVFhexhw" name="finalizeCurrentFlow" method="_FJDNMIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EvLUk4grEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvL7oIgrEe-IO4NVFhexhw" name="nextReleaseTime" method="_FJDNMogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EvL7oYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvL7oogrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvL7o4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvMisIgrEe-IO4NVFhexhw" name="nextAbsoluteDeadline" method="_FJDNNogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EvMisYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvMisogrEe-IO4NVFhexhw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvMis4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvNJwIgrEe-IO4NVFhexhw" name="finalizeFlowWithE2eParameters" visibility="private" method="_FJD0MIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EvNJwYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvNw0IgrEe-IO4NVFhexhw" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_FJD0MogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EvNw0YgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvO-8IgrEe-IO4NVFhexhw" name="getNodeNamesOrderedAlphabetically" method="_FJD0PYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEyogrEe-IO4NVFhexhw">
                  <body>Retrieves and returns an array of node names sorted alphabetically or numerically if the names represent integers.&#xD;
   * @return nodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvO-8YgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EvO-8ogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvPmAYgrEe-IO4NVFhexhw" name="getFlow" visibility="private" method="_FJD0QIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_EvPmAogrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FFBowIgrEe-IO4NVFhexhw" type="_Epm4EIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EvQNEIgrEe-IO4NVFhexhw" name="getFlowNames" method="_FJD0Q4grEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEy4grEe-IO4NVFhexhw">
                  <body>to return an array of flow names in the order they were read from the graph file&#xD;
   * @return Flow Names in Original Order</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvQNEYgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EvQNEogrEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvRbMIgrEe-IO4NVFhexhw" name="getNodeIndex" method="_FJD0RogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEzIgrEe-IO4NVFhexhw">
                  <body>return the dictionary of nodes&#xD;
   * @param nodeName&#xD;
   * @return node index</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvRbMYgrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvRbMogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvSCQIgrEe-IO4NVFhexhw" name="getNodesInFlow" method="_FJEbQIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEzYgrEe-IO4NVFhexhw">
                  <body>Returns an array of node names for the specified flow in the order they appear in the flow specification.&#xD;
   * @param flowName&#xD;
   * @return Array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvSCQYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvSCQogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EvSCQ4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvSCRYgrEe-IO4NVFhexhw" name="getHyperPeriod" method="_FJEbRIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEzogrEe-IO4NVFhexhw">
                  <body>Set hyperPeriods to 1 and find the LCM and update the hyperPeriod&#xD;
   * @return the HyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvSpUIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvSpUYgrEe-IO4NVFhexhw" name="getTotalTxAttemptsInFlow" method="_FJEbRogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEz4grEe-IO4NVFhexhw">
                  <body>Gets the total transmission attempts for the specified flow and returns it as total cost&#xD;
   * @param flowName&#xD;
   * @return totalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvSpUogrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvSpU4grEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvTQYIgrEe-IO4NVFhexhw" name="getNumTxAttemptsPerLink" method="_FJEbSYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTE0IgrEe-IO4NVFhexhw">
                  <body>Retrieves the number of transmission attempts for each link in the specified flow.&#xD;
   * @param flowName&#xD;
   * @return return an array of the number of transmission needed for each</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvTQYYgrEe-IO4NVFhexhw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvTQYogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_EvTQY4grEe-IO4NVFhexhw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvT3cYgrEe-IO4NVFhexhw" name="maxFlowLength" method="_FJEbUIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTE0ogrEe-IO4NVFhexhw">
                  <body>Start with the max flow length to 0 return the max length of flow Nodes&#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_EvUegIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FFAaoIgrEe-IO4NVFhexhw" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_FJD0NIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTEyYgrEe-IO4NVFhexhw">
                  <body>Computes and returns a list of transmission costs per node and the total transmission cost for the flow&#xD;
   * @param flow&#xD;
   * @return txArrayList</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFBBsIgrEe-IO4NVFhexhw" name="flow" type="_Epm4EIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG7tQIgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFBowYgrEe-IO4NVFhexhw" name="addEdge" method="_FJEbTYgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJTE0YgrEe-IO4NVFhexhw">
                  <body>Get the node object and add it to the edge &#xD;
   * @param nodeName&#xD;
   * @param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_FFBowogrEe-IO4NVFhexhw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FFBow4grEe-IO4NVFhexhw" name="edge" type="_EpRg4IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FG54EIgrEe-IO4NVFhexhw" name="WorkLoad" visibility="package" method="_FJBX8IgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FG54FIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FG6fIIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJSdsogrEe-IO4NVFhexhw">
                  <body>Constructs a WorkLoad object by reading and processing an input file to build node and flow data.&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_FG54EYgrEe-IO4NVFhexhw" name="m" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG54EogrEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG54E4grEe-IO4NVFhexhw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FG6fIYgrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FG6fIogrEe-IO4NVFhexhw" name="WorkLoad" visibility="package" method="_FJBX9YgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FG6fJ4grEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FG6fKIgrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_FJSds4grEe-IO4NVFhexhw">
                  <body>Constructs a WorkLoad object with specified fault tolerance parameters by reading and processing an input file.&#xD;
   * @param numFaults&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_FG6fI4grEe-IO4NVFhexhw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FG6fJIgrEe-IO4NVFhexhw" name="m" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG6fJYgrEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG6fJogrEe-IO4NVFhexhw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FG6fKYgrEe-IO4NVFhexhw" type="_Eu614IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FG7GMYgrEe-IO4NVFhexhw" name="setMinPacketReceptionRate" method="_FJB_AIgrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSduIgrEe-IO4NVFhexhw">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_FG7GMogrEe-IO4NVFhexhw" name="minPacketReceptionRate" type="_FGC8dIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FG7GM4grEe-IO4NVFhexhw" name="setE2e" method="_FJB_BogrEe-IO4NVFhexhw">
                <ownedComment xmi:id="_FJSdu4grEe-IO4NVFhexhw">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_FG7GNIgrEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FG7tQYgrEe-IO4NVFhexhw" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_FJD0N4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FG7tQogrEe-IO4NVFhexhw" name="flow" type="_Epm4EIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG7tQ4grEe-IO4NVFhexhw" name="e2e" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG7tRIgrEe-IO4NVFhexhw" name="M" type="_FGC8dIgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FG7tRYgrEe-IO4NVFhexhw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FG8UUYgrEe-IO4NVFhexhw" type="_FDJZcIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EvbzQIgrEe-IO4NVFhexhw" name="WorkLoadDescription">
              <ownedComment xmi:id="_FJTE04grEe-IO4NVFhexhw">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <generalization xmi:id="_FFFTIogrEe-IO4NVFhexhw" general="_Et0psIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIEVsIgrEe-IO4NVFhexhw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIEVsYgrEe-IO4NVFhexhw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIEVsogrEe-IO4NVFhexhw" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_FIEVs4grEe-IO4NVFhexhw" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIEVtIgrEe-IO4NVFhexhw" name="description" visibility="private" type="_EpOdkIgrEe-IO4NVFhexhw" association="_FKCro4grEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIE8wIgrEe-IO4NVFhexhw" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_FIE8wogrEe-IO4NVFhexhw" name="fm" visibility="private" type="_Epe8QIgrEe-IO4NVFhexhw" association="_FKDSsYgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIE8xIgrEe-IO4NVFhexhw" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFCUIgrEe-IO4NVFhexhw" name="WorkLoadDescription" specification="_EvcaUIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFCUYgrEe-IO4NVFhexhw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_FJFCUogrEe-IO4NVFhexhw" type="_EvbzQIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFCU4grEe-IO4NVFhexhw" name="visualization" specification="_EvdBZIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFCVIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFCVYgrEe-IO4NVFhexhw" name="fileVisualization" specification="_Evdoc4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFCVogrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFCV4grEe-IO4NVFhexhw" name="toString" specification="_Eve2kYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFCWIgrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFCWYgrEe-IO4NVFhexhw" name="initialize" specification="_EvfdoogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFCWogrEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EvcaUIgrEe-IO4NVFhexhw" name="WorkLoadDescription" visibility="package" method="_FJFCUIgrEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_EvdBYYgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_EvdBYogrEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_EvdBYIgrEe-IO4NVFhexhw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_EvdBY4grEe-IO4NVFhexhw" type="_EvbzQIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_EvdBZIgrEe-IO4NVFhexhw" name="visualization" method="_FJFCU4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFFTIIgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Evdoc4grEe-IO4NVFhexhw" name="fileVisualization" method="_FJFCVYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFFTIYgrEe-IO4NVFhexhw" type="_EpOdkIgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Eve2kYgrEe-IO4NVFhexhw" name="toString" method="_FJFCV4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Eve2kogrEe-IO4NVFhexhw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_EvfdoogrEe-IO4NVFhexhw" name="initialize" visibility="private" method="_FJFCWYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Evfdo4grEe-IO4NVFhexhw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EvhS0IgrEe-IO4NVFhexhw" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_FJTr0IgrEe-IO4NVFhexhw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_FG-JgIgrEe-IO4NVFhexhw" general="_FDq94YgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIE8xYgrEe-IO4NVFhexhw" name="workLoad" visibility="package" type="_Eu614IgrEe-IO4NVFhexhw" association="_FKDStIgrEe-IO4NVFhexhw"/>
              <ownedAttribute xmi:id="_FIFj0YgrEe-IO4NVFhexhw" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFCW4grEe-IO4NVFhexhw" name="WorkLoadListener" specification="_FFF6MIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFCXIgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FJFCXYgrEe-IO4NVFhexhw" type="_EvhS0IgrEe-IO4NVFhexhw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFCXogrEe-IO4NVFhexhw" name="buildNodesAndFlows" specification="_FFF6NYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFCX4grEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpYIgrEe-IO4NVFhexhw" name="testPrintStdOut" specification="_Evh54IgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpYYgrEe-IO4NVFhexhw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpYogrEe-IO4NVFhexhw" name="enterWarpName" specification="_FFGhQIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpY4grEe-IO4NVFhexhw" name="ctx" type="_FDsMB4grEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpZIgrEe-IO4NVFhexhw" name="enterFlowName" specification="_FFGhRYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpZYgrEe-IO4NVFhexhw" name="ctx" type="_FDuBM4grEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpZogrEe-IO4NVFhexhw" name="exitPriority" specification="_FFHvYYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpZ4grEe-IO4NVFhexhw" name="ctx" type="_FFHIU4grEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpaIgrEe-IO4NVFhexhw" name="exitPeriod" specification="_FFIWcYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpaYgrEe-IO4NVFhexhw" name="ctx" type="_FFHvZogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpaogrEe-IO4NVFhexhw" name="exitDeadline" specification="_FFI9gYgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpa4grEe-IO4NVFhexhw" name="ctx" type="_FFIWdogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpbIgrEe-IO4NVFhexhw" name="exitPhase" specification="_FFJklIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpbYgrEe-IO4NVFhexhw" name="ctx" type="_FFJkkogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpbogrEe-IO4NVFhexhw" name="exitSrcNode" specification="_FFKLo4grEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpb4grEe-IO4NVFhexhw" name="ctx" type="_FDuoRogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJFpcIgrEe-IO4NVFhexhw" name="exitSnkNode" specification="_FFKysIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJFpcYgrEe-IO4NVFhexhw" name="ctx" type="_FDvPVogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQcIgrEe-IO4NVFhexhw" name="exitFlow" specification="_FFLZwIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FJGQcYgrEe-IO4NVFhexhw" name="ctx" type="_FDwdcogrEe-IO4NVFhexhw"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Evh54IgrEe-IO4NVFhexhw" name="testPrintStdOut" method="_FJFpYIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_Evh54YgrEe-IO4NVFhexhw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_FFF6MIgrEe-IO4NVFhexhw" name="WorkLoadListener" visibility="private" method="_FJFCW4grEe-IO4NVFhexhw">
                <eAnnotations xmi:id="_FFF6MogrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_FFF6M4grEe-IO4NVFhexhw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_FFF6MYgrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
                <ownedParameter xmi:id="_FFF6NIgrEe-IO4NVFhexhw" type="_EvhS0IgrEe-IO4NVFhexhw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFF6NYgrEe-IO4NVFhexhw" name="buildNodesAndFlows" isStatic="true" method="_FJFCXogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFF6NogrEe-IO4NVFhexhw" name="workLoad" type="_Eu614IgrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFGhQIgrEe-IO4NVFhexhw" name="enterWarpName" method="_FJFpYogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFGhQYgrEe-IO4NVFhexhw" name="ctx" type="_FDsMB4grEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFGhRYgrEe-IO4NVFhexhw" name="enterFlowName" method="_FJFpZIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFGhRogrEe-IO4NVFhexhw" name="ctx" type="_FDuBM4grEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFHvYYgrEe-IO4NVFhexhw" name="exitPriority" method="_FJFpZogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFHvYogrEe-IO4NVFhexhw" name="ctx" type="_FFHIU4grEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFIWcYgrEe-IO4NVFhexhw" name="exitPeriod" method="_FJFpaIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFIWcogrEe-IO4NVFhexhw" name="ctx" type="_FFHvZogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFI9gYgrEe-IO4NVFhexhw" name="exitDeadline" method="_FJFpaogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFI9gogrEe-IO4NVFhexhw" name="ctx" type="_FFIWdogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFJklIgrEe-IO4NVFhexhw" name="exitPhase" method="_FJFpbIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFJklYgrEe-IO4NVFhexhw" name="ctx" type="_FFJkkogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFKLo4grEe-IO4NVFhexhw" name="exitSrcNode" method="_FJFpbogrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFKLpIgrEe-IO4NVFhexhw" name="ctx" type="_FDuoRogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFKysIgrEe-IO4NVFhexhw" name="exitSnkNode" method="_FJFpcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFKysYgrEe-IO4NVFhexhw" name="ctx" type="_FDvPVogrEe-IO4NVFhexhw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_FFLZwIgrEe-IO4NVFhexhw" name="exitFlow" method="_FJGQcIgrEe-IO4NVFhexhw">
                <ownedParameter xmi:id="_FFLZwYgrEe-IO4NVFhexhw" name="ctx" type="_FDwdcogrEe-IO4NVFhexhw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_EvkWIIgrEe-IO4NVFhexhw" name="WorkLoadTest">
              <eAnnotations xmi:id="_Evk9MIgrEe-IO4NVFhexhw" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_Evk9MYgrEe-IO4NVFhexhw" source="codegen">
                  <details xmi:id="_Evk9MogrEe-IO4NVFhexhw" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_FIGK4IgrEe-IO4NVFhexhw" name="workload" visibility="private" type="_Eu614IgrEe-IO4NVFhexhw" association="_FKD5wYgrEe-IO4NVFhexhw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQcogrEe-IO4NVFhexhw" name="setUp" specification="_EvlkQIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;StressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQc4grEe-IO4NVFhexhw" name="addFlowAddTest" specification="_EvmyYogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// ArrayList of actual flow names in original order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		// new ArrayList of expected flows in expected order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected flow names with an additional flow are in the same order as &#xD;
		 * the actual flow names in the original order &#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add a flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQdIgrEe-IO4NVFhexhw" name="addFlowOverridingTest" specification="_EvnZcogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addFlow(&quot;F9&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F9&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList of flows with a repeated flow are in the same order&#xD;
		 * as the actual flow names with the repeated flow&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not override new flow correctly&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQdYgrEe-IO4NVFhexhw" name="addFlowMultipleAddsTest" specification="_EvoAgIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds second new flow &#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds third new flow &#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// adds fourth new flow&#xD;
		workload.addFlow(&quot;F14&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;, &quot;F14&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList with an addition of multiple flows is equal&#xD;
		 * to the actual ArrayList with the new flows&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQdogrEe-IO4NVFhexhw" name="addNodeToFlowExistsTest" specification="_EvoAhIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node to &quot;F1&quot; but that already exists within &quot;StressTest4.txt&quot; is equal to the &#xD;
		 * corresponding elements in the actual &quot;F1&quot; array when calling getNodesInFlow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted existing node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQd4grEe-IO4NVFhexhw" name="addNodeToFlowDoesntExistTest" specification="_Evonk4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;newNode&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;newNode&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node new to the file is equal to the actual array elements when calling getNodesInFLow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted new node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQeIgrEe-IO4NVFhexhw" name="getTotalTxAttemptsInFlowOneFlowTest" specification="_EvpOo4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer actual = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		Integer exp = 4;&#xD;
		/*&#xD;
		 * Tests that the expected totalCost of &quot;F1&quot; is equal to the actual cost as found with&#xD;
		 * getTotalTxAttemptsInFlow()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Produces the incorrect total cost&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQeYgrEe-IO4NVFhexhw" name="getTotalTxAttemptsInFlowMultiFlowsTest" specification="_Evp1s4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer flowOneCost = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		// finds number of transmission attempts for &quot;F2&quot; and returns as totalCost&#xD;
		Integer flowTwoCost = workload.getTotalTxAttemptsInFlow(&quot;F2&quot;);&#xD;
		// finds number of transmission attempts for &quot;F3&quot; and returns as totalCost&#xD;
		Integer flowThreeCost = workload.getTotalTxAttemptsInFlow(&quot;F3&quot;);&#xD;
		// sum of &quot;F1&quot;, &quot;F2&quot;, and &quot;F3&quot; total cost&#xD;
		Integer actual = flowOneCost + flowTwoCost + flowThreeCost;&#xD;
		Integer exp = 21;&#xD;
		/* &#xD;
		 * Tests that the expected sum of multiple flows' costs is equal to the actual sum as&#xD;
		 * found with getTotalTxAttemptsInFlow() to conclude that the method can accurately find&#xD;
		 * multiple flows' costs&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Incorrectly adds total cost of multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJGQeogrEe-IO4NVFhexhw" name="getFlowPriorityTest" specification="_EvrD0ogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>var actual = workload.getFlowPriority(&quot;F1&quot;, &quot;C&quot;);&#xD;
		var exp = 0;&#xD;
		/*&#xD;
		 * Tests that the expected priority of node &quot;C&quot; in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as found with getFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority for src node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3gIgrEe-IO4NVFhexhw" name="setFlowPriorityTest" specification="_Evrq44grEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.setFlowPriority(&quot;F1&quot;, 5);&#xD;
		Integer actual = workload.getFlowPriority(&quot;F1&quot;);&#xD;
		Integer exp = 5;&#xD;
		/*&#xD;
		 * Tests that the expected priority of flow node in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as set with setFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Does not set current flow priority&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3gYgrEe-IO4NVFhexhw" name="getFlowTxAttemptsPerLinkTest" specification="_EvsR84grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer exp = 3;&#xD;
		/* &#xD;
		 * Tests that the expected priority of flow &quot;F1&quot; is equal to the actual priority&#xD;
		 * found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority of specified flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3gogrEe-IO4NVFhexhw" name="getFlowTxAttemptsPerLinkEmptyTest" specification="_Evs5A4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(null);&#xD;
		Integer exp = 1;&#xD;
		/*&#xD;
		 * Tests that the expected priority of a null input, an empty list, is equal to &#xD;
		 * the actual priority of an empty list found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect default priority of flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3g4grEe-IO4NVFhexhw" name="setFlowsInRMorderCorrectOrderTest" specification="_EvtgE4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flow names in &quot;StressTest4.txt&quot; is &#xD;
		 * equal to the actual order of flow names in this file as found with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3hIgrEe-IO4NVFhexhw" name="setFlowsInRMorderAddFlowsTest" specification="_EvuHI4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// orders flow names with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flows of &quot;StressTest4.txt&quot; with three new flows&#xD;
		 * is equivalent to the actual ordered array with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows with new additional flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3hYgrEe-IO4NVFhexhw" name="getNodeNamesOrderedAlphabeticallyTest" specification="_EvuuM4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of alphabetically ordered flows is equivalent to the &#xD;
		 * actual array order using getFlowNames() to find actual order&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3hogrEe-IO4NVFhexhw" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" specification="_EvvVQ4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// alphabetically ordered array of flow names in &quot;StressTest4.txt&quot; with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected alphabetically ordered array of flows in &quot;StressTest4.txt&quot; with &#xD;
		 * three new flows is equal to the actual alphabetical order of flows using getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3h4grEe-IO4NVFhexhw" name="testGetFlowNames" specification="_Evv8UogrEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload.addFlow(&quot;Flow1&quot;);&#xD;
		workload.addFlow(&quot;Flow2&quot;);&#xD;
		workload.addFlow(&quot;Flow3&quot;);&#xD;
		// Expected array after adding new flows&#xD;
		String[] expectedFlowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;Flow1&quot;, &quot;Flow2&quot;, &quot;Flow3&quot;};&#xD;
		// Get actual flow names from workload&#xD;
		String[] actualFlowNames = workload.getFlowNames();&#xD;
		// Assert actual flow names match expected names&#xD;
		assertArrayEquals(expectedFlowNames, actualFlowNames, &quot;FlowNames are incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3iIgrEe-IO4NVFhexhw" name="testGetFlowNamesEmpty" specification="_EvwjYYgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Get flow names from the empty workload&#xD;
		String[] actualFlowNames = emptyWorkload.getFlowNames();&#xD;
		// Assert the array of flow names is empty&#xD;
		assertEquals(0, actualFlowNames.length, &quot;Array is not empty!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3iYgrEe-IO4NVFhexhw" name="testGetNodeIndexNonExistentNode" specification="_EvxKcIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer expectedIndex = 0;&#xD;
		// Get the actual index of a non-existent node &quot;Z&quot;&#xD;
		Integer actualIndex = workload.getNodeIndex(&quot;Z&quot;);&#xD;
		// Assert that the actual index matches the expected index&#xD;
		assertEquals(expectedIndex, actualIndex, &quot;The method should return 0 for a non-existent node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3iogrEe-IO4NVFhexhw" name="testGetNodeIndexExistingNode" specification="_EvxKdIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer actualIndex = workload.getNodeIndex(&quot;C&quot;);&#xD;
		// Assert that the actual index of node &quot;C&quot; is correct&#xD;
		assertEquals(1, actualIndex, &quot;The index for node C is incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3i4grEe-IO4NVFhexhw" name="testGetNodesInFlowValidFlowF1" specification="_Evxxg4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>String[] expectedNodes = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		// Getting the actual nodes in the flow &quot;F1&quot;&#xD;
		String[] actualNodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		// Assert that the actual nodes match the expected nodes&#xD;
		assertArrayEquals(expectedNodes, actualNodes, &quot;Incorrect nodes for flow F1&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3jIgrEe-IO4NVFhexhw" name="testGetNodesInFlowNonExistentFlow" specification="_EvyYk4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];  &#xD;
		// Getting the actual nodes in the non-existent flow &quot;F99&quot;&#xD;
     String[] actualNodes = workload.getNodesInFlow(&quot;F99&quot;);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for non-existent flow F99&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3jYgrEe-IO4NVFhexhw" name="testGetNodesInFlowNullFlow" specification="_Evy_o4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];&#xD;
     // Getting the actual nodes in a null flow&#xD;
     String[] actualNodes = workload.getNodesInFlow(null);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for null flow name&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3jogrEe-IO4NVFhexhw" name="testGetHyperPeriodValidFlows" specification="_Evzms4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>int expectedHyperPeriod = 300;&#xD;
		// Getting the actual hyper period from the workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod calculation is incorrect for valid flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJG3j4grEe-IO4NVFhexhw" name="testGetHyperPeriodEmptyFlow" specification="_Ev0Nw4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);  &#xD;
     // Expected hyper period when no flows exist&#xD;
     int expectedHyperPeriod = 1;&#xD;
     // Getting the actual hyper period from the empty workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod should be 1 when no flows exist&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHekIgrEe-IO4NVFhexhw" name="testMaxFlowLengthStressTest4" specification="_Ev0004grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer expectedMaxFlowLength = 8;&#xD;
		// Getting the actual max flow length from the workload&#xD;
		Integer actualMaxFlowLength = workload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length is incorrect for StressTest4.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHekYgrEe-IO4NVFhexhw" name="testMaxFlowLengthNoFlows" specification="_Ev1b44grEe-IO4NVFhexhw">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Expected max flow length when there are no flows&#xD;
		Integer expectedMaxFlowLength = 0;&#xD;
		// Getting the actual max flow length from the empty workload&#xD;
		Integer actualMaxFlowLength = emptyWorkload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length should be 0 for no flows.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHekogrEe-IO4NVFhexhw" name="testGetFlowDeadlineValidFlow" specification="_Ev2C84grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer expectedDeadline = 20;&#xD;
     // Getting the actual deadline for the flow &quot;F1&quot;&#xD;
     Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
     // Asserting that the actual deadline matches the expected value&#xD;
     assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for flow F1 should be 20.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHek4grEe-IO4NVFhexhw" name="testGetFlowDeadlineInvalidFlow" specification="_Ev2qA4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer actualDeadline = workload.getFlowDeadline(&quot;InvalidFlow&quot;);&#xD;
		// Expected deadline for a non-existent flow&#xD;
		Integer expectedDeadline = 100;&#xD;
		// Asserting that the actual deadline matches the expected value&#xD;
		assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for a non-existent flow should be 100.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHelIgrEe-IO4NVFhexhw" name="testSetFlowDeadlineValidFlow" specification="_Ev3RE4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer newDeadline = 50;&#xD;
		// Setting the new deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, newDeadline);&#xD;
		// Getting the actual deadline after setting the new value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the new deadline&#xD;
		assertEquals(newDeadline, actualDeadline, &quot;The deadline for flow F1 should be set to 50.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHelYgrEe-IO4NVFhexhw" name="testSetFlowDeadlineUpdateExistingFlow" specification="_Ev34I4grEe-IO4NVFhexhw">
                <language>java</language>
                <body>Integer initialDeadline = 30;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, initialDeadline);&#xD;
		// Updated deadline to set for the flow &quot;F1&quot;&#xD;
		Integer updatedDeadline = 75;&#xD;
		// Setting the updated deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, updatedDeadline);&#xD;
		// Getting the actual deadline after updating the value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the updated deadline&#xD;
		assertEquals(updatedDeadline, actualDeadline, &quot;The deadline for flow F1 should be updated to 75.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHelogrEe-IO4NVFhexhw" name="testGetNumTxAttemptsPerLink_ExistingFlow" specification="_Ev4fMIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>String flowName = &quot;F1&quot;;&#xD;
		// Getting the transmission attempts per link for the existing flow&#xD;
		Integer[] txAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
		// Asserting that the array is not null for an existing flow&#xD;
		assertNotNull(txAttemptsPerLink, &quot;The Tx attempts per link array should not be null for an existing flow.&quot;);&#xD;
		// Asserting that the array size is as expected&#xD;
		assertEquals(3, txAttemptsPerLink.length, &quot;The array size should be equal to the number of links in the flow minus the total cost.&quot;);&#xD;
		// Asserting that the Tx attempts per link match expected values&#xD;
		assertArrayEquals(new Integer[]{3, 3, 0}, txAttemptsPerLink, &quot;The Tx attempts per link should match expected values.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_FJHel4grEe-IO4NVFhexhw" name="testGetNumTxAttemptsPerLink_MultipleFlows" specification="_Ev4fNIgrEe-IO4NVFhexhw">
                <language>java</language>
                <body>String flowName1 = &quot;F1&quot;;  &#xD;
		String flowName2 = &quot;F5&quot;;&#xD;
		// Getting the transmission attempts per link for both flows&#xD;
		Integer[] txAttemptsFlow1 = workload.getNumTxAttemptsPerLink(flowName1);&#xD;
		Integer[] txAttemptsFlow2 = workload.getNumTxAttemptsPerLink(flowName2);&#xD;
		// Asserting that the arrays are not null&#xD;
		assertNotNull(txAttemptsFlow1, &quot;The Tx attempts per link for F1 should not be null.&quot;);&#xD;
		assertNotNull(txAttemptsFlow2, &quot;The Tx attempts per link for F5 should not be null.&quot;);&#xD;
		// Asserting that the array sizes are as expected&#xD;
		assertEquals(3, txAttemptsFlow1.length, &quot;The array size for F1 should match the number of links minus the total cost.&quot;);&#xD;
		assertEquals(5, txAttemptsFlow2.length, &quot;The array size for F5 should match the number of links minus the total cost.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_EvlkQIgrEe-IO4NVFhexhw" name="setUp" visibility="package" method="_FJGQcogrEe-IO4NVFhexhw" raisedException="_FG-wkIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvmLUogrEe-IO4NVFhexhw" name="tearDown" visibility="package" raisedException="_FG-wkIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvmyYogrEe-IO4NVFhexhw" name="addFlowAddTest" visibility="package" method="_FJGQc4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvnZcogrEe-IO4NVFhexhw" name="addFlowOverridingTest" visibility="package" method="_FJGQdIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvoAgIgrEe-IO4NVFhexhw" name="addFlowMultipleAddsTest" visibility="package" method="_FJGQdYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvoAhIgrEe-IO4NVFhexhw" name="addNodeToFlowExistsTest" visibility="package" method="_FJGQdogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evonk4grEe-IO4NVFhexhw" name="addNodeToFlowDoesntExistTest" visibility="package" method="_FJGQd4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvpOo4grEe-IO4NVFhexhw" name="getTotalTxAttemptsInFlowOneFlowTest" visibility="package" method="_FJGQeIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evp1s4grEe-IO4NVFhexhw" name="getTotalTxAttemptsInFlowMultiFlowsTest" visibility="package" method="_FJGQeYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvrD0ogrEe-IO4NVFhexhw" name="getFlowPriorityTest" visibility="package" method="_FJGQeogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evrq44grEe-IO4NVFhexhw" name="setFlowPriorityTest" visibility="package" method="_FJG3gIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvsR84grEe-IO4NVFhexhw" name="getFlowTxAttemptsPerLinkTest" visibility="package" method="_FJG3gYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evs5A4grEe-IO4NVFhexhw" name="getFlowTxAttemptsPerLinkEmptyTest" visibility="package" method="_FJG3gogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvtgE4grEe-IO4NVFhexhw" name="setFlowsInRMorderCorrectOrderTest" visibility="package" method="_FJG3g4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvuHI4grEe-IO4NVFhexhw" name="setFlowsInRMorderAddFlowsTest" visibility="package" method="_FJG3hIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvuuM4grEe-IO4NVFhexhw" name="getNodeNamesOrderedAlphabeticallyTest" visibility="package" method="_FJG3hYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvvVQ4grEe-IO4NVFhexhw" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" visibility="package" method="_FJG3hogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evv8UogrEe-IO4NVFhexhw" name="testGetFlowNames" visibility="package" method="_FJG3h4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvwjYYgrEe-IO4NVFhexhw" name="testGetFlowNamesEmpty" visibility="package" method="_FJG3iIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvxKcIgrEe-IO4NVFhexhw" name="testGetNodeIndexNonExistentNode" visibility="package" method="_FJG3iYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvxKdIgrEe-IO4NVFhexhw" name="testGetNodeIndexExistingNode" visibility="package" method="_FJG3iogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evxxg4grEe-IO4NVFhexhw" name="testGetNodesInFlowValidFlowF1" visibility="package" method="_FJG3i4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_EvyYk4grEe-IO4NVFhexhw" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_FJG3jIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evy_o4grEe-IO4NVFhexhw" name="testGetNodesInFlowNullFlow" visibility="package" method="_FJG3jYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Evzms4grEe-IO4NVFhexhw" name="testGetHyperPeriodValidFlows" visibility="package" method="_FJG3jogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev0Nw4grEe-IO4NVFhexhw" name="testGetHyperPeriodEmptyFlow" visibility="package" method="_FJG3j4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev0004grEe-IO4NVFhexhw" name="testMaxFlowLengthStressTest4" visibility="package" method="_FJHekIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev1b44grEe-IO4NVFhexhw" name="testMaxFlowLengthNoFlows" visibility="package" method="_FJHekYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev2C84grEe-IO4NVFhexhw" name="testGetFlowDeadlineValidFlow" visibility="package" method="_FJHekogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev2qA4grEe-IO4NVFhexhw" name="testGetFlowDeadlineInvalidFlow" visibility="package" method="_FJHek4grEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev3RE4grEe-IO4NVFhexhw" name="testSetFlowDeadlineValidFlow" visibility="package" method="_FJHelIgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev34I4grEe-IO4NVFhexhw" name="testSetFlowDeadlineUpdateExistingFlow" visibility="package" method="_FJHelYgrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev4fMIgrEe-IO4NVFhexhw" name="testGetNumTxAttemptsPerLink_ExistingFlow" method="_FJHelogrEe-IO4NVFhexhw"/>
              <ownedOperation xmi:id="_Ev4fNIgrEe-IO4NVFhexhw" name="testGetNumTxAttemptsPerLink_MultipleFlows" method="_FJHel4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_FFoswYgrEe-IO4NVFhexhw" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FF-rAIgrEe-IO4NVFhexhw" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FGBHQIgrEe-IO4NVFhexhw" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FGuR4IgrEe-IO4NVFhexhw" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FGvgAIgrEe-IO4NVFhexhw" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJM-IIgrEe-IO4NVFhexhw" name="" memberEnd="_FHP2UIgrEe-IO4NVFhexhw _FJM-IYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJM-IYgrEe-IO4NVFhexhw" name="" type="_EpRg4IgrEe-IO4NVFhexhw" association="_FJM-IIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJPaZYgrEe-IO4NVFhexhw" name="" memberEnd="_FHr7MIgrEe-IO4NVFhexhw _FJQBcIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJQBcIgrEe-IO4NVFhexhw" name="" type="_EscJoIgrEe-IO4NVFhexhw" association="_FJPaZYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJR2pIgrEe-IO4NVFhexhw" name="" memberEnd="_FIBSZYgrEe-IO4NVFhexhw _FJR2pYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJR2pYgrEe-IO4NVFhexhw" name="" type="_Eu614IgrEe-IO4NVFhexhw" association="_FJR2pIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJSdsIgrEe-IO4NVFhexhw" name="" memberEnd="_FIB5cIgrEe-IO4NVFhexhw _FJSdsYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJSdsYgrEe-IO4NVFhexhw" name="" type="_Eu614IgrEe-IO4NVFhexhw" association="_FJSdsIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJq4MIgrEe-IO4NVFhexhw" name="" memberEnd="_FJq4MYgrEe-IO4NVFhexhw _FHGsYIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJq4MYgrEe-IO4NVFhexhw" name="" type="_EnibgIgrEe-IO4NVFhexhw" association="_FJq4MIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJrfQYgrEe-IO4NVFhexhw" name="" memberEnd="_FJrfQogrEe-IO4NVFhexhw _FHGsYogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJrfQogrEe-IO4NVFhexhw" name="" type="_EnibgIgrEe-IO4NVFhexhw" association="_FJrfQYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJsGUYgrEe-IO4NVFhexhw" name="" memberEnd="_FJsGUogrEe-IO4NVFhexhw _FHHTcYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJsGUogrEe-IO4NVFhexhw" name="" type="_EnibgIgrEe-IO4NVFhexhw" association="_FJsGUYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJsGVIgrEe-IO4NVFhexhw" name="" memberEnd="_FJsGVYgrEe-IO4NVFhexhw _FHIhkogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJsGVYgrEe-IO4NVFhexhw" name="" type="_EoT3kIgrEe-IO4NVFhexhw" association="_FJsGVIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJstYYgrEe-IO4NVFhexhw" name="" memberEnd="_FJstYogrEe-IO4NVFhexhw _FHIhlIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJstYogrEe-IO4NVFhexhw" name="" type="_EoT3kIgrEe-IO4NVFhexhw" association="_FJstYYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJtUcIgrEe-IO4NVFhexhw" name="" memberEnd="_FJtUcYgrEe-IO4NVFhexhw _FHJvsYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJtUcYgrEe-IO4NVFhexhw" name="" type="_EoYwEIgrEe-IO4NVFhexhw" association="_FJtUcIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJtUc4grEe-IO4NVFhexhw" name="" memberEnd="_FJtUdIgrEe-IO4NVFhexhw _FHJvs4grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJtUdIgrEe-IO4NVFhexhw" name="" type="_EoYwEIgrEe-IO4NVFhexhw" association="_FJtUc4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJt7gYgrEe-IO4NVFhexhw" name="" memberEnd="_FJt7gogrEe-IO4NVFhexhw _FHK90YgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJt7gogrEe-IO4NVFhexhw" name="" type="_EocacIgrEe-IO4NVFhexhw" association="_FJt7gYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJt7hIgrEe-IO4NVFhexhw" name="" memberEnd="_FJt7hYgrEe-IO4NVFhexhw _FHLk4ogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJt7hYgrEe-IO4NVFhexhw" name="" type="_EorD8IgrEe-IO4NVFhexhw" association="_FJt7hIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJuikYgrEe-IO4NVFhexhw" name="" memberEnd="_FJuikogrEe-IO4NVFhexhw _FHML9IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJuikogrEe-IO4NVFhexhw" name="" type="_EorD8IgrEe-IO4NVFhexhw" association="_FJuikYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJuilIgrEe-IO4NVFhexhw" name="" memberEnd="_FJvJoIgrEe-IO4NVFhexhw _FHNaEYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJvJoIgrEe-IO4NVFhexhw" name="" type="_EpAbIIgrEe-IO4NVFhexhw" association="_FJuilIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJvJoogrEe-IO4NVFhexhw" name="" memberEnd="_FJvJo4grEe-IO4NVFhexhw _FHOBJIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJvJo4grEe-IO4NVFhexhw" name="" type="_EpAbIIgrEe-IO4NVFhexhw" association="_FJvJoogrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJvwsIgrEe-IO4NVFhexhw" name="" memberEnd="_FJvwsYgrEe-IO4NVFhexhw _FHS5oogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJvwsYgrEe-IO4NVFhexhw" name="" type="_Epm4EIgrEe-IO4NVFhexhw" association="_FJvwsIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJvws4grEe-IO4NVFhexhw" name="" memberEnd="_FJvwtIgrEe-IO4NVFhexhw _FHTgsogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJvwtIgrEe-IO4NVFhexhw" name="" type="_Epm4EIgrEe-IO4NVFhexhw" association="_FJvws4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJwXwYgrEe-IO4NVFhexhw" name="" memberEnd="_FJwXwogrEe-IO4NVFhexhw _FHUHwogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJwXwogrEe-IO4NVFhexhw" name="" type="_Epm4EIgrEe-IO4NVFhexhw" association="_FJwXwYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJwXxIgrEe-IO4NVFhexhw" name="" memberEnd="_FJwXxYgrEe-IO4NVFhexhw _FHUu0ogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJwXxYgrEe-IO4NVFhexhw" name="" type="_Epm4EIgrEe-IO4NVFhexhw" association="_FJwXxIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJw-0YgrEe-IO4NVFhexhw" name="" memberEnd="_FJw-0ogrEe-IO4NVFhexhw _FHVV4IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJw-0ogrEe-IO4NVFhexhw" name="" type="_Epm4EIgrEe-IO4NVFhexhw" association="_FJw-0YgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJxl4IgrEe-IO4NVFhexhw" name="" memberEnd="_FJxl4YgrEe-IO4NVFhexhw _FHXLEYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJxl4YgrEe-IO4NVFhexhw" name="" type="_Ep7BIIgrEe-IO4NVFhexhw" association="_FJxl4IgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJxl44grEe-IO4NVFhexhw" name="" memberEnd="_FJxl5IgrEe-IO4NVFhexhw _FHXyIogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJxl5IgrEe-IO4NVFhexhw" name="" type="_Ep7BIIgrEe-IO4NVFhexhw" association="_FJxl44grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJyM8IgrEe-IO4NVFhexhw" name="" memberEnd="_FJyM8YgrEe-IO4NVFhexhw _FHYZMIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJyM8YgrEe-IO4NVFhexhw" name="" type="_EqFZMIgrEe-IO4NVFhexhw" association="_FJyM8IgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJyM84grEe-IO4NVFhexhw" name="" memberEnd="_FJyM9IgrEe-IO4NVFhexhw _FHZAQIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJyM9IgrEe-IO4NVFhexhw" name="" type="_EqJqoIgrEe-IO4NVFhexhw" association="_FJyM84grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJy0AYgrEe-IO4NVFhexhw" name="" memberEnd="_FJy0AogrEe-IO4NVFhexhw _FHZAQogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJy0AogrEe-IO4NVFhexhw" name="" type="_EqJqoIgrEe-IO4NVFhexhw" association="_FJy0AYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJy0BIgrEe-IO4NVFhexhw" name="" memberEnd="_FJy0BYgrEe-IO4NVFhexhw _FHZnUogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJy0BYgrEe-IO4NVFhexhw" name="" type="_EqN8EIgrEe-IO4NVFhexhw" association="_FJy0BIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJzbEYgrEe-IO4NVFhexhw" name="" memberEnd="_FJzbEogrEe-IO4NVFhexhw _FHcDkIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJzbEogrEe-IO4NVFhexhw" name="" type="_EqY7MIgrEe-IO4NVFhexhw" association="_FJzbEYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJzbFIgrEe-IO4NVFhexhw" name="" memberEnd="_FJzbFYgrEe-IO4NVFhexhw _FHcDkogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJzbFYgrEe-IO4NVFhexhw" name="" type="_EqY7MIgrEe-IO4NVFhexhw" association="_FJzbFIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ0CIYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ0CIogrEe-IO4NVFhexhw _FHcDlIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ0CIogrEe-IO4NVFhexhw" name="" type="_EqY7MIgrEe-IO4NVFhexhw" association="_FJ0CIYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ0CJIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ0CJYgrEe-IO4NVFhexhw _FHcqoYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ0CJYgrEe-IO4NVFhexhw" name="" type="_EqY7MIgrEe-IO4NVFhexhw" association="_FJ0CJIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ0pMYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ0pMogrEe-IO4NVFhexhw _FHcqo4grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ0pMogrEe-IO4NVFhexhw" name="" type="_EqY7MIgrEe-IO4NVFhexhw" association="_FJ0pMYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ1QQIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ1QQYgrEe-IO4NVFhexhw _FHd4wYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ1QQYgrEe-IO4NVFhexhw" name="" type="_EqfB0IgrEe-IO4NVFhexhw" association="_FJ1QQIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ1QQ4grEe-IO4NVFhexhw" name="" memberEnd="_FJ1QRIgrEe-IO4NVFhexhw _FHd4w4grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ1QRIgrEe-IO4NVFhexhw" name="" type="_EqfB0IgrEe-IO4NVFhexhw" association="_FJ1QQ4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ13UIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ13UYgrEe-IO4NVFhexhw _FHef04grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ13UYgrEe-IO4NVFhexhw" name="" type="_Eqm9oIgrEe-IO4NVFhexhw" association="_FJ13UIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ13U4grEe-IO4NVFhexhw" name="" memberEnd="_FJ13VIgrEe-IO4NVFhexhw _FHft9YgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ13VIgrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ13U4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ2eYYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ2eYogrEe-IO4NVFhexhw _FHgVAIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ2eYogrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ2eYYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ2eZIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ2eZYgrEe-IO4NVFhexhw _FHgVAogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ2eZYgrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ2eZIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ3FcYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ3FcogrEe-IO4NVFhexhw _FHg8EIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ3FcogrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ3FcYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ3sgIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ3sgYgrEe-IO4NVFhexhw _FHg8FYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ3sgYgrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ3sgIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ3sg4grEe-IO4NVFhexhw" name="" memberEnd="_FJ3shIgrEe-IO4NVFhexhw _FHg8F4grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ3shIgrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ3sg4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ4TkYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ4TkogrEe-IO4NVFhexhw _FHhjIogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ4TkogrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ4TkYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ4TlIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ4TlYgrEe-IO4NVFhexhw _FHiKMogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ4TlYgrEe-IO4NVFhexhw" name="" type="_Eq6foIgrEe-IO4NVFhexhw" association="_FJ4TlIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ46oYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ46oogrEe-IO4NVFhexhw _FHjYUogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ46oogrEe-IO4NVFhexhw" name="" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJ46oYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ46pIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ46pYgrEe-IO4NVFhexhw _FHjYVIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ46pYgrEe-IO4NVFhexhw" name="" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJ46pIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ5hsYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ5hsogrEe-IO4NVFhexhw _FHjYVogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ5hsogrEe-IO4NVFhexhw" name="" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJ5hsYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ6IwIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ6IwYgrEe-IO4NVFhexhw _FHkmdYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ6IwYgrEe-IO4NVFhexhw" name="" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJ6IwIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ6Iw4grEe-IO4NVFhexhw" name="" memberEnd="_FJ6IxIgrEe-IO4NVFhexhw _FHl0kYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ6IxIgrEe-IO4NVFhexhw" name="" type="_ErVWYIgrEe-IO4NVFhexhw" association="_FJ6Iw4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ6v0YgrEe-IO4NVFhexhw" name="" memberEnd="_FJ6v0ogrEe-IO4NVFhexhw _FHnCsIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ6v0ogrEe-IO4NVFhexhw" name="" type="_Er260IgrEe-IO4NVFhexhw" association="_FJ6v0YgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ6v1IgrEe-IO4NVFhexhw" name="" memberEnd="_FJ6v1YgrEe-IO4NVFhexhw _FHnCsogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ6v1YgrEe-IO4NVFhexhw" name="" type="_Er260IgrEe-IO4NVFhexhw" association="_FJ6v1IgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ7W4YgrEe-IO4NVFhexhw" name="" memberEnd="_FJ7W4ogrEe-IO4NVFhexhw _FHoQ1YgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ7W4ogrEe-IO4NVFhexhw" name="" type="_EsRKgIgrEe-IO4NVFhexhw" association="_FJ7W4YgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ7W5IgrEe-IO4NVFhexhw" name="" memberEnd="_FJ7W5YgrEe-IO4NVFhexhw _FHoQ14grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ7W5YgrEe-IO4NVFhexhw" name="" type="_EsRKgIgrEe-IO4NVFhexhw" association="_FJ7W5IgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ798YgrEe-IO4NVFhexhw" name="" memberEnd="_FJ798ogrEe-IO4NVFhexhw _FHo344grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ798ogrEe-IO4NVFhexhw" name="" type="_EsTmwIgrEe-IO4NVFhexhw" association="_FJ798YgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ8lAIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ8lAYgrEe-IO4NVFhexhw _FHr7MYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ8lAYgrEe-IO4NVFhexhw" name="" type="_EscJoIgrEe-IO4NVFhexhw" association="_FJ8lAIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ8lA4grEe-IO4NVFhexhw" name="" memberEnd="_FJ8lBIgrEe-IO4NVFhexhw _FHsiQIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ8lBIgrEe-IO4NVFhexhw" name="" type="_EscJoIgrEe-IO4NVFhexhw" association="_FJ8lA4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ9MEIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ9MEYgrEe-IO4NVFhexhw _FHuXdIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ9MEYgrEe-IO4NVFhexhw" name="" type="_Es6DsIgrEe-IO4NVFhexhw" association="_FJ9MEIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ9ME4grEe-IO4NVFhexhw" name="" memberEnd="_FJ9MFIgrEe-IO4NVFhexhw _FHu-gYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ9MFIgrEe-IO4NVFhexhw" name="" type="_Es6DsIgrEe-IO4NVFhexhw" association="_FJ9ME4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ9MFogrEe-IO4NVFhexhw" name="" memberEnd="_FJ9MF4grEe-IO4NVFhexhw _FHwzsogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ9MF4grEe-IO4NVFhexhw" name="" type="_EtpqkIgrEe-IO4NVFhexhw" association="_FJ9MFogrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ9zIYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ9zIogrEe-IO4NVFhexhw _FHwztIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ9zIogrEe-IO4NVFhexhw" name="" type="_EtpqkIgrEe-IO4NVFhexhw" association="_FJ9zIYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ9zJIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ9zJYgrEe-IO4NVFhexhw _FHxawYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ9zJYgrEe-IO4NVFhexhw" name="" type="_EtpqkIgrEe-IO4NVFhexhw" association="_FJ9zJIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ-aMYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ-aMogrEe-IO4NVFhexhw _FHyB0ogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ-aMogrEe-IO4NVFhexhw" name="" type="_EtpqkIgrEe-IO4NVFhexhw" association="_FJ-aMYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ-aNIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ-aNYgrEe-IO4NVFhexhw _FHyB1YgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ-aNYgrEe-IO4NVFhexhw" name="" type="_EtpqkIgrEe-IO4NVFhexhw" association="_FJ-aNIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ_BQYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ_BQogrEe-IO4NVFhexhw _FHyo4IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ_BQogrEe-IO4NVFhexhw" name="" type="_EtpqkIgrEe-IO4NVFhexhw" association="_FJ_BQYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ_BRIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ_BRYgrEe-IO4NVFhexhw _FHyo44grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ_BRYgrEe-IO4NVFhexhw" name="" type="_EtpqkIgrEe-IO4NVFhexhw" association="_FJ_BRIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ_oUYgrEe-IO4NVFhexhw" name="" memberEnd="_FJ_oUogrEe-IO4NVFhexhw _FHzP8IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ_oUogrEe-IO4NVFhexhw" name="" type="_Et0psIgrEe-IO4NVFhexhw" association="_FJ_oUYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FJ_oVIgrEe-IO4NVFhexhw" name="" memberEnd="_FJ_oVYgrEe-IO4NVFhexhw _FH6ksogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FJ_oVYgrEe-IO4NVFhexhw" name="" type="_EuUY8IgrEe-IO4NVFhexhw" association="_FJ_oVIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKAPYYgrEe-IO4NVFhexhw" name="" memberEnd="_FKAPYogrEe-IO4NVFhexhw _FH7LwogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKAPYogrEe-IO4NVFhexhw" name="" type="_EuUY8IgrEe-IO4NVFhexhw" association="_FKAPYYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKAPZIgrEe-IO4NVFhexhw" name="" memberEnd="_FKAPZYgrEe-IO4NVFhexhw _FH8Z4IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKAPZYgrEe-IO4NVFhexhw" name="" type="_Euk3oIgrEe-IO4NVFhexhw" association="_FKAPZIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKA2cYgrEe-IO4NVFhexhw" name="" memberEnd="_FKA2cogrEe-IO4NVFhexhw _FH8Z4ogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKA2cogrEe-IO4NVFhexhw" name="" type="_Euk3oIgrEe-IO4NVFhexhw" association="_FKA2cYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKA2dIgrEe-IO4NVFhexhw" name="" memberEnd="_FKA2dYgrEe-IO4NVFhexhw _FH9A8IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKA2dYgrEe-IO4NVFhexhw" name="" type="_Euk3oIgrEe-IO4NVFhexhw" association="_FKA2dIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKBdgYgrEe-IO4NVFhexhw" name="" memberEnd="_FKBdgogrEe-IO4NVFhexhw _FH9A8ogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKBdgogrEe-IO4NVFhexhw" name="" type="_Euk3oIgrEe-IO4NVFhexhw" association="_FKBdgYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKBdhIgrEe-IO4NVFhexhw" name="" memberEnd="_FKBdhYgrEe-IO4NVFhexhw _FH9A9IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKBdhYgrEe-IO4NVFhexhw" name="" type="_Euk3oIgrEe-IO4NVFhexhw" association="_FKBdhIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKCEkYgrEe-IO4NVFhexhw" name="" memberEnd="_FKCEkogrEe-IO4NVFhexhw _FIB5c4grEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKCEkogrEe-IO4NVFhexhw" name="" type="_Eu614IgrEe-IO4NVFhexhw" association="_FKCEkYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKCroIgrEe-IO4NVFhexhw" name="" memberEnd="_FKCroYgrEe-IO4NVFhexhw _FICggogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKCroYgrEe-IO4NVFhexhw" name="" type="_Eu614IgrEe-IO4NVFhexhw" association="_FKCroIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKCro4grEe-IO4NVFhexhw" name="" memberEnd="_FKCrpIgrEe-IO4NVFhexhw _FIEVtIgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKCrpIgrEe-IO4NVFhexhw" name="" type="_EvbzQIgrEe-IO4NVFhexhw" association="_FKCro4grEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKDSsYgrEe-IO4NVFhexhw" name="" memberEnd="_FKDSsogrEe-IO4NVFhexhw _FIE8wogrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKDSsogrEe-IO4NVFhexhw" name="" type="_EvbzQIgrEe-IO4NVFhexhw" association="_FKDSsYgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKDStIgrEe-IO4NVFhexhw" name="" memberEnd="_FKDStYgrEe-IO4NVFhexhw _FIE8xYgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKDStYgrEe-IO4NVFhexhw" name="" type="_EvhS0IgrEe-IO4NVFhexhw" association="_FKDStIgrEe-IO4NVFhexhw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_FKD5wYgrEe-IO4NVFhexhw" name="" memberEnd="_FKD5wogrEe-IO4NVFhexhw _FIGK4IgrEe-IO4NVFhexhw">
              <ownedEnd xmi:id="_FKD5wogrEe-IO4NVFhexhw" name="" type="_EvkWIIgrEe-IO4NVFhexhw" association="_FKD5wYgrEe-IO4NVFhexhw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_Ei2IwYgrEe-IO4NVFhexhw" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_FDq94YgrEe-IO4NVFhexhw" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FDrk8IgrEe-IO4NVFhexhw" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FDrk8ogrEe-IO4NVFhexhw" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FG0YgIgrEe-IO4NVFhexhw" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_EjawgIgrEe-IO4NVFhexhw" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_FEEmgIgrEe-IO4NVFhexhw" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_EhePwIgrEe-IO4NVFhexhw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_Ehe20IgrEe-IO4NVFhexhw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_EiN2oIgrEe-IO4NVFhexhw" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_FDW00IgrEe-IO4NVFhexhw" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_EkxbYIgrEe-IO4NVFhexhw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_FE_MgogrEe-IO4NVFhexhw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_EsE9QIgrEe-IO4NVFhexhw" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDIyYIgrEe-IO4NVFhexhw" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDJZcIgrEe-IO4NVFhexhw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDKAgYgrEe-IO4NVFhexhw" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_FDKAg4grEe-IO4NVFhexhw" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_FDKnkYgrEe-IO4NVFhexhw" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_FDdigIgrEe-IO4NVFhexhw" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_FD9RwIgrEe-IO4NVFhexhw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FEFNkYgrEe-IO4NVFhexhw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FEYvkIgrEe-IO4NVFhexhw" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_FEZWoYgrEe-IO4NVFhexhw" name="Queue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FE9XUIgrEe-IO4NVFhexhw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_FE-lcYgrEe-IO4NVFhexhw" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FE_MgIgrEe-IO4NVFhexhw" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Eij044grEe-IO4NVFhexhw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_FDhz8YgrEe-IO4NVFhexhw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDibAIgrEe-IO4NVFhexhw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FD0H0IgrEe-IO4NVFhexhw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FD0u4YgrEe-IO4NVFhexhw" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Eikb8IgrEe-IO4NVFhexhw" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_Eikb8YgrEe-IO4NVFhexhw" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_FDibAogrEe-IO4NVFhexhw" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_FDjCEIgrEe-IO4NVFhexhw" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_FDjCEogrEe-IO4NVFhexhw" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Ei-roIgrEe-IO4NVFhexhw" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_FDxrkIgrEe-IO4NVFhexhw" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_FFaqUIgrEe-IO4NVFhexhw" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_FFaqUYgrEe-IO4NVFhexhw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FFydwIgrEe-IO4NVFhexhw" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_FGC8dIgrEe-IO4NVFhexhw" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FG-wkIgrEe-IO4NVFhexhw" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Eij04IgrEe-IO4NVFhexhw" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_Eij04YgrEe-IO4NVFhexhw" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_Eij04ogrEe-IO4NVFhexhw" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_FDhM4IgrEe-IO4NVFhexhw" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Eikb8ogrEe-IO4NVFhexhw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_EilDAIgrEe-IO4NVFhexhw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_Ei_SsIgrEe-IO4NVFhexhw" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_FDy5sogrEe-IO4NVFhexhw" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_FDzgwIgrEe-IO4NVFhexhw" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDjCFIgrEe-IO4NVFhexhw" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDxrkogrEe-IO4NVFhexhw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDySoYgrEe-IO4NVFhexhw" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_FDy5sIgrEe-IO4NVFhexhw" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Ei1hsIgrEe-IO4NVFhexhw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_Ei1hsYgrEe-IO4NVFhexhw" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_Ei1hsogrEe-IO4NVFhexhw" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_Ei1hs4grEe-IO4NVFhexhw" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_Ei2IwIgrEe-IO4NVFhexhw" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_FDqW0YgrEe-IO4NVFhexhw" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_FDqW04grEe-IO4NVFhexhw" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_FDpIsIgrEe-IO4NVFhexhw" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FDpvwYgrEe-IO4NVFhexhw" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_FDpvw4grEe-IO4NVFhexhw" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ElJO0IgrEe-IO4NVFhexhw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_ElJ14IgrEe-IO4NVFhexhw" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_ElJ14YgrEe-IO4NVFhexhw" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_FFMA0IgrEe-IO4NVFhexhw" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_FFMn4IgrEe-IO4NVFhexhw" name="AfterEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_FFMn4ogrEe-IO4NVFhexhw" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_FFNO8YgrEe-IO4NVFhexhw" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Ei6aMIgrEe-IO4NVFhexhw" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_FDsMB4grEe-IO4NVFhexhw" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FDtaIYgrEe-IO4NVFhexhw" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FDuBM4grEe-IO4NVFhexhw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FDuoRogrEe-IO4NVFhexhw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FDvPVogrEe-IO4NVFhexhw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FDwdcogrEe-IO4NVFhexhw" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FFHIU4grEe-IO4NVFhexhw" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FFHvZogrEe-IO4NVFhexhw" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FFIWdogrEe-IO4NVFhexhw" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FFJkkogrEe-IO4NVFhexhw" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_EkZn8IgrEe-IO4NVFhexhw" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_FEuGwIgrEe-IO4NVFhexhw" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FEut0YgrEe-IO4NVFhexhw" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FEut04grEe-IO4NVFhexhw" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FEvU4YgrEe-IO4NVFhexhw" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FEv78IgrEe-IO4NVFhexhw" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_Ekix4IgrEe-IO4NVFhexhw" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_FEzmUIgrEe-IO4NVFhexhw" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FE00cogrEe-IO4NVFhexhw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FE2CkIgrEe-IO4NVFhexhw" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FE2po4grEe-IO4NVFhexhw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FE3QtIgrEe-IO4NVFhexhw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_FE33xogrEe-IO4NVFhexhw" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_DRcLQIgrEe-IO4NVFhexhw">
      <eAnnotations xmi:id="_DRjgAIgrEe-IO4NVFhexhw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_DRo_kIgrEe-IO4NVFhexhw" base_Package="_DJMOMIgrEe-IO4NVFhexhw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_EncU4IgrEe-IO4NVFhexhw" genericsValue="T,E" base_Element="_EnWOQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Enn7EIgrEe-IO4NVFhexhw" base_Element="_Enms8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EnpwQIgrEe-IO4NVFhexhw" base_Element="_Enms8IgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EnuBsIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Env24IgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_EnuowIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EnxsEIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_Enwd8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EnzhQIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_EnyTIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_En1WcIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_En0IUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_En3LoIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_En19gIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EokWQIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_EojIIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_Eov8cIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_EovVYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpCQUIgrEe-IO4NVFhexhw" base_Element="_EpBpQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EpC3YIgrEe-IO4NVFhexhw" base_Element="_EpBpQIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EpC3YYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpDecYgrEe-IO4NVFhexhw" base_Element="_EpDecIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EpEFgIgrEe-IO4NVFhexhw" base_Element="_EpDecIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EpEFgYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpEskIgrEe-IO4NVFhexhw" base_Element="_EpEFgogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EpFToIgrEe-IO4NVFhexhw" base_Element="_EpEFgogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EpFToYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EpMoYIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_EpLaQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpQ50IgrEe-IO4NVFhexhw" base_Element="_EpQSwYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EpQ50YgrEe-IO4NVFhexhw" base_Element="_EpQSwYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EpQ50ogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpUkMIgrEe-IO4NVFhexhw" base_Element="_EpT9IIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpYOkIgrEe-IO4NVFhexhw" base_Element="_EpXngIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EpYOkYgrEe-IO4NVFhexhw" base_Element="_EpXngIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EpYOkogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpY1oogrEe-IO4NVFhexhw" base_Element="_EpY1oIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EpZcsIgrEe-IO4NVFhexhw" base_Element="_EpY1oIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EpZcsYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EpaDwIgrEe-IO4NVFhexhw" base_Element="_EpZcsogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Epaq0IgrEe-IO4NVFhexhw" base_Element="_EpZcsogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Epaq0YgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EpsXoIgrEe-IO4NVFhexhw" genericsValue="Node" base_Element="_EprwkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EptlwIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_Eps-sIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_Epuz4IgrEe-IO4NVFhexhw" genericsValue="Integer" base_Element="_EpuM0IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Epx3MYgrEe-IO4NVFhexhw" base_Element="_EpxQIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EpyeQIgrEe-IO4NVFhexhw" base_Element="_EpxQIIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EpyeQYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ep-EcIgrEe-IO4NVFhexhw" base_Element="_Ep9dYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ep-EcYgrEe-IO4NVFhexhw" base_Element="_Ep9dYIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Ep-EcogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_EqLf0ogrEe-IO4NVFhexhw" dimensions="2" base_Element="_EqK4w4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EqjTQIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_EqisMIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EqlvgIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_EqlIcIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EqqA8YgrEe-IO4NVFhexhw" base_Element="_EqpZ4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EqqA8ogrEe-IO4NVFhexhw" base_Element="_EqpZ4IgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EqqoAIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eqr2IIgrEe-IO4NVFhexhw" base_Element="_EqrPEogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Eqr2IYgrEe-IO4NVFhexhw" base_Element="_EqrPEogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Eqr2IogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EqsdMYgrEe-IO4NVFhexhw" base_Element="_EqsdMIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EqsdMogrEe-IO4NVFhexhw" base_Element="_EqsdMIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EqsdM4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eq1AEIgrEe-IO4NVFhexhw" base_Element="_Eq0ZBIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Eq1nIIgrEe-IO4NVFhexhw" base_Element="_Eq0ZBIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Eq2OMIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Eq4qcIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_Eq3cUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_Eq874IgrEe-IO4NVFhexhw" genericsValue="String, Integer" base_Element="_Eq8U0IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_Eq-xEIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_Eq9i8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_Eq__MIgrEe-IO4NVFhexhw" base_Element="_Eq_YIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ErMMcIgrEe-IO4NVFhexhw" base_Element="_ErLlYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_ErMMcYgrEe-IO4NVFhexhw" base_Element="_ErLlYIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_ErMzgIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ErUIQIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_ErS6IIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Erg8kYgrEe-IO4NVFhexhw" base_Element="_ErgVgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_ErhjoIgrEe-IO4NVFhexhw" base_Element="_ErgVgIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_ErhjoYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EriKsYgrEe-IO4NVFhexhw" base_Element="_ErhjpIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_ErixwIgrEe-IO4NVFhexhw" base_Element="_ErhjpIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_ErixwYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ErjY0IgrEe-IO4NVFhexhw" base_Element="_ErixwogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_ErjY0YgrEe-IO4NVFhexhw" base_Element="_ErixwogrEe-IO4NVFhexhw">
    <annotations xmi:id="_ErjY0ogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Erkm8YgrEe-IO4NVFhexhw" base_Element="_Erkm8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_ErlOAIgrEe-IO4NVFhexhw" base_Element="_Erkm8IgrEe-IO4NVFhexhw">
    <annotations xmi:id="_ErlOAYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Erl1EIgrEe-IO4NVFhexhw" base_Element="_ErlOAogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Erl1EYgrEe-IO4NVFhexhw" base_Element="_ErlOAogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Erl1EogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ErnDMIgrEe-IO4NVFhexhw" base_Element="_ErmcIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_ErnDMYgrEe-IO4NVFhexhw" base_Element="_ErmcIIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_ErnDMogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ErnqQYgrEe-IO4NVFhexhw" base_Element="_ErnDM4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_ErnqQogrEe-IO4NVFhexhw" base_Element="_ErnDM4grEe-IO4NVFhexhw">
    <annotations xmi:id="_ErnqQ4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ero4YIgrEe-IO4NVFhexhw" base_Element="_EroRUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ero4YYgrEe-IO4NVFhexhw" base_Element="_EroRUIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Ero4YogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ErpfcIgrEe-IO4NVFhexhw" genericsValue="String, Integer" base_Element="_Ero4Y4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Er4I8IgrEe-IO4NVFhexhw" base_Element="_Er3h4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Er4wAIgrEe-IO4NVFhexhw" base_Element="_Er3h4IgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Er4wAYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Er5XEIgrEe-IO4NVFhexhw" base_Element="_Er4wAogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Er5-IIgrEe-IO4NVFhexhw" base_Element="_Er4wAogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Er5-IYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Er6lMIgrEe-IO4NVFhexhw" base_Element="_Er5-IogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Er6lMYgrEe-IO4NVFhexhw" base_Element="_Er5-IogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Er7MQIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Er7zUIgrEe-IO4NVFhexhw" base_Element="_Er7MQYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Er7zUYgrEe-IO4NVFhexhw" base_Element="_Er7MQYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Er7zUogrEe-IO4NVFhexhw" base_Element="_Er7MQYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Er7zU4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Er8aY4grEe-IO4NVFhexhw" dimensions="2" base_Element="_Er8aYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Er9BcIgrEe-IO4NVFhexhw" base_Element="_Er8aYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Er9BcYgrEe-IO4NVFhexhw" base_Element="_Er8aYIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Er9ogIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EsAr0IgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_EsAEwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EsDIEIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_EsChAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_EsFkUIgrEe-IO4NVFhexhw" base_Element="_EsE9QIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EsGLYIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_EsFkUYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EsU04YgrEe-IO4NVFhexhw" base_Element="_EsU04IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EsVb8IgrEe-IO4NVFhexhw" base_Element="_EsU04IgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EsVb8YgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_EsYfQIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_EsX4MIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EsiQQIgrEe-IO4NVFhexhw" genericsValue="Integer" base_Element="_EshpMYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_Es3AYIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_Es1yQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_Es41kIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_Es4OgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EtSeMIgrEe-IO4NVFhexhw" genericsValue="T extends SchedulableObject" base_Element="_EtR3IIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EtUTYIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_EtTsUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EtWvoIgrEe-IO4NVFhexhw" base_Element="_EtWIkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EtddUIgrEe-IO4NVFhexhw" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_Etc2QIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Etjj8IgrEe-IO4NVFhexhw" base_Element="_Eti84IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EtkyEIgrEe-IO4NVFhexhw" base_Element="_EtkLAogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EtsG0IgrEe-IO4NVFhexhw" base_Element="_EtrfwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Etst4IgrEe-IO4NVFhexhw" base_Element="_EtrfwIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Etst4YgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EttU8IgrEe-IO4NVFhexhw" base_Element="_Etst4ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EttU8YgrEe-IO4NVFhexhw" base_Element="_Etst4ogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EttU8ogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ett8AYgrEe-IO4NVFhexhw" base_Element="_EttU84grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EtujEIgrEe-IO4NVFhexhw" base_Element="_EttU84grEe-IO4NVFhexhw">
    <annotations xmi:id="_EtujEYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Et6wU4grEe-IO4NVFhexhw" base_Element="_Et6wUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_Et7XY4grEe-IO4NVFhexhw" dimensions="2" base_Element="_Et7XYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_EuGWgYgrEe-IO4NVFhexhw" base_Element="_EuFvcYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EuTx4IgrEe-IO4NVFhexhw" genericsValue="InstructionParameters" base_Element="_EuTK0IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_EuWOIIgrEe-IO4NVFhexhw" genericsValue="InstructionParameters" base_Element="_EuVnEogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eums0YgrEe-IO4NVFhexhw" base_Element="_Eums0IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EunT4IgrEe-IO4NVFhexhw" base_Element="_Eums0IgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EunT4YgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eun68YgrEe-IO4NVFhexhw" base_Element="_Eun68IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EuoiAIgrEe-IO4NVFhexhw" base_Element="_Eun68IgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EuoiAYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EupJEIgrEe-IO4NVFhexhw" base_Element="_EuoiAogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EupJEYgrEe-IO4NVFhexhw" base_Element="_EuoiAogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EupJEogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EupwIYgrEe-IO4NVFhexhw" base_Element="_EupwIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EuqXMIgrEe-IO4NVFhexhw" base_Element="_EupwIIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EuqXMYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Euq-QIgrEe-IO4NVFhexhw" base_Element="_EuqXMogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Euq-QYgrEe-IO4NVFhexhw" base_Element="_EuqXMogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Euq-QogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EurlUYgrEe-IO4NVFhexhw" base_Element="_EurlUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EusMYIgrEe-IO4NVFhexhw" base_Element="_EurlUIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EusMYYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EuszcYgrEe-IO4NVFhexhw" base_Element="_EusMYogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EuszcogrEe-IO4NVFhexhw" base_Element="_EusMYogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Euszc4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EutagogrEe-IO4NVFhexhw" base_Element="_EutagIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EuuBkIgrEe-IO4NVFhexhw" base_Element="_EutagIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EuuBkYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EuuooYgrEe-IO4NVFhexhw" base_Element="_EuuBkogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EuvPsIgrEe-IO4NVFhexhw" base_Element="_EuuBkogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EuvPsYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EuvPs4grEe-IO4NVFhexhw" base_Element="_EuvPsogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Euv2wIgrEe-IO4NVFhexhw" base_Element="_EuvPsogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Euv2wYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Euwd0IgrEe-IO4NVFhexhw" base_Element="_Euv2wogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EuxE4IgrEe-IO4NVFhexhw" base_Element="_Euv2wogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EuxE4YgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Euxr8YgrEe-IO4NVFhexhw" base_Element="_EuxE4ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Euxr8ogrEe-IO4NVFhexhw" base_Element="_EuxE4ogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EuyTAIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EuyTA4grEe-IO4NVFhexhw" base_Element="_EuyTAYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Euy6EIgrEe-IO4NVFhexhw" base_Element="_EuyTAYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Euy6EYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EuzhIIgrEe-IO4NVFhexhw" base_Element="_Euy6EogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EuzhIYgrEe-IO4NVFhexhw" base_Element="_Euy6EogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EuzhIogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eu0IMYgrEe-IO4NVFhexhw" base_Element="_EuzhI4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Eu0IMogrEe-IO4NVFhexhw" base_Element="_EuzhI4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Eu0IM4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eu0vQYgrEe-IO4NVFhexhw" base_Element="_Eu0vQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Eu0vQogrEe-IO4NVFhexhw" base_Element="_Eu0vQIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Eu1WUIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_EvPmAIgrEe-IO4NVFhexhw" base_Element="_EvO-8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_EvQ0IIgrEe-IO4NVFhexhw" base_Element="_EvQNEIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_EvSCRIgrEe-IO4NVFhexhw" base_Element="_EvSCQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_EvT3cIgrEe-IO4NVFhexhw" base_Element="_EvTQYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvdocIgrEe-IO4NVFhexhw" base_Element="_EvdBZIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvdocYgrEe-IO4NVFhexhw" base_Element="_EvdBZIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvdocogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvePgIgrEe-IO4NVFhexhw" base_Element="_Evdoc4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvePgYgrEe-IO4NVFhexhw" base_Element="_Evdoc4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Eve2kIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Eve2k4grEe-IO4NVFhexhw" base_Element="_Eve2kYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvfdoIgrEe-IO4NVFhexhw" base_Element="_Eve2kYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvfdoYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvlkQYgrEe-IO4NVFhexhw" base_Element="_EvlkQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvmLUIgrEe-IO4NVFhexhw" base_Element="_EvlkQIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvmLUYgrEe-IO4NVFhexhw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvmLU4grEe-IO4NVFhexhw" base_Element="_EvmLUogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvmyYIgrEe-IO4NVFhexhw" base_Element="_EvmLUogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvmyYYgrEe-IO4NVFhexhw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvmyY4grEe-IO4NVFhexhw" base_Element="_EvmyYogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvnZcIgrEe-IO4NVFhexhw" base_Element="_EvmyYogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvnZcYgrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvnZc4grEe-IO4NVFhexhw" base_Element="_EvnZcogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvnZdIgrEe-IO4NVFhexhw" base_Element="_EvnZcogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvnZdYgrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvoAgYgrEe-IO4NVFhexhw" base_Element="_EvoAgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvoAgogrEe-IO4NVFhexhw" base_Element="_EvoAgIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvoAg4grEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvonkIgrEe-IO4NVFhexhw" base_Element="_EvoAhIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvonkYgrEe-IO4NVFhexhw" base_Element="_EvoAhIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvonkogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvpOoIgrEe-IO4NVFhexhw" base_Element="_Evonk4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvpOoYgrEe-IO4NVFhexhw" base_Element="_Evonk4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvpOoogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Evp1sIgrEe-IO4NVFhexhw" base_Element="_EvpOo4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Evp1sYgrEe-IO4NVFhexhw" base_Element="_EvpOo4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Evp1sogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvqcwIgrEe-IO4NVFhexhw" base_Element="_Evp1s4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvrD0IgrEe-IO4NVFhexhw" base_Element="_Evp1s4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvrD0YgrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Evrq4IgrEe-IO4NVFhexhw" base_Element="_EvrD0ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Evrq4YgrEe-IO4NVFhexhw" base_Element="_EvrD0ogrEe-IO4NVFhexhw">
    <annotations xmi:id="_Evrq4ogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvsR8IgrEe-IO4NVFhexhw" base_Element="_Evrq44grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvsR8YgrEe-IO4NVFhexhw" base_Element="_Evrq44grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvsR8ogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Evs5AIgrEe-IO4NVFhexhw" base_Element="_EvsR84grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Evs5AYgrEe-IO4NVFhexhw" base_Element="_EvsR84grEe-IO4NVFhexhw">
    <annotations xmi:id="_Evs5AogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvtgEIgrEe-IO4NVFhexhw" base_Element="_Evs5A4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvtgEYgrEe-IO4NVFhexhw" base_Element="_Evs5A4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvtgEogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvuHIIgrEe-IO4NVFhexhw" base_Element="_EvtgE4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvuHIYgrEe-IO4NVFhexhw" base_Element="_EvtgE4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvuHIogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvuuMIgrEe-IO4NVFhexhw" base_Element="_EvuHI4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvuuMYgrEe-IO4NVFhexhw" base_Element="_EvuHI4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvuuMogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvvVQIgrEe-IO4NVFhexhw" base_Element="_EvuuM4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvvVQYgrEe-IO4NVFhexhw" base_Element="_EvuuM4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvvVQogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvvVRIgrEe-IO4NVFhexhw" base_Element="_EvvVQ4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Evv8UIgrEe-IO4NVFhexhw" base_Element="_EvvVQ4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Evv8UYgrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Evv8U4grEe-IO4NVFhexhw" base_Element="_Evv8UogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Evv8VIgrEe-IO4NVFhexhw" base_Element="_Evv8UogrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvwjYIgrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvwjYogrEe-IO4NVFhexhw" base_Element="_EvwjYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvwjY4grEe-IO4NVFhexhw" base_Element="_EvwjYYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvwjZIgrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvxKcYgrEe-IO4NVFhexhw" base_Element="_EvxKcIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvxKcogrEe-IO4NVFhexhw" base_Element="_EvxKcIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvxKc4grEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvxxgIgrEe-IO4NVFhexhw" base_Element="_EvxKdIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvxxgYgrEe-IO4NVFhexhw" base_Element="_EvxKdIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_EvxxgogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvyYkIgrEe-IO4NVFhexhw" base_Element="_Evxxg4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvyYkYgrEe-IO4NVFhexhw" base_Element="_Evxxg4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvyYkogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Evy_oIgrEe-IO4NVFhexhw" base_Element="_EvyYk4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Evy_oYgrEe-IO4NVFhexhw" base_Element="_EvyYk4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Evy_oogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_EvzmsIgrEe-IO4NVFhexhw" base_Element="_Evy_o4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_EvzmsYgrEe-IO4NVFhexhw" base_Element="_Evy_o4grEe-IO4NVFhexhw">
    <annotations xmi:id="_EvzmsogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev0NwIgrEe-IO4NVFhexhw" base_Element="_Evzms4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev0NwYgrEe-IO4NVFhexhw" base_Element="_Evzms4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev0NwogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev000IgrEe-IO4NVFhexhw" base_Element="_Ev0Nw4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev000YgrEe-IO4NVFhexhw" base_Element="_Ev0Nw4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev000ogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev1b4IgrEe-IO4NVFhexhw" base_Element="_Ev0004grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev1b4YgrEe-IO4NVFhexhw" base_Element="_Ev0004grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev1b4ogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev2C8IgrEe-IO4NVFhexhw" base_Element="_Ev1b44grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev2C8YgrEe-IO4NVFhexhw" base_Element="_Ev1b44grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev2C8ogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev2qAIgrEe-IO4NVFhexhw" base_Element="_Ev2C84grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev2qAYgrEe-IO4NVFhexhw" base_Element="_Ev2C84grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev2qAogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev3REIgrEe-IO4NVFhexhw" base_Element="_Ev2qA4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev3REYgrEe-IO4NVFhexhw" base_Element="_Ev2qA4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev3REogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev34IIgrEe-IO4NVFhexhw" base_Element="_Ev3RE4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev34IYgrEe-IO4NVFhexhw" base_Element="_Ev3RE4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev34IogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev34JIgrEe-IO4NVFhexhw" base_Element="_Ev34I4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev34JYgrEe-IO4NVFhexhw" base_Element="_Ev34I4grEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev34JogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev4fMYgrEe-IO4NVFhexhw" base_Element="_Ev4fMIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev4fMogrEe-IO4NVFhexhw" base_Element="_Ev4fMIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev4fM4grEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ev5GQIgrEe-IO4NVFhexhw" base_Element="_Ev4fNIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_Ev5GQYgrEe-IO4NVFhexhw" base_Element="_Ev4fNIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_Ev5GQogrEe-IO4NVFhexhw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDIyYYgrEe-IO4NVFhexhw" base_Element="_FDIyYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDKAgIgrEe-IO4NVFhexhw" base_Element="_FDJZcIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDKAgogrEe-IO4NVFhexhw" base_Element="_FDKAgYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDKnkIgrEe-IO4NVFhexhw" base_Element="_FDKAg4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDKnkogrEe-IO4NVFhexhw" base_Element="_FDKnkYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDND0IgrEe-IO4NVFhexhw" base_Element="_FDMcwYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDND0YgrEe-IO4NVFhexhw" base_Element="_FDMcwYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDND0ogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FDOR8YgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FDOR8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FDO5AogrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FDO5AYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FDR8UYgrEe-IO4NVFhexhw" genericsValue="String, Activation" base_Element="_FDR8UIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDXb4IgrEe-IO4NVFhexhw" base_Element="_FDW00IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDafMIgrEe-IO4NVFhexhw" base_Element="_FDZ4JogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDafMYgrEe-IO4NVFhexhw" base_Element="_FDZ4JogrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDafMogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDdigYgrEe-IO4NVFhexhw" base_Element="_FDdigIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDfXsogrEe-IO4NVFhexhw" base_Element="_FDewoIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDfXs4grEe-IO4NVFhexhw" base_Element="_FDewoIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDfXtIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDhz8IgrEe-IO4NVFhexhw" base_Element="_FDhM4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDhz8ogrEe-IO4NVFhexhw" base_Element="_FDhz8YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDibAYgrEe-IO4NVFhexhw" base_Element="_FDibAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDibA4grEe-IO4NVFhexhw" base_Element="_FDibAogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDjCEYgrEe-IO4NVFhexhw" base_Element="_FDjCEIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDjCE4grEe-IO4NVFhexhw" base_Element="_FDjCEogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDjpIIgrEe-IO4NVFhexhw" base_Element="_FDjCFIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDk3RYgrEe-IO4NVFhexhw" base_Element="_FDk3QogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDleUIgrEe-IO4NVFhexhw" base_Element="_FDk3QogrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDleUYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FDnTgIgrEe-IO4NVFhexhw" genericsValue="String, Flow" base_Element="_FDmscIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FDn6kIgrEe-IO4NVFhexhw" genericsValue="Node, Activation" base_Element="_FDnTgYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDpvwIgrEe-IO4NVFhexhw" base_Element="_FDpIsIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDpvwogrEe-IO4NVFhexhw" base_Element="_FDpvwYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDqW0IgrEe-IO4NVFhexhw" base_Element="_FDpvw4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDqW0ogrEe-IO4NVFhexhw" base_Element="_FDqW0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDq94IgrEe-IO4NVFhexhw" base_Element="_FDqW04grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDq94ogrEe-IO4NVFhexhw" base_Element="_FDq94YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDrk8YgrEe-IO4NVFhexhw" base_Element="_FDrk8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDrk84grEe-IO4NVFhexhw" base_Element="_FDrk8ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDszEIgrEe-IO4NVFhexhw" base_Element="_FDsMB4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDszE4grEe-IO4NVFhexhw" base_Element="_FDszEYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDszFIgrEe-IO4NVFhexhw" base_Element="_FDszEYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDtaIIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDtaIogrEe-IO4NVFhexhw" base_Element="_FDtaIYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDuBMIgrEe-IO4NVFhexhw" base_Element="_FDtaI4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDuBMYgrEe-IO4NVFhexhw" base_Element="_FDtaI4grEe-IO4NVFhexhw">
    <annotations xmi:id="_FDuBMogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDuoQIgrEe-IO4NVFhexhw" base_Element="_FDuBM4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDuoQ4grEe-IO4NVFhexhw" base_Element="_FDuoQYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDuoRIgrEe-IO4NVFhexhw" base_Element="_FDuoQYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDuoRYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDvPUIgrEe-IO4NVFhexhw" base_Element="_FDuoRogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDvPU4grEe-IO4NVFhexhw" base_Element="_FDvPUYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDvPVIgrEe-IO4NVFhexhw" base_Element="_FDvPUYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDvPVYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDv2YIgrEe-IO4NVFhexhw" base_Element="_FDvPVogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDv2Y4grEe-IO4NVFhexhw" base_Element="_FDv2YYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDwdcIgrEe-IO4NVFhexhw" base_Element="_FDv2YYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDwdcYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDwdc4grEe-IO4NVFhexhw" base_Element="_FDwdcogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FDxEgYgrEe-IO4NVFhexhw" base_Element="_FDwddIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FDxEgogrEe-IO4NVFhexhw" base_Element="_FDwddIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FDxEg4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FDxrkYgrEe-IO4NVFhexhw" base_Element="_FDxrkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDySoIgrEe-IO4NVFhexhw" base_Element="_FDxrkogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDySoogrEe-IO4NVFhexhw" base_Element="_FDySoYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDy5sYgrEe-IO4NVFhexhw" base_Element="_FDy5sIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDy5s4grEe-IO4NVFhexhw" base_Element="_FDy5sogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FDzgwYgrEe-IO4NVFhexhw" base_Element="_FDzgwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FD0u4IgrEe-IO4NVFhexhw" base_Element="_FD0H0IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FD0u4ogrEe-IO4NVFhexhw" base_Element="_FD0u4YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FD2kEIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FD19AIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FD3LIIgrEe-IO4NVFhexhw" base_Element="_FD2kEYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FD6Oc4grEe-IO4NVFhexhw" base_Element="_FD6OcIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FD61gIgrEe-IO4NVFhexhw" base_Element="_FD6OcIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FD61gYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FD8DoIgrEe-IO4NVFhexhw" genericsValue="String, Node" base_Element="_FD7ckIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FD940IgrEe-IO4NVFhexhw" base_Element="_FD9RwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FEA8I4grEe-IO4NVFhexhw" base_Element="_FEA8IIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FEBjMIgrEe-IO4NVFhexhw" base_Element="_FEA8IIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FEBjMYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FECxUIgrEe-IO4NVFhexhw" genericsValue="ScheduleTime" base_Element="_FECKQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FEDYaogrEe-IO4NVFhexhw" base_Element="_FEDYZ4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FED_cIgrEe-IO4NVFhexhw" base_Element="_FEDYZ4grEe-IO4NVFhexhw">
    <annotations xmi:id="_FED_cYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FEFNkIgrEe-IO4NVFhexhw" base_Element="_FEEmgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEF0oIgrEe-IO4NVFhexhw" base_Element="_FEFNkYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FERa0IgrEe-IO4NVFhexhw" genericsValue="String,InstructionTimeSlot" base_Element="_FEQzwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FETQAIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FESo8YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FEUeIYgrEe-IO4NVFhexhw" genericsValue="Double" base_Element="_FEUeIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FEWTUIgrEe-IO4NVFhexhw" genericsValue="Double,ReliabilityRow" base_Element="_FEVsQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEZWoIgrEe-IO4NVFhexhw" base_Element="_FEYvkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEZWoogrEe-IO4NVFhexhw" base_Element="_FEZWoYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FElj4IgrEe-IO4NVFhexhw" genericsValue="Activation,Row&lt;Activation>" base_Element="_FEk80IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FEmyAIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FEmK8YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEnZEYgrEe-IO4NVFhexhw" base_Element="_FEnZEIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEpOQIgrEe-IO4NVFhexhw" base_Element="_FEonMIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEpOQogrEe-IO4NVFhexhw" base_Element="_FEpOQYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEut0IgrEe-IO4NVFhexhw" base_Element="_FEuGwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEut0ogrEe-IO4NVFhexhw" base_Element="_FEut0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEvU4IgrEe-IO4NVFhexhw" base_Element="_FEut04grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEvU4ogrEe-IO4NVFhexhw" base_Element="_FEvU4YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEv78YgrEe-IO4NVFhexhw" base_Element="_FEv78IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FEzmUYgrEe-IO4NVFhexhw" base_Element="_FEzmUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FE0NYIgrEe-IO4NVFhexhw" base_Element="_FEzmUogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FE0NYYgrEe-IO4NVFhexhw" base_Element="_FEzmUogrEe-IO4NVFhexhw">
    <annotations xmi:id="_FE0NYogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FE0NZYgrEe-IO4NVFhexhw" base_Element="_FE0NY4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FE00cIgrEe-IO4NVFhexhw" base_Element="_FE0NY4grEe-IO4NVFhexhw">
    <annotations xmi:id="_FE00cYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FE00c4grEe-IO4NVFhexhw" base_Element="_FE00cogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FE1bgogrEe-IO4NVFhexhw" base_Element="_FE1bgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FE1bg4grEe-IO4NVFhexhw" base_Element="_FE1bgIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FE1bhIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FE2CkYgrEe-IO4NVFhexhw" base_Element="_FE2CkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FE2poIgrEe-IO4NVFhexhw" base_Element="_FE2CkogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FE2poYgrEe-IO4NVFhexhw" base_Element="_FE2CkogrEe-IO4NVFhexhw">
    <annotations xmi:id="_FE2poogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FE2ppIgrEe-IO4NVFhexhw" base_Element="_FE2po4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FE3QsYgrEe-IO4NVFhexhw" base_Element="_FE2ppYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FE3QsogrEe-IO4NVFhexhw" base_Element="_FE2ppYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FE3Qs4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FE33wIgrEe-IO4NVFhexhw" base_Element="_FE3QtIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FE33w4grEe-IO4NVFhexhw" base_Element="_FE33wYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FE33xIgrEe-IO4NVFhexhw" base_Element="_FE33wYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FE33xYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FE4e0IgrEe-IO4NVFhexhw" base_Element="_FE33xogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FE4e04grEe-IO4NVFhexhw" base_Element="_FE4e0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FE5F4IgrEe-IO4NVFhexhw" base_Element="_FE4e0YgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FE5F4YgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FE-lcIgrEe-IO4NVFhexhw" base_Element="_FE9XUIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FE-lcogrEe-IO4NVFhexhw" base_Element="_FE-lcYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FE_MgYgrEe-IO4NVFhexhw" base_Element="_FE_MgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FE_Mg4grEe-IO4NVFhexhw" base_Element="_FE_MgogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFBBsYgrEe-IO4NVFhexhw" genericsValue="Integer" base_Element="_FFAaoIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFGhQogrEe-IO4NVFhexhw" base_Element="_FFGhQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFGhQ4grEe-IO4NVFhexhw" base_Element="_FFGhQIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFGhRIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFHIUIgrEe-IO4NVFhexhw" base_Element="_FFGhRYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFHIUYgrEe-IO4NVFhexhw" base_Element="_FFGhRYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFHIUogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FFHvYIgrEe-IO4NVFhexhw" base_Element="_FFHIU4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFHvY4grEe-IO4NVFhexhw" base_Element="_FFHvYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFHvZIgrEe-IO4NVFhexhw" base_Element="_FFHvYYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFHvZYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FFIWcIgrEe-IO4NVFhexhw" base_Element="_FFHvZogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFIWc4grEe-IO4NVFhexhw" base_Element="_FFIWcYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFIWdIgrEe-IO4NVFhexhw" base_Element="_FFIWcYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFIWdYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FFI9gIgrEe-IO4NVFhexhw" base_Element="_FFIWdogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFI9g4grEe-IO4NVFhexhw" base_Element="_FFI9gYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFJkkIgrEe-IO4NVFhexhw" base_Element="_FFI9gYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFJkkYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FFJkk4grEe-IO4NVFhexhw" base_Element="_FFJkkogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFKLoIgrEe-IO4NVFhexhw" base_Element="_FFJklIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFKLoYgrEe-IO4NVFhexhw" base_Element="_FFJklIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFKLoogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFKLpYgrEe-IO4NVFhexhw" base_Element="_FFKLo4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFKLpogrEe-IO4NVFhexhw" base_Element="_FFKLo4grEe-IO4NVFhexhw">
    <annotations xmi:id="_FFKLp4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFKysogrEe-IO4NVFhexhw" base_Element="_FFKysIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFKys4grEe-IO4NVFhexhw" base_Element="_FFKysIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFKytIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFLZwogrEe-IO4NVFhexhw" base_Element="_FFLZwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFLZw4grEe-IO4NVFhexhw" base_Element="_FFLZwIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFLZxIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FFMA0YgrEe-IO4NVFhexhw" base_Element="_FFMA0IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FFMn4YgrEe-IO4NVFhexhw" base_Element="_FFMn4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FFNO8IgrEe-IO4NVFhexhw" base_Element="_FFMn4ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FFNO8ogrEe-IO4NVFhexhw" base_Element="_FFNO8YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFaDQYgrEe-IO4NVFhexhw" genericsValue="T, E" base_Element="_FFaDQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FFbRYIgrEe-IO4NVFhexhw" base_Element="_FFaqUYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFbRYogrEe-IO4NVFhexhw" genericsValue="Activation" base_Element="_FFbRYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFdGkIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FFcfgYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFdtoYgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FFdtoIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFe7wIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FFeUsYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFfi0ogrEe-IO4NVFhexhw" genericsValue="ScheduleTime" base_Element="_FFfi0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFhYAYgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FFhYAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFjNMIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FFimIogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFj0QIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FFimI4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFkbUIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FFj0Q4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFlCYYgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FFkbUogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFmQgIgrEe-IO4NVFhexhw" genericsValue="Activation" base_Element="_FFlpcIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFneoYgrEe-IO4NVFhexhw" base_Element="_FFm3kIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFneoogrEe-IO4NVFhexhw" genericsValue="Node" base_Element="_FFm3kYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFoFsIgrEe-IO4NVFhexhw" base_Element="_FFm3kIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFoFsYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FFoswIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FFoFsogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FFpT0IgrEe-IO4NVFhexhw" base_Element="_FFoswYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FFp64YgrEe-IO4NVFhexhw" base_Element="_FFpT0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FFp64ogrEe-IO4NVFhexhw" base_Element="_FFpT0YgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FFp644grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FFqh8YgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FFqh8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFrwEIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FFrJAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFs-MIgrEe-IO4NVFhexhw" genericsValue="Flow" base_Element="_FFsXIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFuzYIgrEe-IO4NVFhexhw" genericsValue="Node" base_Element="_FFuMUogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FFvacIgrEe-IO4NVFhexhw" genericsValue="Integer" base_Element="_FFuzYogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FFydwYgrEe-IO4NVFhexhw" base_Element="_FFydwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FF06AIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FF0S8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FF1hFIgrEe-IO4NVFhexhw" base_Element="_FF1hEIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FF2IIIgrEe-IO4NVFhexhw" base_Element="_FF1hEIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FF2IIYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FF2vMIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FF2IIogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FF3WRIgrEe-IO4NVFhexhw" base_Element="_FF3WQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FF39UIgrEe-IO4NVFhexhw" base_Element="_FF3WQIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FF39UYgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FF4kYIgrEe-IO4NVFhexhw" genericsValue="Node" base_Element="_FF39UogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FF5ygYgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FF5ygIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FF7AoIgrEe-IO4NVFhexhw" base_Element="_FF6ZkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FF7AoYgrEe-IO4NVFhexhw" base_Element="_FF6ZkIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FF7AoogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FF8104grEe-IO4NVFhexhw" genericsValue="Node" base_Element="_FF810YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_FF9c5IgrEe-IO4NVFhexhw" base_Element="_FF9c4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FF-D8IgrEe-IO4NVFhexhw" genericsValue="Node" base_Element="_FF9c4YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FF-rAYgrEe-IO4NVFhexhw" base_Element="_FF-rAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FF_5IIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FF_SE4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FGAgMYgrEe-IO4NVFhexhw" base_Element="_FF_5IYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FGAgMogrEe-IO4NVFhexhw" base_Element="_FF_5IYgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FGAgM4grEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_FGBHQYgrEe-IO4NVFhexhw" base_Element="_FGBHQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FGDjgIgrEe-IO4NVFhexhw" base_Element="_FGC8dIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FGFYsYgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FGFYsIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FGF_xIgrEe-IO4NVFhexhw" base_Element="_FGF_wIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FGGm0IgrEe-IO4NVFhexhw" base_Element="_FGF_wIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FGGm0YgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FGJDEIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FGIcCYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FGLfUIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FGK4QYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FGMGYIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FGLfUogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FGMtcIgrEe-IO4NVFhexhw" genericsValue="T" base_Element="_FGLfU4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FGtq0IgrEe-IO4NVFhexhw" genericsValue="E" base_Element="_FGN7kYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FGu48IgrEe-IO4NVFhexhw" base_Element="_FGuR4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FGvgAYgrEe-IO4NVFhexhw" base_Element="_FGvgAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_FGwuIogrEe-IO4NVFhexhw" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_FGwuIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FGwuI4grEe-IO4NVFhexhw" base_Element="_FGwuIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FG0YgYgrEe-IO4NVFhexhw" base_Element="_FG0YgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FG2Ns4grEe-IO4NVFhexhw" base_Element="_FG2NsIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FG20wIgrEe-IO4NVFhexhw" genericsValue="Node" base_Element="_FG2NsYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Annotations xmi:id="_FG20wYgrEe-IO4NVFhexhw" base_Element="_FG2NsIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FG20wogrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_FG8UUIgrEe-IO4NVFhexhw" genericsValue="Integer" base_Element="_FG7tQYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FG-wkYgrEe-IO4NVFhexhw" base_Element="_FG-wkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHGsYYgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FHGsYIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHHTcIgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FHGsYogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHH6gIgrEe-IO4NVFhexhw" genericsValue="ScheduleTime" base_Element="_FHHTcYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHIhk4grEe-IO4NVFhexhw" base_Element="_FHIhkogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHJIoIgrEe-IO4NVFhexhw" base_Element="_FHIhlIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHJIoogrEe-IO4NVFhexhw" base_Element="_FHJIoYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHJvsogrEe-IO4NVFhexhw" base_Element="_FHJvsYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHJvtIgrEe-IO4NVFhexhw" base_Element="_FHJvs4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHKWwogrEe-IO4NVFhexhw" base_Element="_FHKWwYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHK90IgrEe-IO4NVFhexhw" base_Element="_FHKWw4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHK90ogrEe-IO4NVFhexhw" genericsValue="ChannelSet" base_Element="_FHK90YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHK904grEe-IO4NVFhexhw" base_Element="_FHK90YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHML8IgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FHLk4ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHML8YgrEe-IO4NVFhexhw" base_Element="_FHLk4ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHML84grEe-IO4NVFhexhw" base_Element="_FHML8ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHMzAIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FHML9IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHMzAYgrEe-IO4NVFhexhw" base_Element="_FHML9IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHMzA4grEe-IO4NVFhexhw" base_Element="_FHMzAogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHNaEIgrEe-IO4NVFhexhw" base_Element="_FHMzBIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHNaEogrEe-IO4NVFhexhw" base_Element="_FHNaEYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHOBIYgrEe-IO4NVFhexhw" base_Element="_FHOBIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHOBI4grEe-IO4NVFhexhw" base_Element="_FHOBIogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHOBJYgrEe-IO4NVFhexhw" base_Element="_FHOBJIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHQdYogrEe-IO4NVFhexhw" base_Element="_FHQdYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHSSkIgrEe-IO4NVFhexhw" base_Element="_FHRrh4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHSSkogrEe-IO4NVFhexhw" base_Element="_FHSSkYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHS5oYgrEe-IO4NVFhexhw" base_Element="_FHS5oIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHTgsIgrEe-IO4NVFhexhw" genericsValue="Node" base_Element="_FHS5oogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHTgsYgrEe-IO4NVFhexhw" base_Element="_FHS5oogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHUHwIgrEe-IO4NVFhexhw" genericsValue="Integer" base_Element="_FHTgsogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHUHwYgrEe-IO4NVFhexhw" base_Element="_FHTgsogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHUu0IgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FHUHwogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHUu0YgrEe-IO4NVFhexhw" base_Element="_FHUHwogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHUu04grEe-IO4NVFhexhw" base_Element="_FHUu0ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHVV4YgrEe-IO4NVFhexhw" base_Element="_FHVV4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHWkBIgrEe-IO4NVFhexhw" base_Element="_FHWkA4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHXLEIgrEe-IO4NVFhexhw" base_Element="_FHWkBYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHXLEogrEe-IO4NVFhexhw" base_Element="_FHXLEYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHXLFIgrEe-IO4NVFhexhw" base_Element="_FHXLE4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHXyIYgrEe-IO4NVFhexhw" base_Element="_FHXyIIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHXyI4grEe-IO4NVFhexhw" base_Element="_FHXyIogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHYZMYgrEe-IO4NVFhexhw" base_Element="_FHYZMIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHZAQYgrEe-IO4NVFhexhw" base_Element="_FHZAQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHZAQ4grEe-IO4NVFhexhw" base_Element="_FHZAQogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHZnU4grEe-IO4NVFhexhw" base_Element="_FHZnUogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHaOYogrEe-IO4NVFhexhw" base_Element="_FHaOYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHa1cIgrEe-IO4NVFhexhw" base_Element="_FHaOY4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHbcgYgrEe-IO4NVFhexhw" base_Element="_FHa1c4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHbcg4grEe-IO4NVFhexhw" base_Element="_FHbcgogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHcDkYgrEe-IO4NVFhexhw" base_Element="_FHcDkIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHcDk4grEe-IO4NVFhexhw" base_Element="_FHcDkogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHcqoIgrEe-IO4NVFhexhw" base_Element="_FHcDlIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHcqoogrEe-IO4NVFhexhw" base_Element="_FHcqoYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHdRsIgrEe-IO4NVFhexhw" genericsValue="String, Integer" base_Element="_FHcqo4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHdRsYgrEe-IO4NVFhexhw" base_Element="_FHcqo4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHd4wogrEe-IO4NVFhexhw" base_Element="_FHd4wYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHd4xIgrEe-IO4NVFhexhw" base_Element="_FHd4w4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHef1IgrEe-IO4NVFhexhw" genericsValue="Edge" base_Element="_FHef04grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHft9ogrEe-IO4NVFhexhw" base_Element="_FHft9YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHgVAYgrEe-IO4NVFhexhw" base_Element="_FHgVAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHgVBogrEe-IO4NVFhexhw" base_Element="_FHgVAogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHg8FIgrEe-IO4NVFhexhw" base_Element="_FHg8EIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHg8FogrEe-IO4NVFhexhw" base_Element="_FHg8FYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHhjIIgrEe-IO4NVFhexhw" genericsValue="Activation" base_Element="_FHg8F4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHhjIYgrEe-IO4NVFhexhw" base_Element="_FHg8F4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHiKMIgrEe-IO4NVFhexhw" genericsValue="String, Integer" base_Element="_FHhjIogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHiKMYgrEe-IO4NVFhexhw" base_Element="_FHhjIogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHiKM4grEe-IO4NVFhexhw" base_Element="_FHiKMogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHjYU4grEe-IO4NVFhexhw" base_Element="_FHjYUogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHjYVYgrEe-IO4NVFhexhw" base_Element="_FHjYVIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHj_YIgrEe-IO4NVFhexhw" base_Element="_FHjYVogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHj_YogrEe-IO4NVFhexhw" base_Element="_FHj_YYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHj_ZIgrEe-IO4NVFhexhw" base_Element="_FHj_Y4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHkmcIgrEe-IO4NVFhexhw" base_Element="_FHj_ZYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHkmcogrEe-IO4NVFhexhw" base_Element="_FHkmcYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHkmdIgrEe-IO4NVFhexhw" base_Element="_FHkmc4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHlNgIgrEe-IO4NVFhexhw" base_Element="_FHkmdYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHlNgogrEe-IO4NVFhexhw" base_Element="_FHlNgYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHlNhIgrEe-IO4NVFhexhw" base_Element="_FHlNg4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHl0kIgrEe-IO4NVFhexhw" base_Element="_FHlNhYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHl0kogrEe-IO4NVFhexhw" base_Element="_FHl0kYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHnCsYgrEe-IO4NVFhexhw" base_Element="_FHnCsIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHnCs4grEe-IO4NVFhexhw" base_Element="_FHnCsogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHnpwIgrEe-IO4NVFhexhw" base_Element="_FHnCtIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHoQ1ogrEe-IO4NVFhexhw" base_Element="_FHoQ1YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHo34IgrEe-IO4NVFhexhw" base_Element="_FHoQ14grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHo35IgrEe-IO4NVFhexhw" base_Element="_FHo344grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHpe8IgrEe-IO4NVFhexhw" base_Element="_FHo35YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHqtEIgrEe-IO4NVFhexhw" base_Element="_FHqGB4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHqtFYgrEe-IO4NVFhexhw" base_Element="_FHqtFIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHrUIIgrEe-IO4NVFhexhw" base_Element="_FHqtFogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHrUIogrEe-IO4NVFhexhw" base_Element="_FHrUIYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHr7MogrEe-IO4NVFhexhw" genericsValue="Integer" base_Element="_FHr7MYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHr7M4grEe-IO4NVFhexhw" base_Element="_FHr7MYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FHsiQYgrEe-IO4NVFhexhw" genericsValue="SchedulableObject" base_Element="_FHsiQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHtwYogrEe-IO4NVFhexhw" base_Element="_FHtwYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHtwZIgrEe-IO4NVFhexhw" base_Element="_FHtwY4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHuXcYgrEe-IO4NVFhexhw" base_Element="_FHtwZYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHuXc4grEe-IO4NVFhexhw" base_Element="_FHuXcogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHu-gIgrEe-IO4NVFhexhw" base_Element="_FHuXdIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHu-gogrEe-IO4NVFhexhw" base_Element="_FHu-gYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHu-hIgrEe-IO4NVFhexhw" base_Element="_FHu-g4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHvlkIgrEe-IO4NVFhexhw" base_Element="_FHu-hYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHwzs4grEe-IO4NVFhexhw" base_Element="_FHwzsogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHxawIgrEe-IO4NVFhexhw" base_Element="_FHwztIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHxawogrEe-IO4NVFhexhw" base_Element="_FHxawYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHxaxIgrEe-IO4NVFhexhw" base_Element="_FHxaw4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHxaxogrEe-IO4NVFhexhw" base_Element="_FHxaxYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHyB0YgrEe-IO4NVFhexhw" base_Element="_FHyB0IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHyB1IgrEe-IO4NVFhexhw" base_Element="_FHyB0ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHyB14grEe-IO4NVFhexhw" base_Element="_FHyB1YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHyo4ogrEe-IO4NVFhexhw" base_Element="_FHyo4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHyo5IgrEe-IO4NVFhexhw" base_Element="_FHyo44grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHzP8YgrEe-IO4NVFhexhw" base_Element="_FHzP8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHzP84grEe-IO4NVFhexhw" base_Element="_FHzP8ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHzP9YgrEe-IO4NVFhexhw" base_Element="_FHzP9IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Array xmi:id="_FHz3A4grEe-IO4NVFhexhw" dimensions="2" base_Element="_FHz3AYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FHz3BIgrEe-IO4NVFhexhw" base_Element="_FHz3AYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH1FJogrEe-IO4NVFhexhw" base_Element="_FH1FJYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH1sMIgrEe-IO4NVFhexhw" base_Element="_FH1FJ4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH1sMogrEe-IO4NVFhexhw" base_Element="_FH1sMYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH1sNIgrEe-IO4NVFhexhw" base_Element="_FH1sM4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH1sNogrEe-IO4NVFhexhw" base_Element="_FH1sNYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH2TQYgrEe-IO4NVFhexhw" base_Element="_FH2TQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH2TQ4grEe-IO4NVFhexhw" base_Element="_FH2TQogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH2TRYgrEe-IO4NVFhexhw" base_Element="_FH2TRIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH26UIgrEe-IO4NVFhexhw" base_Element="_FH2TRogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH26UogrEe-IO4NVFhexhw" base_Element="_FH26UYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH26VIgrEe-IO4NVFhexhw" base_Element="_FH26U4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH3hYIgrEe-IO4NVFhexhw" base_Element="_FH26VYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH3hYogrEe-IO4NVFhexhw" base_Element="_FH3hYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH3hZIgrEe-IO4NVFhexhw" base_Element="_FH3hY4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH4IcIgrEe-IO4NVFhexhw" base_Element="_FH3hZYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH4IcogrEe-IO4NVFhexhw" base_Element="_FH4IcYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH4IdIgrEe-IO4NVFhexhw" base_Element="_FH4Ic4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH4vgIgrEe-IO4NVFhexhw" base_Element="_FH4IdYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH59pYgrEe-IO4NVFhexhw" base_Element="_FH59o4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH6ksYgrEe-IO4NVFhexhw" base_Element="_FH6ksIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FH7LwIgrEe-IO4NVFhexhw" genericsValue="InstructionParameters" base_Element="_FH6ksogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH7LwYgrEe-IO4NVFhexhw" base_Element="_FH6ksogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH7y0IgrEe-IO4NVFhexhw" base_Element="_FH7LwogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH8Z4YgrEe-IO4NVFhexhw" base_Element="_FH8Z4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH8Z44grEe-IO4NVFhexhw" base_Element="_FH8Z4ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH9A8YgrEe-IO4NVFhexhw" base_Element="_FH9A8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH9A84grEe-IO4NVFhexhw" base_Element="_FH9A8ogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH9oAIgrEe-IO4NVFhexhw" base_Element="_FH9A9IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH9oAogrEe-IO4NVFhexhw" base_Element="_FH9oAYgrEe-IO4NVFhexhw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_FH-PEIgrEe-IO4NVFhexhw" name="getNumChannels" method="_FI_ixogrEe-IO4NVFhexhw">
      <ownedParameter xmi:id="_FH-PEYgrEe-IO4NVFhexhw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_FH-PEogrEe-IO4NVFhexhw" base_Element="_FH-PEIgrEe-IO4NVFhexhw">
    <annotations xmi:id="_FH-2IIgrEe-IO4NVFhexhw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH-2I4grEe-IO4NVFhexhw" base_Element="_FH-2IYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FH_dMYgrEe-IO4NVFhexhw" base_Element="_FH-2JIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIArV4grEe-IO4NVFhexhw" base_Element="_FIArVYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIBSZIgrEe-IO4NVFhexhw" base_Element="_FIBSYogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIB5cogrEe-IO4NVFhexhw" base_Element="_FIB5cYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FICggIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FIB5c4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Generics xmi:id="_FIDHkIgrEe-IO4NVFhexhw" genericsValue="String" base_Element="_FICggogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIEVtYgrEe-IO4NVFhexhw" base_Element="_FIEVtIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIE8wYgrEe-IO4NVFhexhw" base_Element="_FIE8wIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIE8w4grEe-IO4NVFhexhw" base_Element="_FIE8wogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIFj0IgrEe-IO4NVFhexhw" base_Element="_FIE8xYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIFj0ogrEe-IO4NVFhexhw" base_Element="_FIFj0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_FIGK4YgrEe-IO4NVFhexhw" base_Element="_FIGK4IgrEe-IO4NVFhexhw"/>
  <uml:OpaqueBehavior xmi:id="_FI_ixogrEe-IO4NVFhexhw" name="getNumChannels" specification="_FH-PEIgrEe-IO4NVFhexhw">
    <ownedParameter xmi:id="_FI_ix4grEe-IO4NVFhexhw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_FJrfQIgrEe-IO4NVFhexhw" base_Element="_FJq4MIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJsGUIgrEe-IO4NVFhexhw" base_Element="_FJrfQYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJsGU4grEe-IO4NVFhexhw" base_Element="_FJsGUYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJstYIgrEe-IO4NVFhexhw" base_Element="_FJsGVIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJstY4grEe-IO4NVFhexhw" base_Element="_FJstYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJtUcogrEe-IO4NVFhexhw" base_Element="_FJtUcIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJt7gIgrEe-IO4NVFhexhw" base_Element="_FJtUc4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJt7g4grEe-IO4NVFhexhw" base_Element="_FJt7gYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJuikIgrEe-IO4NVFhexhw" base_Element="_FJt7hIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJuik4grEe-IO4NVFhexhw" base_Element="_FJuikYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJvJoYgrEe-IO4NVFhexhw" base_Element="_FJuilIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJvJpIgrEe-IO4NVFhexhw" base_Element="_FJvJoogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJvwsogrEe-IO4NVFhexhw" base_Element="_FJvwsIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJwXwIgrEe-IO4NVFhexhw" base_Element="_FJvws4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJwXw4grEe-IO4NVFhexhw" base_Element="_FJwXwYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJw-0IgrEe-IO4NVFhexhw" base_Element="_FJwXxIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJw-04grEe-IO4NVFhexhw" base_Element="_FJw-0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJxl4ogrEe-IO4NVFhexhw" base_Element="_FJxl4IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJxl5YgrEe-IO4NVFhexhw" base_Element="_FJxl44grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJyM8ogrEe-IO4NVFhexhw" base_Element="_FJyM8IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJy0AIgrEe-IO4NVFhexhw" base_Element="_FJyM84grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJy0A4grEe-IO4NVFhexhw" base_Element="_FJy0AYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJzbEIgrEe-IO4NVFhexhw" base_Element="_FJy0BIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJzbE4grEe-IO4NVFhexhw" base_Element="_FJzbEYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ0CIIgrEe-IO4NVFhexhw" base_Element="_FJzbFIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ0CI4grEe-IO4NVFhexhw" base_Element="_FJ0CIYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ0pMIgrEe-IO4NVFhexhw" base_Element="_FJ0CJIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ0pM4grEe-IO4NVFhexhw" base_Element="_FJ0pMYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ1QQogrEe-IO4NVFhexhw" base_Element="_FJ1QQIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ1QRYgrEe-IO4NVFhexhw" base_Element="_FJ1QQ4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ13UogrEe-IO4NVFhexhw" base_Element="_FJ13UIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ2eYIgrEe-IO4NVFhexhw" base_Element="_FJ13U4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ2eY4grEe-IO4NVFhexhw" base_Element="_FJ2eYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ3FcIgrEe-IO4NVFhexhw" base_Element="_FJ2eZIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ3Fc4grEe-IO4NVFhexhw" base_Element="_FJ3FcYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ3sgogrEe-IO4NVFhexhw" base_Element="_FJ3sgIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ4TkIgrEe-IO4NVFhexhw" base_Element="_FJ3sg4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ4Tk4grEe-IO4NVFhexhw" base_Element="_FJ4TkYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ46oIgrEe-IO4NVFhexhw" base_Element="_FJ4TlIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ46o4grEe-IO4NVFhexhw" base_Element="_FJ46oYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ5hsIgrEe-IO4NVFhexhw" base_Element="_FJ46pIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ5hs4grEe-IO4NVFhexhw" base_Element="_FJ5hsYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ6IwogrEe-IO4NVFhexhw" base_Element="_FJ6IwIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ6v0IgrEe-IO4NVFhexhw" base_Element="_FJ6Iw4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ6v04grEe-IO4NVFhexhw" base_Element="_FJ6v0YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ7W4IgrEe-IO4NVFhexhw" base_Element="_FJ6v1IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ7W44grEe-IO4NVFhexhw" base_Element="_FJ7W4YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ798IgrEe-IO4NVFhexhw" base_Element="_FJ7W5IgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ7984grEe-IO4NVFhexhw" base_Element="_FJ798YgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ8lAogrEe-IO4NVFhexhw" base_Element="_FJ8lAIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ8lBYgrEe-IO4NVFhexhw" base_Element="_FJ8lA4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ9MEogrEe-IO4NVFhexhw" base_Element="_FJ9MEIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ9MFYgrEe-IO4NVFhexhw" base_Element="_FJ9ME4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ9zIIgrEe-IO4NVFhexhw" base_Element="_FJ9MFogrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ9zI4grEe-IO4NVFhexhw" base_Element="_FJ9zIYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ-aMIgrEe-IO4NVFhexhw" base_Element="_FJ9zJIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ-aM4grEe-IO4NVFhexhw" base_Element="_FJ-aMYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ_BQIgrEe-IO4NVFhexhw" base_Element="_FJ-aNIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ_BQ4grEe-IO4NVFhexhw" base_Element="_FJ_BQYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ_oUIgrEe-IO4NVFhexhw" base_Element="_FJ_BRIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FJ_oU4grEe-IO4NVFhexhw" base_Element="_FJ_oUYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKAPYIgrEe-IO4NVFhexhw" base_Element="_FJ_oVIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKAPY4grEe-IO4NVFhexhw" base_Element="_FKAPYYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKA2cIgrEe-IO4NVFhexhw" base_Element="_FKAPZIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKA2c4grEe-IO4NVFhexhw" base_Element="_FKA2cYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKBdgIgrEe-IO4NVFhexhw" base_Element="_FKA2dIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKBdg4grEe-IO4NVFhexhw" base_Element="_FKBdgYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKCEkIgrEe-IO4NVFhexhw" base_Element="_FKBdhIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKCEk4grEe-IO4NVFhexhw" base_Element="_FKCEkYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKCroogrEe-IO4NVFhexhw" base_Element="_FKCroIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKDSsIgrEe-IO4NVFhexhw" base_Element="_FKCro4grEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKDSs4grEe-IO4NVFhexhw" base_Element="_FKDSsYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKD5wIgrEe-IO4NVFhexhw" base_Element="_FKDStIgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Reference xmi:id="_FKD5w4grEe-IO4NVFhexhw" base_Element="_FKD5wYgrEe-IO4NVFhexhw"/>
  <UMLLabProfile:Patch xmi:id="_ILEMoIgrEe-IO4NVFhexhw" base_Element="_EpRg4IgrEe-IO4NVFhexhw" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ILH3AIgrEe-IO4NVFhexhw" base_Element="_EqY7MIgrEe-IO4NVFhexhw" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ILJFIIgrEe-IO4NVFhexhw" base_Element="_EtU6cIgrEe-IO4NVFhexhw" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ILK6UIgrEe-IO4NVFhexhw" base_Element="_EtiV0IgrEe-IO4NVFhexhw" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_ILOksIgrEe-IO4NVFhexhw" base_Element="_EuA28IgrEe-IO4NVFhexhw" patchText="@@ -4237,22 +4237,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
