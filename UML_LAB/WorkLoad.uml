<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_w2DGkItiEe-3nrFY8n5C-Q" name="WorkLoad">
    <eAnnotations xmi:id="_xDSRUItiEe-3nrFY8n5C-Q" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_xDXw4ItiEe-3nrFY8n5C-Q" source="codegen">
        <details xmi:id="_xDYX8ItiEe-3nrFY8n5C-Q" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_1Cpp4ItiEe-3nrFY8n5C-Q" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;3024343258/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;3853306824/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;2034073373/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;468755274/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;872941976/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2726194203/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;4032503718/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;2786849095/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;3175553779/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;1667435476/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;686679007/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_BH19oJV1Ee-EOddEwqrIsA" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_BH19oZV1Ee-EOddEwqrIsA" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_BH19opV1Ee-EOddEwqrIsA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_BH2ksJV1Ee-EOddEwqrIsA" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_BH2ksZV1Ee-EOddEwqrIsA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_ySeBQItiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_ySeBQYtiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_ySeBQotiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_ySeoUItiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_ySeoUYtiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_ySeoUotiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_ySeoU4tiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_ySfPYItiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_ySfPYYtiEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_yQ2QoItiEe-3nrFY8n5C-Q" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_yQ23sItiEe-3nrFY8n5C-Q" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_yQ23sYtiEe-3nrFY8n5C-Q" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_yQ-zgItiEe-3nrFY8n5C-Q" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_ySt44ItiEe-3nrFY8n5C-Q" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_y3SlkYtiEe-3nrFY8n5C-Q" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_yTptAItiEe-3nrFY8n5C-Q" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_y39T8ItiEe-3nrFY8n5C-Q" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_yTswUItiEe-3nrFY8n5C-Q" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_y3-iEItiEe-3nrFY8n5C-Q" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_y3_JIYtiEe-3nrFY8n5C-Q" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWciUItiEe-3nrFY8n5C-Q" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_y5Bq8ItiEe-3nrFY8n5C-Q" general="_y2eGMItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6S2QItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6S2QYtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7g-QItiEe-3nrFY8n5C-Q" name="AbstractMap" specification="_yWkeIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7g-QYtiEe-3nrFY8n5C-Q" type="_yWciUItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWkeIItiEe-3nrFY8n5C-Q" name="AbstractMap" method="_y7g-QItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yWkeIYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWkeIotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yWlFMItiEe-3nrFY8n5C-Q" type="_yWciUItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yWlsQItiEe-3nrFY8n5C-Q" name="Activation">
              <generalization xmi:id="_y2nQIItiEe-3nrFY8n5C-Q" general="_ydT_UItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6TdUItiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q" isReadOnly="true" association="_y81M4ItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6UEYItiEe-3nrFY8n5C-Q" name="edges" type="_y2f7YItiEe-3nrFY8n5C-Q" isReadOnly="true" association="_y81z8YtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6VSgItiEe-3nrFY8n5C-Q" name="additionalScheduleTimes" type="_y2f7YItiEe-3nrFY8n5C-Q" isReadOnly="true" association="_y82bAYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6V5kItiEe-3nrFY8n5C-Q" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y6V5kYtiEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_y5DgIYtiEe-3nrFY8n5C-Q" client="_yWlsQItiEe-3nrFY8n5C-Q" supplier="_y5C5EYtiEe-3nrFY8n5C-Q" contract="_y5C5EYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7hlUItiEe-3nrFY8n5C-Q" name="Activation" specification="_yWoIgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7hlUYtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7hlUotiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7hlU4tiEe-3nrFY8n5C-Q" name="Activation" specification="_y2hwkYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7hlVItiEe-3nrFY8n5C-Q" name="elem" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7hlVYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7hlVotiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7iMYItiEe-3nrFY8n5C-Q" name="clone" specification="_yWpWoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7iMYYtiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7iMYotiEe-3nrFY8n5C-Q" name="getEdgesByReleaseTime" specification="_yWsZ8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7izcItiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7izcYtiEe-3nrFY8n5C-Q" name="getEdgesByLatestReleaseTime" specification="_yWu2MItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7izcotiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7izc4tiEe-3nrFY8n5C-Q" name="getEdgesByPeriod" specification="_yWwrYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7izdItiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7izdYtiEe-3nrFY8n5C-Q" name="getEdgesByDeadline" specification="_yWygkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7izdotiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jagItiEe-3nrFY8n5C-Q" name="getEdgesByPriority" specification="_yW0VwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jagYtiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jagotiEe-3nrFY8n5C-Q" name="addEdges" specification="_y5EuQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jag4tiEe-3nrFY8n5C-Q" name="edges" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jahItiEe-3nrFY8n5C-Q" name="addEdge" specification="_y2i-tItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jahYtiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jahotiEe-3nrFY8n5C-Q" name="increaseEdgePhases" specification="_yW2K8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jah4tiEe-3nrFY8n5C-Q" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jaiItiEe-3nrFY8n5C-Q" name="updatePriorityAndRelease" specification="_yW2yAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jaiYtiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jaiotiEe-3nrFY8n5C-Q" name="addConflict" specification="_yW2yAotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jai4tiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jajItiEe-3nrFY8n5C-Q" name="addConflicts" specification="_y5FVUYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jajYtiEe-3nrFY8n5C-Q" name="conflicts" type="_y2hJg4tiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7jajotiEe-3nrFY8n5C-Q" name="addCoordinator" specification="_yW3ZEYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7jaj4tiEe-3nrFY8n5C-Q" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kBkItiEe-3nrFY8n5C-Q" name="addCoordinators" specification="_y5F8YItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kBkYtiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kBkotiEe-3nrFY8n5C-Q" name="addScheduleTimes" specification="_y5GjcYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kBk4tiEe-3nrFY8n5C-Q" name="scheduleTime" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kBlItiEe-3nrFY8n5C-Q" name="getNextScheduleTime" specification="_yW4nMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kBlYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7kBlotiEe-3nrFY8n5C-Q" type="_ybhPkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kBl4tiEe-3nrFY8n5C-Q" name="getMatchingEndTime" specification="_yW5OQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kBmItiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7kBmYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kBmotiEe-3nrFY8n5C-Q" name="getNextStartTime" specification="_yW51UItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kBm4tiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7kBnItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kBnYtiEe-3nrFY8n5C-Q" name="getNextEndTime" specification="_yW6cYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kBnotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7kBn4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kBoItiEe-3nrFY8n5C-Q" name="getNumEdges" specification="_yW7DcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kBoYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kooItiEe-3nrFY8n5C-Q" name="compareTo" specification="_y2kM0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kooYtiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7koootiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7koo4tiEe-3nrFY8n5C-Q" name="conflictExists" specification="_y2la8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kopItiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7kopYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7kopotiEe-3nrFY8n5C-Q" name="canCombine" specification="_y2la84tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7kop4tiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7koqItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7koqYtiEe-3nrFY8n5C-Q" name="getDelta" specification="_yW84oItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7koqotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7koq4tiEe-3nrFY8n5C-Q" name="getExecutionDuration" specification="_yW9fsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7korItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7lPsItiEe-3nrFY8n5C-Q" name="getCombinedExecutionDuration" specification="_y2mCAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7lPsYtiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7lPsotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7lPs4tiEe-3nrFY8n5C-Q" name="printAll" specification="_yW-GwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7lPtItiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7lPtYtiEe-3nrFY8n5C-Q" name="printAll" specification="_yW_U4ItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7lPtotiEe-3nrFY8n5C-Q" name="printEdges" specification="_y2mCA4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7lPt4tiEe-3nrFY8n5C-Q" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7lPuItiEe-3nrFY8n5C-Q" name="edges" type="_ya3IQItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7lPuYtiEe-3nrFY8n5C-Q" name="printEdges" specification="_y2mpEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7lPuotiEe-3nrFY8n5C-Q" name="edges" type="_ya3IQItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yWoIgItiEe-3nrFY8n5C-Q" name="Activation" visibility="package" method="_y7hlUItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yWovkItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yWovkYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yWoIgYtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yWovkotiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWpWoItiEe-3nrFY8n5C-Q" name="clone" method="_y7iMYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2iXpYtiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWsZ8ItiEe-3nrFY8n5C-Q" name="getEdgesByReleaseTime" method="_y7iMYotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwiwJV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_y2iXpotiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWu2MItiEe-3nrFY8n5C-Q" name="getEdgesByLatestReleaseTime" method="_y7izcYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwiwZV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_y2i-sItiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWwrYItiEe-3nrFY8n5C-Q" name="getEdgesByPeriod" method="_y7izc4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwiwpV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_y2i-sYtiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yWygkItiEe-3nrFY8n5C-Q" name="getEdgesByDeadline" method="_y7izdYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fwiw5V2Ee-EOddEwqrIsA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_y2i-sotiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yW0VwItiEe-3nrFY8n5C-Q" name="getEdgesByPriority" method="_y7jagItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwixJV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_y2i-s4tiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yW2K8ItiEe-3nrFY8n5C-Q" name="increaseEdgePhases" method="_y7jahotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwixZV2Ee-EOddEwqrIsA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_yW2K8YtiEe-3nrFY8n5C-Q" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW2yAItiEe-3nrFY8n5C-Q" name="updatePriorityAndRelease" method="_y7jaiItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwixpV2Ee-EOddEwqrIsA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_yW2yAYtiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW2yAotiEe-3nrFY8n5C-Q" name="addConflict" method="_y7jaiotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yW3ZEItiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW3ZEYtiEe-3nrFY8n5C-Q" name="addCoordinator" method="_y7jajotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yW3ZEotiEe-3nrFY8n5C-Q" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW4nMItiEe-3nrFY8n5C-Q" name="getNextScheduleTime" method="_y7kBlItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwiyJV2Ee-EOddEwqrIsA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yW4nMYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2jlwItiEe-3nrFY8n5C-Q" type="_ybhPkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yW5OQItiEe-3nrFY8n5C-Q" name="getMatchingEndTime" method="_y7kBl4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwiyZV2Ee-EOddEwqrIsA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yW5OQYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yW5OQotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW51UItiEe-3nrFY8n5C-Q" name="getNextStartTime" method="_y7kBmotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwiypV2Ee-EOddEwqrIsA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yW51UYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yW51UotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW6cYItiEe-3nrFY8n5C-Q" name="getNextEndTime" method="_y7kBnYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fwiy5V2Ee-EOddEwqrIsA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_yW6cYYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yW6cYotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW7DcItiEe-3nrFY8n5C-Q" name="getNumEdges" method="_y7kBoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yW7DcYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW84oItiEe-3nrFY8n5C-Q" name="getDelta" method="_y7koqYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FwizJV2Ee-EOddEwqrIsA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yW84oYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW9fsItiEe-3nrFY8n5C-Q" name="getExecutionDuration" method="_y7koq4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yW9fsYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW-GwItiEe-3nrFY8n5C-Q" name="printAll" method="_y7lPs4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yW-t0ItiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yW_U4ItiEe-3nrFY8n5C-Q" name="printAll" method="_y7lPtYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_y2hwkYtiEe-3nrFY8n5C-Q" name="Activation" visibility="package" method="_y7hlU4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2iXootiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2iXo4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2iXoItiEe-3nrFY8n5C-Q" name="elem" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2iXoYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2iXpItiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2i-tItiEe-3nrFY8n5C-Q" name="addEdge" method="_y7jahItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2i-tYtiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2kM0ItiEe-3nrFY8n5C-Q" name="compareTo" method="_y7kooItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2kM0YtiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2kM0otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y2la8ItiEe-3nrFY8n5C-Q" name="conflictExists" method="_y7koo4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2la8YtiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2la8otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y2la84tiEe-3nrFY8n5C-Q" name="canCombine" method="_y7kopotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2la9ItiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2la9YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y2mCAItiEe-3nrFY8n5C-Q" name="getCombinedExecutionDuration" method="_y7lPsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2mCAYtiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2mCAotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y2mCA4tiEe-3nrFY8n5C-Q" name="printEdges" visibility="private" method="_y7lPtotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2mCBItiEe-3nrFY8n5C-Q" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2mCBYtiEe-3nrFY8n5C-Q" name="edges" type="_ya3IQItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2mpEItiEe-3nrFY8n5C-Q" name="printEdges" visibility="private" method="_y7lPuYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2mpEYtiEe-3nrFY8n5C-Q" name="edges" type="_ya3IQItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5EuQItiEe-3nrFY8n5C-Q" name="addEdges" method="_y7jagotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5EuQYtiEe-3nrFY8n5C-Q" name="edges" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5FVUYtiEe-3nrFY8n5C-Q" name="addConflicts" method="_y7jajItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5FVUotiEe-3nrFY8n5C-Q" name="conflicts" type="_y2hJg4tiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5F8YItiEe-3nrFY8n5C-Q" name="addCoordinators" method="_y7kBkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5F8YYtiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5GjcYtiEe-3nrFY8n5C-Q" name="addScheduleTimes" method="_y7kBkotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fwix5V2Ee-EOddEwqrIsA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5GjcotiEe-3nrFY8n5C-Q" name="scheduleTime" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yXK7EItiEe-3nrFY8n5C-Q" name="Activations">
              <generalization xmi:id="_y2oeQItiEe-3nrFY8n5C-Q" general="_yWciUItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6XuwItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6XuwYtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yXMJMItiEe-3nrFY8n5C-Q" name="BasicPoset">
              <ownedComment xmi:id="_3FwizZV2Ee-EOddEwqrIsA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_y2psZYtiEe-3nrFY8n5C-Q" general="_yZ10kItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7l2wItiEe-3nrFY8n5C-Q" name="BasicPoset" specification="_y2psYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7l2wYtiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7l2wotiEe-3nrFY8n5C-Q" type="_yXMJMItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y2psYItiEe-3nrFY8n5C-Q" name="BasicPoset" visibility="package" method="_y7l2wItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2psYotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2psY4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2psYYtiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2psZItiEe-3nrFY8n5C-Q" type="_yXMJMItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yXN-YItiEe-3nrFY8n5C-Q" name="ChannelAnalysis">
              <ownedComment xmi:id="_3FwizpV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y6ayEItiEe-3nrFY8n5C-Q" name="program" visibility="private" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y82bBItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6ayEotiEe-3nrFY8n5C-Q" name="programTable" visibility="private" type="_yaqT8ItiEe-3nrFY8n5C-Q" association="_y83CEYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6ayFItiEe-3nrFY8n5C-Q" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7l2w4tiEe-3nrFY8n5C-Q" name="ChannelAnalysis" specification="_y2psZotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7l2xItiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7l2xYtiEe-3nrFY8n5C-Q" type="_yXN-YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7l2xotiEe-3nrFY8n5C-Q" name="ChannelAnalysis" specification="_y2qTdItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7l2x4tiEe-3nrFY8n5C-Q" name="program" type="_yaNA8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7l2yItiEe-3nrFY8n5C-Q" type="_yXN-YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7l2yYtiEe-3nrFY8n5C-Q" name="isChannelConflict" specification="_yXQaoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7l2yotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yXQaoItiEe-3nrFY8n5C-Q" name="isChannelConflict" method="_y7l2yYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXRBsItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y2psZotiEe-3nrFY8n5C-Q" name="ChannelAnalysis" visibility="package" method="_y7l2w4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2qTcYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2qTcotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2qTcItiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2qTc4tiEe-3nrFY8n5C-Q" type="_yXN-YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2qTdItiEe-3nrFY8n5C-Q" name="ChannelAnalysis" visibility="package" method="_y7l2xotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2qTdotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2qTd4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2qTdYtiEe-3nrFY8n5C-Q" name="program" type="_yaNA8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2qTeItiEe-3nrFY8n5C-Q" type="_yXN-YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yXS24ItiEe-3nrFY8n5C-Q" name="ChannelVisualization">
              <ownedComment xmi:id="_3Fwiz5V2Ee-EOddEwqrIsA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y2rhkYtiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6cnQItiEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6dOUItiEe-3nrFY8n5C-Q" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6dOUYtiEe-3nrFY8n5C-Q" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6dOUotiEe-3nrFY8n5C-Q" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6dOU4tiEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_ycOaMItiEe-3nrFY8n5C-Q" association="_y83CFItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6d1YYtiEe-3nrFY8n5C-Q" name="ca" visibility="private" type="_yXN-YItiEe-3nrFY8n5C-Q" association="_y83CF4tiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7md0ItiEe-3nrFY8n5C-Q" name="ChannelVisualization" specification="_y2q6gItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7md0YtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7md0otiEe-3nrFY8n5C-Q" type="_yXS24ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y2q6gItiEe-3nrFY8n5C-Q" name="ChannelVisualization" visibility="package" method="_y7md0ItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2q6gotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2q6g4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2q6gYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2rhkItiEe-3nrFY8n5C-Q" type="_yXS24ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yXV6MItiEe-3nrFY8n5C-Q" name="Channels">
              <ownedComment xmi:id="_3Fwi0JV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y6eccotiEe-3nrFY8n5C-Q" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6fDgYtiEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6fDg4tiEe-3nrFY8n5C-Q" name="channelsAvailable" visibility="package" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y83pIYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7md2ItiEe-3nrFY8n5C-Q" name="Channels" specification="_yXaysItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7md2YtiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7md2otiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7md24tiEe-3nrFY8n5C-Q" type="_yXV6MItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nE4ItiEe-3nrFY8n5C-Q" name="getChannelSet" specification="_yXcA0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nE4YtiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nE4otiEe-3nrFY8n5C-Q" type="_y2gicYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nE44tiEe-3nrFY8n5C-Q" name="addNewChannelSet" specification="_yXd2AItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nE5ItiEe-3nrFY8n5C-Q" name="isEmpty" specification="_yXd2AYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nE5YtiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nE5otiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nE54tiEe-3nrFY8n5C-Q" name="removeChannel" specification="_yXedEYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nE6ItiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nE6YtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nE6otiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nE64tiEe-3nrFY8n5C-Q" name="addChannel" specification="_yXfrMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nE7ItiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nE7YtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nE7otiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nE74tiEe-3nrFY8n5C-Q" name="getNumChannels" specification="_yXg5UItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nE8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yXaysItiEe-3nrFY8n5C-Q" name="Channels" visibility="package" method="_y7md2ItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yXbZwItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yXbZwYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yXaysYtiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXaysotiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXbZwotiEe-3nrFY8n5C-Q" type="_yXV6MItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yXcA0ItiEe-3nrFY8n5C-Q" name="getChannelSet" method="_y7nE4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXcA0YtiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5JmwItiEe-3nrFY8n5C-Q" type="_y2gicYtiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yXd2AItiEe-3nrFY8n5C-Q" name="addNewChannelSet" method="_y7nE44tiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yXd2AYtiEe-3nrFY8n5C-Q" name="isEmpty" method="_y7nE5ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXd2AotiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXedEItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXedEYtiEe-3nrFY8n5C-Q" name="removeChannel" method="_y7nE54tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXfEIItiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXfEIYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXfEIotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXfrMItiEe-3nrFY8n5C-Q" name="addChannel" method="_y7nE64tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXfrMYtiEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXgSQItiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXgSQYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXg5UItiEe-3nrFY8n5C-Q" name="getNumChannels" method="_y7nE74tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXg5UYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yXXIUItiEe-3nrFY8n5C-Q" name="ChannelSet" visibility="private">
                <generalization xmi:id="_y5IYoItiEe-3nrFY8n5C-Q" general="_y2gicYtiEe-3nrFY8n5C-Q"/>
                <ownedAttribute xmi:id="_y6eccItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6eccYtiEe-3nrFY8n5C-Q" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7md04tiEe-3nrFY8n5C-Q" name="ChannelSet" specification="_yXXvYItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y7md1ItiEe-3nrFY8n5C-Q" type="_yXXIUItiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7md1YtiEe-3nrFY8n5C-Q" name="ChannelSet" specification="_yXY9gItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y7md1otiEe-3nrFY8n5C-Q" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_y7md14tiEe-3nrFY8n5C-Q" type="_yXXIUItiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yXXvYItiEe-3nrFY8n5C-Q" name="ChannelSet" visibility="private" method="_y7md04tiEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_yXXvYYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yXYWcItiEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yXYWcYtiEe-3nrFY8n5C-Q" type="_yXXIUItiEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_yXY9gItiEe-3nrFY8n5C-Q" name="ChannelSet" visibility="private" method="_y7md1YtiEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_yXZkkItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_yXZkkYtiEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_yXY9gYtiEe-3nrFY8n5C-Q" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_yXZkkotiEe-3nrFY8n5C-Q" type="_yXXIUItiEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yXiugItiEe-3nrFY8n5C-Q" name="CodeFragment">
              <ownedAttribute xmi:id="_y6gRoItiEe-3nrFY8n5C-Q" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6g4sItiEe-3nrFY8n5C-Q" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6g4sYtiEe-3nrFY8n5C-Q" name="edges" visibility="package" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y83pJItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6hfwYtiEe-3nrFY8n5C-Q" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6it4ItiEe-3nrFY8n5C-Q" name="codeFragment" visibility="package" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y84QMYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6j8AItiEe-3nrFY8n5C-Q" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6j8AotiEe-3nrFY8n5C-Q" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nr8ItiEe-3nrFY8n5C-Q" name="CodeFragment" specification="_yXkjsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nr8YtiEe-3nrFY8n5C-Q" type="_yXiugItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nr8otiEe-3nrFY8n5C-Q" name="CodeFragment" specification="_y5KN0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nr84tiEe-3nrFY8n5C-Q" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nr9ItiEe-3nrFY8n5C-Q" name="edges" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7nr9YtiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7nr9otiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nr94tiEe-3nrFY8n5C-Q" type="_yXiugItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nr-ItiEe-3nrFY8n5C-Q" name="getCoordinator" specification="_yXlKwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nr-YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nr-otiEe-3nrFY8n5C-Q" name="instructions" specification="_yXlx0YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nr-4tiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nr_ItiEe-3nrFY8n5C-Q" name="size" specification="_yXnnAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nr_YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nr_otiEe-3nrFY8n5C-Q" name="generateCodeFragment" specification="_yXoOEItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nr_4tiEe-3nrFY8n5C-Q" name="getBaseInstruction" specification="_yXoOEYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nsAItiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nsAYtiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nsAotiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nsA4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7nsBItiEe-3nrFY8n5C-Q" name="push" specification="_yXpcMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7nsBYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nsBotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nsB4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7nsCItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7oTAItiEe-3nrFY8n5C-Q" name="pull" specification="_yXqDQYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7oTAYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTAotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTA4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTBItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7oTBYtiEe-3nrFY8n5C-Q" name="ifHas" specification="_yXr4cItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7oTBotiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTB4tiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTCItiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTCYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7oTCotiEe-3nrFY8n5C-Q" name="ifNotHas" specification="_yXttoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7oTC4tiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTDItiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTDYtiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTDotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7oTD4tiEe-3nrFY8n5C-Q" name="wait" specification="_yXuUsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7oTEItiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7oTEYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7oTEotiEe-3nrFY8n5C-Q" name="sleep" specification="_yXu7wItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7oTE4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7o6EItiEe-3nrFY8n5C-Q" name="reportIfDifferentCoordinators" specification="_y5Lb8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7o6EYtiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7o6EotiEe-3nrFY8n5C-Q" name="multipleCoordinators" specification="_y5Lb84tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7o6E4tiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7o6FItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yXkjsItiEe-3nrFY8n5C-Q" name="CodeFragment" visibility="package" method="_y7nr8ItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yXkjsYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yXkjsotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3Fwi0ZV2Ee-EOddEwqrIsA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_yXkjs4tiEe-3nrFY8n5C-Q" type="_yXiugItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yXlKwItiEe-3nrFY8n5C-Q" name="getCoordinator" method="_y7nr-ItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fwi05V2Ee-EOddEwqrIsA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_yXlx0ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXlx0YtiEe-3nrFY8n5C-Q" name="instructions" method="_y7nr-otiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fwi1JV2Ee-EOddEwqrIsA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5K04otiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yXnnAItiEe-3nrFY8n5C-Q" name="size" method="_y7nr_ItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fwi1ZV2Ee-EOddEwqrIsA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_yXnnAYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXoOEItiEe-3nrFY8n5C-Q" name="generateCodeFragment" visibility="private" method="_y7nr_otiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yXoOEYtiEe-3nrFY8n5C-Q" name="getBaseInstruction" visibility="private" method="_y7nr_4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXo1IItiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXo1IYtiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXo1IotiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXo1I4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXpcMItiEe-3nrFY8n5C-Q" name="push" visibility="private" method="_y7nsBItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXpcMYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXpcMotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXpcM4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXqDQItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXqDQYtiEe-3nrFY8n5C-Q" name="pull" visibility="private" method="_y7oTAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXqDQotiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXqqUItiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXqqUYtiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXrRYItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXr4cItiEe-3nrFY8n5C-Q" name="ifHas" visibility="private" method="_y7oTBYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXr4cYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXsfgItiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXsfgYtiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXsfgotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXttoItiEe-3nrFY8n5C-Q" name="ifNotHas" visibility="private" method="_y7oTCotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXttoYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXttootiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXtto4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXttpItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXuUsItiEe-3nrFY8n5C-Q" name="wait" method="_y7oTD4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXuUsYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yXuUsotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yXu7wItiEe-3nrFY8n5C-Q" name="sleep" isStatic="true" method="_y7oTEotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yXu7wYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y5KN0ItiEe-3nrFY8n5C-Q" name="CodeFragment" visibility="package" method="_y7nr8otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5KN1YtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5KN1otiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3Fwi0pV2Ee-EOddEwqrIsA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5KN0YtiEe-3nrFY8n5C-Q" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5KN0otiEe-3nrFY8n5C-Q" name="edges" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5KN04tiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5KN1ItiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5KN14tiEe-3nrFY8n5C-Q" type="_yXiugItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5Lb8ItiEe-3nrFY8n5C-Q" name="reportIfDifferentCoordinators" visibility="private" method="_y7o6EItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5Lb8YtiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5Lb84tiEe-3nrFY8n5C-Q" name="multipleCoordinators" visibility="private" method="_y7o6EotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5Lb9ItiEe-3nrFY8n5C-Q" name="coordinators" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5MDAItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yXz0QItiEe-3nrFY8n5C-Q" name="CombinedActivation">
              <generalization xmi:id="_y2xoM4tiEe-3nrFY8n5C-Q" general="_yWlsQItiEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_y5MqEItiEe-3nrFY8n5C-Q" client="_yXz0QItiEe-3nrFY8n5C-Q" supplier="_y5C5EYtiEe-3nrFY8n5C-Q" contract="_y5C5EYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7o6FYtiEe-3nrFY8n5C-Q" name="CombinedActivation" specification="_yX1pcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7o6FotiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7o6F4tiEe-3nrFY8n5C-Q" type="_yXz0QItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7o6GItiEe-3nrFY8n5C-Q" name="CombinedActivation" specification="_y2waEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7o6GYtiEe-3nrFY8n5C-Q" name="elem" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7o6GotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7o6G4tiEe-3nrFY8n5C-Q" type="_yXz0QItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7o6HItiEe-3nrFY8n5C-Q" name="CombinedActivation" specification="_y2waFotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7o6HYtiEe-3nrFY8n5C-Q" name="priorEntry" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7o6HotiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7o6H4tiEe-3nrFY8n5C-Q" type="_yXz0QItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7phIItiEe-3nrFY8n5C-Q" name="canCombine" specification="_y2xBI4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7phIYtiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7phIotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yX1pcItiEe-3nrFY8n5C-Q" name="CombinedActivation" visibility="package" method="_y7o6FYtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yX2QgItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yX2QgYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yX1pcYtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yX2QgotiEe-3nrFY8n5C-Q" type="_yXz0QItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2waEItiEe-3nrFY8n5C-Q" name="CombinedActivation" visibility="package" method="_y7o6GItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2waE4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2waFItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2waEYtiEe-3nrFY8n5C-Q" name="elem" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2waEotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2waFYtiEe-3nrFY8n5C-Q" type="_yXz0QItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2waFotiEe-3nrFY8n5C-Q" name="CombinedActivation" visibility="package" method="_y7o6HItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2xBIItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2xBIYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2waF4tiEe-3nrFY8n5C-Q" name="priorEntry" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2waGItiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2xBIotiEe-3nrFY8n5C-Q" type="_yXz0QItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2xBI4tiEe-3nrFY8n5C-Q" name="canCombine" method="_y7phIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2xBJItiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2xBJYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yX5T0ItiEe-3nrFY8n5C-Q" name="CommunicationGraph">
              <ownedComment xmi:id="_3Fwi1pV2Ee-EOddEwqrIsA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y2zdY4tiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6lKIItiEe-3nrFY8n5C-Q" name="wfm" visibility="package" type="_yYd7kItiEe-3nrFY8n5C-Q" association="_y84QNItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6lKIotiEe-3nrFY8n5C-Q" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6lxMYtiEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6lxM4tiEe-3nrFY8n5C-Q" name="workLoad" visibility="package" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y84QN4tiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7phI4tiEe-3nrFY8n5C-Q" name="CommunicationGraph" specification="_y2yPQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7phJItiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7phJYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7phJotiEe-3nrFY8n5C-Q" type="_yX5T0ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qIMItiEe-3nrFY8n5C-Q" name="CommunicationGraph" specification="_y2y2U4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qIMYtiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7qIMotiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7qIM4tiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7qINItiEe-3nrFY8n5C-Q" type="_yX5T0ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qINYtiEe-3nrFY8n5C-Q" name="createHeader" specification="_yX7JAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qINotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qIN4tiEe-3nrFY8n5C-Q" name="createFooter" specification="_yX9lQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qIOItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qIOYtiEe-3nrFY8n5C-Q" name="visualization" specification="_yX_acYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qIOotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qIO4tiEe-3nrFY8n5C-Q" name="createWarpFileContent" specification="_yYAokItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qIPItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yX7JAItiEe-3nrFY8n5C-Q" name="createHeader" method="_y7qINYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2zdYItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yX9lQItiEe-3nrFY8n5C-Q" name="createFooter" method="_y7qIN4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2zdYYtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yX_acYtiEe-3nrFY8n5C-Q" name="visualization" method="_y7qIOYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y2zdYotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYAokItiEe-3nrFY8n5C-Q" name="createWarpFileContent" method="_y7qIO4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYAokYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y2yPQItiEe-3nrFY8n5C-Q" name="CommunicationGraph" method="_y7phI4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2y2UItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2y2UYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2yPQYtiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2yPQotiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2y2UotiEe-3nrFY8n5C-Q" type="_yX5T0ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y2y2U4tiEe-3nrFY8n5C-Q" name="CommunicationGraph" method="_y7qIMItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y2y2V4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y2y2WItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y2y2VItiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2y2VYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y2y2VotiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y2y2WYtiEe-3nrFY8n5C-Q" type="_yX5T0ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yYES8ItiEe-3nrFY8n5C-Q" name="ConnectivityPoset">
              <ownedComment xmi:id="_3Fwi15V2Ee-EOddEwqrIsA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_y20EdYtiEe-3nrFY8n5C-Q" general="_yZ10kItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qvQItiEe-3nrFY8n5C-Q" name="ConnectivityPoset" specification="_y20EcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qvQYtiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7qvQotiEe-3nrFY8n5C-Q" type="_yYES8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qvQ4tiEe-3nrFY8n5C-Q" name="findCoordinator" specification="_y5NRIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qvRItiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7qvRYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y20EcItiEe-3nrFY8n5C-Q" name="ConnectivityPoset" visibility="package" method="_y7qvQItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y20EcotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y20Ec4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y20EcYtiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y20EdItiEe-3nrFY8n5C-Q" type="_yYES8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5NRIItiEe-3nrFY8n5C-Q" name="findCoordinator" visibility="protected" method="_y7qvQ4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5NRIYtiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5N4MItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yYHWQItiEe-3nrFY8n5C-Q" name="DeadlineComparator">
              <interfaceRealization xmi:id="_y5PGUItiEe-3nrFY8n5C-Q" client="_yYHWQItiEe-3nrFY8n5C-Q" supplier="_y20rgItiEe-3nrFY8n5C-Q" contract="_y20rgItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qvRotiEe-3nrFY8n5C-Q" name="compare" specification="_y5QUcYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qvR4tiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7qvSItiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7qvSYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y5QUcYtiEe-3nrFY8n5C-Q" name="compare" method="_y7qvRotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5QUcotiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5QUc4tiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5Q7gItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yYKZkItiEe-3nrFY8n5C-Q" name="Description">
              <ownedComment xmi:id="_3Fwi2JV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y5SJoItiEe-3nrFY8n5C-Q" general="_y2f7YItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6mYQYtiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6mYQotiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7qvSotiEe-3nrFY8n5C-Q" name="Description" specification="_yYLAoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7qvS4tiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7rWUItiEe-3nrFY8n5C-Q" name="Description" specification="_yYLnsotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7rWUYtiEe-3nrFY8n5C-Q" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7rWUotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7rWU4tiEe-3nrFY8n5C-Q" name="toString" specification="_yYMOw4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7rWVItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yYLAoItiEe-3nrFY8n5C-Q" name="Description" method="_y7qvSotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYLAoYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYLnsItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yYLnsYtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYLnsotiEe-3nrFY8n5C-Q" name="Description" method="_y7rWUItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYMOwItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYMOwYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yYLns4tiEe-3nrFY8n5C-Q" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYMOwotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYMOw4tiEe-3nrFY8n5C-Q" name="toString" method="_y7rWU4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYMOxItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yYPSEItiEe-3nrFY8n5C-Q" name="Edge">
              <generalization xmi:id="_y22gtItiEe-3nrFY8n5C-Q" general="_ydT_UItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6mYQ4tiEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6m_UItiEe-3nrFY8n5C-Q" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6m_UYtiEe-3nrFY8n5C-Q" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6m_UotiEe-3nrFY8n5C-Q" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6m_U4tiEe-3nrFY8n5C-Q" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6m_VItiEe-3nrFY8n5C-Q" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6m_VYtiEe-3nrFY8n5C-Q" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6m_VotiEe-3nrFY8n5C-Q" name="state" type="_yYRuUItiEe-3nrFY8n5C-Q" association="_y8U2kItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6nmYItiEe-3nrFY8n5C-Q" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_y5SwsItiEe-3nrFY8n5C-Q" client="_yYPSEItiEe-3nrFY8n5C-Q" supplier="_y5C5EYtiEe-3nrFY8n5C-Q" contract="_y5C5EYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7rWVYtiEe-3nrFY8n5C-Q" name="Edge" specification="_yYS8cotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7rWVotiEe-3nrFY8n5C-Q" type="_yYPSEItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7r9YItiEe-3nrFY8n5C-Q" name="Edge" specification="_yYUKkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7r9YYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9YotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9Y4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9ZItiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9ZYtiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9ZotiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9Z4tiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9aItiEe-3nrFY8n5C-Q" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7r9aYtiEe-3nrFY8n5C-Q" type="_yYPSEItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7r9aotiEe-3nrFY8n5C-Q" name="compareTo" specification="_y215oItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7r9a4tiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7r9bItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7r9bYtiEe-3nrFY8n5C-Q" name="toString" specification="_yYV_wItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7r9botiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7r9b4tiEe-3nrFY8n5C-Q" name="print" specification="_yYX08ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7r9cItiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7skcItiEe-3nrFY8n5C-Q" name="print" specification="_yYZDEotiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yYS8cotiEe-3nrFY8n5C-Q" name="Edge" visibility="package" method="_y7rWVYtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYTjgItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYTjgYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yYTjgotiEe-3nrFY8n5C-Q" type="_yYPSEItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYUKkItiEe-3nrFY8n5C-Q" name="Edge" visibility="package" method="_y7r9YItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYUxpYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYVYsItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yYUKkYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYUKkotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYUKk4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYUxoItiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYUxoYtiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYUxootiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYUxo4tiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYUxpItiEe-3nrFY8n5C-Q" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYVYsYtiEe-3nrFY8n5C-Q" type="_yYPSEItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYV_wItiEe-3nrFY8n5C-Q" name="toString" method="_y7r9bYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYV_wYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYX08ItiEe-3nrFY8n5C-Q" name="print" method="_y7r9b4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYX08YtiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYZDEotiEe-3nrFY8n5C-Q" name="print" method="_y7skcItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_y215oItiEe-3nrFY8n5C-Q" name="compareTo" method="_y7r9aotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y215oYtiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y22gsItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_yYRuUItiEe-3nrFY8n5C-Q" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_yYSVYYtiEe-3nrFY8n5C-Q" name="RELEASED"/>
                <ownedLiteral xmi:id="_yYS8cItiEe-3nrFY8n5C-Q" name="EXECUTING"/>
                <ownedLiteral xmi:id="_yYS8cYtiEe-3nrFY8n5C-Q" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yYd7kItiEe-3nrFY8n5C-Q" name="FileManager">
              <ownedComment xmi:id="_3FxJ0JV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y6oNcItiEe-3nrFY8n5C-Q" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6oNcYtiEe-3nrFY8n5C-Q" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7skcYtiEe-3nrFY8n5C-Q" name="FileManager" specification="_yYfJsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7skcotiEe-3nrFY8n5C-Q" type="_yYd7kItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7skc4tiEe-3nrFY8n5C-Q" name="FileManager" specification="_yYfwwotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7skdItiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7skdYtiEe-3nrFY8n5C-Q" type="_yYd7kItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7skdotiEe-3nrFY8n5C-Q" name="getDocumentsDirectory" specification="_yYgX0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7skd4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7skeItiEe-3nrFY8n5C-Q" name="getCurrentDirectory" specification="_yYgX0otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7skeYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tLgItiEe-3nrFY8n5C-Q" name="createFile" specification="_yYg-4YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tLgYtiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLgotiEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLg4tiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLhItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tLhYtiEe-3nrFY8n5C-Q" name="createFile" specification="_yYi0EItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tLhotiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLh4tiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLiItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tLiYtiEe-3nrFY8n5C-Q" name="createDirectory" specification="_yYjbIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tLiotiEe-3nrFY8n5C-Q" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLi4tiEe-3nrFY8n5C-Q" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLjItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tLjYtiEe-3nrFY8n5C-Q" name="writeFile" specification="_yYkCMYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tLjotiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLj4tiEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tLkItiEe-3nrFY8n5C-Q" name="readFile" specification="_yYkpQYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tLkYtiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLkotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yYfJsItiEe-3nrFY8n5C-Q" name="FileManager" method="_y7skcYtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYfJsYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYfwwItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3FxJ0ZV2Ee-EOddEwqrIsA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYfwwYtiEe-3nrFY8n5C-Q" type="_yYd7kItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYfwwotiEe-3nrFY8n5C-Q" name="FileManager" method="_y7skc4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYfwxItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYfwxYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yYfww4tiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYfwxotiEe-3nrFY8n5C-Q" type="_yYd7kItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYgX0ItiEe-3nrFY8n5C-Q" name="getDocumentsDirectory" method="_y7skdotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYgX0YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYgX0otiEe-3nrFY8n5C-Q" name="getCurrentDirectory" method="_y7skeItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYg-4ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYg-4YtiEe-3nrFY8n5C-Q" name="createFile" method="_y7tLgItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ0pV2Ee-EOddEwqrIsA">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYhl8ItiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYhl8YtiEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYhl8otiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYhl84tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYi0EItiEe-3nrFY8n5C-Q" name="createFile" method="_y7tLhYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYi0EYtiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYi0EotiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYi0E4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYjbIItiEe-3nrFY8n5C-Q" name="createDirectory" method="_y7tLiYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYjbIYtiEe-3nrFY8n5C-Q" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYjbIotiEe-3nrFY8n5C-Q" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYkCMItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYkCMYtiEe-3nrFY8n5C-Q" name="writeFile" method="_y7tLjYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYkCMotiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYkpQItiEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYkpQYtiEe-3nrFY8n5C-Q" name="readFile" method="_y7tLkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYkpQotiEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYlQUItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yYmecItiEe-3nrFY8n5C-Q" name="Flow">
              <ownedComment xmi:id="_3FxJ05V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
Allows for Schedulable Objects to be compared to flow charataristics and tracks faults  &#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y2-cgItiEe-3nrFY8n5C-Q" general="_ydT_UItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6o0gItiEe-3nrFY8n5C-Q" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6o0gYtiEe-3nrFY8n5C-Q" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6o0gotiEe-3nrFY8n5C-Q" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6o0g4tiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6pbkItiEe-3nrFY8n5C-Q" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6pbkYtiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6pbkotiEe-3nrFY8n5C-Q" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6pbk4tiEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6pblItiEe-3nrFY8n5C-Q" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6pblYtiEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6pblotiEe-3nrFY8n5C-Q" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6pbl4tiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6pbmItiEe-3nrFY8n5C-Q" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6pbmYtiEe-3nrFY8n5C-Q" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6qCoYtiEe-3nrFY8n5C-Q" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6qCo4tiEe-3nrFY8n5C-Q" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6qpsYtiEe-3nrFY8n5C-Q" name="nodes" visibility="package" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y843QYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6rQwYtiEe-3nrFY8n5C-Q" name="linkTxAndTotalCost" visibility="package" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y843RItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6r30ItiEe-3nrFY8n5C-Q" name="edges" visibility="package" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y85eUYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6se4ItiEe-3nrFY8n5C-Q" name="nodePredecessor" visibility="package" type="_yZku0ItiEe-3nrFY8n5C-Q" association="_y86FYYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6se4otiEe-3nrFY8n5C-Q" name="edgePredecessor" visibility="package" type="_yYPSEItiEe-3nrFY8n5C-Q" association="_y86scYtiEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_y5T-0ItiEe-3nrFY8n5C-Q" client="_yYmecItiEe-3nrFY8n5C-Q" supplier="_y5C5EYtiEe-3nrFY8n5C-Q" contract="_y5C5EYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tLk4tiEe-3nrFY8n5C-Q" name="Flow" specification="_yYo6sItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tLlItiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLlYtiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLlotiEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7tLl4tiEe-3nrFY8n5C-Q" type="_yYmecItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tykItiEe-3nrFY8n5C-Q" name="Flow" specification="_yYphw4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tykYtiEe-3nrFY8n5C-Q" type="_yYmecItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tykotiEe-3nrFY8n5C-Q" name="getInitialPriority" specification="_yYqI0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tyk4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tylItiEe-3nrFY8n5C-Q" name="getIndex" specification="_yYqI0otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tylYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tylotiEe-3nrFY8n5C-Q" name="getNumTxPerLink" specification="_yYqv4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tyl4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tymItiEe-3nrFY8n5C-Q" name="getNodes" specification="_yYqv4otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tymYtiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tymotiEe-3nrFY8n5C-Q" name="getEdges" specification="_yYslEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tym4tiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tynItiEe-3nrFY8n5C-Q" name="addEdge" specification="_y29OYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tynYtiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tynotiEe-3nrFY8n5C-Q" name="addNode" specification="_y29OYotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tyn4tiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tyoItiEe-3nrFY8n5C-Q" name="getLinkTxAndTotalCost" specification="_yYuaQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tyoYtiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7tyootiEe-3nrFY8n5C-Q" name="setInitialPriority" specification="_yYvoYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7tyo4tiEe-3nrFY8n5C-Q" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7uZoItiEe-3nrFY8n5C-Q" name="setIndex" specification="_yYwPcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7uZoYtiEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7uZootiEe-3nrFY8n5C-Q" name="setNumTxPerLink" specification="_yYw2gItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7uZo4tiEe-3nrFY8n5C-Q" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7uZpItiEe-3nrFY8n5C-Q" name="setNodes" specification="_y5V0AYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7uZpYtiEe-3nrFY8n5C-Q" name="nodes" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7uZpotiEe-3nrFY8n5C-Q" name="setLinkTxAndTotalCost" specification="_y5WbEYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7uZp4tiEe-3nrFY8n5C-Q" name="linkTxAndTotalCost" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7uZqItiEe-3nrFY8n5C-Q" name="compareTo" specification="_y291cItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7uZqYtiEe-3nrFY8n5C-Q" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7uZqotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7uZq4tiEe-3nrFY8n5C-Q" name="toString" specification="_yYxdkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7uZrItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yYo6sItiEe-3nrFY8n5C-Q" name="Flow" visibility="package" method="_y7tLk4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYphwItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYphwYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3FxJ1JV2Ee-EOddEwqrIsA">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYo6sYtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYo6sotiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYo6s4tiEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yYphwotiEe-3nrFY8n5C-Q" type="_yYmecItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYphw4tiEe-3nrFY8n5C-Q" name="Flow" visibility="package" method="_y7tykItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yYphxItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yYphxYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3FxJ1ZV2Ee-EOddEwqrIsA">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYphxotiEe-3nrFY8n5C-Q" type="_yYmecItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYqI0ItiEe-3nrFY8n5C-Q" name="getInitialPriority" method="_y7tykotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ1pV2Ee-EOddEwqrIsA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYqI0YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYqI0otiEe-3nrFY8n5C-Q" name="getIndex" method="_y7tylItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ15V2Ee-EOddEwqrIsA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYqI04tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYqv4ItiEe-3nrFY8n5C-Q" name="getNumTxPerLink" method="_y7tylotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ2JV2Ee-EOddEwqrIsA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYqv4YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYqv4otiEe-3nrFY8n5C-Q" name="getNodes" method="_y7tymItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ2ZV2Ee-EOddEwqrIsA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5VM8ItiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYslEItiEe-3nrFY8n5C-Q" name="getEdges" method="_y7tymotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ2pV2Ee-EOddEwqrIsA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5VM8YtiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYuaQItiEe-3nrFY8n5C-Q" name="getLinkTxAndTotalCost" method="_y7tyoItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ3ZV2Ee-EOddEwqrIsA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5V0AItiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yYvoYItiEe-3nrFY8n5C-Q" name="setInitialPriority" method="_y7tyootiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ3pV2Ee-EOddEwqrIsA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYvoYYtiEe-3nrFY8n5C-Q" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYwPcItiEe-3nrFY8n5C-Q" name="setIndex" method="_y7uZoItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ35V2Ee-EOddEwqrIsA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYwPcYtiEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYw2gItiEe-3nrFY8n5C-Q" name="setNumTxPerLink" method="_y7uZootiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ4JV2Ee-EOddEwqrIsA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_yYw2gYtiEe-3nrFY8n5C-Q" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yYxdkItiEe-3nrFY8n5C-Q" name="toString" method="_y7uZq4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yYxdkYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y29OYItiEe-3nrFY8n5C-Q" name="addEdge" method="_y7tynItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ25V2Ee-EOddEwqrIsA">
                  <body>@param takes in an edge &#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_y29OYYtiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y29OYotiEe-3nrFY8n5C-Q" name="addNode" method="_y7tynotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ3JV2Ee-EOddEwqrIsA">
                  <body>@param takes in a node&#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_y29OY4tiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y291cItiEe-3nrFY8n5C-Q" name="compareTo" method="_y7uZqItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y291cYtiEe-3nrFY8n5C-Q" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y291cotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y5V0AYtiEe-3nrFY8n5C-Q" name="setNodes" method="_y7uZpItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ4ZV2Ee-EOddEwqrIsA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5V0AotiEe-3nrFY8n5C-Q" name="nodes" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5WbEYtiEe-3nrFY8n5C-Q" name="setLinkTxAndTotalCost" method="_y7uZpotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ4pV2Ee-EOddEwqrIsA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5WbEotiEe-3nrFY8n5C-Q" name="linkTxAndTotalCost" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yY5ZYItiEe-3nrFY8n5C-Q" name="FlowMap">
              <ownedComment xmi:id="_3FxJ45V2Ee-EOddEwqrIsA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3ARsItiEe-3nrFY8n5C-Q" general="_yWciUItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6tF8ItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6tF8YtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yY6AcItiEe-3nrFY8n5C-Q" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_3FxJ5JV2Ee-EOddEwqrIsA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3ARsotiEe-3nrFY8n5C-Q" general="_yWciUItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6tF8otiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6tF84tiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yY6ngItiEe-3nrFY8n5C-Q" name="GraphViz">
              <ownedComment xmi:id="_3FxJ5ZV2Ee-EOddEwqrIsA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3CG4YtiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6ttAItiEe-3nrFY8n5C-Q" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6ttAYtiEe-3nrFY8n5C-Q" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6ttAotiEe-3nrFY8n5C-Q" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6ttA4tiEe-3nrFY8n5C-Q" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6ttBItiEe-3nrFY8n5C-Q" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6ttBotiEe-3nrFY8n5C-Q" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6uUEYtiEe-3nrFY8n5C-Q" name="wfm" visibility="package" type="_yYd7kItiEe-3nrFY8n5C-Q" association="_y87TgItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6uUE4tiEe-3nrFY8n5C-Q" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6uUFYtiEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6u7IYtiEe-3nrFY8n5C-Q" name="gv" visibility="package" type="_yY6ngItiEe-3nrFY8n5C-Q" association="_y87Tg4tiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAsItiEe-3nrFY8n5C-Q" name="GraphViz" specification="_y3Bf0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vAsYtiEe-3nrFY8n5C-Q" name="wfm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7vAsotiEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7vAs4tiEe-3nrFY8n5C-Q" type="_yY6ngItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAtItiEe-3nrFY8n5C-Q" name="GraphViz" specification="_y3Bf1otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vAtYtiEe-3nrFY8n5C-Q" name="wfm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7vAtotiEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7vAt4tiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7vAuItiEe-3nrFY8n5C-Q" type="_yY6ngItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAuYtiEe-3nrFY8n5C-Q" name="visualization" specification="_yY8csItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vAuotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAu4tiEe-3nrFY8n5C-Q" name="initializeGraphVizContent" specification="_yY9q0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vAvItiEe-3nrFY8n5C-Q" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAvYtiEe-3nrFY8n5C-Q" name="finalizeGraphVizContent" specification="_yY9q0otiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAvotiEe-3nrFY8n5C-Q" name="getGraphVizContent" specification="_yY9q04tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vAv4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAwItiEe-3nrFY8n5C-Q" name="createGraphVizContent" specification="_yY-R4YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vAwYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vAwotiEe-3nrFY8n5C-Q" name="addFlowToGraphViz" specification="_yY-R44tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vAw4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vnwItiEe-3nrFY8n5C-Q" name="addSrcNodeToGraphViz" specification="_yY-48ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vnwYtiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vnwotiEe-3nrFY8n5C-Q" name="addSnkNodeToGraphViz" specification="_yY-48otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vnw4tiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vnxItiEe-3nrFY8n5C-Q" name="finalizeCurrentFlowInGraphViz" specification="_yY_gAItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vnxYtiEe-3nrFY8n5C-Q" name="addNodeName" specification="_yY_gAYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vnxotiEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7vnx4tiEe-3nrFY8n5C-Q" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yY8csItiEe-3nrFY8n5C-Q" name="visualization" method="_y7vAuYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3CG4ItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yY9q0ItiEe-3nrFY8n5C-Q" name="initializeGraphVizContent" method="_y7vAu4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yY9q0YtiEe-3nrFY8n5C-Q" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yY9q0otiEe-3nrFY8n5C-Q" name="finalizeGraphVizContent" method="_y7vAvYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yY9q04tiEe-3nrFY8n5C-Q" name="getGraphVizContent" method="_y7vAvotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ5pV2Ee-EOddEwqrIsA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_yY-R4ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yY-R4YtiEe-3nrFY8n5C-Q" name="createGraphVizContent" method="_y7vAwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yY-R4otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yY-R44tiEe-3nrFY8n5C-Q" name="addFlowToGraphViz" method="_y7vAwotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yY-R5ItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yY-48ItiEe-3nrFY8n5C-Q" name="addSrcNodeToGraphViz" method="_y7vnwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yY-48YtiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yY-48otiEe-3nrFY8n5C-Q" name="addSnkNodeToGraphViz" method="_y7vnwotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yY-484tiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yY_gAItiEe-3nrFY8n5C-Q" name="finalizeCurrentFlowInGraphViz" method="_y7vnxItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yY_gAYtiEe-3nrFY8n5C-Q" name="addNodeName" visibility="private" method="_y7vnxYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yY_gAotiEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yY_gA4tiEe-3nrFY8n5C-Q" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3Bf0ItiEe-3nrFY8n5C-Q" name="GraphViz" visibility="package" method="_y7vAsItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3Bf04tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3Bf1ItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3Bf0YtiEe-3nrFY8n5C-Q" name="wfm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3Bf0otiEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Bf1YtiEe-3nrFY8n5C-Q" type="_yY6ngItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3Bf1otiEe-3nrFY8n5C-Q" name="GraphViz" visibility="package" method="_y7vAtItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3Bf2otiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3Bf24tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3Bf14tiEe-3nrFY8n5C-Q" name="wfm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3Bf2ItiEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Bf2YtiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3Bf3ItiEe-3nrFY8n5C-Q" type="_yY6ngItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZEYgItiEe-3nrFY8n5C-Q" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_3FxJ55V2Ee-EOddEwqrIsA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_y5YQQItiEe-3nrFY8n5C-Q" general="_y3FKMItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6u7I4tiEe-3nrFY8n5C-Q" name="gv" visibility="package" type="_yY6ngItiEe-3nrFY8n5C-Q" association="_y876kItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vnyItiEe-3nrFY8n5C-Q" name="GraphVizListener" specification="_y3FxQotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vnyYtiEe-3nrFY8n5C-Q" name="gv" type="_yY6ngItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7vnyotiEe-3nrFY8n5C-Q" type="_yZEYgItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vny4tiEe-3nrFY8n5C-Q" name="buildGraphViz" specification="_y3GYUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vnzItiEe-3nrFY8n5C-Q" name="gv" type="_yY6ngItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7vnzYtiEe-3nrFY8n5C-Q" name="enterWarpName" specification="_y3G_YItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7vnzotiEe-3nrFY8n5C-Q" name="ctx" type="_y3GYUotiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7wO0ItiEe-3nrFY8n5C-Q" name="exitWarp" specification="_y3INgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7wO0YtiEe-3nrFY8n5C-Q" name="ctx" type="_y3HmcItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7wO0otiEe-3nrFY8n5C-Q" name="enterFlowName" specification="_y3I0kotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7wO04tiEe-3nrFY8n5C-Q" name="ctx" type="_y3I0kItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7wO1ItiEe-3nrFY8n5C-Q" name="exitSrcNode" specification="_y3KpwYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7wO1YtiEe-3nrFY8n5C-Q" name="ctx" type="_y3KCsYtiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7wO1otiEe-3nrFY8n5C-Q" name="exitSnkNode" specification="_y3LQ0otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7wO14tiEe-3nrFY8n5C-Q" name="ctx" type="_y3LQ0ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7wO2ItiEe-3nrFY8n5C-Q" name="exitFlow" specification="_y3L35ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7wO2YtiEe-3nrFY8n5C-Q" name="ctx" type="_y3L34otiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y3FxQotiEe-3nrFY8n5C-Q" name="GraphVizListener" visibility="private" method="_y7vnyItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3FxRItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3FxRYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3FxQ4tiEe-3nrFY8n5C-Q" name="gv" type="_yY6ngItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3FxRotiEe-3nrFY8n5C-Q" type="_yZEYgItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3GYUItiEe-3nrFY8n5C-Q" name="buildGraphViz" isStatic="true" method="_y7vny4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3GYUYtiEe-3nrFY8n5C-Q" name="gv" type="_yY6ngItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3G_YItiEe-3nrFY8n5C-Q" name="enterWarpName" method="_y7vnzYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3G_YYtiEe-3nrFY8n5C-Q" name="ctx" type="_y3GYUotiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3INgItiEe-3nrFY8n5C-Q" name="exitWarp" method="_y7wO0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3INgYtiEe-3nrFY8n5C-Q" name="ctx" type="_y3HmcItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3I0kotiEe-3nrFY8n5C-Q" name="enterFlowName" method="_y7wO0otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3I0k4tiEe-3nrFY8n5C-Q" name="ctx" type="_y3I0kItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3KpwYtiEe-3nrFY8n5C-Q" name="exitSrcNode" method="_y7wO1ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3KpwotiEe-3nrFY8n5C-Q" name="ctx" type="_y3KCsYtiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3LQ0otiEe-3nrFY8n5C-Q" name="exitSnkNode" method="_y7wO1otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3LQ04tiEe-3nrFY8n5C-Q" name="ctx" type="_y3LQ0ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3L35ItiEe-3nrFY8n5C-Q" name="exitFlow" method="_y7wO2ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3Me8ItiEe-3nrFY8n5C-Q" name="ctx" type="_y3L34otiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZIp8ItiEe-3nrFY8n5C-Q" name="GuiVisualization">
              <ownedComment xmi:id="_3FxJ6JV2Ee-EOddEwqrIsA">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y6viMYtiEe-3nrFY8n5C-Q" name="frame" visibility="package" type="_y3NtEYtiEe-3nrFY8n5C-Q" association="_y876k4tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6viM4tiEe-3nrFY8n5C-Q" name="jtable" visibility="package" type="_y3OUI4tiEe-3nrFY8n5C-Q" association="_y876lotiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7w14ItiEe-3nrFY8n5C-Q" name="GuiVisualization" specification="_yZJRAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7w14YtiEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7w14otiEe-3nrFY8n5C-Q" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7w144tiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7w15ItiEe-3nrFY8n5C-Q" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7w15YtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7w15otiEe-3nrFY8n5C-Q" type="_yZIp8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7w154tiEe-3nrFY8n5C-Q" name="setVisible" specification="_yZLGMYtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7w16ItiEe-3nrFY8n5C-Q" name="resizeColumnWidth" specification="_y5Y3UItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7w16YtiEe-3nrFY8n5C-Q" name="table" type="_y3OUI4tiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZJRAItiEe-3nrFY8n5C-Q" name="GuiVisualization" method="_y7w14ItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yZJ4E4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yZJ4FItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3FxJ6ZV2Ee-EOddEwqrIsA">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_yZJ4EItiEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZJ4EYtiEe-3nrFY8n5C-Q" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yZKfIItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZJ4EotiEe-3nrFY8n5C-Q" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yZKfIYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZJ4FYtiEe-3nrFY8n5C-Q" type="_yZIp8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZLGMYtiEe-3nrFY8n5C-Q" name="setVisible" method="_y7w154tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ6pV2Ee-EOddEwqrIsA">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_y5Y3UItiEe-3nrFY8n5C-Q" name="resizeColumnWidth" visibility="private" method="_y7w16ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5Y3UYtiEe-3nrFY8n5C-Q" name="table" type="_y3OUI4tiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZM7YItiEe-3nrFY8n5C-Q" name="InputGraphFile">
              <ownedComment xmi:id="_3FxJ65V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y6wJQItiEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6wJQYtiEe-3nrFY8n5C-Q" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6wJQotiEe-3nrFY8n5C-Q" name="wfm" visibility="private" type="_yYd7kItiEe-3nrFY8n5C-Q" association="_y88hoYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6wJRItiEe-3nrFY8n5C-Q" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6wwUItiEe-3nrFY8n5C-Q" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6wwUotiEe-3nrFY8n5C-Q" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6wwU4tiEe-3nrFY8n5C-Q" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7w16otiEe-3nrFY8n5C-Q" name="InputGraphFile" specification="_y3QwYYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7w164tiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7w17ItiEe-3nrFY8n5C-Q" type="_yZM7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7w17YtiEe-3nrFY8n5C-Q" name="InputGraphFile" specification="_y3RXcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7w17otiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7w174tiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7w18ItiEe-3nrFY8n5C-Q" type="_yZM7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7xc8ItiEe-3nrFY8n5C-Q" name="setGraphFileName" specification="_yZOwkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7xc8YtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7xc8otiEe-3nrFY8n5C-Q" name="verifyGraphFileName" specification="_yZPXoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7xc84tiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7xc9ItiEe-3nrFY8n5C-Q" name="readGraphFile" specification="_yZP-sItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7xc9YtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7xc9otiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7xc94tiEe-3nrFY8n5C-Q" name="getInputGraphFileName" specification="_yZQlwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7xc-ItiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7xc-YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7xc-otiEe-3nrFY8n5C-Q" name="readGraphFileContents" specification="_yZRM0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7xc-4tiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7xc_ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7xc_YtiEe-3nrFY8n5C-Q" name="printVerboseMessage" specification="_yZRz4YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7xc_otiEe-3nrFY8n5C-Q" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7xc_4tiEe-3nrFY8n5C-Q" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7xdAItiEe-3nrFY8n5C-Q" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZOwkItiEe-3nrFY8n5C-Q" name="setGraphFileName" visibility="private" method="_y7xc8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZOwkYtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZPXoItiEe-3nrFY8n5C-Q" name="verifyGraphFileName" visibility="private" method="_y7xc8otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZPXoYtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZP-sItiEe-3nrFY8n5C-Q" name="readGraphFile" method="_y7xc9ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZP-sYtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZP-sotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZQlwItiEe-3nrFY8n5C-Q" name="getInputGraphFileName" visibility="private" method="_y7xc94tiEe-3nrFY8n5C-Q" raisedException="_y5ZeYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZQlwYtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZQlwotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZRM0ItiEe-3nrFY8n5C-Q" name="readGraphFileContents" visibility="private" method="_y7xc-otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZRM0YtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZRz4ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZRz4YtiEe-3nrFY8n5C-Q" name="printVerboseMessage" visibility="private" method="_y7xc_YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZRz4otiEe-3nrFY8n5C-Q" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZRz44tiEe-3nrFY8n5C-Q" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZSa8ItiEe-3nrFY8n5C-Q" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3QwYYtiEe-3nrFY8n5C-Q" name="InputGraphFile" method="_y7w16otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3QwY4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3QwZItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3QwYotiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3QwZYtiEe-3nrFY8n5C-Q" type="_yZM7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3RXcItiEe-3nrFY8n5C-Q" name="InputGraphFile" method="_y7w17YtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3RXc4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3RXdItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3RXcYtiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3RXcotiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3RXdYtiEe-3nrFY8n5C-Q" type="_yZM7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZVeQItiEe-3nrFY8n5C-Q" name="InstructionTimeSlot">
              <generalization xmi:id="_y3R-gItiEe-3nrFY8n5C-Q" general="_ybJcIItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6xXYItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6xXYYtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7xdAYtiEe-3nrFY8n5C-Q" name="InstructionTimeSlot" specification="_yZWFUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7xdAotiEe-3nrFY8n5C-Q" type="_yZVeQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yEAItiEe-3nrFY8n5C-Q" name="InstructionTimeSlot" specification="_yZWsYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yEAYtiEe-3nrFY8n5C-Q" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yEAotiEe-3nrFY8n5C-Q" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yEA4tiEe-3nrFY8n5C-Q" type="_yZVeQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yEBItiEe-3nrFY8n5C-Q" name="InstructionTimeSlot" specification="_yZXTc4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yEBYtiEe-3nrFY8n5C-Q" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7yEBotiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yEB4tiEe-3nrFY8n5C-Q" type="_yZVeQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZWFUItiEe-3nrFY8n5C-Q" name="InstructionTimeSlot" method="_y7xdAYtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yZWFUYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yZWFUotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yZWFU4tiEe-3nrFY8n5C-Q" type="_yZVeQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZWsYItiEe-3nrFY8n5C-Q" name="InstructionTimeSlot" visibility="package" method="_y7yEAItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yZXTcItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yZXTcYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yZWsYYtiEe-3nrFY8n5C-Q" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZWsYotiEe-3nrFY8n5C-Q" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZXTcotiEe-3nrFY8n5C-Q" type="_yZVeQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZXTc4tiEe-3nrFY8n5C-Q" name="InstructionTimeSlot" visibility="package" method="_y7yEBItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yZX6gItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yZX6gYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yZXTdItiEe-3nrFY8n5C-Q" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yZX6g4tiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZX6gotiEe-3nrFY8n5C-Q" type="_yZVeQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZYhkItiEe-3nrFY8n5C-Q" name="LatencyAnalysis">
              <ownedComment xmi:id="_3FxJ7JV2Ee-EOddEwqrIsA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y6x-cItiEe-3nrFY8n5C-Q" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6x-cYtiEe-3nrFY8n5C-Q" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6x-c4tiEe-3nrFY8n5C-Q" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6ylgYtiEe-3nrFY8n5C-Q" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6ylgotiEe-3nrFY8n5C-Q" name="latencyReport" visibility="private" type="_yYKZkItiEe-3nrFY8n5C-Q" association="_y88hpItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6zMkItiEe-3nrFY8n5C-Q" name="program" visibility="private" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y89IsYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6zMkotiEe-3nrFY8n5C-Q" name="workload" visibility="private" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y89ItItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6zMlItiEe-3nrFY8n5C-Q" name="programTable" visibility="private" type="_yaqT8ItiEe-3nrFY8n5C-Q" association="_y89It4tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6zzoItiEe-3nrFY8n5C-Q" name="nodeIndex" visibility="private" type="_y2eGMItiEe-3nrFY8n5C-Q" association="_y89vwYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yECItiEe-3nrFY8n5C-Q" name="LatencyAnalysis" specification="_y3TMoYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yECYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7yECotiEe-3nrFY8n5C-Q" type="_yZYhkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yEC4tiEe-3nrFY8n5C-Q" name="LatencyAnalysis" specification="_y3Tzs4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yEDItiEe-3nrFY8n5C-Q" name="program" type="_yaNA8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7yEDYtiEe-3nrFY8n5C-Q" type="_yZYhkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yEDotiEe-3nrFY8n5C-Q" name="latencyReport" specification="_yZaWwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yED4tiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yEEItiEe-3nrFY8n5C-Q" name="numMatchingTx" specification="_yZa90ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yEEYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yEEotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yEE4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yEFItiEe-3nrFY8n5C-Q" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yEFYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZaWwItiEe-3nrFY8n5C-Q" name="latencyReport" method="_y7yEDotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3TzuItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZa90ItiEe-3nrFY8n5C-Q" name="numMatchingTx" method="_y7yEEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZa90YtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZa90otiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZa904tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZa91ItiEe-3nrFY8n5C-Q" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZbk4ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3TMoYtiEe-3nrFY8n5C-Q" name="LatencyAnalysis" visibility="package" method="_y7yECItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3TzsItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3TzsYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3TMootiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3TzsotiEe-3nrFY8n5C-Q" type="_yZYhkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3Tzs4tiEe-3nrFY8n5C-Q" name="LatencyAnalysis" visibility="package" method="_y7yEC4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3TztYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3TztotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3TztItiEe-3nrFY8n5C-Q" name="program" type="_yaNA8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3Tzt4tiEe-3nrFY8n5C-Q" type="_yZYhkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZeBIItiEe-3nrFY8n5C-Q" name="LatencyVisualization">
              <ownedComment xmi:id="_3FxJ7ZV2Ee-EOddEwqrIsA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3VB1ItiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y60asItiEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y60asYtiEe-3nrFY8n5C-Q" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y60asotiEe-3nrFY8n5C-Q" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y60as4tiEe-3nrFY8n5C-Q" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y60atItiEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_ycOaMItiEe-3nrFY8n5C-Q" association="_y89vxItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y60atotiEe-3nrFY8n5C-Q" name="la" visibility="private" type="_yZYhkItiEe-3nrFY8n5C-Q" association="_y8-W0YtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yrEItiEe-3nrFY8n5C-Q" name="LatencyVisualization" specification="_y3UawItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yrEYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7yrEotiEe-3nrFY8n5C-Q" type="_yZeBIItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y3UawItiEe-3nrFY8n5C-Q" name="LatencyVisualization" visibility="package" method="_y7yrEItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3VB0YtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3VB0otiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3VB0ItiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3VB04tiEe-3nrFY8n5C-Q" type="_yZeBIItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZgdYItiEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_y5b6oItiEe-3nrFY8n5C-Q" client="_yZgdYItiEe-3nrFY8n5C-Q" supplier="_y20rgItiEe-3nrFY8n5C-Q" contract="_y20rgItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yrE4tiEe-3nrFY8n5C-Q" name="compare" specification="_y5dIwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yrFItiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7yrFYtiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7yrFotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y5dIwItiEe-3nrFY8n5C-Q" name="compare" method="_y7yrE4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5dIwYtiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5dIwotiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5dIw4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZi5oItiEe-3nrFY8n5C-Q" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_y5dv0ItiEe-3nrFY8n5C-Q" client="_yZi5oItiEe-3nrFY8n5C-Q" supplier="_y20rgItiEe-3nrFY8n5C-Q" contract="_y20rgItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yrF4tiEe-3nrFY8n5C-Q" name="compare" specification="_y5eW4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yrGItiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7yrGYtiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7yrGotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y5eW4ItiEe-3nrFY8n5C-Q" name="compare" method="_y7yrF4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5eW4YtiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5eW4otiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5eW44tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZku0ItiEe-3nrFY8n5C-Q" name="Node">
              <generalization xmi:id="_y3XeEItiEe-3nrFY8n5C-Q" general="_ydT_UItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y61BwYtiEe-3nrFY8n5C-Q" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y61BwotiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y61Bw4tiEe-3nrFY8n5C-Q" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y61o0ItiEe-3nrFY8n5C-Q" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y61o0YtiEe-3nrFY8n5C-Q" name="edges" type="_y2f7YItiEe-3nrFY8n5C-Q" isReadOnly="true" association="_y8-W1ItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y61o04tiEe-3nrFY8n5C-Q" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y61o1ItiEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_y5e98otiEe-3nrFY8n5C-Q" client="_yZku0ItiEe-3nrFY8n5C-Q" supplier="_y5C5EYtiEe-3nrFY8n5C-Q" contract="_y5C5EYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7yrG4tiEe-3nrFY8n5C-Q" name="Node" specification="_yZl88ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7yrHItiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yrHYtiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yrHotiEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7yrH4tiEe-3nrFY8n5C-Q" type="_yZku0ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7zSIItiEe-3nrFY8n5C-Q" name="compareTo" specification="_y3WP8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7zSIYtiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7zSIotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7zSI4tiEe-3nrFY8n5C-Q" name="toString" specification="_yZmkAotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7zSJItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7zSJYtiEe-3nrFY8n5C-Q" name="addEdge" specification="_y3W3A4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7zSJotiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7zSJ4tiEe-3nrFY8n5C-Q" name="addConflict" specification="_yZnyIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7zSKItiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7zSKYtiEe-3nrFY8n5C-Q" name="numEdges" specification="_yZnyIotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7zSKotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7zSK4tiEe-3nrFY8n5C-Q" name="print" specification="_yZoZMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7zSLItiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7zSLYtiEe-3nrFY8n5C-Q" name="print" specification="_yZpnUItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZl88ItiEe-3nrFY8n5C-Q" name="Node" visibility="package" method="_y7yrG4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yZl89ItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yZmkAItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yZl88YtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZl88otiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZl884tiEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZmkAYtiEe-3nrFY8n5C-Q" type="_yZku0ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZmkAotiEe-3nrFY8n5C-Q" name="toString" method="_y7zSI4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZnLEItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZnyIItiEe-3nrFY8n5C-Q" name="addConflict" method="_y7zSJ4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZnyIYtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZnyIotiEe-3nrFY8n5C-Q" name="numEdges" method="_y7zSKYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZnyI4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZoZMItiEe-3nrFY8n5C-Q" name="print" method="_y7zSK4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZoZMYtiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZpnUItiEe-3nrFY8n5C-Q" name="print" method="_y7zSLYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_y3WP8ItiEe-3nrFY8n5C-Q" name="compareTo" method="_y7zSIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3WP8YtiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3WP8otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3W3A4tiEe-3nrFY8n5C-Q" name="addEdge" method="_y7zSJYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3W3BItiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZtRsItiEe-3nrFY8n5C-Q" name="NodeMap">
              <ownedComment xmi:id="_3FxJ7pV2Ee-EOddEwqrIsA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3YFIItiEe-3nrFY8n5C-Q" general="_yWciUItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y62P4ItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y62P4YtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZt4wItiEe-3nrFY8n5C-Q" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_3FxJ75V2Ee-EOddEwqrIsA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3ZTQItiEe-3nrFY8n5C-Q" general="_ybQJ0ItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7z5MItiEe-3nrFY8n5C-Q" name="NonPreemptiveSchedule" specification="_y3YsMYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7z5MYtiEe-3nrFY8n5C-Q" name="poset" type="_yZ10kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7z5MotiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7z5M4tiEe-3nrFY8n5C-Q" type="_yZt4wItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y3YsMYtiEe-3nrFY8n5C-Q" name="NonPreemptiveSchedule" visibility="package" method="_y7z5MItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3YsNItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3YsNYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3YsMotiEe-3nrFY8n5C-Q" name="poset" type="_yZ10kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3YsM4tiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3YsNotiEe-3nrFY8n5C-Q" type="_yZt4wItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZvt8ItiEe-3nrFY8n5C-Q" name="NotImplentedVisualization">
              <generalization xmi:id="_y3ZTQotiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y62P4otiEe-3nrFY8n5C-Q" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y62P44tiEe-3nrFY8n5C-Q" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y62P5ItiEe-3nrFY8n5C-Q" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6228ItiEe-3nrFY8n5C-Q" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6228YtiEe-3nrFY8n5C-Q" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6228otiEe-3nrFY8n5C-Q" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7z5NItiEe-3nrFY8n5C-Q" name="NotImplentedVisualization" specification="_yZwVAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7z5NYtiEe-3nrFY8n5C-Q" type="_yZvt8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7z5NotiEe-3nrFY8n5C-Q" name="NotImplentedVisualization" specification="_yZw8E4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7z5N4tiEe-3nrFY8n5C-Q" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7z5OItiEe-3nrFY8n5C-Q" type="_yZvt8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7z5OYtiEe-3nrFY8n5C-Q" name="visualization" specification="_yZxjI4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7z5OotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZwVAItiEe-3nrFY8n5C-Q" name="NotImplentedVisualization" visibility="package" method="_y7z5NItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yZw8EItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yZw8EYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yZw8EotiEe-3nrFY8n5C-Q" type="_yZvt8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZw8E4tiEe-3nrFY8n5C-Q" name="NotImplentedVisualization" visibility="package" method="_y7z5NotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yZxjIItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yZxjIYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yZw8FItiEe-3nrFY8n5C-Q" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yZxjIotiEe-3nrFY8n5C-Q" type="_yZvt8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZxjI4tiEe-3nrFY8n5C-Q" name="visualization" method="_y7z5OYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3ZTQYtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZzYUItiEe-3nrFY8n5C-Q" name="PeriodComparator">
              <interfaceRealization xmi:id="_y5gzIItiEe-3nrFY8n5C-Q" client="_yZzYUItiEe-3nrFY8n5C-Q" supplier="_y20rgItiEe-3nrFY8n5C-Q" contract="_y20rgItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7z5O4tiEe-3nrFY8n5C-Q" name="compare" specification="_y5haMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7z5PItiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7z5PYtiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7z5PotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y5haMItiEe-3nrFY8n5C-Q" name="compare" method="_y7z5O4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5haMYtiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5haMotiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5haM4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yZ10kItiEe-3nrFY8n5C-Q" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_3FxJ8JV2Ee-EOddEwqrIsA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y62284tiEe-3nrFY8n5C-Q" name="activations" visibility="private" type="_yXK7EItiEe-3nrFY8n5C-Q" association="_y8-94ItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6229YtiEe-3nrFY8n5C-Q" name="workload" visibility="private" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y8-944tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y63eAYtiEe-3nrFY8n5C-Q" name="flows" visibility="protected" type="_yYmecItiEe-3nrFY8n5C-Q" association="_y8-95otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y63eA4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y63eBItiEe-3nrFY8n5C-Q" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y63eAotiEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y64FEItiEe-3nrFY8n5C-Q" name="nodes" visibility="private" type="_yZku0ItiEe-3nrFY8n5C-Q" association="_y8_k8YtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y64FEotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y64FE4tiEe-3nrFY8n5C-Q" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y64FEYtiEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y64FFYtiEe-3nrFY8n5C-Q" name="nodeMap" visibility="private" type="_yZtRsItiEe-3nrFY8n5C-Q" association="_y8_k9ItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y64FF4tiEe-3nrFY8n5C-Q" name="priorityQueue" visibility="private" type="_ya49c4tiEe-3nrFY8n5C-Q" association="_y9AMAYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y64sIotiEe-3nrFY8n5C-Q" name="nodeConnectivityMap" visibility="protected" type="_y2eGMItiEe-3nrFY8n5C-Q" association="_y9AMBItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y65TMotiEe-3nrFY8n5C-Q" name="activationMap" visibility="package" type="_yY6AcItiEe-3nrFY8n5C-Q" association="_y9AMB4tiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y70gQItiEe-3nrFY8n5C-Q" name="Poset" specification="_y3bIcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y70gQYtiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y70gQotiEe-3nrFY8n5C-Q" type="_yZ10kItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y70gQ4tiEe-3nrFY8n5C-Q" name="getNodeConnectivity" specification="_yZ3CsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y70gRItiEe-3nrFY8n5C-Q" type="_y2eGMItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y70gRYtiEe-3nrFY8n5C-Q" name="getNodeNames" specification="_yZ4Q0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y70gRotiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y70gR4tiEe-3nrFY8n5C-Q" name="getNodesNamesOrderedAlphabetically" specification="_yZ434YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y70gSItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y70gSYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y70gSotiEe-3nrFY8n5C-Q" name="buildPosetOfActivations" specification="_yZ5e8otiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y70gS4tiEe-3nrFY8n5C-Q" name="createEdgeLists" specification="_yZ6GAItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HUItiEe-3nrFY8n5C-Q" name="createConflictLists" specification="_yZ6GAYtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HUYtiEe-3nrFY8n5C-Q" name="createGlobalConflictLists" specification="_yZ6GAotiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HUotiEe-3nrFY8n5C-Q" name="createLocalConflictLists" specification="_yZ6GA4tiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HU4tiEe-3nrFY8n5C-Q" name="findCoordinator" specification="_y5ioUYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71HVItiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y71HVYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HVotiEe-3nrFY8n5C-Q" name="buildTxArray" specification="_y5jPYYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71HV4tiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y71HWItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y71HWYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HWotiEe-3nrFY8n5C-Q" name="createInitialActivations" specification="_yZ6tEItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HW4tiEe-3nrFY8n5C-Q" name="getMaxTx" specification="_y3bvgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71HXItiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y71HXYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HXotiEe-3nrFY8n5C-Q" name="getActivation" specification="_y3bvg4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71HX4tiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y71HYItiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y71HYYtiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HYotiEe-3nrFY8n5C-Q" name="getHyperPeriod" specification="_yZ77MItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71HY4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HZItiEe-3nrFY8n5C-Q" name="getMaxPhase" specification="_yZ8iQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71HZYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71HZotiEe-3nrFY8n5C-Q" name="orderActivations" specification="_yZ8iQotiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71uYItiEe-3nrFY8n5C-Q" name="getNextActivation" specification="_yZ9JUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71uYYtiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71uYotiEe-3nrFY8n5C-Q" name="addActivation" specification="_y3cWkYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71uY4tiEe-3nrFY8n5C-Q" name="activation" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71uZItiEe-3nrFY8n5C-Q" name="findBaseStation" specification="_yZ9wYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71uZYtiEe-3nrFY8n5C-Q" type="_yZku0ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yZ3CsItiEe-3nrFY8n5C-Q" name="getNodeConnectivity" visibility="private" method="_y70gQ4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5iBQYtiEe-3nrFY8n5C-Q" type="_y2eGMItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZ4Q0ItiEe-3nrFY8n5C-Q" name="getNodeNames" method="_y70gRYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5ioUItiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZ434YtiEe-3nrFY8n5C-Q" name="getNodesNamesOrderedAlphabetically" method="_y70gR4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZ434otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yZ5e8ItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZ5e8otiEe-3nrFY8n5C-Q" name="buildPosetOfActivations" method="_y70gSotiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yZ6GAItiEe-3nrFY8n5C-Q" name="createEdgeLists" visibility="private" method="_y70gS4tiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yZ6GAYtiEe-3nrFY8n5C-Q" name="createConflictLists" visibility="private" method="_y71HUItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yZ6GAotiEe-3nrFY8n5C-Q" name="createGlobalConflictLists" visibility="private" method="_y71HUYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yZ6GA4tiEe-3nrFY8n5C-Q" name="createLocalConflictLists" visibility="private" method="_y71HUotiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yZ6tEItiEe-3nrFY8n5C-Q" name="createInitialActivations" visibility="private" method="_y71HWotiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yZ77MItiEe-3nrFY8n5C-Q" name="getHyperPeriod" method="_y71HYotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZ77MYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZ8iQItiEe-3nrFY8n5C-Q" name="getMaxPhase" method="_y71HZItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yZ8iQYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yZ8iQotiEe-3nrFY8n5C-Q" name="orderActivations" method="_y71HZotiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yZ9JUItiEe-3nrFY8n5C-Q" name="getNextActivation" method="_y71uYItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ85V2Ee-EOddEwqrIsA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_y3cWkItiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yZ9wYItiEe-3nrFY8n5C-Q" name="findBaseStation" visibility="protected" method="_y71uZItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ9ZV2Ee-EOddEwqrIsA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_y3cWk4tiEe-3nrFY8n5C-Q" type="_yZku0ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3bIcItiEe-3nrFY8n5C-Q" name="Poset" visibility="package" method="_y70gQItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3bIcotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3bIc4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3FxJ8ZV2Ee-EOddEwqrIsA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_y3bIcYtiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3bIdItiEe-3nrFY8n5C-Q" type="_yZ10kItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3bvgItiEe-3nrFY8n5C-Q" name="getMaxTx" visibility="private" method="_y71HW4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3bvgYtiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3bvgotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3bvg4tiEe-3nrFY8n5C-Q" name="getActivation" visibility="private" method="_y71HXotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3bvhItiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3bvhYtiEe-3nrFY8n5C-Q" name="node" type="_yZku0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3bvhotiEe-3nrFY8n5C-Q" type="_yWlsQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3cWkYtiEe-3nrFY8n5C-Q" name="addActivation" method="_y71uYotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ9JV2Ee-EOddEwqrIsA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_y3cWkotiEe-3nrFY8n5C-Q" name="activation" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5ioUYtiEe-3nrFY8n5C-Q" name="findCoordinator" visibility="protected" method="_y71HU4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FxJ8pV2Ee-EOddEwqrIsA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5ioUotiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5ioU4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y5jPYYtiEe-3nrFY8n5C-Q" name="buildTxArray" visibility="private" method="_y71HVotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5jPYotiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5jPY4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y5jPZItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yaDP8ItiEe-3nrFY8n5C-Q" name="PreemptiveSchedule">
              <ownedComment xmi:id="_3FxJ9pV2Ee-EOddEwqrIsA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3jEQYtiEe-3nrFY8n5C-Q" general="_ybQJ0ItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71uZotiEe-3nrFY8n5C-Q" name="PreemptiveSchedule" specification="_y3eLwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71uZ4tiEe-3nrFY8n5C-Q" name="poset" type="_yZ10kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y71uaItiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y71uaYtiEe-3nrFY8n5C-Q" type="_yaDP8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y71uaotiEe-3nrFY8n5C-Q" name="continueSearch" specification="_y3eLxotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y71ua4tiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y71ubItiEe-3nrFY8n5C-Q" name="activation" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y71ubYtiEe-3nrFY8n5C-Q" type="_y5lEkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y72VcItiEe-3nrFY8n5C-Q" name="toProgram" specification="_yaD3AItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y72VcYtiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y72VcotiEe-3nrFY8n5C-Q" name="findPreeptiveChannelAndTime" specification="_y3ey1ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y72Vc4tiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72VdItiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y72VdYtiEe-3nrFY8n5C-Q" type="_y5lEkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y72VdotiEe-3nrFY8n5C-Q" name="findAdditionalTime" specification="_y3fZ4YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y72Vd4tiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72VeItiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72VeYtiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y72VeotiEe-3nrFY8n5C-Q" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72Ve4tiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y72VfItiEe-3nrFY8n5C-Q" name="findMaxTimeAvailable" specification="_y3gA8YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y72VfYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72VfotiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y72Vf4tiEe-3nrFY8n5C-Q" type="_y5lEkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y72VgItiEe-3nrFY8n5C-Q" name="availableTime" specification="_y3goAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y72VgYtiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y72VgotiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72Vg4tiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72VhItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y72VhYtiEe-3nrFY8n5C-Q" name="addToSchedule" specification="_y3goBYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y72VhotiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y72Vh4tiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72ViItiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72ViYtiEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y72ViotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y72Vi4tiEe-3nrFY8n5C-Q" name="addToSchedule" specification="_y3hPEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y72VjItiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y72VjYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yaD3AItiEe-3nrFY8n5C-Q" name="toProgram" method="_y72VcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3ey04tiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3eLwItiEe-3nrFY8n5C-Q" name="PreemptiveSchedule" visibility="package" method="_y71uZotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3eLw4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3eLxItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3eLwYtiEe-3nrFY8n5C-Q" name="poset" type="_yZ10kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3eLwotiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3eLxYtiEe-3nrFY8n5C-Q" type="_yaDP8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3eLxotiEe-3nrFY8n5C-Q" name="continueSearch" visibility="protected" method="_y71uaotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3eLx4tiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3eLyItiEe-3nrFY8n5C-Q" name="activation" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5lroItiEe-3nrFY8n5C-Q" type="_y5lEkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3ey1ItiEe-3nrFY8n5C-Q" name="findPreeptiveChannelAndTime" visibility="private" method="_y72VcotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3ey1YtiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3fZ4ItiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5lroYtiEe-3nrFY8n5C-Q" type="_y5lEkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3fZ4YtiEe-3nrFY8n5C-Q" name="findAdditionalTime" visibility="private" method="_y72VdotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3fZ4otiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3fZ44tiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3fZ5ItiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3fZ5YtiEe-3nrFY8n5C-Q" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5lrootiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3gA8YtiEe-3nrFY8n5C-Q" name="findMaxTimeAvailable" visibility="private" method="_y72VfItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3gA8otiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3gA84tiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5lro4tiEe-3nrFY8n5C-Q" type="_y5lEkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3goAItiEe-3nrFY8n5C-Q" name="availableTime" visibility="private" method="_y72VgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3goAYtiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3goAotiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3goA4tiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3goBItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3goBYtiEe-3nrFY8n5C-Q" name="addToSchedule" visibility="private" method="_y72VhYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3goBotiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3goB4tiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3goCItiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3goCYtiEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3goCotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3hPEItiEe-3nrFY8n5C-Q" name="addToSchedule" visibility="protected" method="_y72Vi4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3h2IItiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3h2IYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yaLLwItiEe-3nrFY8n5C-Q" name="PriorityComparator">
              <interfaceRealization xmi:id="_y5mSsItiEe-3nrFY8n5C-Q" client="_yaLLwItiEe-3nrFY8n5C-Q" supplier="_y20rgItiEe-3nrFY8n5C-Q" contract="_y20rgItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y728gItiEe-3nrFY8n5C-Q" name="compare" specification="_y5m5wItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y728gYtiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y728gotiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y728g4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y5m5wItiEe-3nrFY8n5C-Q" name="compare" method="_y728gItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5m5wYtiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5m5wotiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5m5w4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yaNA8ItiEe-3nrFY8n5C-Q" name="Program">
              <ownedComment xmi:id="_3Fy_GZV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y656QYtiEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y66hUItiEe-3nrFY8n5C-Q" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y66hUYtiEe-3nrFY8n5C-Q" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y66hUotiEe-3nrFY8n5C-Q" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y66hU4tiEe-3nrFY8n5C-Q" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y66hVItiEe-3nrFY8n5C-Q" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y66hVYtiEe-3nrFY8n5C-Q" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y66hVotiEe-3nrFY8n5C-Q" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y66hV4tiEe-3nrFY8n5C-Q" name="workLoad" visibility="package" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y9AzEYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y67IYItiEe-3nrFY8n5C-Q" name="scheduleBuilt" visibility="package" type="_yaqT8ItiEe-3nrFY8n5C-Q" association="_y9AzFItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y67IYotiEe-3nrFY8n5C-Q" name="SchedulerSelected" visibility="package" type="_y5ng0ItiEe-3nrFY8n5C-Q" association="_y9BaIYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y67vcYtiEe-3nrFY8n5C-Q" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y67vc4tiEe-3nrFY8n5C-Q" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y67vdYtiEe-3nrFY8n5C-Q" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y68WgItiEe-3nrFY8n5C-Q" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y68WgotiEe-3nrFY8n5C-Q" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y68WhItiEe-3nrFY8n5C-Q" name="channelsAvailable" visibility="package" type="_yXV6MItiEe-3nrFY8n5C-Q" association="_y9BaJItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y689kYtiEe-3nrFY8n5C-Q" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y689k4tiEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y689lYtiEe-3nrFY8n5C-Q" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y69koItiEe-3nrFY8n5C-Q" name="deadlineMisses" visibility="private" type="_yYKZkItiEe-3nrFY8n5C-Q" association="_y9BaJ4tiEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_y3k5cotiEe-3nrFY8n5C-Q" client="_yaNA8ItiEe-3nrFY8n5C-Q" supplier="_yblhAItiEe-3nrFY8n5C-Q" contract="_yblhAItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y728hItiEe-3nrFY8n5C-Q" name="Program" specification="_y5oH4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y728hYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y728hotiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y728h4tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y728iItiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y728iYtiEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y728iotiEe-3nrFY8n5C-Q" type="_yaNA8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y728i4tiEe-3nrFY8n5C-Q" name="Program" specification="_y5ou8YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y728jItiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y728jYtiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y728jotiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y728j4tiEe-3nrFY8n5C-Q" type="_yaNA8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y728kItiEe-3nrFY8n5C-Q" name="setDefaultParameters" specification="_y3muoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y728kYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y728kotiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y728k4tiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y728lItiEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73jkItiEe-3nrFY8n5C-Q" name="toWorkLoad" specification="_yaQrUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y73jkYtiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73jkotiEe-3nrFY8n5C-Q" name="buildProgram" specification="_y5pWAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y73jk4tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73jlItiEe-3nrFY8n5C-Q" name="buildOriginalProgram" specification="_yaQrUYtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73jlYtiEe-3nrFY8n5C-Q" name="waitInstruction" specification="_yaRSYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y73jlotiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jl4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73jmItiEe-3nrFY8n5C-Q" name="elseWaitInstruction" specification="_yaR5cItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y73jmYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jmotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73jm4tiEe-3nrFY8n5C-Q" name="elsePullClause" specification="_yaSggItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y73jnItiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jnYtiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jnotiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jn4tiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73joItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73joYtiEe-3nrFY8n5C-Q" name="hasPushInstruction" specification="_yaTHkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y73jootiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jo4tiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jpItiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jpYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jpotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y73jp4tiEe-3nrFY8n5C-Q" name="pushInstruction" specification="_yaTuoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y73jqItiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jqYtiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jqotiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jq4tiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y73jrItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74KoItiEe-3nrFY8n5C-Q" name="getFirstChannelInInstruction" specification="_yaUVsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74KoYtiEe-3nrFY8n5C-Q" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KootiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74Ko4tiEe-3nrFY8n5C-Q" name="findNextAvailableInstructionTimeSlot" specification="_y3nVsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74KpItiEe-3nrFY8n5C-Q" name="schedule" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y74KpYtiEe-3nrFY8n5C-Q" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KpotiEe-3nrFY8n5C-Q" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74Kp4tiEe-3nrFY8n5C-Q" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KqItiEe-3nrFY8n5C-Q" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KqYtiEe-3nrFY8n5C-Q" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y74KqotiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74Kq4tiEe-3nrFY8n5C-Q" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y74KrItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KrYtiEe-3nrFY8n5C-Q" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KrotiEe-3nrFY8n5C-Q" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74Kr4tiEe-3nrFY8n5C-Q" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KsItiEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KsYtiEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KsotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74Ks4tiEe-3nrFY8n5C-Q" name="slotIsAvailable" specification="_y3n8wYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74KtItiEe-3nrFY8n5C-Q" name="currentInstructionTimeSlot" type="_yZVeQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y74KtYtiEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KtotiEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74Kt4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74KuItiEe-3nrFY8n5C-Q" name="findNextAvailableChannel" specification="_y3oj0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74KuYtiEe-3nrFY8n5C-Q" name="schedule" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y74KuotiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74Ku4tiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KvItiEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KvYtiEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y74KvotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74Kv4tiEe-3nrFY8n5C-Q" name="selectPriority" specification="_yaVj0ItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74KwItiEe-3nrFY8n5C-Q" name="selectRM" specification="_yaWK4ItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74KwYtiEe-3nrFY8n5C-Q" name="selectDM" specification="_yaWK4YtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xsItiEe-3nrFY8n5C-Q" name="selectRtHART" specification="_yaWK4otiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xsYtiEe-3nrFY8n5C-Q" name="setScheduleSelected" specification="_y5pWAotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xsotiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xs4tiEe-3nrFY8n5C-Q" name="setSchedule" specification="_y3oj14tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xtItiEe-3nrFY8n5C-Q" name="schedule" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xtYtiEe-3nrFY8n5C-Q" name="getSchedule" specification="_yaWx8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xtotiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xt4tiEe-3nrFY8n5C-Q" name="getSchedulerName" specification="_yaWx8YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xuItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xuYtiEe-3nrFY8n5C-Q" name="getSchChoice" specification="_yaXZA4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xuotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xu4tiEe-3nrFY8n5C-Q" name="getNumChannels" specification="_yaYAEYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xvItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xvYtiEe-3nrFY8n5C-Q" name="getNumTransmissions" specification="_yaZOMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xvotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xv4tiEe-3nrFY8n5C-Q" name="getRealTimeHartFlag" specification="_yaacUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xwItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y74xwYtiEe-3nrFY8n5C-Q" name="setRealTimeHartFlag" specification="_yabDYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y74xwotiEe-3nrFY8n5C-Q" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75YwItiEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" specification="_yabDYotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75YwYtiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75YwotiEe-3nrFY8n5C-Q" name="getE2e" specification="_yacRgotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75Yw4tiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75YxItiEe-3nrFY8n5C-Q" name="getName" specification="_yadfoYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75YxYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75YxotiEe-3nrFY8n5C-Q" name="getOptimizationFlag" specification="_yaeGs4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75Yx4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75YyItiEe-3nrFY8n5C-Q" name="deadlineMisses" specification="_yafU0YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75YyYtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75YyotiEe-3nrFY8n5C-Q" name="getNumFaults" specification="_yafU0otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75Yy4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75YzItiEe-3nrFY8n5C-Q" name="getNodeMapIndex" specification="_yagi8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75YzYtiEe-3nrFY8n5C-Q" type="_y2eGMItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yaQrUItiEe-3nrFY8n5C-Q" name="toWorkLoad" method="_y73jkItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_GpV2Ee-EOddEwqrIsA">
                  <body>Returns the work load &#xD;
   * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_y3mupYtiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yaQrUYtiEe-3nrFY8n5C-Q" name="buildOriginalProgram" method="_y73jlItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yaRSYItiEe-3nrFY8n5C-Q" name="waitInstruction" visibility="private" method="_y73jlYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaRSYYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaRSYotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaR5cItiEe-3nrFY8n5C-Q" name="elseWaitInstruction" visibility="private" method="_y73jmItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaR5cYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaR5cotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaSggItiEe-3nrFY8n5C-Q" name="elsePullClause" visibility="private" method="_y73jm4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaSggYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaSggotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaSgg4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaSghItiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaSghYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaTHkItiEe-3nrFY8n5C-Q" name="hasPushInstruction" visibility="private" method="_y73joYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaTHkYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTHkotiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTHk4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTHlItiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTHlYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaTuoItiEe-3nrFY8n5C-Q" name="pushInstruction" visibility="private" method="_y73jp4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaTuoYtiEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTuootiEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTuo4tiEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTupItiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaTupYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaUVsItiEe-3nrFY8n5C-Q" name="getFirstChannelInInstruction" visibility="private" method="_y74KoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaUVsYtiEe-3nrFY8n5C-Q" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yaUVsotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaVj0ItiEe-3nrFY8n5C-Q" name="selectPriority" method="_y74Kv4tiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yaWK4ItiEe-3nrFY8n5C-Q" name="selectRM" method="_y74KwItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yaWK4YtiEe-3nrFY8n5C-Q" name="selectDM" method="_y74KwYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yaWK4otiEe-3nrFY8n5C-Q" name="selectRtHART" method="_y74xsItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yaWx8ItiEe-3nrFY8n5C-Q" name="getSchedule" method="_y74xtYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_G5V2Ee-EOddEwqrIsA">
                  <body>Returns the built schulde&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_y3oj2YtiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yaWx8YtiEe-3nrFY8n5C-Q" name="getSchedulerName" method="_y74xt4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaWx8otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaXZA4tiEe-3nrFY8n5C-Q" name="getSchChoice" method="_y74xuYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaYAEItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaYAEYtiEe-3nrFY8n5C-Q" name="getNumChannels" method="_y74xu4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaYAEotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaZOMItiEe-3nrFY8n5C-Q" name="getNumTransmissions" method="_y74xvYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaZOMYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaacUItiEe-3nrFY8n5C-Q" name="getRealTimeHartFlag" visibility="private" method="_y74xv4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaacUYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yabDYItiEe-3nrFY8n5C-Q" name="setRealTimeHartFlag" visibility="private" method="_y74xwYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yabDYYtiEe-3nrFY8n5C-Q" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yabDYotiEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" method="_y75YwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5p9EYtiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yacRgotiEe-3nrFY8n5C-Q" name="getE2e" method="_y75YwotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5p9EotiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yadfoYtiEe-3nrFY8n5C-Q" name="getName" method="_y75YxItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yadfootiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaeGs4tiEe-3nrFY8n5C-Q" name="getOptimizationFlag" method="_y75YxotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaetwItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yafU0YtiEe-3nrFY8n5C-Q" name="deadlineMisses" method="_y75YyItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3pK4ItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yafU0otiEe-3nrFY8n5C-Q" name="getNumFaults" method="_y75YyotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaf74ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yagi8ItiEe-3nrFY8n5C-Q" name="getNodeMapIndex" method="_y75YzItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_HJV2Ee-EOddEwqrIsA">
                  <body>Retrieves a mapping of node names to their respective indices in the schedule table.&#xD;
   * @return nodeIndexMap</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5p9E4tiEe-3nrFY8n5C-Q" type="_y2eGMItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3muoItiEe-3nrFY8n5C-Q" name="setDefaultParameters" visibility="private" method="_y728kItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3muoYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3muootiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3muo4tiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3mupItiEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3nVsItiEe-3nrFY8n5C-Q" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_y74Ko4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3nVsYtiEe-3nrFY8n5C-Q" name="schedule" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3nVsotiEe-3nrFY8n5C-Q" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVs4tiEe-3nrFY8n5C-Q" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVtItiEe-3nrFY8n5C-Q" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVtYtiEe-3nrFY8n5C-Q" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVtotiEe-3nrFY8n5C-Q" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3nVvotiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVt4tiEe-3nrFY8n5C-Q" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y3n8wItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVuItiEe-3nrFY8n5C-Q" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVuYtiEe-3nrFY8n5C-Q" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVuotiEe-3nrFY8n5C-Q" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVu4tiEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVvItiEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3nVvYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3n8wYtiEe-3nrFY8n5C-Q" name="slotIsAvailable" visibility="private" method="_y74Ks4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3n8wotiEe-3nrFY8n5C-Q" name="currentInstructionTimeSlot" type="_yZVeQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3n8w4tiEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3n8xItiEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3n8xYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3oj0ItiEe-3nrFY8n5C-Q" name="findNextAvailableChannel" visibility="private" method="_y74KuItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3oj0YtiEe-3nrFY8n5C-Q" name="schedule" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3oj0otiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3oj04tiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3oj1ItiEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3oj1YtiEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3oj1otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3oj14tiEe-3nrFY8n5C-Q" name="setSchedule" visibility="private" method="_y74xs4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3oj2ItiEe-3nrFY8n5C-Q" name="schedule" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5oH4ItiEe-3nrFY8n5C-Q" name="Program" visibility="package" method="_y728hItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5oH5otiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5oH54tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5oH4YtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5oH4otiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5oH44tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5oH5ItiEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5oH5YtiEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5ou8ItiEe-3nrFY8n5C-Q" type="_yaNA8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5ou8YtiEe-3nrFY8n5C-Q" name="Program" visibility="package" method="_y728i4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5ou9YtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5ou9otiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5ou8otiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5ou84tiEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5ou9ItiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5ou94tiEe-3nrFY8n5C-Q" type="_yaNA8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5pWAItiEe-3nrFY8n5C-Q" name="buildProgram" method="_y73jkotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5pWAYtiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5pWAotiEe-3nrFY8n5C-Q" name="setScheduleSelected" visibility="private" method="_y74xsYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5pWA4tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yaqT8ItiEe-3nrFY8n5C-Q" name="ProgramSchedule">
              <generalization xmi:id="_y3s1QItiEe-3nrFY8n5C-Q" general="_ybrAkItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6-LsItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6-LsYtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75_0ItiEe-3nrFY8n5C-Q" name="ProgramSchedule" specification="_yariEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75_0YtiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75_0otiEe-3nrFY8n5C-Q" name="ProgramSchedule" specification="_yariFItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75_04tiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y75_1ItiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y75_1YtiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yariEItiEe-3nrFY8n5C-Q" name="ProgramSchedule" method="_y75_0ItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yariEYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yariEotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yariE4tiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yariFItiEe-3nrFY8n5C-Q" name="ProgramSchedule" visibility="package" method="_y75_0otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_yasJIYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_yasJIotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_yariFYtiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yasJIItiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yasJI4tiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yaswMItiEe-3nrFY8n5C-Q" name="ProgramVisualization">
              <ownedComment xmi:id="_3FxJ-JV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
@version 1.5&#xD;
ProgramVisualiztion builds graph based on data; checks if flows have passed their deadlines&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3uqdItiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6-LsotiEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6-ywItiEe-3nrFY8n5C-Q" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y6-ywYtiEe-3nrFY8n5C-Q" name="sourceCode" visibility="private" type="_yaqT8ItiEe-3nrFY8n5C-Q" association="_y9CBMYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6-yw4tiEe-3nrFY8n5C-Q" name="program" visibility="private" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y9CBNItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6-yxYtiEe-3nrFY8n5C-Q" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75_1otiEe-3nrFY8n5C-Q" name="ProgramVisualization" specification="_y3uDYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75_14tiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y75_2ItiEe-3nrFY8n5C-Q" type="_yaswMItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75_2YtiEe-3nrFY8n5C-Q" name="displayVisualization" specification="_yatXQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75_2otiEe-3nrFY8n5C-Q" type="_yZIp8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75_24tiEe-3nrFY8n5C-Q" name="createHeader" specification="_yaulYotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75_3ItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75_3YtiEe-3nrFY8n5C-Q" name="createFooter" specification="_yavzgYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75_3otiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y75_34tiEe-3nrFY8n5C-Q" name="createColumnHeader" specification="_yawakotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y75_4ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y75_4YtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y76m4ItiEe-3nrFY8n5C-Q" name="createVisualizationData" specification="_yaxos4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y76m4YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y76m4otiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y76m44tiEe-3nrFY8n5C-Q" name="createTitle" specification="_yay20otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y76m5ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yatXQItiEe-3nrFY8n5C-Q" name="displayVisualization" method="_y75_2YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3uqcYtiEe-3nrFY8n5C-Q" type="_yZIp8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yaulYotiEe-3nrFY8n5C-Q" name="createHeader" visibility="protected" method="_y75_24tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3uqcotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yavzgYtiEe-3nrFY8n5C-Q" name="createFooter" visibility="protected" method="_y75_3YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3uqc4tiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yawakotiEe-3nrFY8n5C-Q" name="createColumnHeader" visibility="protected" method="_y75_34tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yaxBoItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yaxBoYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yaxos4tiEe-3nrFY8n5C-Q" name="createVisualizationData" visibility="protected" method="_y76m4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yayPwItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yayPwYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yay20otiEe-3nrFY8n5C-Q" name="createTitle" visibility="private" method="_y76m44tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw4JV2Ee-EOddEwqrIsA">
                  <body>Returns title&#xD;
   * @return returns the title of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_yay204tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y3uDYItiEe-3nrFY8n5C-Q" name="ProgramVisualization" visibility="package" method="_y75_1otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3uDYotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3uDY4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3uDYYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3uqcItiEe-3nrFY8n5C-Q" type="_yaswMItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ya0sAItiEe-3nrFY8n5C-Q" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_y5ryQItiEe-3nrFY8n5C-Q" client="_ya0sAItiEe-3nrFY8n5C-Q" supplier="_y20rgItiEe-3nrFY8n5C-Q" contract="_y20rgItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y76m5YtiEe-3nrFY8n5C-Q" name="compare" specification="_y5sZUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y76m5otiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y76m54tiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y76m6ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y5sZUItiEe-3nrFY8n5C-Q" name="compare" method="_y76m5YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5sZUYtiEe-3nrFY8n5C-Q" name="obj1" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5sZUotiEe-3nrFY8n5C-Q" name="obj2" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5sZU4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ya3IQItiEe-3nrFY8n5C-Q" name="ReleaseTimeQueue">
              <generalization xmi:id="_ya6LkYtiEe-3nrFY8n5C-Q" general="_ya49c4tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6_Z0YtiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6_Z0otiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y76m6YtiEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" specification="_ya4WYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y76m6otiEe-3nrFY8n5C-Q" type="_ya3IQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y76m64tiEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" specification="_y3v4kItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y76m7ItiEe-3nrFY8n5C-Q" name="schedulableObjects" type="_y3Z6UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y76m7YtiEe-3nrFY8n5C-Q" type="_ya3IQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ya4WYItiEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" visibility="package" method="_y76m6YtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ya49cItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ya49cYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ya49cotiEe-3nrFY8n5C-Q" type="_ya3IQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3v4kItiEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" visibility="package" method="_y76m64tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3v4kotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3v4k4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3v4kYtiEe-3nrFY8n5C-Q" name="schedulableObjects" type="_y3Z6UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3v4lItiEe-3nrFY8n5C-Q" type="_ya3IQItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ya7ZsItiEe-3nrFY8n5C-Q" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_TXuugJXCEe-EOddEwqrIsA">
                <body>Class representing the reliability analysis of a network system.</body>
              </ownedComment>
              <ownedAttribute xmi:id="_BfYpAJV3Ee-EOddEwqrIsA" name="e2e" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_BfYpApV3Ee-EOddEwqrIsA" name="minPacketReceptionRate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_BfYpBJV3Ee-EOddEwqrIsA" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BfYpBpV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" specification="_BfXa4JV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BfYpB5V3Ee-EOddEwqrIsA" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfYpCJV3Ee-EOddEwqrIsA" name="minPacketReceptionRate" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfYpCZV3Ee-EOddEwqrIsA" type="_ya7ZsItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.e2e = (e2e != null) ? e2e : 0.99;&#xD;
 this.minPacketReceptionRate = (minPacketReceptionRate != null) ? minPacketReceptionRate : 0.9;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BfZQEJV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" specification="_BfYB8JV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BfZQEZV3Ee-EOddEwqrIsA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BfZQEpV3Ee-EOddEwqrIsA" type="_ya7ZsItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numFaults = (numFaults != null) ? numFaults : 0;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BfZQE5V3Ee-EOddEwqrIsA" name="numTxPerLinkAndTotalTxCost" specification="_BfXa5pV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BfZQFJV3Ee-EOddEwqrIsA" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfZQFZV3Ee-EOddEwqrIsA" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;Integer> txResults = new ArrayList&lt;>();&#xD;
&#xD;
 if (numFaults > 0) {&#xD;
   txResults = getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
 } else {&#xD;
   txResults = numTxAttemptsPerLinkAndTotalTxAttempts(flow, e2e, minPacketReceptionRate, false);&#xD;
 }&#xD;
&#xD;
 return txResults;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BfZQFpV3Ee-EOddEwqrIsA" name="getFixedTxPerLinkAndTotalTxCost" specification="_BfXa6pV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BfZQF5V3Ee-EOddEwqrIsA" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfZQGJV3Ee-EOddEwqrIsA" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>int nNodesInFlow = flow.getNodes().size();&#xD;
 int numEdgesInFlow = nNodesInFlow - 1;&#xD;
 int maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
&#xD;
 ArrayList&lt;Integer> txPerLink = new ArrayList&lt;>();&#xD;
&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   txPerLink.add(numFaults + 1);&#xD;
 }&#xD;
&#xD;
 txPerLink.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
 return txPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BfZQGZV3Ee-EOddEwqrIsA" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_BfYB9ZV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BfZQGpV3Ee-EOddEwqrIsA" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfZQG5V3Ee-EOddEwqrIsA" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfZQHJV3Ee-EOddEwqrIsA" name="M" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfZQHZV3Ee-EOddEwqrIsA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BfZQHpV3Ee-EOddEwqrIsA" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>int nNodesInFlow = flow.getNodes().size();&#xD;
 int nHops = nNodesInFlow - 1;&#xD;
&#xD;
 ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;>();&#xD;
 for (int i = 0; i &lt;= nNodesInFlow; i++) {&#xD;
   nPushesArrayList.add(0);&#xD;
 }&#xD;
&#xD;
 double minLinkReliabilityNeeded = Math.max(e2e, Math.pow(e2e, 1.0 / nHops));&#xD;
 ArrayList&lt;Double> currentReliabilityRow = new ArrayList&lt;>(nNodesInFlow);&#xD;
&#xD;
 for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
   currentReliabilityRow.add(0.0);&#xD;
 }&#xD;
&#xD;
 currentReliabilityRow.set(0, 1.0);&#xD;
&#xD;
 int timeSlot = 0;&#xD;
 double e2eReliabilityState = 0.0;&#xD;
&#xD;
 while (e2eReliabilityState &lt; e2e) {&#xD;
   ArrayList&lt;Double> prevReliabilityRow = new ArrayList&lt;>(currentReliabilityRow);&#xD;
&#xD;
   for (int nodeIndex = 0; nodeIndex &lt; nHops; nodeIndex++) {&#xD;
     double prevSrcNodeState = prevReliabilityRow.get(nodeIndex);&#xD;
     double prevSnkNodeState = prevReliabilityRow.get(nodeIndex + 1);&#xD;
     double nextSnkState;&#xD;
&#xD;
     if (prevSnkNodeState &lt; minLinkReliabilityNeeded &amp;&amp; prevSrcNodeState > 0) {&#xD;
       nextSnkState = (1 - M) * prevSnkNodeState + M * prevSrcNodeState;&#xD;
       nPushesArrayList.set(nodeIndex, nPushesArrayList.get(nodeIndex) + 1);&#xD;
     } else {&#xD;
       nextSnkState = prevSnkNodeState;&#xD;
     }&#xD;
&#xD;
     currentReliabilityRow.set(nodeIndex + 1, nextSnkState);&#xD;
   }&#xD;
&#xD;
   e2eReliabilityState = currentReliabilityRow.get(nHops);&#xD;
   timeSlot++;&#xD;
 }&#xD;
&#xD;
 nPushesArrayList.set(nNodesInFlow, timeSlot);&#xD;
 return nPushesArrayList;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHRIJpW-Ee-EOddEwqrIsA" name="verifyReliabilities" specification="_JHQhF5W-Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_JHRIJ5W-Ee-EOddEwqrIsA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
 return true;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_BfXa4JV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" method="_BfYpBpV3Ee-EOddEwqrIsA">
                <eAnnotations xmi:id="_BfXa5JV3Ee-EOddEwqrIsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_BfXa5ZV3Ee-EOddEwqrIsA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_TXuugZXCEe-EOddEwqrIsA">
                  <body>Constructor to initialize ReliabilityAnalysis with e2e and minPacketReceptionRate.&#xD;
   *&#xD;
   * @param e2e The end-to-end reliability requirement. Defaults to 0.99 if null.&#xD;
   * @param minPacketReceptionRate The minimum packet reception rate per link. Defaults to 0.9 if null.</body>
                </ownedComment>
                <ownedParameter xmi:id="_BfXa4ZV3Ee-EOddEwqrIsA" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfXa4pV3Ee-EOddEwqrIsA" name="minPacketReceptionRate" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfXa45V3Ee-EOddEwqrIsA" type="_ya7ZsItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BfXa5pV3Ee-EOddEwqrIsA" name="numTxPerLinkAndTotalTxCost" method="_BfZQE5V3Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_TXuuhZXCEe-EOddEwqrIsA">
                  <body>Method to calculate the number of transmission attempts per link and the total transmission cost for a given flow.&#xD;
   *&#xD;
   * @param flow The flow for which transmission attempts are to be calculated.&#xD;
   * @return An ArrayList containing the number of transmission attempts per link and the total transmission cost.</body>
                </ownedComment>
                <ownedParameter xmi:id="_BfXa55V3Ee-EOddEwqrIsA" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfXa6JV3Ee-EOddEwqrIsA" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BfXa6pV3Ee-EOddEwqrIsA" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_BfZQFpV3Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_TXuuhpXCEe-EOddEwqrIsA">
                  <body>Helper method to calculate the fixed number of transmissions per link and the total transmission cost for a given flow.&#xD;
   *&#xD;
   * @param flow The flow for which fixed transmission attempts are to be calculated.&#xD;
   * @return An ArrayList containing the fixed number of transmissions per link and the total transmission cost.</body>
                </ownedComment>
                <ownedParameter xmi:id="_BfXa65V3Ee-EOddEwqrIsA" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfXa7JV3Ee-EOddEwqrIsA" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BfYB8JV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" method="_BfZQEJV3Ee-EOddEwqrIsA">
                <eAnnotations xmi:id="_BfYB85V3Ee-EOddEwqrIsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_BfYB9JV3Ee-EOddEwqrIsA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_TXuugpXCEe-EOddEwqrIsA">
                  <body>Constructor to initialize ReliabilityAnalysis with the number of faults.&#xD;
   *&#xD;
   * @param numFaults The number of faults to consider in the reliability analysis. Defaults to 0 if null.</body>
                </ownedComment>
                <ownedParameter xmi:id="_BfYB8ZV3Ee-EOddEwqrIsA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BfYB8pV3Ee-EOddEwqrIsA" type="_ya7ZsItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BfYB9ZV3Ee-EOddEwqrIsA" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_BfZQGZV3Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_TXuuh5XCEe-EOddEwqrIsA">
                  <body>Helper method to calculate the number of transmission attempts per link and the total transmission attempts dynamically.&#xD;
   *&#xD;
   * @param flow The flow for which transmission attempts are to be calculated.&#xD;
   * @param e2e The end-to-end reliability requirement.&#xD;
   * @param M The minimum packet reception rate per link.&#xD;
   * @param optimizationRequested A flag indicating whether optimization is requested.&#xD;
   * @return An ArrayList containing the number of transmission attempts per link and the total transmission attempts.</body>
                </ownedComment>
                <ownedParameter xmi:id="_BfYB9pV3Ee-EOddEwqrIsA" name="flow" type="_yYmecItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfYB95V3Ee-EOddEwqrIsA" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfYB-JV3Ee-EOddEwqrIsA" name="M" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BfYB-ZV3Ee-EOddEwqrIsA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BfYB-pV3Ee-EOddEwqrIsA" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JHQhFZW-Ee-EOddEwqrIsA" name="getReliabilities">
                <ownedComment xmi:id="_TXuug5XCEe-EOddEwqrIsA">
                  <body>Method to calculate reliabilities for the program (to be implemented).&#xD;
   *&#xD;
   * @return A ReliabilityTable containing reliability data for the program.&#xD;
   * @throws UnsupportedOperationException If the method is not implemented.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JHQhFpW-Ee-EOddEwqrIsA" type="_ybBgUItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_JHQhF5W-Ee-EOddEwqrIsA" name="verifyReliabilities" method="_JHRIJpW-Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_TXuuhJXCEe-EOddEwqrIsA">
                  <body>Method to verify if the reliabilities meet a specific threshold (to be implemented).&#xD;
   *&#xD;
   * @return A Boolean indicating whether the reliabilities meet the required threshold.</body>
                </ownedComment>
                <ownedParameter xmi:id="_JHRIIJW-Ee-EOddEwqrIsA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ya9O4ItiEe-3nrFY8n5C-Q" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_3Fxw4pV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ya918ItiEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_y5pWBItiEe-3nrFY8n5C-Q" isReadOnly="true"/>
              <ownedAttribute xmi:id="_ya918YtiEe-3nrFY8n5C-Q" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ya-dAItiEe-3nrFY8n5C-Q" name="ReliabilityRow">
              <generalization xmi:id="_y3xGtItiEe-3nrFY8n5C-Q" general="_ybJcIItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y6_Z04tiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y6_Z1ItiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y77N8ItiEe-3nrFY8n5C-Q" name="ReliabilityRow" specification="_ya_rIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y77N8YtiEe-3nrFY8n5C-Q" type="_ya-dAItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y77N8otiEe-3nrFY8n5C-Q" name="ReliabilityRow" specification="_y5tAYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y77N84tiEe-3nrFY8n5C-Q" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y77N9ItiEe-3nrFY8n5C-Q" name="element" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y77N9YtiEe-3nrFY8n5C-Q" type="_ya-dAItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y77N9otiEe-3nrFY8n5C-Q" name="ReliabilityRow" specification="_y5uOgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y77N94tiEe-3nrFY8n5C-Q" name="rowArray" type="_y5pWBItiEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y77N-ItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y77N-YtiEe-3nrFY8n5C-Q" type="_ya-dAItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ya_rIItiEe-3nrFY8n5C-Q" name="ReliabilityRow" method="_y77N8ItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ya_rIYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ya_rIotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ya_rI4tiEe-3nrFY8n5C-Q" type="_ya-dAItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5tAYItiEe-3nrFY8n5C-Q" name="ReliabilityRow" visibility="package" method="_y77N8otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5tncYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5tncotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5tAYYtiEe-3nrFY8n5C-Q" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5tncItiEe-3nrFY8n5C-Q" name="element" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5tnc4tiEe-3nrFY8n5C-Q" type="_ya-dAItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5uOgItiEe-3nrFY8n5C-Q" name="ReliabilityRow" visibility="package" method="_y77N9otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5uOgotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5uOg4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5uOgYtiEe-3nrFY8n5C-Q" name="rowArray" type="_y5pWBItiEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y5uOhYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5uOhItiEe-3nrFY8n5C-Q" type="_ya-dAItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybBgUItiEe-3nrFY8n5C-Q" name="ReliabilityTable">
              <generalization xmi:id="_y3yU0ItiEe-3nrFY8n5C-Q" general="_ybrAkItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7AA4ItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7AA4YtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y77N-otiEe-3nrFY8n5C-Q" name="ReliabilityTable" specification="_ybCHYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y77N-4tiEe-3nrFY8n5C-Q" type="_ybBgUItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y77N_ItiEe-3nrFY8n5C-Q" name="ReliabilityTable" specification="_ybCHZItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y77N_YtiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y77N_otiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y77N_4tiEe-3nrFY8n5C-Q" type="_ybBgUItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybCHYItiEe-3nrFY8n5C-Q" name="ReliabilityTable" method="_y77N-otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybCHYYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybCHYotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybCHY4tiEe-3nrFY8n5C-Q" type="_ybBgUItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybCHZItiEe-3nrFY8n5C-Q" name="ReliabilityTable" visibility="package" method="_y77N_ItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybCucYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybCucotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybCHZYtiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybCucItiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybCuc4tiEe-3nrFY8n5C-Q" type="_ybBgUItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybDVgItiEe-3nrFY8n5C-Q" name="ReliabilityVisualization">
              <ownedComment xmi:id="_3Fxw45V2Ee-EOddEwqrIsA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y3y75YtiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7AA4otiEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7AA44tiEe-3nrFY8n5C-Q" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7AA5ItiEe-3nrFY8n5C-Q" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7AA5YtiEe-3nrFY8n5C-Q" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7AA5otiEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_ycOaMItiEe-3nrFY8n5C-Q" association="_y9CoQYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7AA6ItiEe-3nrFY8n5C-Q" name="ra" visibility="private" type="_ya7ZsItiEe-3nrFY8n5C-Q" association="_y9CoRItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y77OAItiEe-3nrFY8n5C-Q" name="ReliabilityVisualization" specification="_y3y74ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y77OAYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y77OAotiEe-3nrFY8n5C-Q" type="_ybDVgItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y3y74ItiEe-3nrFY8n5C-Q" name="ReliabilityVisualization" visibility="package" method="_y77OAItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3y74otiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3y744tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3y74YtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3y75ItiEe-3nrFY8n5C-Q" type="_ybDVgItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybFxwItiEe-3nrFY8n5C-Q" name="ReportVisualization">
              <generalization xmi:id="_y30KAYtiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7An8YtiEe-3nrFY8n5C-Q" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7An8otiEe-3nrFY8n5C-Q" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7An84tiEe-3nrFY8n5C-Q" name="content" visibility="private" type="_yYKZkItiEe-3nrFY8n5C-Q" association="_y9DPUItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7An9YtiEe-3nrFY8n5C-Q" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y77OA4tiEe-3nrFY8n5C-Q" name="ReportVisualization" specification="_y3zi8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y77OBItiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y77OBYtiEe-3nrFY8n5C-Q" name="warp" type="_yblhAItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y77OBotiEe-3nrFY8n5C-Q" name="content" type="_yYKZkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y77OB4tiEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y77OCItiEe-3nrFY8n5C-Q" type="_ybFxwItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771AItiEe-3nrFY8n5C-Q" name="visualization" specification="_ybGY0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771AYtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771AotiEe-3nrFY8n5C-Q" name="createReport" specification="_ybHm8otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771A4tiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybGY0ItiEe-3nrFY8n5C-Q" name="visualization" method="_y771AItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y3zi-ItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybHm8otiEe-3nrFY8n5C-Q" name="createReport" visibility="private" method="_y771AotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y30KAItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y3zi8ItiEe-3nrFY8n5C-Q" name="ReportVisualization" visibility="package" method="_y77OA4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y3zi9YtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y3zi9otiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y3zi8YtiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3zi8otiEe-3nrFY8n5C-Q" name="warp" type="_yblhAItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3zi84tiEe-3nrFY8n5C-Q" name="content" type="_yYKZkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y3zi9ItiEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y3zi94tiEe-3nrFY8n5C-Q" type="_ybFxwItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybJcIItiEe-3nrFY8n5C-Q" name="Row">
              <generalization xmi:id="_y5wDtotiEe-3nrFY8n5C-Q" general="_y2f7YItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7BPAYtiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7BPAotiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771BItiEe-3nrFY8n5C-Q" name="Row" specification="_ybKqQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771BYtiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771BotiEe-3nrFY8n5C-Q" name="Row" specification="_y5u1kItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771B4tiEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y771CItiEe-3nrFY8n5C-Q" name="element" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y771CYtiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771CotiEe-3nrFY8n5C-Q" name="Row" specification="_y5wDsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771C4tiEe-3nrFY8n5C-Q" name="rowArray" type="_y5PtYYtiEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y771DItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y771DYtiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771DotiEe-3nrFY8n5C-Q" name="Row" specification="_ybLRUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771D4tiEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y771EItiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybKqQItiEe-3nrFY8n5C-Q" name="Row" method="_y771BItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybKqQYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybKqQotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybKqQ4tiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybLRUItiEe-3nrFY8n5C-Q" name="Row" visibility="package" method="_y771DotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybL4YItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybL4YYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybLRUYtiEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybL4YotiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5u1kItiEe-3nrFY8n5C-Q" name="Row" visibility="package" method="_y771BotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5vcoItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5vcoYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5u1kYtiEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5u1kotiEe-3nrFY8n5C-Q" name="element" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5vcootiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5wDsItiEe-3nrFY8n5C-Q" name="Row" visibility="package" method="_y771CotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5wDsotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5wDs4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5wDsYtiEe-3nrFY8n5C-Q" name="rowArray" type="_y5PtYYtiEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y5wDtYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5wDtItiEe-3nrFY8n5C-Q" type="_ybJcIItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybNGgItiEe-3nrFY8n5C-Q" name="SchedulableObjectQueue">
              <generalization xmi:id="_ybOUoItiEe-3nrFY8n5C-Q" general="_ya49c4tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7BPA4tiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7BPBItiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771EYtiEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" specification="_y5wqwYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771EotiEe-3nrFY8n5C-Q" name="comparitor" type="_y20rgItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y771E4tiEe-3nrFY8n5C-Q" type="_ybNGgItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y771FItiEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" specification="_y5x44ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y771FYtiEe-3nrFY8n5C-Q" name="comparitor" type="_y20rgItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y771FotiEe-3nrFY8n5C-Q" name="schedulableObjects" type="_y3Z6UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y771F4tiEe-3nrFY8n5C-Q" type="_ybNGgItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y5wqwYtiEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" visibility="package" method="_y771EYtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5xR0ItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5xR0YtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5wqwotiEe-3nrFY8n5C-Q" name="comparitor" type="_y20rgItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5xR0otiEe-3nrFY8n5C-Q" type="_ybNGgItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5x44ItiEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" visibility="package" method="_y771FItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5x444tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5x45ItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y5x44YtiEe-3nrFY8n5C-Q" name="comparitor" type="_y20rgItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5x44otiEe-3nrFY8n5C-Q" name="schedulableObjects" type="_y3Z6UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5x45YtiEe-3nrFY8n5C-Q" type="_ybNGgItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybQJ0ItiEe-3nrFY8n5C-Q" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_3FyX8ZV2Ee-EOddEwqrIsA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y7BPBYtiEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7B2EItiEe-3nrFY8n5C-Q" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7B2EYtiEe-3nrFY8n5C-Q" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7B2E4tiEe-3nrFY8n5C-Q" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7B2FYtiEe-3nrFY8n5C-Q" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7B2FotiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7CdIYtiEe-3nrFY8n5C-Q" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7CdI4tiEe-3nrFY8n5C-Q" name="schedule" visibility="protected" type="_ybfaYItiEe-3nrFY8n5C-Q" association="_y9DPU4tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7DEMItiEe-3nrFY8n5C-Q" name="poset" visibility="protected" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y9D2YYtiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cEItiEe-3nrFY8n5C-Q" name="Schedule" specification="_y31_MItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y78cEYtiEe-3nrFY8n5C-Q" name="poset" type="_yZ10kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y78cEotiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y78cE4tiEe-3nrFY8n5C-Q" type="_ybQJ0ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cHotiEe-3nrFY8n5C-Q" name="getSchedule" specification="_ybUbQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y78cH4tiEe-3nrFY8n5C-Q" type="_ybfaYItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cIItiEe-3nrFY8n5C-Q" name="buildSchedule" specification="_ybVpYItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cIYtiEe-3nrFY8n5C-Q" name="toProgram" specification="_ybVpYYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y78cIotiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cI4tiEe-3nrFY8n5C-Q" name="replaceNullWithSleep" specification="_y32mRotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y78cJItiEe-3nrFY8n5C-Q" name="program" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cJYtiEe-3nrFY8n5C-Q" name="fakeSchedulingToTestRest" specification="_y32mSItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y78cJotiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79DIItiEe-3nrFY8n5C-Q" name="getChannelAndSetStartTime" specification="_y33NUYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79DIYtiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79DIotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79DI4tiEe-3nrFY8n5C-Q" name="findChannelAndTime" specification="_y33NVItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79DJItiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DJYtiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79DJotiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79DJ4tiEe-3nrFY8n5C-Q" name="continueSearch" specification="_y330YotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79DKItiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DKYtiEe-3nrFY8n5C-Q" name="activation" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79DKotiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79DK4tiEe-3nrFY8n5C-Q" name="noOtherChannelConflicts" specification="_y330ZotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79DLItiEe-3nrFY8n5C-Q" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DLYtiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79DLotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DL4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79DMItiEe-3nrFY8n5C-Q" name="conflictsExist" specification="_y34bcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79DMYtiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79DMotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DM4tiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DNItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79DNYtiEe-3nrFY8n5C-Q" name="freeOfCoordinatorConflicts" specification="_y34bdYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79DNotiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79DN4tiEe-3nrFY8n5C-Q" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DOItiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DOYtiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DOotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79DO4tiEe-3nrFY8n5C-Q" name="isAvailable" specification="_y35CgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79DPItiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79DPYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DPotiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DP4tiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79DQItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qMItiEe-3nrFY8n5C-Q" name="isAvailable" specification="_y35ChotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79qMYtiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79qMotiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79qM4tiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79qNItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qNYtiEe-3nrFY8n5C-Q" name="timeRemaining" specification="_ybXekItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79qNotiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79qN4tiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79qOItiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79qOYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qOotiEe-3nrFY8n5C-Q" name="canCombineEntriesInPlace" specification="_y35Ci4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79qO4tiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79qPItiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79qPYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qPotiEe-3nrFY8n5C-Q" name="combinedEntriesInPlace" specification="_y35pk4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79qP4tiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79qQItiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79qQYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y79qQotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qQ4tiEe-3nrFY8n5C-Q" name="addToSchedule" specification="_y35pmItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79qRItiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y79qRYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qRotiEe-3nrFY8n5C-Q" name="reportNotSchedulable" specification="_y36QoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y79qR4tiEe-3nrFY8n5C-Q" name="object" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qSItiEe-3nrFY8n5C-Q" name="printVerbose" specification="_ybYssItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y79qSYtiEe-3nrFY8n5C-Q" name="print" specification="_ybYssYtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybUbQItiEe-3nrFY8n5C-Q" name="getSchedule" method="_y78cHotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FyX9JV2Ee-EOddEwqrIsA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_y32mRItiEe-3nrFY8n5C-Q" type="_ybfaYItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybVpYItiEe-3nrFY8n5C-Q" name="buildSchedule" visibility="private" method="_y78cIItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_ybVpYYtiEe-3nrFY8n5C-Q" name="toProgram" method="_y78cIYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y32mRYtiEe-3nrFY8n5C-Q" type="_yaqT8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybXekItiEe-3nrFY8n5C-Q" name="timeRemaining" visibility="protected" method="_y79qNYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FyX-pV2Ee-EOddEwqrIsA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_ybYFoItiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybYFoYtiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybYFootiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybYFo4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ybYssItiEe-3nrFY8n5C-Q" name="printVerbose" method="_y79qSItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_ybYssYtiEe-3nrFY8n5C-Q" name="print" method="_y79qSYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_y31_MItiEe-3nrFY8n5C-Q" name="Schedule" visibility="package" method="_y78cEItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y32mQYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y32mQotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y31_MYtiEe-3nrFY8n5C-Q" name="poset" type="_yZ10kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y32mQItiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y32mQ4tiEe-3nrFY8n5C-Q" type="_ybQJ0ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y32mRotiEe-3nrFY8n5C-Q" name="replaceNullWithSleep" visibility="private" method="_y78cI4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FyX9ZV2Ee-EOddEwqrIsA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_y32mR4tiEe-3nrFY8n5C-Q" name="program" type="_yaqT8ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y32mSItiEe-3nrFY8n5C-Q" name="fakeSchedulingToTestRest" visibility="private" method="_y78cJYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y33NUItiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y33NUYtiEe-3nrFY8n5C-Q" name="getChannelAndSetStartTime" visibility="protected" method="_y79DIItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FyX9pV2Ee-EOddEwqrIsA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_y33NUotiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y33NU4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y33NVItiEe-3nrFY8n5C-Q" name="findChannelAndTime" visibility="protected" method="_y79DI4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y33NVYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y330YItiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y330YYtiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y330YotiEe-3nrFY8n5C-Q" name="continueSearch" visibility="protected" method="_y79DJ4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FyX95V2Ee-EOddEwqrIsA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_y330Y4tiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y330ZItiEe-3nrFY8n5C-Q" name="activation" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y330ZYtiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y330ZotiEe-3nrFY8n5C-Q" name="noOtherChannelConflicts" visibility="protected" method="_y79DK4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y330Z4tiEe-3nrFY8n5C-Q" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y330aItiEe-3nrFY8n5C-Q" name="schedulableObject" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y330aYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y330aotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y34bcItiEe-3nrFY8n5C-Q" name="conflictsExist" visibility="protected" method="_y79DMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y34bcYtiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y34bcotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y34bc4tiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y34bdItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y34bdYtiEe-3nrFY8n5C-Q" name="freeOfCoordinatorConflicts" visibility="protected" method="_y79DNYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y34bdotiEe-3nrFY8n5C-Q" name="obj" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y34bd4tiEe-3nrFY8n5C-Q" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y34beItiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y34beYtiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y34beotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y35CgItiEe-3nrFY8n5C-Q" name="isAvailable" visibility="protected" method="_y79DO4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FyX-JV2Ee-EOddEwqrIsA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_y35CgYtiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y35CgotiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y35Cg4tiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y35ChItiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y35ChYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y35ChotiEe-3nrFY8n5C-Q" name="isAvailable" visibility="protected" method="_y79qMItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3FyX-ZV2Ee-EOddEwqrIsA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_y35Ch4tiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y35CiItiEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y35CiYtiEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y35CiotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y35Ci4tiEe-3nrFY8n5C-Q" name="canCombineEntriesInPlace" visibility="private" method="_y79qOotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y35pkItiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y35pkYtiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y35pkotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y35pk4tiEe-3nrFY8n5C-Q" name="combinedEntriesInPlace" visibility="private" method="_y79qPotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y35plItiEe-3nrFY8n5C-Q" name="a1" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y35plYtiEe-3nrFY8n5C-Q" name="a2" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y35plotiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y35pl4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y35pmItiEe-3nrFY8n5C-Q" name="addToSchedule" visibility="protected" method="_y79qQ4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y35pmYtiEe-3nrFY8n5C-Q" name="next" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y35pmotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y36QoItiEe-3nrFY8n5C-Q" name="reportNotSchedulable" visibility="private" method="_y79qRotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y36QoYtiEe-3nrFY8n5C-Q" name="object" type="_yWlsQItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ybR_AItiEe-3nrFY8n5C-Q" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_y7DEMotiEe-3nrFY8n5C-Q" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7DENItiEe-3nrFY8n5C-Q" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cFItiEe-3nrFY8n5C-Q" name="ScheduleLocation" specification="_ybSmEItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y78cFYtiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cFotiEe-3nrFY8n5C-Q" name="ScheduleLocation" specification="_ybTNIItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y78cF4tiEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_y78cGItiEe-3nrFY8n5C-Q" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_y78cGYtiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cGotiEe-3nrFY8n5C-Q" name="getChannel" specification="_ybTNJotiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y78cG4tiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y78cHItiEe-3nrFY8n5C-Q" name="getTime" specification="_ybT0MYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y78cHYtiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ybSmEItiEe-3nrFY8n5C-Q" name="ScheduleLocation" visibility="package" method="_y78cFItiEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_ybSmEYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ybSmEotiEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ybSmE4tiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ybTNIItiEe-3nrFY8n5C-Q" name="ScheduleLocation" visibility="package" method="_y78cFotiEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_ybTNI4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ybTNJItiEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ybTNIYtiEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ybTNIotiEe-3nrFY8n5C-Q" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_ybTNJYtiEe-3nrFY8n5C-Q" type="_ybR_AItiEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ybTNJotiEe-3nrFY8n5C-Q" name="getChannel" visibility="protected" method="_y78cGotiEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_3FyX8pV2Ee-EOddEwqrIsA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ybT0MItiEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ybT0MYtiEe-3nrFY8n5C-Q" name="getTime" visibility="protected" method="_y78cHItiEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_3FyX85V2Ee-EOddEwqrIsA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ybT0MotiEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybfaYItiEe-3nrFY8n5C-Q" name="ScheduleTable">
              <generalization xmi:id="_y37ewItiEe-3nrFY8n5C-Q" general="_ybrAkItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7DrQYtiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7ESUItiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7-RQItiEe-3nrFY8n5C-Q" name="ScheduleTable" specification="_ybgBcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7-RQYtiEe-3nrFY8n5C-Q" type="_ybfaYItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7-RQotiEe-3nrFY8n5C-Q" name="ScheduleTable" specification="_ybgBdItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7-RQ4tiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7-RRItiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7-RRYtiEe-3nrFY8n5C-Q" type="_ybfaYItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybgBcItiEe-3nrFY8n5C-Q" name="ScheduleTable" visibility="package" method="_y7-RQItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybgBcYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybgBcotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybgBc4tiEe-3nrFY8n5C-Q" type="_ybfaYItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybgBdItiEe-3nrFY8n5C-Q" name="ScheduleTable" visibility="package" method="_y7-RQotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybgogotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybgog4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybgogItiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybgogYtiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybgohItiEe-3nrFY8n5C-Q" type="_ybfaYItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybhPkItiEe-3nrFY8n5C-Q" name="ScheduleTime">
              <ownedAttribute xmi:id="_y7ESUYtiEe-3nrFY8n5C-Q" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7ESUotiEe-3nrFY8n5C-Q" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7-RRotiEe-3nrFY8n5C-Q" name="ScheduleTime" specification="_ybh2oItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7-RR4tiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7-RSItiEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7-RSYtiEe-3nrFY8n5C-Q" type="_ybhPkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybh2oItiEe-3nrFY8n5C-Q" name="ScheduleTime" visibility="package" method="_y7-RRotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybh2o4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybh2pItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybh2oYtiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybh2ootiEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybh2pYtiEe-3nrFY8n5C-Q" type="_ybhPkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybidsItiEe-3nrFY8n5C-Q" name="SimulatorInput">
              <ownedComment xmi:id="_3Fxw5pV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybjEwItiEe-3nrFY8n5C-Q" name="SortedPeriodQueue">
              <generalization xmi:id="_ybkS4YtiEe-3nrFY8n5C-Q" general="_ya49c4tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7ESU4tiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7ESVItiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7-RSotiEe-3nrFY8n5C-Q" name="SortedPeriodQueue" specification="_ybjr0YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7-RS4tiEe-3nrFY8n5C-Q" type="_ybjEwItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7-4UItiEe-3nrFY8n5C-Q" name="SortedPeriodQueue" specification="_y38F0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7-4UYtiEe-3nrFY8n5C-Q" name="schedulableObjects" type="_y3Z6UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7-4UotiEe-3nrFY8n5C-Q" type="_ybjEwItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybjr0YtiEe-3nrFY8n5C-Q" name="SortedPeriodQueue" visibility="package" method="_y7-RSotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybjr0otiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybjr04tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybkS4ItiEe-3nrFY8n5C-Q" type="_ybjEwItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y38F0ItiEe-3nrFY8n5C-Q" name="SortedPeriodQueue" visibility="package" method="_y7-4UItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y38F0otiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y38F04tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y38F0YtiEe-3nrFY8n5C-Q" name="schedulableObjects" type="_y3Z6UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y38F1ItiEe-3nrFY8n5C-Q" type="_ybjEwItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_yblhAItiEe-3nrFY8n5C-Q" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_y38s4YtiEe-3nrFY8n5C-Q" general="_ya9O4ItiEe-3nrFY8n5C-Q"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ybmIEItiEe-3nrFY8n5C-Q" name="ScheduleChoices">
                <ownedLiteral xmi:id="_ybmvIItiEe-3nrFY8n5C-Q" name="PRIORITY"/>
                <ownedLiteral xmi:id="_ybmvIYtiEe-3nrFY8n5C-Q" name="RM"/>
                <ownedLiteral xmi:id="_ybmvIotiEe-3nrFY8n5C-Q" name="DM"/>
                <ownedLiteral xmi:id="_ybmvI4tiEe-3nrFY8n5C-Q" name="RTHART"/>
                <ownedLiteral xmi:id="_ybmvJItiEe-3nrFY8n5C-Q" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_ybmvJYtiEe-3nrFY8n5C-Q" name="POSET_RM"/>
                <ownedLiteral xmi:id="_ybmvJotiEe-3nrFY8n5C-Q" name="POSET_DM"/>
                <ownedLiteral xmi:id="_ybnWMItiEe-3nrFY8n5C-Q" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_ybnWMYtiEe-3nrFY8n5C-Q" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_ybnWMotiEe-3nrFY8n5C-Q" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_ybnWM4tiEe-3nrFY8n5C-Q" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_ybnWNItiEe-3nrFY8n5C-Q" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_ybnWNYtiEe-3nrFY8n5C-Q" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_ybnWNotiEe-3nrFY8n5C-Q" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ybn9QItiEe-3nrFY8n5C-Q" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ybokUItiEe-3nrFY8n5C-Q" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ybokUYtiEe-3nrFY8n5C-Q" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ybpLYItiEe-3nrFY8n5C-Q" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ybpLYYtiEe-3nrFY8n5C-Q" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybpycItiEe-3nrFY8n5C-Q" name="SystemFactory">
              <ownedComment xmi:id="_3Fxw55V2Ee-EOddEwqrIsA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BtnkOpV1Ee-EOddEwqrIsA" name="create" specification="_BtYTqpV1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtnkO5V1Ee-EOddEwqrIsA" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtnkPJV1Ee-EOddEwqrIsA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BtnkPZV1Ee-EOddEwqrIsA" name="choice" type="_y39T8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtnkPpV1Ee-EOddEwqrIsA" type="_ycOaMItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_BtYTqpV1Ee-EOddEwqrIsA" name="create" isStatic="true" method="_BtnkOpV1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtYTq5V1Ee-EOddEwqrIsA" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtYTrJV1Ee-EOddEwqrIsA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BtYTrZV1Ee-EOddEwqrIsA" name="choice" type="_y39T8ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtYTrpV1Ee-EOddEwqrIsA" type="_ycOaMItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ybrAkItiEe-3nrFY8n5C-Q" name="Table">
              <generalization xmi:id="_y5zuEotiEe-3nrFY8n5C-Q" general="_y2f7YItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7E5YItiEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7E5YYtiEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7-4WItiEe-3nrFY8n5C-Q" name="Table" specification="_ybsOsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7-4WYtiEe-3nrFY8n5C-Q" type="_ybrAkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7-4WotiEe-3nrFY8n5C-Q" name="Table" specification="_ybs1w4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7-4W4tiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7-4XItiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7-4XYtiEe-3nrFY8n5C-Q" type="_ybrAkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7_fYItiEe-3nrFY8n5C-Q" name="getNumRows" specification="_ybtc04tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7_fYYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7_fYotiEe-3nrFY8n5C-Q" name="getNumColumns" specification="_ybtc1YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7_fY4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7_fZItiEe-3nrFY8n5C-Q" name="set" specification="_y5zHAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7_fZYtiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7_fZotiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7_fZ4tiEe-3nrFY8n5C-Q" name="element" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7_faItiEe-3nrFY8n5C-Q" name="get" specification="_ybuD4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7_faYtiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7_faotiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7_fa4tiEe-3nrFY8n5C-Q" type="_y5PtYYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ybsOsItiEe-3nrFY8n5C-Q" name="Table" method="_y7-4WItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybs1wItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybs1wYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybs1wotiEe-3nrFY8n5C-Q" type="_ybrAkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybs1w4tiEe-3nrFY8n5C-Q" name="Table" method="_y7-4WotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ybtc0ItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ybtc0YtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ybs1xItiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybs1xYtiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybtc0otiEe-3nrFY8n5C-Q" type="_ybrAkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ybtc04tiEe-3nrFY8n5C-Q" name="getNumRows" method="_y7_fYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ybtc1ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ybtc1YtiEe-3nrFY8n5C-Q" name="getNumColumns" method="_y7_fYotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ybtc1otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ybuD4ItiEe-3nrFY8n5C-Q" name="get" method="_y7_faItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ybuD4YtiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ybuD4otiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5zuEYtiEe-3nrFY8n5C-Q" type="_y5PtYYtiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5zHAItiEe-3nrFY8n5C-Q" name="set" method="_y7_fZItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y5zHAYtiEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5zHAotiEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5zuEItiEe-3nrFY8n5C-Q" name="element" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ybvSAItiEe-3nrFY8n5C-Q" name="Visualization">
              <ownedComment xmi:id="_3Fxw6JV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ybv5EItiEe-3nrFY8n5C-Q" name="SystemChoices">
                <ownedLiteral xmi:id="_ybwgIItiEe-3nrFY8n5C-Q" name="SOURCE"/>
                <ownedLiteral xmi:id="_ybwgIYtiEe-3nrFY8n5C-Q" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_ybwgIotiEe-3nrFY8n5C-Q" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_ybwgI4tiEe-3nrFY8n5C-Q" name="LATENCY"/>
                <ownedLiteral xmi:id="_ybwgJItiEe-3nrFY8n5C-Q" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_ybwgJYtiEe-3nrFY8n5C-Q" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_ybxHMItiEe-3nrFY8n5C-Q" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_ybxHMYtiEe-3nrFY8n5C-Q" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_ybxuQItiEe-3nrFY8n5C-Q" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_ybxuQYtiEe-3nrFY8n5C-Q" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_ybxuQotiEe-3nrFY8n5C-Q" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_ybxuQ4tiEe-3nrFY8n5C-Q" name="toDisplay"/>
              <ownedOperation xmi:id="_ybxuRItiEe-3nrFY8n5C-Q" name="toFile"/>
              <ownedOperation xmi:id="_ybyVUItiEe-3nrFY8n5C-Q" name="toString">
                <ownedParameter xmi:id="_ybyVUYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yby8YItiEe-3nrFY8n5C-Q" name="VisualizationFactory">
              <ownedComment xmi:id="_3Fxw6ZV2Ee-EOddEwqrIsA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BtnkMJV1Ee-EOddEwqrIsA" name="createVisualization" specification="_BtYToJV1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtnkMZV1Ee-EOddEwqrIsA" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtnkMpV1Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BtnkM5V1Ee-EOddEwqrIsA" name="choice" type="_y3-iEItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtnkNJV1Ee-EOddEwqrIsA" type="_ybvSAItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BtnkNZV1Ee-EOddEwqrIsA" name="createVisualization" specification="_BtYTpZV1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtnkNpV1Ee-EOddEwqrIsA" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtnkN5V1Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BtnkOJV1Ee-EOddEwqrIsA" name="choice" type="_y3_JIYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtnkOZV1Ee-EOddEwqrIsA" type="_ybvSAItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_BtYToJV1Ee-EOddEwqrIsA" name="createVisualization" isStatic="true" method="_BtnkMJV1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtYToZV1Ee-EOddEwqrIsA" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtYTopV1Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BtYTo5V1Ee-EOddEwqrIsA" name="choice" type="_y3-iEItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtYTpJV1Ee-EOddEwqrIsA" type="_ybvSAItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BtYTpZV1Ee-EOddEwqrIsA" name="createVisualization" isStatic="true" method="_BtnkNZV1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtYTppV1Ee-EOddEwqrIsA" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtYTp5V1Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BtYTqJV1Ee-EOddEwqrIsA" name="choice" type="_y3_JIYtiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtYTqZV1Ee-EOddEwqrIsA" type="_ybvSAItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yb0xkItiEe-3nrFY8n5C-Q" name="VisualizationImplementation">
              <ownedComment xmi:id="_3Fxw6pV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y7E5YotiEe-3nrFY8n5C-Q" name="visualization" visibility="private" type="_yYKZkItiEe-3nrFY8n5C-Q" association="_y9D2ZItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7FgcYtiEe-3nrFY8n5C-Q" name="fileContent" visibility="private" type="_yYKZkItiEe-3nrFY8n5C-Q" association="_y9EdcYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7Fgc4tiEe-3nrFY8n5C-Q" name="window" visibility="private" type="_yZIp8ItiEe-3nrFY8n5C-Q" association="_y9FEgItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7FgdYtiEe-3nrFY8n5C-Q" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7GHgYtiEe-3nrFY8n5C-Q" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7GHg4tiEe-3nrFY8n5C-Q" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7GHhYtiEe-3nrFY8n5C-Q" name="fm" visibility="private" type="_yYd7kItiEe-3nrFY8n5C-Q" association="_y9FEg4tiEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7GHhotiEe-3nrFY8n5C-Q" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7GukYtiEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_ycOaMItiEe-3nrFY8n5C-Q" association="_y9FrkYtiEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7GukotiEe-3nrFY8n5C-Q" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7GulItiEe-3nrFY8n5C-Q" name="workLoad" visibility="private" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y9GSoItiEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7GulYtiEe-3nrFY8n5C-Q" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7HVoYtiEe-3nrFY8n5C-Q" name="visualizationObject" visibility="private" type="_yb8tYItiEe-3nrFY8n5C-Q" association="_y9GSo4tiEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_y4AXQItiEe-3nrFY8n5C-Q" client="_yb0xkItiEe-3nrFY8n5C-Q" supplier="_ybvSAItiEe-3nrFY8n5C-Q" contract="_ybvSAItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y7_fdotiEe-3nrFY8n5C-Q" name="VisualizationImplementation" specification="_y508MYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y7_fd4tiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7_feItiEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y7_feYtiEe-3nrFY8n5C-Q" name="choice" type="_y50VIItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y7_feotiEe-3nrFY8n5C-Q" type="_yb0xkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGcItiEe-3nrFY8n5C-Q" name="VisualizationImplementation" specification="_y51jQotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AGcYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8AGcotiEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AGc4tiEe-3nrFY8n5C-Q" name="choice" type="_y51jQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8AGdItiEe-3nrFY8n5C-Q" type="_yb0xkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGdYtiEe-3nrFY8n5C-Q" name="toDisplay" specification="_yb2mwItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGdotiEe-3nrFY8n5C-Q" name="toFile" specification="_yb3N0otiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGd4tiEe-3nrFY8n5C-Q" name="toString" specification="_yb304otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AGeItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGeYtiEe-3nrFY8n5C-Q" name="createVisualization" specification="_y52KUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AGeotiEe-3nrFY8n5C-Q" name="choice" type="_y50VIItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGe4tiEe-3nrFY8n5C-Q" name="createVisualization" specification="_y52KUotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AGfItiEe-3nrFY8n5C-Q" name="choice" type="_y51jQItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGfYtiEe-3nrFY8n5C-Q" name="createVisualization" specification="_y52xYItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AGfotiEe-3nrFY8n5C-Q" name="obj" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGf4tiEe-3nrFY8n5C-Q" name="createFileNameTemplate" specification="_yb5DAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AGgItiEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AGgYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yb2mwItiEe-3nrFY8n5C-Q" name="toDisplay" method="_y8AGdYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yb3N0otiEe-3nrFY8n5C-Q" name="toFile" method="_y8AGdotiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_yb304otiEe-3nrFY8n5C-Q" name="toString" method="_y8AGd4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yb3044tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yb5DAItiEe-3nrFY8n5C-Q" name="createFileNameTemplate" visibility="private" method="_y8AGf4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yb5DAYtiEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yb5DAotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y508MYtiEe-3nrFY8n5C-Q" name="VisualizationImplementation" method="_y7_fdotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y508NYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y508NotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y508MotiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y508M4tiEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y508NItiEe-3nrFY8n5C-Q" name="choice" type="_y50VIItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y508N4tiEe-3nrFY8n5C-Q" type="_yb0xkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y51jQotiEe-3nrFY8n5C-Q" name="VisualizationImplementation" method="_y8AGcItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y51jRotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y51jR4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y51jQ4tiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y51jRItiEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y51jRYtiEe-3nrFY8n5C-Q" name="choice" type="_y51jQItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y51jSItiEe-3nrFY8n5C-Q" type="_yb0xkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y52KUItiEe-3nrFY8n5C-Q" name="createVisualization" visibility="private" method="_y8AGeYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y52KUYtiEe-3nrFY8n5C-Q" name="choice" type="_y50VIItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y52KUotiEe-3nrFY8n5C-Q" name="createVisualization" visibility="private" method="_y8AGe4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y52KU4tiEe-3nrFY8n5C-Q" name="choice" type="_y51jQItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y52xYItiEe-3nrFY8n5C-Q" name="createVisualization" visibility="private" method="_y8AGfYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y52xYYtiEe-3nrFY8n5C-Q" name="obj" type="_y5PtYYtiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yb8tYItiEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_3Fxw65V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y7HVo4tiEe-3nrFY8n5C-Q" name="fm" visibility="private" type="_yYd7kItiEe-3nrFY8n5C-Q" association="_y9G5sItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7H8sYtiEe-3nrFY8n5C-Q" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7H8s4tiEe-3nrFY8n5C-Q" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7H8tYtiEe-3nrFY8n5C-Q" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7H8totiEe-3nrFY8n5C-Q" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7H8t4tiEe-3nrFY8n5C-Q" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y7H8uItiEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AGgotiEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_y4CzgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AGg4tiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8AGhItiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8AGhYtiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AGhotiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AtgItiEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_y4Czh4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AtgYtiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8AtgotiEe-3nrFY8n5C-Q" name="warp" type="_yblhAItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8Atg4tiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AthItiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AthYtiEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_y4EBoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AthotiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8Ath4tiEe-3nrFY8n5C-Q" name="warp" type="_yblhAItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8AtiItiEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AtiYtiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AtiotiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Ati4tiEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_y4EosItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AtjItiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8AtjYtiEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AtjotiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8Atj4tiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AtkItiEe-3nrFY8n5C-Q" name="nameExtension" specification="_y53_gItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AtkYtiEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AtkotiEe-3nrFY8n5C-Q" name="m" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8Atk4tiEe-3nrFY8n5C-Q" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AtlItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AtlYtiEe-3nrFY8n5C-Q" name="nameExtension" specification="_yb-ikItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AtlotiEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8Atl4tiEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8AtmItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AtmYtiEe-3nrFY8n5C-Q" name="getFileManager" specification="_yb_Jo4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AtmotiEe-3nrFY8n5C-Q" type="_yYd7kItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Atm4tiEe-3nrFY8n5C-Q" name="visualization" specification="_yb_JpItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AtnItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8AtnYtiEe-3nrFY8n5C-Q" name="createFile" specification="_yb_wsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8AtnotiEe-3nrFY8n5C-Q" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8Atn4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8BUkItiEe-3nrFY8n5C-Q" name="fileVisualization" specification="_yb_ws4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8BUkYtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8BUkotiEe-3nrFY8n5C-Q" name="displayVisualization" specification="_yb_wtItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8BUk4tiEe-3nrFY8n5C-Q" type="_yZIp8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8BUlItiEe-3nrFY8n5C-Q" name="createHeader" specification="_ycAXwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8BUlYtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8BUlotiEe-3nrFY8n5C-Q" name="createFooter" specification="_ycAXwYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8BUl4tiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8BUmItiEe-3nrFY8n5C-Q" name="createColumnHeader" specification="_ycAXwotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8BUmYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8BUmotiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8BUm4tiEe-3nrFY8n5C-Q" name="createVisualizationData" specification="_ycA-0otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8BUnItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8BUnYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_yb-ikItiEe-3nrFY8n5C-Q" name="nameExtension" visibility="private" method="_y8AtlYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yb_JoItiEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yb_JoYtiEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yb_JootiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yb_Jo4tiEe-3nrFY8n5C-Q" name="getFileManager" method="_y8AtmYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw7JV2Ee-EOddEwqrIsA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4F20ItiEe-3nrFY8n5C-Q" type="_yYd7kItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yb_JpItiEe-3nrFY8n5C-Q" name="visualization" method="_y8Atm4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4F20YtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yb_wsItiEe-3nrFY8n5C-Q" name="createFile" method="_y8AtnYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yb_wsYtiEe-3nrFY8n5C-Q" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yb_wsotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yb_ws4tiEe-3nrFY8n5C-Q" name="fileVisualization" method="_y8BUkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4F20otiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yb_wtItiEe-3nrFY8n5C-Q" name="displayVisualization" method="_y8BUkotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4F204tiEe-3nrFY8n5C-Q" type="_yZIp8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycAXwItiEe-3nrFY8n5C-Q" name="createHeader" visibility="protected" method="_y8BUlItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4F21ItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycAXwYtiEe-3nrFY8n5C-Q" name="createFooter" visibility="protected" method="_y8BUlotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4F21YtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycAXwotiEe-3nrFY8n5C-Q" name="createColumnHeader" visibility="protected" method="_y8BUmItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycAXw4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ycA-0ItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycA-0otiEe-3nrFY8n5C-Q" name="createVisualizationData" visibility="protected" method="_y8BUm4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycBl4ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ycBl4YtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4CzgItiEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_y8AGgotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y4CzhItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y4CzhYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y4CzgYtiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4CzgotiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4Czg4tiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4CzhotiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4Czh4tiEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_y8AtgItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y4DakYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y4DakotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y4CziItiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4CziYtiEe-3nrFY8n5C-Q" name="warp" type="_yblhAItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4DakItiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4Dak4tiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4EBoItiEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_y8AthYtiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y4EBpYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y4EBpotiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y4EBoYtiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4EBootiEe-3nrFY8n5C-Q" name="warp" type="_yblhAItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4EBo4tiEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4EBpItiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4EBp4tiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4EosItiEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_y8Ati4tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y4FPw4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y4FPxItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y4FPwItiEe-3nrFY8n5C-Q" name="fm" type="_yYd7kItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4FPwYtiEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4FPwotiEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4FPxYtiEe-3nrFY8n5C-Q" type="_yb8tYItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y53_gItiEe-3nrFY8n5C-Q" name="nameExtension" visibility="private" method="_y8AtkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y53_gYtiEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y53_gotiEe-3nrFY8n5C-Q" name="m" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y53_g4tiEe-3nrFY8n5C-Q" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y53_hItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ycEpMItiEe-3nrFY8n5C-Q" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_3FxJ95V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y54mkItiEe-3nrFY8n5C-Q" general="_y3FKMItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7IjwotiEe-3nrFY8n5C-Q" name="workLoad" visibility="package" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y9G5s4tiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7JK0ItiEe-3nrFY8n5C-Q" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8BUnotiEe-3nrFY8n5C-Q" name="WorkLoadListener" specification="_y4HE8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8BUn4tiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8BUoItiEe-3nrFY8n5C-Q" type="_ycEpMItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7oItiEe-3nrFY8n5C-Q" name="buildNodesAndFlows" specification="_y4HE9YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7oYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7ootiEe-3nrFY8n5C-Q" name="testPrintStdOut" specification="_ycF3UItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7o4tiEe-3nrFY8n5C-Q" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7pItiEe-3nrFY8n5C-Q" name="enterWarpName" specification="_y4HsAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7pYtiEe-3nrFY8n5C-Q" name="ctx" type="_y3GYUotiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7potiEe-3nrFY8n5C-Q" name="enterFlowName" specification="_y4HsBYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7p4tiEe-3nrFY8n5C-Q" name="ctx" type="_y3I0kItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7qItiEe-3nrFY8n5C-Q" name="exitPriority" specification="_y4ITFYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7qYtiEe-3nrFY8n5C-Q" name="ctx" type="_y4ITE4tiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7qotiEe-3nrFY8n5C-Q" name="exitPeriod" specification="_y4JhMYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7q4tiEe-3nrFY8n5C-Q" name="ctx" type="_y4I6JItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7rItiEe-3nrFY8n5C-Q" name="exitDeadline" specification="_y4LWYYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7rYtiEe-3nrFY8n5C-Q" name="ctx" type="_y4KvUItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7rotiEe-3nrFY8n5C-Q" name="exitPhase" specification="_y4L9cotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7r4tiEe-3nrFY8n5C-Q" name="ctx" type="_y4L9cItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7sItiEe-3nrFY8n5C-Q" name="exitSrcNode" specification="_y4Mkg4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7sYtiEe-3nrFY8n5C-Q" name="ctx" type="_y3KCsYtiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8B7sotiEe-3nrFY8n5C-Q" name="exitSnkNode" specification="_y4NLkotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8B7s4tiEe-3nrFY8n5C-Q" name="ctx" type="_y3LQ0ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8CisItiEe-3nrFY8n5C-Q" name="exitFlow" specification="_y4NyootiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8CisYtiEe-3nrFY8n5C-Q" name="ctx" type="_y3L34otiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ycF3UItiEe-3nrFY8n5C-Q" name="testPrintStdOut" method="_y8B7ootiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycF3UYtiEe-3nrFY8n5C-Q" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4HE8ItiEe-3nrFY8n5C-Q" name="WorkLoadListener" visibility="private" method="_y8BUnotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y4HE8otiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y4HE84tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y4HE8YtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4HE9ItiEe-3nrFY8n5C-Q" type="_ycEpMItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4HE9YtiEe-3nrFY8n5C-Q" name="buildNodesAndFlows" isStatic="true" method="_y8B7oItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4HE9otiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4HsAItiEe-3nrFY8n5C-Q" name="enterWarpName" method="_y8B7pItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4HsAYtiEe-3nrFY8n5C-Q" name="ctx" type="_y3GYUotiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4HsBYtiEe-3nrFY8n5C-Q" name="enterFlowName" method="_y8B7potiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4HsBotiEe-3nrFY8n5C-Q" name="ctx" type="_y3I0kItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4ITFYtiEe-3nrFY8n5C-Q" name="exitPriority" method="_y8B7qItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4I6IItiEe-3nrFY8n5C-Q" name="ctx" type="_y4ITE4tiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4JhMYtiEe-3nrFY8n5C-Q" name="exitPeriod" method="_y8B7qotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4JhMotiEe-3nrFY8n5C-Q" name="ctx" type="_y4I6JItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4LWYYtiEe-3nrFY8n5C-Q" name="exitDeadline" method="_y8B7rItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4LWYotiEe-3nrFY8n5C-Q" name="ctx" type="_y4KvUItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4L9cotiEe-3nrFY8n5C-Q" name="exitPhase" method="_y8B7rotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4L9c4tiEe-3nrFY8n5C-Q" name="ctx" type="_y4L9cItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4Mkg4tiEe-3nrFY8n5C-Q" name="exitSrcNode" method="_y8B7sItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4MkhItiEe-3nrFY8n5C-Q" name="ctx" type="_y3KCsYtiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4NLkotiEe-3nrFY8n5C-Q" name="exitSnkNode" method="_y8B7sotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4NLk4tiEe-3nrFY8n5C-Q" name="ctx" type="_y3LQ0ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4NyootiEe-3nrFY8n5C-Q" name="exitFlow" method="_y8CisItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4Nyo4tiEe-3nrFY8n5C-Q" name="ctx" type="_y3L34otiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ycI6oItiEe-3nrFY8n5C-Q" name="WorkLoadDescription">
              <ownedComment xmi:id="_3Fxw5JV2Ee-EOddEwqrIsA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <generalization xmi:id="_y4Pn0otiEe-3nrFY8n5C-Q" general="_yb8tYItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7JK0otiEe-3nrFY8n5C-Q" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7JK04tiEe-3nrFY8n5C-Q" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7Jx4ItiEe-3nrFY8n5C-Q" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7Jx4YtiEe-3nrFY8n5C-Q" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7Jx4otiEe-3nrFY8n5C-Q" name="description" visibility="private" type="_yYKZkItiEe-3nrFY8n5C-Q" association="_y9HgwYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7Jx5ItiEe-3nrFY8n5C-Q" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7KY8ItiEe-3nrFY8n5C-Q" name="fm" visibility="private" type="_yYd7kItiEe-3nrFY8n5C-Q" association="_y9HgxItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7KY8otiEe-3nrFY8n5C-Q" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8CisotiEe-3nrFY8n5C-Q" name="WorkLoadDescription" specification="_ycJhsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Cis4tiEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8CitItiEe-3nrFY8n5C-Q" type="_ycI6oItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8CitYtiEe-3nrFY8n5C-Q" name="visualization" specification="_ycKIw4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8CitotiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Cit4tiEe-3nrFY8n5C-Q" name="fileVisualization" specification="_ycKv0YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8CiuItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8CiuYtiEe-3nrFY8n5C-Q" name="toString" specification="_ycLW4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8CiuotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Ciu4tiEe-3nrFY8n5C-Q" name="initialize" specification="_ycMlAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8CivItiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ycJhsItiEe-3nrFY8n5C-Q" name="WorkLoadDescription" visibility="package" method="_y8CisotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ycKIwItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ycKIwYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ycJhsYtiEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycKIwotiEe-3nrFY8n5C-Q" type="_ycI6oItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycKIw4tiEe-3nrFY8n5C-Q" name="visualization" method="_y8CitYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4Pn0ItiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycKv0YtiEe-3nrFY8n5C-Q" name="fileVisualization" method="_y8Cit4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4Pn0YtiEe-3nrFY8n5C-Q" type="_yYKZkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycLW4ItiEe-3nrFY8n5C-Q" name="toString" method="_y8CiuYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycLW4YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycMlAItiEe-3nrFY8n5C-Q" name="initialize" visibility="private" method="_y8Ciu4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycMlAYtiEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_ycOaMItiEe-3nrFY8n5C-Q" name="WarpInterface">
              <ownedComment xmi:id="_3FyX8JV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_y4QO4ItiEe-3nrFY8n5C-Q" general="_yblhAItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_ycPBQItiEe-3nrFY8n5C-Q" name="toWorkload">
                <ownedParameter xmi:id="_y4QO4YtiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycPBQYtiEe-3nrFY8n5C-Q" name="toProgram">
                <ownedParameter xmi:id="_y4QO4otiEe-3nrFY8n5C-Q" type="_yaNA8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycPBQotiEe-3nrFY8n5C-Q" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_y4QO44tiEe-3nrFY8n5C-Q" type="_ya7ZsItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycPBQ4tiEe-3nrFY8n5C-Q" name="toSimulator">
                <ownedParameter xmi:id="_y4QO5ItiEe-3nrFY8n5C-Q" type="_ybidsItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycPoUItiEe-3nrFY8n5C-Q" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_y4Q18ItiEe-3nrFY8n5C-Q" type="_yZYhkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycPoUYtiEe-3nrFY8n5C-Q" name="toChannelAnalysis">
                <ownedParameter xmi:id="_y4Q18YtiEe-3nrFY8n5C-Q" type="_yXN-YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycPoUotiEe-3nrFY8n5C-Q" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_ycPoU4tiEe-3nrFY8n5C-Q" name="reliabilitiesMet">
                <ownedParameter xmi:id="_ycPoVItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycPoVYtiEe-3nrFY8n5C-Q" name="deadlinesMet">
                <ownedParameter xmi:id="_ycQPYItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ycQ2cItiEe-3nrFY8n5C-Q" name="WarpPoset">
              <ownedComment xmi:id="_3Fxw5ZV2Ee-EOddEwqrIsA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_y4RdAItiEe-3nrFY8n5C-Q" general="_yZ10kItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8DJwItiEe-3nrFY8n5C-Q" name="WarpPoset" specification="_y4Q18otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8DJwYtiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8DJwotiEe-3nrFY8n5C-Q" type="_ycQ2cItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8DJw4tiEe-3nrFY8n5C-Q" name="findCoordinator" specification="_y550sItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8DJxItiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8DJxYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_y4Q18otiEe-3nrFY8n5C-Q" name="WarpPoset" visibility="package" method="_y8DJwItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y4Q19ItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y4Q19YtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y4Q184tiEe-3nrFY8n5C-Q" name="workload" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4Q19otiEe-3nrFY8n5C-Q" type="_ycQ2cItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y550sItiEe-3nrFY8n5C-Q" name="findCoordinator" visibility="protected" method="_y8DJw4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y550sYtiEe-3nrFY8n5C-Q" name="nodesInFlow" type="_y2f7YItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y550sotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ycTSsItiEe-3nrFY8n5C-Q" name="WarpSystem">
              <ownedComment xmi:id="_0WTpYJW3Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y7KY84tiEe-3nrFY8n5C-Q" name="program" visibility="private" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y9IH0YtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7LAAItiEe-3nrFY8n5C-Q" name="workLoad" visibility="private" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y9IH1ItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7LAAotiEe-3nrFY8n5C-Q" name="ra" visibility="private" type="_ya7ZsItiEe-3nrFY8n5C-Q" association="_y9Iu4YtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7LABItiEe-3nrFY8n5C-Q" name="la" visibility="private" type="_yZYhkItiEe-3nrFY8n5C-Q" association="_y9Iu5ItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7LABotiEe-3nrFY8n5C-Q" name="ca" visibility="private" type="_yXN-YItiEe-3nrFY8n5C-Q" association="_y9JV8ItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7LnEYtiEe-3nrFY8n5C-Q" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7MOI4tiEe-3nrFY8n5C-Q" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7MOJItiEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7MOJotiEe-3nrFY8n5C-Q" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7MOJ4tiEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_y4RdAYtiEe-3nrFY8n5C-Q" client="_ycTSsItiEe-3nrFY8n5C-Q" supplier="_ycOaMItiEe-3nrFY8n5C-Q" contract="_ycOaMItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8DJyItiEe-3nrFY8n5C-Q" name="WarpSystem" specification="_y57C0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8DJyYtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8DJyotiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8DJy4tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8DJzItiEe-3nrFY8n5C-Q" type="_ycTSsItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8DJzYtiEe-3nrFY8n5C-Q" name="toWorkload" specification="_ycUg0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8DJzotiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8DJz4tiEe-3nrFY8n5C-Q" name="toProgram" specification="_ycVH4otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8DJ0ItiEe-3nrFY8n5C-Q" type="_yaNA8ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw0ItiEe-3nrFY8n5C-Q" name="toReliabilityAnalysis" specification="_ycWWAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw0YtiEe-3nrFY8n5C-Q" type="_ya7ZsItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(workLoad.getE2e(), workLoad.getMinPacketReceptionRate());&#xD;
   return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw1ItiEe-3nrFY8n5C-Q" name="toLatencyAnalysis" specification="_ycXkI4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw1YtiEe-3nrFY8n5C-Q" type="_yZYhkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw1otiEe-3nrFY8n5C-Q" name="toChannelAnalysis" specification="_ycYLM4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw14tiEe-3nrFY8n5C-Q" type="_yXN-YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw2ItiEe-3nrFY8n5C-Q" name="reliabilitiesMet" specification="_ycZZUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw2YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
       ra = new ReliabilityAnalysis(workLoad.getE2e(), workLoad.getMinPacketReceptionRate());&#xD;
   }&#xD;
   return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw2otiEe-3nrFY8n5C-Q" name="deadlinesMet" specification="_ycaAYotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw24tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw3ItiEe-3nrFY8n5C-Q" name="createProgram" specification="_y57p4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw3YtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8Dw3otiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8Dw34tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw4ItiEe-3nrFY8n5C-Q" name="getNumFaults" specification="_ycbOgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw4YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw4otiEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" specification="_ycb1k4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw44tiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw5ItiEe-3nrFY8n5C-Q" name="getE2e" specification="_ycdDsotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw5YtiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Dw5otiEe-3nrFY8n5C-Q" name="getName" specification="_yceR0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Dw54tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8EX4ItiEe-3nrFY8n5C-Q" name="getSchedulerName" specification="_yce44ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8EX4YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8EX4otiEe-3nrFY8n5C-Q" name="getNumTransmissions" specification="_ycff8otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8EX44tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8EX5ItiEe-3nrFY8n5C-Q" name="getOptimizationFlag" specification="_ycgHA4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8EX5YtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZBtOYJV4Ee-EOddEwqrIsA" name="toSimulator" specification="_ZBsAQJV4Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_ZBtOYZV4Ee-EOddEwqrIsA" type="_ybidsItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ycUg0ItiEe-3nrFY8n5C-Q" name="toWorkload" method="_y8DJzYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4SEEItiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycVH4otiEe-3nrFY8n5C-Q" name="toProgram" method="_y8DJz4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4SEEYtiEe-3nrFY8n5C-Q" type="_yaNA8ItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycWWAItiEe-3nrFY8n5C-Q" name="toReliabilityAnalysis" method="_y8Dw0ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4SEEotiEe-3nrFY8n5C-Q" type="_ya7ZsItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycXkI4tiEe-3nrFY8n5C-Q" name="toLatencyAnalysis" method="_y8Dw1ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4SrIYtiEe-3nrFY8n5C-Q" type="_yZYhkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycYLM4tiEe-3nrFY8n5C-Q" name="toChannelAnalysis" method="_y8Dw1otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4SrIotiEe-3nrFY8n5C-Q" type="_yXN-YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycZZUItiEe-3nrFY8n5C-Q" name="reliabilitiesMet" method="_y8Dw2ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycZZUYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycaAYotiEe-3nrFY8n5C-Q" name="deadlinesMet" method="_y8Dw2otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycaAY4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycbOgItiEe-3nrFY8n5C-Q" name="getNumFaults" method="_y8Dw4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycbOgYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycb1k4tiEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" method="_y8Dw4otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y57p5ItiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycdDsotiEe-3nrFY8n5C-Q" name="getE2e" method="_y8Dw5ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y58Q8ItiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yceR0ItiEe-3nrFY8n5C-Q" name="getName" method="_y8Dw5otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yceR0YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yce44ItiEe-3nrFY8n5C-Q" name="getSchedulerName" method="_y8EX4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yce44YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycff8otiEe-3nrFY8n5C-Q" name="getNumTransmissions" method="_y8EX4otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycff84tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycgHA4tiEe-3nrFY8n5C-Q" name="getOptimizationFlag" method="_y8EX5ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycgHBItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycguE4tiEe-3nrFY8n5C-Q" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_y57C0ItiEe-3nrFY8n5C-Q" name="WarpSystem" method="_y8DJyItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y57C1ItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y57C1YtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_y57C0YtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y57C0otiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y57C04tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y57C1otiEe-3nrFY8n5C-Q" type="_ycTSsItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y57p4ItiEe-3nrFY8n5C-Q" name="createProgram" visibility="private" method="_y8Dw3ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y57p4YtiEe-3nrFY8n5C-Q" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y57p4otiEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y57p44tiEe-3nrFY8n5C-Q" name="choice" type="_y5ng0ItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ZBsAQJV4Ee-EOddEwqrIsA" name="toSimulator" method="_ZBtOYJV4Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_ZBsAQZV4Ee-EOddEwqrIsA" type="_ybidsItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yclmkItiEe-3nrFY8n5C-Q" name="WorkLoad">
              <ownedComment xmi:id="_vy0FgJW2Ee-EOddEwqrIsA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
Initializes nodes and flows from the specified workload description file (`inputFileName`). &#xD;
Default values for the second constructor are m = 0.9, e2e = 0.99, and numFaults = 1.&#xD;
&#xD;
@author sgoddard&#xD;
@jcbates&#xD;
@version 1.4&#xD;
&#xD;
 *&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_y4ZY1ItiEe-3nrFY8n5C-Q" general="_ycI6oItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7M1MYtiEe-3nrFY8n5C-Q" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7M1MotiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7NcQItiEe-3nrFY8n5C-Q" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7NcQYtiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7NcQotiEe-3nrFY8n5C-Q" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7NcQ4tiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7NcRItiEe-3nrFY8n5C-Q" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7NcRYtiEe-3nrFY8n5C-Q" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7NcRotiEe-3nrFY8n5C-Q" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7NcR4tiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7NcSItiEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_y5pWBItiEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7NcSYtiEe-3nrFY8n5C-Q" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7NcSotiEe-3nrFY8n5C-Q" name="e2e" visibility="private" type="_y5pWBItiEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7NcS4tiEe-3nrFY8n5C-Q" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7ODUYtiEe-3nrFY8n5C-Q" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7ODUotiEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7ODU4tiEe-3nrFY8n5C-Q" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7ODVItiEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7ODVotiEe-3nrFY8n5C-Q" name="flows" type="_yY5ZYItiEe-3nrFY8n5C-Q" association="_y8Yg9YtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7ODV4tiEe-3nrFY8n5C-Q" name="nodes" type="_yZtRsItiEe-3nrFY8n5C-Q" association="_y8ZIAItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7OqYItiEe-3nrFY8n5C-Q" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7OqYotiEe-3nrFY8n5C-Q" name="flowNamesInOriginalOrder" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y9JV84tiEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7PRcItiEe-3nrFY8n5C-Q" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7PRcYtiEe-3nrFY8n5C-Q" name="flowNamesInPriorityOrder" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y9JV9otiEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7P4gItiEe-3nrFY8n5C-Q" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_y4XjoItiEe-3nrFY8n5C-Q" client="_yclmkItiEe-3nrFY8n5C-Q" supplier="_ya9O4ItiEe-3nrFY8n5C-Q" contract="_ya9O4ItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8EX5otiEe-3nrFY8n5C-Q" name="WorkLoad" specification="_y59fEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8EX54tiEe-3nrFY8n5C-Q" name="m" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8EX6ItiEe-3nrFY8n5C-Q" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8EX6YtiEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8EX6otiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
   setDefaultParameters();&#xD;
   this.minPacketReceptionRate = (m != null) ? m : 0.9; // Default to 0.9 if null&#xD;
   this.e2e = (e2e != null) ? e2e : 0.99; // Default to 0.99 if null&#xD;
   WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8EX64tiEe-3nrFY8n5C-Q" name="WorkLoad" specification="_y5-GIotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8EX7ItiEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8EX7YtiEe-3nrFY8n5C-Q" name="m" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8EX7otiEe-3nrFY8n5C-Q" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8EX74tiEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8EX8ItiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
   setDefaultParameters();&#xD;
   this.numFaults = (numFaults != null) ? numFaults : 1; // Default to 1 if null&#xD;
   this.minPacketReceptionRate = (m != null) ? m : 0.9; // Default to 0.9 if null&#xD;
   this.e2e = (e2e != null) ? e2e : 0.99; // Default to 0.99 if null&#xD;
   WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E-8ItiEe-3nrFY8n5C-Q" name="setDefaultParameters" specification="_ycoC0ItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E-8YtiEe-3nrFY8n5C-Q" name="getE2e" specification="_ycoC0YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E-8otiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E-84tiEe-3nrFY8n5C-Q" name="getIntForFlowNames" specification="_ycop4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E-9ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E-9YtiEe-3nrFY8n5C-Q" name="getName" specification="_ycop4otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E-9otiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E-94tiEe-3nrFY8n5C-Q" name="setMinPacketReceptionRate" specification="_y5-tMYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E--ItiEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E--YtiEe-3nrFY8n5C-Q" name="getMaxPhase" specification="_ycpQ8ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E--otiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E--4tiEe-3nrFY8n5C-Q" name="getMinPeriod" specification="_ycpQ8otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E-_ItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E-_YtiEe-3nrFY8n5C-Q" name="setE2e" specification="_y5-tM4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E-_otiEe-3nrFY8n5C-Q" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E-_4tiEe-3nrFY8n5C-Q" name="setIntForFlowNames" specification="_ycp4AItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E_AItiEe-3nrFY8n5C-Q" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E_AYtiEe-3nrFY8n5C-Q" name="setName" specification="_ycp4AotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E_AotiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E_A4tiEe-3nrFY8n5C-Q" name="setNodeChannel" specification="_ycqfEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E_BItiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8E_BYtiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8E_BotiEe-3nrFY8n5C-Q" name="getNodeChannel" specification="_ycqfE4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8E_B4tiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8E_CItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmAItiEe-3nrFY8n5C-Q" name="addFlow" specification="_ycrGIItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmAYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmAotiEe-3nrFY8n5C-Q" name="isIntForNodeNames" specification="_ycrtMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmA4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmBItiEe-3nrFY8n5C-Q" name="isIntForFlowNames" specification="_ycrtMotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmBYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmBotiEe-3nrFY8n5C-Q" name="addNodeToFlow" specification="_ycsUQYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmB4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmCItiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmCYtiEe-3nrFY8n5C-Q" name="getFlowPriority" specification="_ycs7UItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmCotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmC4tiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmDItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmDYtiEe-3nrFY8n5C-Q" name="setFlowPriority" specification="_ycs7VItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmDotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmD4tiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmEItiEe-3nrFY8n5C-Q" name="setFlowPeriod" specification="_yctiYotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmEYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmEotiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmE4tiEe-3nrFY8n5C-Q" name="setFlowDeadline" specification="_ycuJcItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmFItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmFYtiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmFotiEe-3nrFY8n5C-Q" name="setFlowPhase" specification="_ycuJc4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmF4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmGItiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8FmGYtiEe-3nrFY8n5C-Q" name="getFlowIndex" specification="_ycuwgItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8FmGotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8FmG4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNEItiEe-3nrFY8n5C-Q" name="getFlowPriority" specification="_ycuwg4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8GNEYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8GNEotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNE4tiEe-3nrFY8n5C-Q" name="getFlowPeriod" specification="_ycvXkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8GNFItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8GNFYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNFotiEe-3nrFY8n5C-Q" name="getFlowDeadline" specification="_ycvXk4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8GNF4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8GNGItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNGYtiEe-3nrFY8n5C-Q" name="getFlowPhase" specification="_ycv-ootiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8GNGotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8GNG4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNHItiEe-3nrFY8n5C-Q" name="getFlowTxAttemptsPerLink" specification="_ycv-pYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8GNHYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8GNHotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNH4tiEe-3nrFY8n5C-Q" name="setFlowsInPriorityOrder" specification="_ycwlsYtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNIItiEe-3nrFY8n5C-Q" name="setFlowsInDMorder" specification="_ycwlsotiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNIYtiEe-3nrFY8n5C-Q" name="setFlowsInRMorder" specification="_ycwls4tiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNIotiEe-3nrFY8n5C-Q" name="setFlowsInRealTimeHARTorder" specification="_ycwltItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNI4tiEe-3nrFY8n5C-Q" name="finalizeCurrentFlow" specification="_ycwltYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8GNJItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8GNJYtiEe-3nrFY8n5C-Q" name="nextReleaseTime" specification="_ycxMwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8GNJotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8GNJ4tiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8GNKItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8G0IItiEe-3nrFY8n5C-Q" name="nextAbsoluteDeadline" specification="_ycxMxItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8G0IYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8G0IotiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8G0I4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8G0JItiEe-3nrFY8n5C-Q" name="finalizeFlowWithE2eParameters" specification="_ycxz0YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8G0JYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis ra = new ReliabilityAnalysis(numFaults);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = ra.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8G0JotiEe-3nrFY8n5C-Q" name="finalizeFlowWithFixedFaultTolerance" specification="_ycxz04tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8G0J4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis ra = new ReliabilityAnalysis(e2e, minPacketReceptionRate);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = ra.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8G0MYtiEe-3nrFY8n5C-Q" name="getNodeNamesOrderedAlphabetically" specification="_ycya4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8G0MotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8G0M4tiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8G0NItiEe-3nrFY8n5C-Q" name="getFlow" specification="_yczB8YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8G0NYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8G0NotiEe-3nrFY8n5C-Q" type="_yYmecItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8G0N4tiEe-3nrFY8n5C-Q" name="getFlowNames" specification="_yczB84tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8G0OItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8G0OYtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8G0OotiEe-3nrFY8n5C-Q" name="getNodeIndex" specification="_yczpAYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8G0O4tiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8G0PItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8HbMItiEe-3nrFY8n5C-Q" name="getNodesInFlow" specification="_yc0QEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8HbMYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8HbMotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8HbM4tiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8HbNItiEe-3nrFY8n5C-Q" name="getHyperPeriod" specification="_yc0QFYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8HbNYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8HbNotiEe-3nrFY8n5C-Q" name="getTotalTxAttemptsInFlow" specification="_yc03IYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8HbN4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8HbOItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8HbOYtiEe-3nrFY8n5C-Q" name="getNumTxAttemptsPerLink" specification="_yc1eMItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8HbOotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8HbO4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8HbPItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8HbPYtiEe-3nrFY8n5C-Q" name="addEdge" specification="_y4ZY0YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8HbPotiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8HbP4tiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8HbQItiEe-3nrFY8n5C-Q" name="maxFlowLength" specification="_yc2FQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8HbQYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ycoC0ItiEe-3nrFY8n5C-Q" name="setDefaultParameters" visibility="private" method="_y8E-8ItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fg5W2Ee-EOddEwqrIsA">
                  <body>Initialize the default parameters for the WorkLoad object</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ycoC0YtiEe-3nrFY8n5C-Q" name="getE2e" method="_y8E-8YtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FhJW2Ee-EOddEwqrIsA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5-tMItiEe-3nrFY8n5C-Q" type="_y5pWBItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ycop4ItiEe-3nrFY8n5C-Q" name="getIntForFlowNames" method="_y8E-84tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FhZW2Ee-EOddEwqrIsA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycop4YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycop4otiEe-3nrFY8n5C-Q" name="getName" method="_y8E-9YtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FhpW2Ee-EOddEwqrIsA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycop44tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycpQ8ItiEe-3nrFY8n5C-Q" name="getMaxPhase" method="_y8E--YtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FiJW2Ee-EOddEwqrIsA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycpQ8YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycpQ8otiEe-3nrFY8n5C-Q" name="getMinPeriod" method="_y8E--4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FiZW2Ee-EOddEwqrIsA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycpQ84tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycp4AItiEe-3nrFY8n5C-Q" name="setIntForFlowNames" method="_y8E-_4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fi5W2Ee-EOddEwqrIsA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycp4AYtiEe-3nrFY8n5C-Q" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycp4AotiEe-3nrFY8n5C-Q" name="setName" method="_y8E_AYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FjJW2Ee-EOddEwqrIsA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycp4A4tiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycqfEItiEe-3nrFY8n5C-Q" name="setNodeChannel" method="_y8E_A4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FjZW2Ee-EOddEwqrIsA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycqfEYtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycqfEotiEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycqfE4tiEe-3nrFY8n5C-Q" name="getNodeChannel" method="_y8E_BotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FjpW2Ee-EOddEwqrIsA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycqfFItiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycqfFYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycrGIItiEe-3nrFY8n5C-Q" name="addFlow" method="_y8FmAItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fj5W2Ee-EOddEwqrIsA">
                  <body>add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
    default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
    This will create a default priority equal to the order listed in the input graph file. We&#xD;
    also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
    initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
    optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
    over written&#xD;
    &#xD;
    Initializes default parameters for the WorkLoad object, including settings for node and flow names,  &#xD;
    and initializes maps for flow and node storage.&#xD;
 @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycrGIYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycrtMItiEe-3nrFY8n5C-Q" name="isIntForNodeNames" method="_y8FmAotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FkJW2Ee-EOddEwqrIsA">
                  <body>@return returns true if all node names are ints</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycrtMYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycrtMotiEe-3nrFY8n5C-Q" name="isIntForFlowNames" method="_y8FmBItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycsUQItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycsUQYtiEe-3nrFY8n5C-Q" name="addNodeToFlow" method="_y8FmBotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FkZW2Ee-EOddEwqrIsA">
                  <body>Adds node to flow creating one if no node exists &#xD;
@param flowName&#xD;
@param nodeName</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycsUQotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycsUQ4tiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycs7UItiEe-3nrFY8n5C-Q" name="getFlowPriority" method="_y8FmCYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FkpW2Ee-EOddEwqrIsA">
                  <body>Iterates over nodes and returns the priority node &#xD;
&#xD;
@param flowName&#xD;
@param nodeName&#xD;
@return the node priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycs7UYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycs7UotiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycs7U4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycs7VItiEe-3nrFY8n5C-Q" name="setFlowPriority" method="_y8FmDYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fk5W2Ee-EOddEwqrIsA">
                  <body>Sets the flow node and makes it priority&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_yctiYItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yctiYYtiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yctiYotiEe-3nrFY8n5C-Q" name="setFlowPeriod" method="_y8FmEItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FlJW2Ee-EOddEwqrIsA">
                  <body>Takes in the flowNode and sets the period&#xD;
	 * @param flowName&#xD;
	 * @param period</body>
                </ownedComment>
                <ownedParameter xmi:id="_yctiY4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yctiZItiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycuJcItiEe-3nrFY8n5C-Q" name="setFlowDeadline" method="_y8FmE4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FlZW2Ee-EOddEwqrIsA">
                  <body>Gets the flow Node and sets the deadline &#xD;
   * @param flowName&#xD;
   * @param deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycuJcYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycuJcotiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycuJc4tiEe-3nrFY8n5C-Q" name="setFlowPhase" method="_y8FmFotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FlpW2Ee-EOddEwqrIsA">
                  <body>Gets the flow Node and sets the Phase&#xD;
   * @param flowName&#xD;
   * @param phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycuJdItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycuJdYtiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycuwgItiEe-3nrFY8n5C-Q" name="getFlowIndex" method="_y8FmGYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fl5W2Ee-EOddEwqrIsA">
                  <body>Sets the flowNode with the flowName and Returns the Nodes Index&#xD;
   * @param flowName&#xD;
   * @return flowNode Index</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycuwgYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycuwgotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycuwg4tiEe-3nrFY8n5C-Q" name="getFlowPriority" method="_y8GNEItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FmJW2Ee-EOddEwqrIsA">
                  <body>Takes in the flowName, sets it to flowNode, and returns the Node Priority&#xD;
   * @param flowName&#xD;
   * @return flowNode Priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycuwhItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycuwhYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycvXkItiEe-3nrFY8n5C-Q" name="getFlowPeriod" method="_y8GNE4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FmZW2Ee-EOddEwqrIsA">
                  <body>Takes in flowName, sets it to flowNode, and returns the Nodes Period&#xD;
   * @param flowName&#xD;
   * @return flowNode Period</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycvXkYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycvXkotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycvXk4tiEe-3nrFY8n5C-Q" name="getFlowDeadline" method="_y8GNFotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FmpW2Ee-EOddEwqrIsA">
                  <body>gets flow deadline from flowname&#xD;
   * @param flowName&#xD;
   * @return flowDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycv-oItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycv-oYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycv-ootiEe-3nrFY8n5C-Q" name="getFlowPhase" method="_y8GNGYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fm5W2Ee-EOddEwqrIsA">
                  <body>Retrieves the phase of a flow node based on the specified flow name.&#xD;
   * @param flowName&#xD;
   * @return Flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycv-o4tiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycv-pItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycv-pYtiEe-3nrFY8n5C-Q" name="getFlowTxAttemptsPerLink" method="_y8GNHItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FnJW2Ee-EOddEwqrIsA">
                  <body>Retrieves priority of a specified node within a given flow&#xD;
   * @param flowName&#xD;
   * @return flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycv-potiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycwlsItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycwlsYtiEe-3nrFY8n5C-Q" name="setFlowsInPriorityOrder" method="_y8GNH4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FnZW2Ee-EOddEwqrIsA">
                  <body>Sorts the flows in priority order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ycwlsotiEe-3nrFY8n5C-Q" name="setFlowsInDMorder" method="_y8GNIItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FnpW2Ee-EOddEwqrIsA">
                  <body>Sorts the flows in Deadline-Monotonic (DM) order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ycwls4tiEe-3nrFY8n5C-Q" name="setFlowsInRMorder" method="_y8GNIYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fn5W2Ee-EOddEwqrIsA">
                  <body>Create list Flow objects and sort them by the secondary key (Priority)&#xD;
   * Next sort them by the primary key (Period) and create flowNamesInPriority Order&#xD;
   * With names in requested order</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ycwltItiEe-3nrFY8n5C-Q" name="setFlowsInRealTimeHARTorder" method="_y8GNIotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FoJW2Ee-EOddEwqrIsA">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_ycwltYtiEe-3nrFY8n5C-Q" name="finalizeCurrentFlow" method="_y8GNI4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycwltotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycxMwItiEe-3nrFY8n5C-Q" name="nextReleaseTime" method="_y8GNJYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycxMwYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycxMwotiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycxMw4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycxMxItiEe-3nrFY8n5C-Q" name="nextAbsoluteDeadline" method="_y8G0IItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycxMxYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycxMxotiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ycxz0ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycxz0YtiEe-3nrFY8n5C-Q" name="finalizeFlowWithE2eParameters" visibility="private" method="_y8G0JItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycxz0otiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycxz04tiEe-3nrFY8n5C-Q" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_y8G0JotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ycxz1ItiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ycya4ItiEe-3nrFY8n5C-Q" name="getNodeNamesOrderedAlphabetically" method="_y8G0MYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FoZW2Ee-EOddEwqrIsA">
                  <body>Retrieves and returns an array of node names sorted alphabetically or numerically if the names represent integers.&#xD;
   * @return nodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_ycya4YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ycya4otiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yczB8YtiEe-3nrFY8n5C-Q" name="getFlow" visibility="private" method="_y8G0NItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yczB8otiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4ZY0ItiEe-3nrFY8n5C-Q" type="_yYmecItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_yczB84tiEe-3nrFY8n5C-Q" name="getFlowNames" method="_y8G0N4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FopW2Ee-EOddEwqrIsA">
                  <body>to return an array of flow names in the order they were read from the graph file&#xD;
   * @return Flow Names in Original Order</body>
                </ownedComment>
                <ownedParameter xmi:id="_yczB9ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yczB9YtiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yczpAYtiEe-3nrFY8n5C-Q" name="getNodeIndex" method="_y8G0OotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fo5W2Ee-EOddEwqrIsA">
                  <body>return the dictionary of nodes&#xD;
   * @param nodeName&#xD;
   * @return node index</body>
                </ownedComment>
                <ownedParameter xmi:id="_yczpAotiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yczpA4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yc0QEItiEe-3nrFY8n5C-Q" name="getNodesInFlow" method="_y8HbMItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FpJW2Ee-EOddEwqrIsA">
                  <body>Returns an array of node names for the specified flow in the order they appear in the flow specification.&#xD;
   * @param flowName&#xD;
   * @return Array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_yc0QEYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yc0QEotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yc0QE4tiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yc0QFYtiEe-3nrFY8n5C-Q" name="getHyperPeriod" method="_y8HbNItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0skJW2Ee-EOddEwqrIsA">
                  <body>Set hyperPeriods to 1 and find the LCM and update the hyperPeriod&#xD;
   * @return the HyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_yc03IItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yc03IYtiEe-3nrFY8n5C-Q" name="getTotalTxAttemptsInFlow" method="_y8HbNotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0skZW2Ee-EOddEwqrIsA">
                  <body>Gets the total transmission attempts for the specified flow and returns it as total cost&#xD;
   * @param flowName&#xD;
   * @return totalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_yc03IotiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yc03I4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yc1eMItiEe-3nrFY8n5C-Q" name="getNumTxAttemptsPerLink" method="_y8HbOYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0skpW2Ee-EOddEwqrIsA">
                  <body>Retrieves the number of transmission attempts for each link in the specified flow.&#xD;
   * @param flowName&#xD;
   * @return return an array of the number of transmission needed for each</body>
                </ownedComment>
                <ownedParameter xmi:id="_yc1eMYtiEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yc1eMotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_yc1eM4tiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yc2FQItiEe-3nrFY8n5C-Q" name="maxFlowLength" method="_y8HbQItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0slJW2Ee-EOddEwqrIsA">
                  <body>Start with the max flow length to 0 return the max length of flow Nodes&#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_yc2FQYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4ZY0YtiEe-3nrFY8n5C-Q" name="addEdge" method="_y8HbPYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0sk5W2Ee-EOddEwqrIsA">
                  <body>Get the node object and add it to the edge &#xD;
   * @param nodeName&#xD;
   * @param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4ZY0otiEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4ZY04tiEe-3nrFY8n5C-Q" name="edge" type="_yYPSEItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y59fEItiEe-3nrFY8n5C-Q" name="WorkLoad" visibility="public" method="_y8EX5otiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y59fFItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5-GIItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_vy0FgZW2Ee-EOddEwqrIsA">
                  <body>Constructs a WorkLoad object by reading and processing an input file to build node and flow data.&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_y59fEYtiEe-3nrFY8n5C-Q" name="m" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y59fEotiEe-3nrFY8n5C-Q" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y59fE4tiEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5-GIYtiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5-GIotiEe-3nrFY8n5C-Q" name="WorkLoad" visibility="public" method="_y8EX64tiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y5-GJ4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y5-GKItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_vy0FgpW2Ee-EOddEwqrIsA">
                  <body>Constructs a WorkLoad object with specified fault tolerance parameters by reading and processing an input file.&#xD;
   * @param numFaults Number of faults allowed per flow&#xD;
   * @param m Minimum packet reception rate&#xD;
   * @param e2e End-to-end reliability requirement&#xD;
   * @param inputFileName Name of the input file</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5-GI4tiEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5-GJItiEe-3nrFY8n5C-Q" name="m" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5-GJYtiEe-3nrFY8n5C-Q" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y5-GJotiEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y5-GKYtiEe-3nrFY8n5C-Q" type="_yclmkItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5-tMYtiEe-3nrFY8n5C-Q" name="setMinPacketReceptionRate" method="_y8E-94tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0Fh5W2Ee-EOddEwqrIsA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5-tMotiEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y5-tM4tiEe-3nrFY8n5C-Q" name="setE2e" method="_y8E-_YtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_vy0FipW2Ee-EOddEwqrIsA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_y5_UQItiEe-3nrFY8n5C-Q" name="e2e" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_yc-BEItiEe-3nrFY8n5C-Q" name="WarpDSL">
              <ownedComment xmi:id="_3Fxw95V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y7QfkItiEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RGoItiEe-3nrFY8n5C-Q" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7RGoYtiEe-3nrFY8n5C-Q" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RGootiEe-3nrFY8n5C-Q" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7RGo4tiEe-3nrFY8n5C-Q" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RGpItiEe-3nrFY8n5C-Q" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpUItiEe-3nrFY8n5C-Q" name="getInstructionParameters" specification="_ydC5kItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8IpUYtiEe-3nrFY8n5C-Q" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8IpUotiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ydC5kItiEe-3nrFY8n5C-Q" name="getInstructionParameters" method="_y8IpUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ydC5kYtiEe-3nrFY8n5C-Q" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y6CXkItiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_yc_PMItiEe-3nrFY8n5C-Q" name="InstructionParameters">
                <ownedAttribute xmi:id="_y7RGpYtiEe-3nrFY8n5C-Q" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RGpotiEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7RGp4tiEe-3nrFY8n5C-Q" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RGqItiEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7RGqYtiEe-3nrFY8n5C-Q" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RtsItiEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7RtsYtiEe-3nrFY8n5C-Q" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RtsotiEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7Rts4tiEe-3nrFY8n5C-Q" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RttItiEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7RttYtiEe-3nrFY8n5C-Q" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7RttotiEe-3nrFY8n5C-Q" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7RtuItiEe-3nrFY8n5C-Q" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7SUwItiEe-3nrFY8n5C-Q" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICQItiEe-3nrFY8n5C-Q" name="getCoordinator" specification="_yc_2QItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICQYtiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICQotiEe-3nrFY8n5C-Q" name="setCoordinator" specification="_ydAdUYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICQ4tiEe-3nrFY8n5C-Q" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICRItiEe-3nrFY8n5C-Q" name="setName" specification="_ydBEYItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICRYtiEe-3nrFY8n5C-Q" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICRotiEe-3nrFY8n5C-Q" name="setFlow" specification="_ydBEYotiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICR4tiEe-3nrFY8n5C-Q" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICSItiEe-3nrFY8n5C-Q" name="setSrc" specification="_ydBEZItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICSYtiEe-3nrFY8n5C-Q" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICSotiEe-3nrFY8n5C-Q" name="setSnk" specification="_ydBrcYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICS4tiEe-3nrFY8n5C-Q" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICTItiEe-3nrFY8n5C-Q" name="setChannel" specification="_ydBrc4tiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICTYtiEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8ICTotiEe-3nrFY8n5C-Q" name="unused" specification="_ydCSgItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8ICT4tiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_yc_2QItiEe-3nrFY8n5C-Q" name="getCoordinator" method="_y8ICQItiEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_3Fxw-JV2Ee-EOddEwqrIsA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ydAdUItiEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ydAdUYtiEe-3nrFY8n5C-Q" name="setCoordinator" method="_y8ICQotiEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_3Fxw-ZV2Ee-EOddEwqrIsA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_ydAdUotiEe-3nrFY8n5C-Q" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ydBEYItiEe-3nrFY8n5C-Q" name="setName" visibility="private" method="_y8ICRItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_ydBEYYtiEe-3nrFY8n5C-Q" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ydBEYotiEe-3nrFY8n5C-Q" name="setFlow" visibility="private" method="_y8ICRotiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_ydBEY4tiEe-3nrFY8n5C-Q" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ydBEZItiEe-3nrFY8n5C-Q" name="setSrc" visibility="private" method="_y8ICSItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_ydBrcItiEe-3nrFY8n5C-Q" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ydBrcYtiEe-3nrFY8n5C-Q" name="setSnk" visibility="private" method="_y8ICSotiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_ydBrcotiEe-3nrFY8n5C-Q" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ydBrc4tiEe-3nrFY8n5C-Q" name="setChannel" visibility="private" method="_y8ICTItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_ydBrdItiEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_ydCSgItiEe-3nrFY8n5C-Q" name="unused" method="_y8ICTotiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_ydCSgYtiEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_ydEHsItiEe-3nrFY8n5C-Q" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_y6DlsItiEe-3nrFY8n5C-Q" general="_y6CXkYtiEe-3nrFY8n5C-Q"/>
                <ownedAttribute xmi:id="_y7SUwYtiEe-3nrFY8n5C-Q" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_y7S70ItiEe-3nrFY8n5C-Q" name="instructionParametersArrayList" visibility="package" type="_y2f7YItiEe-3nrFY8n5C-Q" association="_y9J9AYtiEe-3nrFY8n5C-Q"/>
                <ownedAttribute xmi:id="_y7S704tiEe-3nrFY8n5C-Q" name="instructionParameters" visibility="package" type="_y3SlkYtiEe-3nrFY8n5C-Q" association="_y9J9BItiEe-3nrFY8n5C-Q"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpU4tiEe-3nrFY8n5C-Q" name="ListenerDsl" specification="_ydEHsYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpVItiEe-3nrFY8n5C-Q" type="_ydEHsItiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpVYtiEe-3nrFY8n5C-Q" name="getInstructionParameters" specification="_ydEuw4tiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpVotiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpV4tiEe-3nrFY8n5C-Q" name="enterAction" specification="_y4dDMotiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpWItiEe-3nrFY8n5C-Q" name="ctx" type="_y4dDMItiEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpWYtiEe-3nrFY8n5C-Q" name="exitAction" specification="_y4dqQ4tiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpWotiEe-3nrFY8n5C-Q" name="ctx" type="_y4dDMItiEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpW4tiEe-3nrFY8n5C-Q" name="exitFlowName" specification="_y4e4YotiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpXItiEe-3nrFY8n5C-Q" name="ctx" type="_y4e4YItiEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpXYtiEe-3nrFY8n5C-Q" name="exitCmd" specification="_y4ffdYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpXotiEe-3nrFY8n5C-Q" name="ctx" type="_y4ffc4tiEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpX4tiEe-3nrFY8n5C-Q" name="exitSrcNode" specification="_y4hUoItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpYItiEe-3nrFY8n5C-Q" name="ctx" type="_y4gGhItiEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpYYtiEe-3nrFY8n5C-Q" name="exitSnkNode" specification="_y4h7sYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpYotiEe-3nrFY8n5C-Q" name="ctx" type="_y4hUpYtiEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8IpY4tiEe-3nrFY8n5C-Q" name="exitChannel" specification="_y4iixItiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y8IpZItiEe-3nrFY8n5C-Q" name="ctx" type="_y4iiwotiEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_ydEHsYtiEe-3nrFY8n5C-Q" name="ListenerDsl" visibility="package" method="_y8IpU4tiEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_ydEuwItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_ydEuwYtiEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_ydEuwotiEe-3nrFY8n5C-Q" type="_ydEHsItiEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_ydEuw4tiEe-3nrFY8n5C-Q" name="getInstructionParameters" method="_y8IpVYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y6C-oYtiEe-3nrFY8n5C-Q" type="_y2f7YItiEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_y4dDMotiEe-3nrFY8n5C-Q" name="enterAction" method="_y8IpV4tiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y4dDM4tiEe-3nrFY8n5C-Q" name="ctx" type="_y4dDMItiEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_y4dqQ4tiEe-3nrFY8n5C-Q" name="exitAction" method="_y8IpWYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y4dqRItiEe-3nrFY8n5C-Q" name="ctx" type="_y4dDMItiEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_y4e4YotiEe-3nrFY8n5C-Q" name="exitFlowName" method="_y8IpW4tiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y4e4Y4tiEe-3nrFY8n5C-Q" name="ctx" type="_y4e4YItiEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_y4ffdYtiEe-3nrFY8n5C-Q" name="exitCmd" method="_y8IpXYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y4gGgItiEe-3nrFY8n5C-Q" name="ctx" type="_y4ffc4tiEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_y4hUoItiEe-3nrFY8n5C-Q" name="exitSrcNode" method="_y8IpX4tiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y4hUoYtiEe-3nrFY8n5C-Q" name="ctx" type="_y4gGhItiEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_y4h7sYtiEe-3nrFY8n5C-Q" name="exitSnkNode" method="_y8IpYYtiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y4h7sotiEe-3nrFY8n5C-Q" name="ctx" type="_y4hUpYtiEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_y4iixItiEe-3nrFY8n5C-Q" name="exitChannel" method="_y8IpY4tiEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_y4iixYtiEe-3nrFY8n5C-Q" name="ctx" type="_y4iiwotiEe-3nrFY8n5C-Q"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ydK1YItiEe-3nrFY8n5C-Q" name="Warp">
              <ownedComment xmi:id="_3Fxw7ZV2Ee-EOddEwqrIsA">
                <body>The Warp class sets default values of constants and also sets the warp parameters for the&#xD;
given input. It creates and visualizes any requested output files and runs verification&#xD;
checks to make sure deadlines and reliability targets are met, and that there are no &#xD;
channel conflicts. Runs additional tests to make sure everything will run smoothly. This&#xD;
class also prints out all warp parameters along with Boolean expressions for if any flags&#xD;
are requested. &#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedAttribute xmi:id="_y7UJ8ItiEe-3nrFY8n5C-Q" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7UJ8YtiEe-3nrFY8n5C-Q" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UJ8otiEe-3nrFY8n5C-Q" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_y5pWBItiEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7UJ84tiEe-3nrFY8n5C-Q" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UJ9ItiEe-3nrFY8n5C-Q" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_y5pWBItiEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7UJ9YtiEe-3nrFY8n5C-Q" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UJ9otiEe-3nrFY8n5C-Q" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7UJ94tiEe-3nrFY8n5C-Q" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UJ-ItiEe-3nrFY8n5C-Q" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_y39T8ItiEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7UJ-YtiEe-3nrFY8n5C-Q" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UxAItiEe-3nrFY8n5C-Q" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7UxAYtiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UxAotiEe-3nrFY8n5C-Q" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UxBItiEe-3nrFY8n5C-Q" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7UxBotiEe-3nrFY8n5C-Q" name="minLQ" visibility="private" isStatic="true" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7VYEYtiEe-3nrFY8n5C-Q" name="e2e" visibility="private" isStatic="true" type="_y5pWBItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7VYE4tiEe-3nrFY8n5C-Q" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7VYFYtiEe-3nrFY8n5C-Q" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7VYF4tiEe-3nrFY8n5C-Q" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7V_IYtiEe-3nrFY8n5C-Q" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7V_I4tiEe-3nrFY8n5C-Q" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7V_JYtiEe-3nrFY8n5C-Q" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7WmMItiEe-3nrFY8n5C-Q" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7WmMotiEe-3nrFY8n5C-Q" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7WmNItiEe-3nrFY8n5C-Q" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7WmNotiEe-3nrFY8n5C-Q" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7XNQItiEe-3nrFY8n5C-Q" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7XNQYtiEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7XNQ4tiEe-3nrFY8n5C-Q" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7XNRYtiEe-3nrFY8n5C-Q" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7X0UYtiEe-3nrFY8n5C-Q" name="schedulerSelected" visibility="private" isStatic="true" type="_y39T8ItiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8JQYItiEe-3nrFY8n5C-Q" name="main" specification="_ydNRoItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8JQYYtiEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8JQYotiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8JQaYtiEe-3nrFY8n5C-Q" name="verifyPerformanceRequirements" specification="_y4m0NotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8JQaotiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8J3cItiEe-3nrFY8n5C-Q" name="verifyReliabilities" specification="_y4nbQItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8J3cYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8J3cotiEe-3nrFY8n5C-Q" name="verifyDeadlines" specification="_y4nbQotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8J3c4tiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8J3dItiEe-3nrFY8n5C-Q" name="verifyNoChannelConflicts" specification="_y4nbRItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8J3dYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8J3dotiEe-3nrFY8n5C-Q" name="setWarpParameters" specification="_ydOfwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8J3d4tiEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_y8J3eItiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8J3eYtiEe-3nrFY8n5C-Q" name="printWarpParameters" specification="_ydOfxItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BtoLQJV1Ee-EOddEwqrIsA" name="visualize" specification="_Bs6ZkJV1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtoLQZV1Ee-EOddEwqrIsA" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtoLQpV1Ee-EOddEwqrIsA" name="choice" type="_y3_JIYtiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BtoyUJV1Ee-EOddEwqrIsA" name="visualize" specification="_Bs6Zk5V1Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BtoyUZV1Ee-EOddEwqrIsA" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BtoyUpV1Ee-EOddEwqrIsA" name="choice" type="_y3-iEItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ydNRoItiEe-3nrFY8n5C-Q" name="main" isStatic="true" method="_y8JQYItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw7pV2Ee-EOddEwqrIsA">
                  <body>Main method sets warp parameters with given input arguments and prints out the parameters&#xD;
   * if in verbose mode. It creates and visualizes the new workload. If the all output files &#xD;
   * flag is requested, it visualizes all workLoad Program choices and creates and visualizes&#xD;
   * the Warp System with all warp System choices. If not all output files are requested, it&#xD;
   * still visualizes the ones asked for of warp workload, source program, and other requested&#xD;
   * output items.&#xD;
   * @param args Command-line arguments passed to the application.</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydNRoYtiEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ydNRootiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydOfwItiEe-3nrFY8n5C-Q" name="setWarpParameters" visibility="private" isStatic="true" method="_y8J3dotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw9ZV2Ee-EOddEwqrIsA">
                  <body>Creates holder objects to store results and creates the parser to process and comprehend &#xD;
   * the input data. Also checks that all arguments are valid and sets values for parser. It &#xD;
   * checks which flags are present and stores this as a Boolean value. Additionally, checks &#xD;
   * if schedulerSelected value is null and cannot run is null. Then checks value of &#xD;
   * schedulerSelected to see what the value wants to do and runs method before it breaks.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydOfwYtiEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ydOfwotiEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydOfxItiEe-3nrFY8n5C-Q" name="printWarpParameters" visibility="private" isStatic="true" method="_y8J3eYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw9pV2Ee-EOddEwqrIsA">
                  <body>Prints out all system configuration parameters including the scheduler, channels,&#xD;
   * number of faults, minimum Link Quality, end-to-end reliability, and if any flags&#xD;
   * are requested. Prints out the input file if given and if there is not one, it &#xD;
   * alerts that one will be needed.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_y4m0NotiEe-3nrFY8n5C-Q" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_y8JQaYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw8ZV2Ee-EOddEwqrIsA">
                  <body>Runs verification checks over if deadlines are met, if reliability targets&#xD;
   * are met, and if there are channel conflicts for the input WarpInterface warp.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4m0N4tiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4nbQItiEe-3nrFY8n5C-Q" name="verifyReliabilities" visibility="private" isStatic="true" method="_y8J3cItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw8pV2Ee-EOddEwqrIsA">
                  <body>Checks that the reliability targets are met in input warp. If reliability&#xD;
   * is not met, prints an error statement. If verboseMode is True with the input, &#xD;
   * prints out statement that flows meet reliability in this instance.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4nbQYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4nbQotiEe-3nrFY8n5C-Q" name="verifyDeadlines" visibility="private" isStatic="true" method="_y8J3cotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw85V2Ee-EOddEwqrIsA">
                  <body>Checks if the deadlines are met in input warp. If deadlines are not met, prints&#xD;
   * out an error message and visualizes a Deadline Report. If verboseMode is true for&#xD;
   * input, prints out a message telling the deadlines are all met.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4nbQ4tiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4nbRItiEe-3nrFY8n5C-Q" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_y8J3dItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fxw9JV2Ee-EOddEwqrIsA">
                  <body>Determines if there is a channel conflict in the WarpInterface warp given &#xD;
   * as input. Creates a Channel Analysis visualization if not already requested.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4nbRYtiEe-3nrFY8n5C-Q" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Bs6ZkJV1Ee-EOddEwqrIsA" name="visualize" visibility="private" isStatic="true" method="_BtoLQJV1Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_3Fxw75V2Ee-EOddEwqrIsA">
                  <body>Creates a visualization instance of input WorkLoad workLoad and WorkLoadChoices&#xD;
   * choice. If the visualization is null and if verboseMode holds True, prints out&#xD;
   * viz as a String, otherwise, convert viz to a file and if gui flag is requested,&#xD;
   * convert viz to a display.&#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_Bs6ZkZV1Ee-EOddEwqrIsA" name="workLoad" type="_yclmkItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_Bs6ZkpV1Ee-EOddEwqrIsA" name="choice" type="_y3_JIYtiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Bs6Zk5V1Ee-EOddEwqrIsA" name="visualize" visibility="private" isStatic="true" method="_BtoyUJV1Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_3Fxw8JV2Ee-EOddEwqrIsA">
                  <body>Creates a visualization instance of input WarpInterface warp with SystemChoices &#xD;
   * choice. If visualization is null, turns viz to a file, and if gui and schedule &#xD;
   * flags are requested, turn viz into a display.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_Bs6ZlJV1Ee-EOddEwqrIsA" name="warp" type="_ycOaMItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_Bs6ZlZV1Ee-EOddEwqrIsA" name="choice" type="_y3-iEItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ydT_UItiEe-3nrFY8n5C-Q" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_y7YbYItiEe-3nrFY8n5C-Q" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7YbYYtiEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7YbYotiEe-3nrFY8n5C-Q" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7YbY4tiEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7YbZItiEe-3nrFY8n5C-Q" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7ZCcItiEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7ZpgItiEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7ZpgYtiEe-3nrFY8n5C-Q" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7aQkItiEe-3nrFY8n5C-Q" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7aQkYtiEe-3nrFY8n5C-Q" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7aQkotiEe-3nrFY8n5C-Q" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7aQlItiEe-3nrFY8n5C-Q" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7aQlYtiEe-3nrFY8n5C-Q" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7a3oItiEe-3nrFY8n5C-Q" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7a3oYtiEe-3nrFY8n5C-Q" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7a3o4tiEe-3nrFY8n5C-Q" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7a3pYtiEe-3nrFY8n5C-Q" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7a3p4tiEe-3nrFY8n5C-Q" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7besItiEe-3nrFY8n5C-Q" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_y7besYtiEe-3nrFY8n5C-Q" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_y7besotiEe-3nrFY8n5C-Q" name="predecessor" type="_ydT_UItiEe-3nrFY8n5C-Q" association="_y8aWLYtiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7bes4tiEe-3nrFY8n5C-Q" name="endTimes" visibility="private" type="_ya49c4tiEe-3nrFY8n5C-Q" association="_y9KkEItiEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_y7cFwYtiEe-3nrFY8n5C-Q" name="subObjects" type="_y4qekYtiEe-3nrFY8n5C-Q" isReadOnly="true" association="_y9KkE4tiEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8J3eotiEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_ydV0gItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8J3e4tiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8J3fItiEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_y4rssItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8J3fYtiEe-3nrFY8n5C-Q" name="obj" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8J3fotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8J3f4tiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8KegItiEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_ydWbkotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8KegYtiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8KegotiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8Keg4tiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8KehItiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8KehYtiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8KehotiEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_ydXpsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Keh4tiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8KeiItiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8KeiYtiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8KeiotiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8Kei4tiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8KejItiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8KejYtiEe-3nrFY8n5C-Q" name="setDefaultParameters" specification="_ydXpuYtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8KejotiEe-3nrFY8n5C-Q" name="getAllEndTimes" specification="_ydYQwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Kej4tiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LFkItiEe-3nrFY8n5C-Q" name="addToEndTimes" specification="_ydY30ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LFkYtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LFkotiEe-3nrFY8n5C-Q" name="peekEndTimes" specification="_ydY30otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LFk4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LFlItiEe-3nrFY8n5C-Q" name="pollEndTimes" specification="_ydY31ItiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LFlYtiEe-3nrFY8n5C-Q" name="addSubObject" specification="_y4sTwItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LFlotiEe-3nrFY8n5C-Q" name="obj" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LFl4tiEe-3nrFY8n5C-Q" name="getName" specification="_ydZe4ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LFmItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LFmYtiEe-3nrFY8n5C-Q" name="setName" specification="_ydZe4otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LFmotiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LsoItiEe-3nrFY8n5C-Q" name="getReleaseTime" specification="_ydZe5ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LsoYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LsootiEe-3nrFY8n5C-Q" name="getPhase" specification="_ydaF8YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Lso4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LspItiEe-3nrFY8n5C-Q" name="getStartTime" specification="_ydaF84tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LspYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LspotiEe-3nrFY8n5C-Q" name="setEndTime" specification="_ydatAItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Lsp4tiEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LsqItiEe-3nrFY8n5C-Q" name="setStartTime" specification="_ydatAotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LsqYtiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LsqotiEe-3nrFY8n5C-Q" name="setReleaseTime" specification="_ydatBItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Lsq4tiEe-3nrFY8n5C-Q" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LsrItiEe-3nrFY8n5C-Q" name="setPeriod" specification="_ydbUEItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LsrYtiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LsrotiEe-3nrFY8n5C-Q" name="setPhase" specification="_ydbUEotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8Lsr4tiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8LssItiEe-3nrFY8n5C-Q" name="setNextReleaseTime" specification="_ydbUFItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8LssYtiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTsItiEe-3nrFY8n5C-Q" name="maxPhaseComparison" specification="_y4sTwotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTsYtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTsotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTs4tiEe-3nrFY8n5C-Q" name="maxPhaseComparison" specification="_y4sTxYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTtItiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTtYtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTtotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTt4tiEe-3nrFY8n5C-Q" name="deadlineComparison" specification="_y4s60ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTuItiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTuYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTuotiEe-3nrFY8n5C-Q" name="deadlineComparison" specification="_y4s604tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTu4tiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTvItiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTvYtiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTvotiEe-3nrFY8n5C-Q" name="periodComparison" specification="_y4s614tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTv4tiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTwItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTwYtiEe-3nrFY8n5C-Q" name="periodComparison" specification="_y4s62otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTwotiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTw4tiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTxItiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTxYtiEe-3nrFY8n5C-Q" name="priorityComparison" specification="_y4th44tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTxotiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTx4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTyItiEe-3nrFY8n5C-Q" name="priorityComparison" specification="_y4th5otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTyYtiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTyotiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTy4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8MTzItiEe-3nrFY8n5C-Q" name="releaseTimeComparison" specification="_y4th6otiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8MTzYtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8MTzotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8M6wItiEe-3nrFY8n5C-Q" name="releaseTimeComparison" specification="_y4uI8YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8M6wYtiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8M6wotiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8M6w4tiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8M6xItiEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" specification="_y4uI9YtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8M6xYtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8M6xotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8M6x4tiEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" specification="_y4uI-ItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8M6yItiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8M6yYtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y8M6yotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8M6y4tiEe-3nrFY8n5C-Q" name="compareAscendingOrder" specification="_yddwUItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8M6zItiEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8M6zYtiEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8M6zotiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8M6z4tiEe-3nrFY8n5C-Q" name="compareDescendingOrder" specification="_yddwVItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8M60ItiEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8M60YtiEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y8M60otiEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8M604tiEe-3nrFY8n5C-Q" name="print" specification="_ydeXY4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y8M61ItiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8M61YtiEe-3nrFY8n5C-Q" name="print" specification="_ydeXZYtiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ydV0gItiEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_y8J3eotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ydV0gYtiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ydWbkItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ydWbkYtiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ydWbkotiEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_y8KegItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ydXCpItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ydXCpYtiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ydXCoItiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXCoYtiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXCootiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXCo4tiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXCpotiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ydXpsItiEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_y8KehotiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_ydXptotiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_ydXpt4tiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_ydXpsYtiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXpsotiEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXps4tiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXptItiEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXptYtiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydXpuItiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ydXpuYtiEe-3nrFY8n5C-Q" name="setDefaultParameters" visibility="private" method="_y8KejYtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_ydYQwItiEe-3nrFY8n5C-Q" name="getAllEndTimes" method="_y8KejotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_DZV2Ee-EOddEwqrIsA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4rstotiEe-3nrFY8n5C-Q" type="_ya49c4tiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_ydY30ItiEe-3nrFY8n5C-Q" name="addToEndTimes" method="_y8LFkItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ydY30YtiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydY30otiEe-3nrFY8n5C-Q" name="peekEndTimes" method="_y8LFkotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ydY304tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydY31ItiEe-3nrFY8n5C-Q" name="pollEndTimes" method="_y8LFlItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_ydZe4ItiEe-3nrFY8n5C-Q" name="getName" method="_y8LFl4tiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_DpV2Ee-EOddEwqrIsA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydZe4YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydZe4otiEe-3nrFY8n5C-Q" name="setName" method="_y8LFmYtiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_D5V2Ee-EOddEwqrIsA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydZe44tiEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydZe5ItiEe-3nrFY8n5C-Q" name="getReleaseTime" method="_y8LsoItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_EJV2Ee-EOddEwqrIsA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydaF8ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydaF8YtiEe-3nrFY8n5C-Q" name="getPhase" method="_y8LsootiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_EZV2Ee-EOddEwqrIsA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydaF8otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydaF84tiEe-3nrFY8n5C-Q" name="getStartTime" method="_y8LspItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_EpV2Ee-EOddEwqrIsA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydaF9ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydatAItiEe-3nrFY8n5C-Q" name="setEndTime" method="_y8LspotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_E5V2Ee-EOddEwqrIsA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydatAYtiEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydatAotiEe-3nrFY8n5C-Q" name="setStartTime" method="_y8LsqItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_FJV2Ee-EOddEwqrIsA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydatA4tiEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydatBItiEe-3nrFY8n5C-Q" name="setReleaseTime" method="_y8LsqotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_FZV2Ee-EOddEwqrIsA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydatBYtiEe-3nrFY8n5C-Q" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydbUEItiEe-3nrFY8n5C-Q" name="setPeriod" method="_y8LsrItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_FpV2Ee-EOddEwqrIsA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydbUEYtiEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydbUEotiEe-3nrFY8n5C-Q" name="setPhase" method="_y8LsrotiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_F5V2Ee-EOddEwqrIsA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydbUE4tiEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydbUFItiEe-3nrFY8n5C-Q" name="setNextReleaseTime" method="_y8LssItiEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_3Fy_GJV2Ee-EOddEwqrIsA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_ydb7IItiEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yddwUItiEe-3nrFY8n5C-Q" name="compareAscendingOrder" method="_y8M6y4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_yddwUYtiEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yddwUotiEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_yddwU4tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_yddwVItiEe-3nrFY8n5C-Q" name="compareDescendingOrder" method="_y8M6z4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ydeXYItiEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydeXYYtiEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_ydeXYotiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydeXY4tiEe-3nrFY8n5C-Q" name="print" method="_y8M604tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_ydeXZItiEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_ydeXZYtiEe-3nrFY8n5C-Q" name="print" method="_y8M61YtiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_y4rssItiEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_y8J3fItiEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_y4rss4tiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_y4rstItiEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_3Fy_DJV2Ee-EOddEwqrIsA">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_y4rssYtiEe-3nrFY8n5C-Q" name="obj" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4rssotiEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_y4rstYtiEe-3nrFY8n5C-Q" type="_ydT_UItiEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4sTwItiEe-3nrFY8n5C-Q" name="addSubObject" method="_y8LFlYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4sTwYtiEe-3nrFY8n5C-Q" name="obj" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_y4sTwotiEe-3nrFY8n5C-Q" name="maxPhaseComparison" method="_y8MTsItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4sTw4tiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4sTxItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4sTxYtiEe-3nrFY8n5C-Q" name="maxPhaseComparison" method="_y8MTs4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4sTxotiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4sTx4tiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4sTyItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4s60ItiEe-3nrFY8n5C-Q" name="deadlineComparison" method="_y8MTt4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4s60YtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4s60otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4s604tiEe-3nrFY8n5C-Q" name="deadlineComparison" method="_y8MTuotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4s61ItiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4s61YtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4s61otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4s614tiEe-3nrFY8n5C-Q" name="periodComparison" method="_y8MTvotiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4s62ItiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4s62YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4s62otiEe-3nrFY8n5C-Q" name="periodComparison" method="_y8MTwYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4th4ItiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4th4YtiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4th4otiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4th44tiEe-3nrFY8n5C-Q" name="priorityComparison" method="_y8MTxYtiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4th5ItiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4th5YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4th5otiEe-3nrFY8n5C-Q" name="priorityComparison" method="_y8MTyItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4th54tiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4th6ItiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4th6YtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4th6otiEe-3nrFY8n5C-Q" name="releaseTimeComparison" method="_y8MTzItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4th64tiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4uI8ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4uI8YtiEe-3nrFY8n5C-Q" name="releaseTimeComparison" method="_y8M6wItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4uI8otiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4uI84tiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4uI9ItiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4uI9YtiEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" method="_y8M6xItiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4uI9otiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4uI94tiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_y4uI-ItiEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" method="_y8M6x4tiEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_y4uI-YtiEe-3nrFY8n5C-Q" name="obj1" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4uwAItiEe-3nrFY8n5C-Q" name="obj2" type="_ydT_UItiEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_y4uwAYtiEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_ydlsIItiEe-3nrFY8n5C-Q" name="WorkLoadTest">
              <eAnnotations xmi:id="_ydlsIYtiEe-3nrFY8n5C-Q" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_ydmTMItiEe-3nrFY8n5C-Q" source="codegen">
                  <details xmi:id="_ydmTMYtiEe-3nrFY8n5C-Q" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_J-fhgJWyEe-EOddEwqrIsA" name="workload" visibility="private" type="_yclmkItiEe-3nrFY8n5C-Q" association="_J-gImZWyEe-EOddEwqrIsA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8Nh0ItiEe-3nrFY8n5C-Q" name="setUp" specification="_ydmTMotiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;StressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_y8OI5ItiEe-3nrFY8n5C-Q" name="testGetFlowNames" specification="_ydtn8otiEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>workload.addFlow(&quot;Flow1&quot;);&#xD;
		workload.addFlow(&quot;Flow2&quot;);&#xD;
		workload.addFlow(&quot;Flow3&quot;);&#xD;
		// Expected array after adding new flows&#xD;
		String[] expectedFlowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;Flow1&quot;, &quot;Flow2&quot;, &quot;Flow3&quot;};&#xD;
		// Get actual flow names from workload&#xD;
		String[] actualFlowNames = workload.getFlowNames();&#xD;
		// Assert actual flow names match expected names&#xD;
		assertArrayEquals(expectedFlowNames, actualFlowNames, &quot;FlowNames are incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhgpWyEe-EOddEwqrIsA" name="addFlowAddTest" specification="_J-apA5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// ArrayList of actual flow names in original order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		// new ArrayList of expected flows in expected order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected flow names with an additional flow are in the same order as &#xD;
		 * the actual flow names in the original order &#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add a flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhg5WyEe-EOddEwqrIsA" name="addFlowOverridingTest" specification="_J-apBpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F9&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F9&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList of flows with a repeated flow are in the same order&#xD;
		 * as the actual flow names with the repeated flow&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not override new flow correctly&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhhJWyEe-EOddEwqrIsA" name="addFlowMultipleAddsTest" specification="_J-apCZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds second new flow &#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds third new flow &#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// adds fourth new flow&#xD;
		workload.addFlow(&quot;F14&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;, &quot;F14&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList with an addition of multiple flows is equal&#xD;
		 * to the actual ArrayList with the new flows&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhhZWyEe-EOddEwqrIsA" name="addNodeToFlowExistsTest" specification="_J-apDJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node to &quot;F1&quot; but that already exists within &quot;StressTest4.txt&quot; is equal to the &#xD;
		 * corresponding elements in the actual &quot;F1&quot; array when calling getNodesInFlow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted existing node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhhpWyEe-EOddEwqrIsA" name="addNodeToFlowDoesntExistTest" specification="_J-apD5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;newNode&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;newNode&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node new to the file is equal to the actual array elements when calling getNodesInFLow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted new node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhh5WyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowOneFlowTest" specification="_J-bQEpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actual = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		Integer exp = 4;&#xD;
		/*&#xD;
		 * Tests that the expected totalCost of &quot;F1&quot; is equal to the actual cost as found with&#xD;
		 * getTotalTxAttemptsInFlow()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Produces the incorrect total cost&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhiJWyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowMultiFlowsTest" specification="_J-bQFZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer flowOneCost = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		// finds number of transmission attempts for &quot;F2&quot; and returns as totalCost&#xD;
		Integer flowTwoCost = workload.getTotalTxAttemptsInFlow(&quot;F2&quot;);&#xD;
		// finds number of transmission attempts for &quot;F3&quot; and returns as totalCost&#xD;
		Integer flowThreeCost = workload.getTotalTxAttemptsInFlow(&quot;F3&quot;);&#xD;
		// sum of &quot;F1&quot;, &quot;F2&quot;, and &quot;F3&quot; total cost&#xD;
		Integer actual = flowOneCost + flowTwoCost + flowThreeCost;&#xD;
		Integer exp = 21;&#xD;
		/* &#xD;
		 * Tests that the expected sum of multiple flows' costs is equal to the actual sum as&#xD;
		 * found with getTotalTxAttemptsInFlow() to conclude that the method can accurately find&#xD;
		 * multiple flows' costs&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Incorrectly adds total cost of multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhiZWyEe-EOddEwqrIsA" name="getFlowPriorityTest" specification="_J-bQGJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>var actual = workload.getFlowPriority(&quot;F1&quot;, &quot;C&quot;);&#xD;
		var exp = 0;&#xD;
		/*&#xD;
		 * Tests that the expected priority of node &quot;C&quot; in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as found with getFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority for src node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhipWyEe-EOddEwqrIsA" name="setFlowPriorityTest" specification="_J-bQG5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.setFlowPriority(&quot;F1&quot;, 5);&#xD;
		Integer actual = workload.getFlowPriority(&quot;F1&quot;);&#xD;
		Integer exp = 5;&#xD;
		/*&#xD;
		 * Tests that the expected priority of flow node in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as set with setFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Does not set current flow priority&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhi5WyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkTest" specification="_J-bQHpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer exp = 3;&#xD;
		/* &#xD;
		 * Tests that the expected priority of flow &quot;F1&quot; is equal to the actual priority&#xD;
		 * found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority of specified flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhjJWyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkEmptyTest" specification="_J-b3IpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(null);&#xD;
		Integer exp = 1;&#xD;
		/*&#xD;
		 * Tests that the expected priority of a null input, an empty list, is equal to &#xD;
		 * the actual priority of an empty list found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect default priority of flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhjZWyEe-EOddEwqrIsA" name="setFlowsInRMorderCorrectOrderTest" specification="_J-b3JZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flow names in &quot;StressTest4.txt&quot; is &#xD;
		 * equal to the actual order of flow names in this file as found with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhjpWyEe-EOddEwqrIsA" name="setFlowsInRMorderAddFlowsTest" specification="_J-b3KJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// orders flow names with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flows of &quot;StressTest4.txt&quot; with three new flows&#xD;
		 * is equivalent to the actual ordered array with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows with new additional flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhj5WyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyTest" specification="_J-b3K5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of alphabetically ordered flows is equivalent to the &#xD;
		 * actual array order using getFlowNames() to find actual order&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhkJWyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" specification="_J-b3LpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// alphabetically ordered array of flow names in &quot;StressTest4.txt&quot; with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected alphabetically ordered array of flows in &quot;StressTest4.txt&quot; with &#xD;
		 * three new flows is equal to the actual alphabetical order of flows using getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhkZWyEe-EOddEwqrIsA" name="testGetFlowNamesEmpty" specification="_J-b3MZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Get flow names from the empty workload&#xD;
		String[] actualFlowNames = emptyWorkload.getFlowNames();&#xD;
		// Assert the array of flow names is empty&#xD;
		assertEquals(0, actualFlowNames.length, &quot;Array is not empty!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhkpWyEe-EOddEwqrIsA" name="testGetNodeIndexNonExistentNode" specification="_J-ceMpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer expectedIndex = 0;&#xD;
		// Get the actual index of a non-existent node &quot;Z&quot;&#xD;
		Integer actualIndex = workload.getNodeIndex(&quot;Z&quot;);&#xD;
		// Assert that the actual index matches the expected index&#xD;
		assertEquals(expectedIndex, actualIndex, &quot;The method should return 0 for a non-existent node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhk5WyEe-EOddEwqrIsA" name="testGetNodeIndexExistingNode" specification="_J-ceNZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actualIndex = workload.getNodeIndex(&quot;C&quot;);&#xD;
		// Assert that the actual index of node &quot;C&quot; is correct&#xD;
		assertEquals(1, actualIndex, &quot;The index for node C is incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhlJWyEe-EOddEwqrIsA" name="testGetNodesInFlowValidFlowF1" specification="_J-ceOJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] expectedNodes = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		// Getting the actual nodes in the flow &quot;F1&quot;&#xD;
		String[] actualNodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		// Assert that the actual nodes match the expected nodes&#xD;
		assertArrayEquals(expectedNodes, actualNodes, &quot;Incorrect nodes for flow F1&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhlZWyEe-EOddEwqrIsA" name="testGetNodesInFlowNonExistentFlow" specification="_J-ceO5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];  &#xD;
		// Getting the actual nodes in the non-existent flow &quot;F99&quot;&#xD;
     String[] actualNodes = workload.getNodesInFlow(&quot;F99&quot;);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for non-existent flow F99&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhlpWyEe-EOddEwqrIsA" name="testGetNodesInFlowNullFlow" specification="_J-cePpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];&#xD;
     // Getting the actual nodes in a null flow&#xD;
     String[] actualNodes = workload.getNodesInFlow(null);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for null flow name&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-fhl5WyEe-EOddEwqrIsA" name="testGetHyperPeriodValidFlows" specification="_J-dFQZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>int expectedHyperPeriod = 300;&#xD;
		// Getting the actual hyper period from the workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod calculation is incorrect for valid flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIkJWyEe-EOddEwqrIsA" name="testGetHyperPeriodEmptyFlow" specification="_J-dFRJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);  &#xD;
     // Expected hyper period when no flows exist&#xD;
     int expectedHyperPeriod = 1;&#xD;
     // Getting the actual hyper period from the empty workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod should be 1 when no flows exist&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIkZWyEe-EOddEwqrIsA" name="testMaxFlowLengthStressTest4" specification="_J-dFR5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer expectedMaxFlowLength = 8;&#xD;
		// Getting the actual max flow length from the workload&#xD;
		Integer actualMaxFlowLength = workload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length is incorrect for StressTest4.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIkpWyEe-EOddEwqrIsA" name="testMaxFlowLengthNoFlows" specification="_J-dFSpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Expected max flow length when there are no flows&#xD;
		Integer expectedMaxFlowLength = 0;&#xD;
		// Getting the actual max flow length from the empty workload&#xD;
		Integer actualMaxFlowLength = emptyWorkload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length should be 0 for no flows.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIk5WyEe-EOddEwqrIsA" name="testGetFlowDeadlineValidFlow" specification="_J-dFTZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer expectedDeadline = 20;&#xD;
     // Getting the actual deadline for the flow &quot;F1&quot;&#xD;
     Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
     // Asserting that the actual deadline matches the expected value&#xD;
     assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for flow F1 should be 20.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIlJWyEe-EOddEwqrIsA" name="testGetFlowDeadlineInvalidFlow" specification="_J-dFUJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actualDeadline = workload.getFlowDeadline(&quot;InvalidFlow&quot;);&#xD;
		// Expected deadline for a non-existent flow&#xD;
		Integer expectedDeadline = 100;&#xD;
		// Asserting that the actual deadline matches the expected value&#xD;
		assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for a non-existent flow should be 100.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIlZWyEe-EOddEwqrIsA" name="testSetFlowDeadlineValidFlow" specification="_J-dFU5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer newDeadline = 50;&#xD;
		// Setting the new deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, newDeadline);&#xD;
		// Getting the actual deadline after setting the new value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the new deadline&#xD;
		assertEquals(newDeadline, actualDeadline, &quot;The deadline for flow F1 should be set to 50.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIlpWyEe-EOddEwqrIsA" name="testSetFlowDeadlineUpdateExistingFlow" specification="_J-dFVpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer initialDeadline = 30;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, initialDeadline);&#xD;
		// Updated deadline to set for the flow &quot;F1&quot;&#xD;
		Integer updatedDeadline = 75;&#xD;
		// Setting the updated deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, updatedDeadline);&#xD;
		// Getting the actual deadline after updating the value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the updated deadline&#xD;
		assertEquals(updatedDeadline, actualDeadline, &quot;The deadline for flow F1 should be updated to 75.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gIl5WyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_ExistingFlow" specification="_J-dsUpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String flowName = &quot;F1&quot;;&#xD;
		// Getting the transmission attempts per link for the existing flow&#xD;
		Integer[] txAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
		// Asserting that the array is not null for an existing flow&#xD;
		assertNotNull(txAttemptsPerLink, &quot;The Tx attempts per link array should not be null for an existing flow.&quot;);&#xD;
		// Asserting that the array size is as expected&#xD;
		assertEquals(3, txAttemptsPerLink.length, &quot;The array size should be equal to the number of links in the flow minus the total cost.&quot;);&#xD;
		// Asserting that the Tx attempts per link match expected values&#xD;
		assertArrayEquals(new Integer[]{3, 3, 0}, txAttemptsPerLink, &quot;The Tx attempts per link should match expected values.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_J-gImJWyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_MultipleFlows" specification="_J-dsVZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String flowName1 = &quot;F1&quot;;  &#xD;
		String flowName2 = &quot;F5&quot;;&#xD;
		// Getting the transmission attempts per link for both flows&#xD;
		Integer[] txAttemptsFlow1 = workload.getNumTxAttemptsPerLink(flowName1);&#xD;
		Integer[] txAttemptsFlow2 = workload.getNumTxAttemptsPerLink(flowName2);&#xD;
		// Asserting that the arrays are not null&#xD;
		assertNotNull(txAttemptsFlow1, &quot;The Tx attempts per link for F1 should not be null.&quot;);&#xD;
		assertNotNull(txAttemptsFlow2, &quot;The Tx attempts per link for F5 should not be null.&quot;);&#xD;
		// Asserting that the array sizes are as expected&#xD;
		assertEquals(3, txAttemptsFlow1.length, &quot;The array size for F1 should match the number of links minus the total cost.&quot;);&#xD;
		assertEquals(5, txAttemptsFlow2.length, &quot;The array size for F5 should match the number of links minus the total cost.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_ydmTMotiEe-3nrFY8n5C-Q" name="setUp" visibility="package" method="_y8Nh0ItiEe-3nrFY8n5C-Q" raisedException="_y6H3IItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_ydtn8otiEe-3nrFY8n5C-Q" name="testGetFlowNames" visibility="package" method="_y8OI5ItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_J-apAJWyEe-EOddEwqrIsA" name="tearDown" visibility="package" raisedException="_y6H3IItiEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_J-apA5WyEe-EOddEwqrIsA" name="addFlowAddTest" visibility="package" method="_J-fhgpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-apBpWyEe-EOddEwqrIsA" name="addFlowOverridingTest" visibility="package" method="_J-fhg5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-apCZWyEe-EOddEwqrIsA" name="addFlowMultipleAddsTest" visibility="package" method="_J-fhhJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-apDJWyEe-EOddEwqrIsA" name="addNodeToFlowExistsTest" visibility="package" method="_J-fhhZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-apD5WyEe-EOddEwqrIsA" name="addNodeToFlowDoesntExistTest" visibility="package" method="_J-fhhpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-bQEpWyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowOneFlowTest" visibility="package" method="_J-fhh5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-bQFZWyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowMultiFlowsTest" visibility="package" method="_J-fhiJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-bQGJWyEe-EOddEwqrIsA" name="getFlowPriorityTest" visibility="package" method="_J-fhiZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-bQG5WyEe-EOddEwqrIsA" name="setFlowPriorityTest" visibility="package" method="_J-fhipWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-bQHpWyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkTest" visibility="package" method="_J-fhi5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-b3IpWyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkEmptyTest" visibility="package" method="_J-fhjJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-b3JZWyEe-EOddEwqrIsA" name="setFlowsInRMorderCorrectOrderTest" visibility="package" method="_J-fhjZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-b3KJWyEe-EOddEwqrIsA" name="setFlowsInRMorderAddFlowsTest" visibility="package" method="_J-fhjpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-b3K5WyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyTest" visibility="package" method="_J-fhj5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-b3LpWyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" visibility="package" method="_J-fhkJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-b3MZWyEe-EOddEwqrIsA" name="testGetFlowNamesEmpty" visibility="package" method="_J-fhkZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-ceMpWyEe-EOddEwqrIsA" name="testGetNodeIndexNonExistentNode" visibility="package" method="_J-fhkpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-ceNZWyEe-EOddEwqrIsA" name="testGetNodeIndexExistingNode" visibility="package" method="_J-fhk5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-ceOJWyEe-EOddEwqrIsA" name="testGetNodesInFlowValidFlowF1" visibility="package" method="_J-fhlJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-ceO5WyEe-EOddEwqrIsA" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_J-fhlZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-cePpWyEe-EOddEwqrIsA" name="testGetNodesInFlowNullFlow" visibility="package" method="_J-fhlpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFQZWyEe-EOddEwqrIsA" name="testGetHyperPeriodValidFlows" visibility="package" method="_J-fhl5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFRJWyEe-EOddEwqrIsA" name="testGetHyperPeriodEmptyFlow" visibility="package" method="_J-gIkJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFR5WyEe-EOddEwqrIsA" name="testMaxFlowLengthStressTest4" visibility="package" method="_J-gIkZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFSpWyEe-EOddEwqrIsA" name="testMaxFlowLengthNoFlows" visibility="package" method="_J-gIkpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFTZWyEe-EOddEwqrIsA" name="testGetFlowDeadlineValidFlow" visibility="package" method="_J-gIk5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFUJWyEe-EOddEwqrIsA" name="testGetFlowDeadlineInvalidFlow" visibility="package" method="_J-gIlJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFU5WyEe-EOddEwqrIsA" name="testSetFlowDeadlineValidFlow" visibility="package" method="_J-gIlZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dFVpWyEe-EOddEwqrIsA" name="testSetFlowDeadlineUpdateExistingFlow" visibility="package" method="_J-gIlpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dsUpWyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_ExistingFlow" method="_J-gIl5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_J-dsVZWyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_MultipleFlows" method="_J-gImJWyEe-EOddEwqrIsA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_y5PtYYtiEe-3nrFY8n5C-Q" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y5lEkItiEe-3nrFY8n5C-Q" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y5ng0ItiEe-3nrFY8n5C-Q" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y50VIItiEe-3nrFY8n5C-Q" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y51jQItiEe-3nrFY8n5C-Q" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8U2kItiEe-3nrFY8n5C-Q" name="" memberEnd="_y6m_VotiEe-3nrFY8n5C-Q _y8U2kYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8U2kYtiEe-3nrFY8n5C-Q" name="" type="_yYPSEItiEe-3nrFY8n5C-Q" association="_y8U2kItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8Yg9YtiEe-3nrFY8n5C-Q" name="" memberEnd="_y7ODVotiEe-3nrFY8n5C-Q _y8Yg9otiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8Yg9otiEe-3nrFY8n5C-Q" name="" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y8Yg9YtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8ZIAItiEe-3nrFY8n5C-Q" name="" memberEnd="_y7ODV4tiEe-3nrFY8n5C-Q _y8ZIAYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8ZIAYtiEe-3nrFY8n5C-Q" name="" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y8ZIAItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8aWLYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y7besotiEe-3nrFY8n5C-Q _y8a9MItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8a9MItiEe-3nrFY8n5C-Q" name="" type="_ydT_UItiEe-3nrFY8n5C-Q" association="_y8aWLYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y81M4ItiEe-3nrFY8n5C-Q" name="" memberEnd="_y81M4YtiEe-3nrFY8n5C-Q _y6TdUItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y81M4YtiEe-3nrFY8n5C-Q" name="" type="_yWlsQItiEe-3nrFY8n5C-Q" association="_y81M4ItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y81z8YtiEe-3nrFY8n5C-Q" name="" memberEnd="_y81z8otiEe-3nrFY8n5C-Q _y6UEYItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y81z8otiEe-3nrFY8n5C-Q" name="" type="_yWlsQItiEe-3nrFY8n5C-Q" association="_y81z8YtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y82bAYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y82bAotiEe-3nrFY8n5C-Q _y6VSgItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y82bAotiEe-3nrFY8n5C-Q" name="" type="_yWlsQItiEe-3nrFY8n5C-Q" association="_y82bAYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y82bBItiEe-3nrFY8n5C-Q" name="" memberEnd="_y82bBYtiEe-3nrFY8n5C-Q _y6ayEItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y82bBYtiEe-3nrFY8n5C-Q" name="" type="_yXN-YItiEe-3nrFY8n5C-Q" association="_y82bBItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y83CEYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y83CEotiEe-3nrFY8n5C-Q _y6ayEotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y83CEotiEe-3nrFY8n5C-Q" name="" type="_yXN-YItiEe-3nrFY8n5C-Q" association="_y83CEYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y83CFItiEe-3nrFY8n5C-Q" name="" memberEnd="_y83CFYtiEe-3nrFY8n5C-Q _y6dOU4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y83CFYtiEe-3nrFY8n5C-Q" name="" type="_yXS24ItiEe-3nrFY8n5C-Q" association="_y83CFItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y83CF4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y83CGItiEe-3nrFY8n5C-Q _y6d1YYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y83CGItiEe-3nrFY8n5C-Q" name="" type="_yXS24ItiEe-3nrFY8n5C-Q" association="_y83CF4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y83pIYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y83pIotiEe-3nrFY8n5C-Q _y6fDg4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y83pIotiEe-3nrFY8n5C-Q" name="" type="_yXV6MItiEe-3nrFY8n5C-Q" association="_y83pIYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y83pJItiEe-3nrFY8n5C-Q" name="" memberEnd="_y83pJYtiEe-3nrFY8n5C-Q _y6g4sYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y83pJYtiEe-3nrFY8n5C-Q" name="" type="_yXiugItiEe-3nrFY8n5C-Q" association="_y83pJItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y84QMYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y84QMotiEe-3nrFY8n5C-Q _y6it4ItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y84QMotiEe-3nrFY8n5C-Q" name="" type="_yXiugItiEe-3nrFY8n5C-Q" association="_y84QMYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y84QNItiEe-3nrFY8n5C-Q" name="" memberEnd="_y84QNYtiEe-3nrFY8n5C-Q _y6lKIItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y84QNYtiEe-3nrFY8n5C-Q" name="" type="_yX5T0ItiEe-3nrFY8n5C-Q" association="_y84QNItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y84QN4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y84QOItiEe-3nrFY8n5C-Q _y6lxM4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y84QOItiEe-3nrFY8n5C-Q" name="" type="_yX5T0ItiEe-3nrFY8n5C-Q" association="_y84QN4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y843QYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y843QotiEe-3nrFY8n5C-Q _y6qpsYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y843QotiEe-3nrFY8n5C-Q" name="" type="_yYmecItiEe-3nrFY8n5C-Q" association="_y843QYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y843RItiEe-3nrFY8n5C-Q" name="" memberEnd="_y843RYtiEe-3nrFY8n5C-Q _y6rQwYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y843RYtiEe-3nrFY8n5C-Q" name="" type="_yYmecItiEe-3nrFY8n5C-Q" association="_y843RItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y85eUYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y85eUotiEe-3nrFY8n5C-Q _y6r30ItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y85eUotiEe-3nrFY8n5C-Q" name="" type="_yYmecItiEe-3nrFY8n5C-Q" association="_y85eUYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y86FYYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y86FYotiEe-3nrFY8n5C-Q _y6se4ItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y86FYotiEe-3nrFY8n5C-Q" name="" type="_yYmecItiEe-3nrFY8n5C-Q" association="_y86FYYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y86scYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y86scotiEe-3nrFY8n5C-Q _y6se4otiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y86scotiEe-3nrFY8n5C-Q" name="" type="_yYmecItiEe-3nrFY8n5C-Q" association="_y86scYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y87TgItiEe-3nrFY8n5C-Q" name="" memberEnd="_y87TgYtiEe-3nrFY8n5C-Q _y6uUEYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y87TgYtiEe-3nrFY8n5C-Q" name="" type="_yY6ngItiEe-3nrFY8n5C-Q" association="_y87TgItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y87Tg4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y87ThItiEe-3nrFY8n5C-Q _y6u7IYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y87ThItiEe-3nrFY8n5C-Q" name="" type="_yY6ngItiEe-3nrFY8n5C-Q" association="_y87Tg4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y876kItiEe-3nrFY8n5C-Q" name="" memberEnd="_y876kYtiEe-3nrFY8n5C-Q _y6u7I4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y876kYtiEe-3nrFY8n5C-Q" name="" type="_yZEYgItiEe-3nrFY8n5C-Q" association="_y876kItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y876k4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y876lItiEe-3nrFY8n5C-Q _y6viMYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y876lItiEe-3nrFY8n5C-Q" name="" type="_yZIp8ItiEe-3nrFY8n5C-Q" association="_y876k4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y876lotiEe-3nrFY8n5C-Q" name="" memberEnd="_y876l4tiEe-3nrFY8n5C-Q _y6viM4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y876l4tiEe-3nrFY8n5C-Q" name="" type="_yZIp8ItiEe-3nrFY8n5C-Q" association="_y876lotiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y88hoYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y88hootiEe-3nrFY8n5C-Q _y6wJQotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y88hootiEe-3nrFY8n5C-Q" name="" type="_yZM7YItiEe-3nrFY8n5C-Q" association="_y88hoYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y88hpItiEe-3nrFY8n5C-Q" name="" memberEnd="_y88hpYtiEe-3nrFY8n5C-Q _y6ylgotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y88hpYtiEe-3nrFY8n5C-Q" name="" type="_yZYhkItiEe-3nrFY8n5C-Q" association="_y88hpItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y89IsYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y89IsotiEe-3nrFY8n5C-Q _y6zMkItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y89IsotiEe-3nrFY8n5C-Q" name="" type="_yZYhkItiEe-3nrFY8n5C-Q" association="_y89IsYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y89ItItiEe-3nrFY8n5C-Q" name="" memberEnd="_y89ItYtiEe-3nrFY8n5C-Q _y6zMkotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y89ItYtiEe-3nrFY8n5C-Q" name="" type="_yZYhkItiEe-3nrFY8n5C-Q" association="_y89ItItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y89It4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y89IuItiEe-3nrFY8n5C-Q _y6zMlItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y89IuItiEe-3nrFY8n5C-Q" name="" type="_yZYhkItiEe-3nrFY8n5C-Q" association="_y89It4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y89vwYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y89vwotiEe-3nrFY8n5C-Q _y6zzoItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y89vwotiEe-3nrFY8n5C-Q" name="" type="_yZYhkItiEe-3nrFY8n5C-Q" association="_y89vwYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y89vxItiEe-3nrFY8n5C-Q" name="" memberEnd="_y89vxYtiEe-3nrFY8n5C-Q _y60atItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y89vxYtiEe-3nrFY8n5C-Q" name="" type="_yZeBIItiEe-3nrFY8n5C-Q" association="_y89vxItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8-W0YtiEe-3nrFY8n5C-Q" name="" memberEnd="_y8-W0otiEe-3nrFY8n5C-Q _y60atotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8-W0otiEe-3nrFY8n5C-Q" name="" type="_yZeBIItiEe-3nrFY8n5C-Q" association="_y8-W0YtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8-W1ItiEe-3nrFY8n5C-Q" name="" memberEnd="_y8-W1YtiEe-3nrFY8n5C-Q _y61o0YtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8-W1YtiEe-3nrFY8n5C-Q" name="" type="_yZku0ItiEe-3nrFY8n5C-Q" association="_y8-W1ItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8-94ItiEe-3nrFY8n5C-Q" name="" memberEnd="_y8-94YtiEe-3nrFY8n5C-Q _y62284tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8-94YtiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y8-94ItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8-944tiEe-3nrFY8n5C-Q" name="" memberEnd="_y8-95ItiEe-3nrFY8n5C-Q _y6229YtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8-95ItiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y8-944tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8-95otiEe-3nrFY8n5C-Q" name="" memberEnd="_y8-954tiEe-3nrFY8n5C-Q _y63eAYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8-954tiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y8-95otiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8_k8YtiEe-3nrFY8n5C-Q" name="" memberEnd="_y8_k8otiEe-3nrFY8n5C-Q _y64FEItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8_k8otiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y8_k8YtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y8_k9ItiEe-3nrFY8n5C-Q" name="" memberEnd="_y8_k9YtiEe-3nrFY8n5C-Q _y64FFYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y8_k9YtiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y8_k9ItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9AMAYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9AMAotiEe-3nrFY8n5C-Q _y64FF4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9AMAotiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y9AMAYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9AMBItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9AMBYtiEe-3nrFY8n5C-Q _y64sIotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9AMBYtiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y9AMBItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9AMB4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9AMCItiEe-3nrFY8n5C-Q _y65TMotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9AMCItiEe-3nrFY8n5C-Q" name="" type="_yZ10kItiEe-3nrFY8n5C-Q" association="_y9AMB4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9AzEYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9AzEotiEe-3nrFY8n5C-Q _y66hV4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9AzEotiEe-3nrFY8n5C-Q" name="" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y9AzEYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9AzFItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9AzFYtiEe-3nrFY8n5C-Q _y67IYItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9AzFYtiEe-3nrFY8n5C-Q" name="" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y9AzFItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9BaIYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9BaIotiEe-3nrFY8n5C-Q _y67IYotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9BaIotiEe-3nrFY8n5C-Q" name="" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y9BaIYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9BaJItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9BaJYtiEe-3nrFY8n5C-Q _y68WhItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9BaJYtiEe-3nrFY8n5C-Q" name="" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y9BaJItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9BaJ4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9BaKItiEe-3nrFY8n5C-Q _y69koItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9BaKItiEe-3nrFY8n5C-Q" name="" type="_yaNA8ItiEe-3nrFY8n5C-Q" association="_y9BaJ4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9CBMYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9CBMotiEe-3nrFY8n5C-Q _y6-ywYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9CBMotiEe-3nrFY8n5C-Q" name="" type="_yaswMItiEe-3nrFY8n5C-Q" association="_y9CBMYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9CBNItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9CBNYtiEe-3nrFY8n5C-Q _y6-yw4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9CBNYtiEe-3nrFY8n5C-Q" name="" type="_yaswMItiEe-3nrFY8n5C-Q" association="_y9CBNItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9CoQYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9CoQotiEe-3nrFY8n5C-Q _y7AA5otiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9CoQotiEe-3nrFY8n5C-Q" name="" type="_ybDVgItiEe-3nrFY8n5C-Q" association="_y9CoQYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9CoRItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9CoRYtiEe-3nrFY8n5C-Q _y7AA6ItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9CoRYtiEe-3nrFY8n5C-Q" name="" type="_ybDVgItiEe-3nrFY8n5C-Q" association="_y9CoRItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9DPUItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9DPUYtiEe-3nrFY8n5C-Q _y7An84tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9DPUYtiEe-3nrFY8n5C-Q" name="" type="_ybFxwItiEe-3nrFY8n5C-Q" association="_y9DPUItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9DPU4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9DPVItiEe-3nrFY8n5C-Q _y7CdI4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9DPVItiEe-3nrFY8n5C-Q" name="" type="_ybQJ0ItiEe-3nrFY8n5C-Q" association="_y9DPU4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9D2YYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9D2YotiEe-3nrFY8n5C-Q _y7DEMItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9D2YotiEe-3nrFY8n5C-Q" name="" type="_ybQJ0ItiEe-3nrFY8n5C-Q" association="_y9D2YYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9D2ZItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9D2ZYtiEe-3nrFY8n5C-Q _y7E5YotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9D2ZYtiEe-3nrFY8n5C-Q" name="" type="_yb0xkItiEe-3nrFY8n5C-Q" association="_y9D2ZItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9EdcYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9EdcotiEe-3nrFY8n5C-Q _y7FgcYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9EdcotiEe-3nrFY8n5C-Q" name="" type="_yb0xkItiEe-3nrFY8n5C-Q" association="_y9EdcYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9FEgItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9FEgYtiEe-3nrFY8n5C-Q _y7Fgc4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9FEgYtiEe-3nrFY8n5C-Q" name="" type="_yb0xkItiEe-3nrFY8n5C-Q" association="_y9FEgItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9FEg4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9FEhItiEe-3nrFY8n5C-Q _y7GHhYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9FEhItiEe-3nrFY8n5C-Q" name="" type="_yb0xkItiEe-3nrFY8n5C-Q" association="_y9FEg4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9FrkYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9FrkotiEe-3nrFY8n5C-Q _y7GukYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9FrkotiEe-3nrFY8n5C-Q" name="" type="_yb0xkItiEe-3nrFY8n5C-Q" association="_y9FrkYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9GSoItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9GSoYtiEe-3nrFY8n5C-Q _y7GulItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9GSoYtiEe-3nrFY8n5C-Q" name="" type="_yb0xkItiEe-3nrFY8n5C-Q" association="_y9GSoItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9GSo4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9GSpItiEe-3nrFY8n5C-Q _y7HVoYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9GSpItiEe-3nrFY8n5C-Q" name="" type="_yb0xkItiEe-3nrFY8n5C-Q" association="_y9GSo4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9G5sItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9G5sYtiEe-3nrFY8n5C-Q _y7HVo4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9G5sYtiEe-3nrFY8n5C-Q" name="" type="_yb8tYItiEe-3nrFY8n5C-Q" association="_y9G5sItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9G5s4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9G5tItiEe-3nrFY8n5C-Q _y7IjwotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9G5tItiEe-3nrFY8n5C-Q" name="" type="_ycEpMItiEe-3nrFY8n5C-Q" association="_y9G5s4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9HgwYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9HgwotiEe-3nrFY8n5C-Q _y7Jx4otiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9HgwotiEe-3nrFY8n5C-Q" name="" type="_ycI6oItiEe-3nrFY8n5C-Q" association="_y9HgwYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9HgxItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9HgxYtiEe-3nrFY8n5C-Q _y7KY8ItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9HgxYtiEe-3nrFY8n5C-Q" name="" type="_ycI6oItiEe-3nrFY8n5C-Q" association="_y9HgxItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9IH0YtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9IH0otiEe-3nrFY8n5C-Q _y7KY84tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9IH0otiEe-3nrFY8n5C-Q" name="" type="_ycTSsItiEe-3nrFY8n5C-Q" association="_y9IH0YtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9IH1ItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9IH1YtiEe-3nrFY8n5C-Q _y7LAAItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9IH1YtiEe-3nrFY8n5C-Q" name="" type="_ycTSsItiEe-3nrFY8n5C-Q" association="_y9IH1ItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9Iu4YtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9Iu4otiEe-3nrFY8n5C-Q _y7LAAotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9Iu4otiEe-3nrFY8n5C-Q" name="" type="_ycTSsItiEe-3nrFY8n5C-Q" association="_y9Iu4YtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9Iu5ItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9Iu5YtiEe-3nrFY8n5C-Q _y7LABItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9Iu5YtiEe-3nrFY8n5C-Q" name="" type="_ycTSsItiEe-3nrFY8n5C-Q" association="_y9Iu5ItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9JV8ItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9JV8YtiEe-3nrFY8n5C-Q _y7LABotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9JV8YtiEe-3nrFY8n5C-Q" name="" type="_ycTSsItiEe-3nrFY8n5C-Q" association="_y9JV8ItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9JV84tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9JV9ItiEe-3nrFY8n5C-Q _y7OqYotiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9JV9ItiEe-3nrFY8n5C-Q" name="" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y9JV84tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9JV9otiEe-3nrFY8n5C-Q" name="" memberEnd="_y9JV94tiEe-3nrFY8n5C-Q _y7PRcYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9JV94tiEe-3nrFY8n5C-Q" name="" type="_yclmkItiEe-3nrFY8n5C-Q" association="_y9JV9otiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9J9AYtiEe-3nrFY8n5C-Q" name="" memberEnd="_y9J9AotiEe-3nrFY8n5C-Q _y7S70ItiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9J9AotiEe-3nrFY8n5C-Q" name="" type="_ydEHsItiEe-3nrFY8n5C-Q" association="_y9J9AYtiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9J9BItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9J9BYtiEe-3nrFY8n5C-Q _y7S704tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9J9BYtiEe-3nrFY8n5C-Q" name="" type="_ydEHsItiEe-3nrFY8n5C-Q" association="_y9J9BItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9KkEItiEe-3nrFY8n5C-Q" name="" memberEnd="_y9KkEYtiEe-3nrFY8n5C-Q _y7bes4tiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9KkEYtiEe-3nrFY8n5C-Q" name="" type="_ydT_UItiEe-3nrFY8n5C-Q" association="_y9KkEItiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_y9KkE4tiEe-3nrFY8n5C-Q" name="" memberEnd="_y9KkFItiEe-3nrFY8n5C-Q _y7cFwYtiEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_y9KkFItiEe-3nrFY8n5C-Q" name="" type="_ydT_UItiEe-3nrFY8n5C-Q" association="_y9KkE4tiEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_J-gImZWyEe-EOddEwqrIsA" name="" memberEnd="_J-gImpWyEe-EOddEwqrIsA _J-fhgJWyEe-EOddEwqrIsA">
              <ownedEnd xmi:id="_J-gImpWyEe-EOddEwqrIsA" name="" type="_ydlsIItiEe-3nrFY8n5C-Q" association="_J-gImZWyEe-EOddEwqrIsA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_ySblAYtiEe-3nrFY8n5C-Q" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_y3FKMItiEe-3nrFY8n5C-Q" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y3FKMotiEe-3nrFY8n5C-Q" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y3FxQItiEe-3nrFY8n5C-Q" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y6CXkYtiEe-3nrFY8n5C-Q" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_yTFsUItiEe-3nrFY8n5C-Q" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_y3kSYItiEe-3nrFY8n5C-Q" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yQ8XQItiEe-3nrFY8n5C-Q" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_yQ8XQYtiEe-3nrFY8n5C-Q" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_yRvogItiEe-3nrFY8n5C-Q" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_y2svsItiEe-3nrFY8n5C-Q" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_yUCukItiEe-3nrFY8n5C-Q" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_y4WVgYtiEe-3nrFY8n5C-Q" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_ya49c4tiEe-3nrFY8n5C-Q" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y2eGMItiEe-3nrFY8n5C-Q" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y2f7YItiEe-3nrFY8n5C-Q" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y2gicYtiEe-3nrFY8n5C-Q" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_y2hJgYtiEe-3nrFY8n5C-Q" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_y2hJg4tiEe-3nrFY8n5C-Q" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_y20rgItiEe-3nrFY8n5C-Q" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_y3Z6UItiEe-3nrFY8n5C-Q" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y3k5cItiEe-3nrFY8n5C-Q" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y4VHYItiEe-3nrFY8n5C-Q" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_y4VucItiEe-3nrFY8n5C-Q" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y4VucotiEe-3nrFY8n5C-Q" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y4p3gItiEe-3nrFY8n5C-Q" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_y4qekYtiEe-3nrFY8n5C-Q" name="Queue"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UQ8OEJV4Ee-EOddEwqrIsA" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ySHb8ItiEe-3nrFY8n5C-Q" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_y24V4YtiEe-3nrFY8n5C-Q" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y25kAItiEe-3nrFY8n5C-Q" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y3QJUItiEe-3nrFY8n5C-Q" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y3QJUotiEe-3nrFY8n5C-Q" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ySHb8YtiEe-3nrFY8n5C-Q" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_ySHb8otiEe-3nrFY8n5C-Q" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_y25kAotiEe-3nrFY8n5C-Q" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_y26LEYtiEe-3nrFY8n5C-Q" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_y26yIYtiEe-3nrFY8n5C-Q" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_ySl9EItiEe-3nrFY8n5C-Q" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_y3NGAItiEe-3nrFY8n5C-Q" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_y5C5EItiEe-3nrFY8n5C-Q" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_y5C5EYtiEe-3nrFY8n5C-Q" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y5ZeYItiEe-3nrFY8n5C-Q" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_y5pWBItiEe-3nrFY8n5C-Q" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y6H3IItiEe-3nrFY8n5C-Q" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ySGN0ItiEe-3nrFY8n5C-Q" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_ySG04ItiEe-3nrFY8n5C-Q" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_ySG04YtiEe-3nrFY8n5C-Q" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_y23u0ItiEe-3nrFY8n5C-Q" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ySIDAItiEe-3nrFY8n5C-Q" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_ySIDAYtiEe-3nrFY8n5C-Q" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_ySmkIItiEe-3nrFY8n5C-Q" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_y3O7MYtiEe-3nrFY8n5C-Q" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_y3O7M4tiEe-3nrFY8n5C-Q" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_y27ZMYtiEe-3nrFY8n5C-Q" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y3NtEYtiEe-3nrFY8n5C-Q" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y3OUIYtiEe-3nrFY8n5C-Q" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_y3OUI4tiEe-3nrFY8n5C-Q" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ySaW4ItiEe-3nrFY8n5C-Q" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_ySa98ItiEe-3nrFY8n5C-Q" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_ySa98YtiEe-3nrFY8n5C-Q" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_ySa98otiEe-3nrFY8n5C-Q" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_ySblAItiEe-3nrFY8n5C-Q" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_y3D8E4tiEe-3nrFY8n5C-Q" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_y3EjIYtiEe-3nrFY8n5C-Q" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_y3Ct8ItiEe-3nrFY8n5C-Q" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y3DVAYtiEe-3nrFY8n5C-Q" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_y3D8EYtiEe-3nrFY8n5C-Q" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_yUmIMItiEe-3nrFY8n5C-Q" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_yUmvQItiEe-3nrFY8n5C-Q" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_yUmvQYtiEe-3nrFY8n5C-Q" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_y4wlMItiEe-3nrFY8n5C-Q" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_y4xMQYtiEe-3nrFY8n5C-Q" name="AfterEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_y4xzUYtiEe-3nrFY8n5C-Q" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_y4yaYItiEe-3nrFY8n5C-Q" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ySgdgItiEe-3nrFY8n5C-Q" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_y3GYUotiEe-3nrFY8n5C-Q" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y3HmcItiEe-3nrFY8n5C-Q" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y3I0kItiEe-3nrFY8n5C-Q" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y3KCsYtiEe-3nrFY8n5C-Q" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y3LQ0ItiEe-3nrFY8n5C-Q" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y3L34otiEe-3nrFY8n5C-Q" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4ITE4tiEe-3nrFY8n5C-Q" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4I6JItiEe-3nrFY8n5C-Q" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4KvUItiEe-3nrFY8n5C-Q" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4L9cItiEe-3nrFY8n5C-Q" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yUSmMItiEe-3nrFY8n5C-Q" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_y4dDMItiEe-3nrFY8n5C-Q" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4e4YItiEe-3nrFY8n5C-Q" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4ffc4tiEe-3nrFY8n5C-Q" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4gGhItiEe-3nrFY8n5C-Q" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4hUpYtiEe-3nrFY8n5C-Q" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4iiwotiEe-3nrFY8n5C-Q" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_yUYFwItiEe-3nrFY8n5C-Q" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_y4kX8ItiEe-3nrFY8n5C-Q" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4k_AYtiEe-3nrFY8n5C-Q" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4k_A4tiEe-3nrFY8n5C-Q" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4lmEYtiEe-3nrFY8n5C-Q" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_y4lmE4tiEe-3nrFY8n5C-Q" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_xDa0MItiEe-3nrFY8n5C-Q">
      <eAnnotations xmi:id="_xDhh4ItiEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_xDj-IItiEe-3nrFY8n5C-Q" base_Package="_w2DGkItiEe-3nrFY8n5C-Q">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_yWha0ItiEe-3nrFY8n5C-Q" genericsValue="T,E" base_Element="_yWciUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yWp9sItiEe-3nrFY8n5C-Q" base_Element="_yWpWoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yWry4ItiEe-3nrFY8n5C-Q" base_Element="_yWpWoItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yWry4YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yWuPIItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_yWsZ8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yWwEUItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_yWu2MItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yWx5gItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_yWwrYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yWzHoItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_yWygkItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yW1j4ItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_yW0VwItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yXdO8ItiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_yXcA0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yXm_8ItiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_yXlx0YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yX7wEItiEe-3nrFY8n5C-Q" base_Element="_yX7JAItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yX8XIItiEe-3nrFY8n5C-Q" base_Element="_yX7JAItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yX8-MItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yX-zYItiEe-3nrFY8n5C-Q" base_Element="_yX9lQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yX-zYYtiEe-3nrFY8n5C-Q" base_Element="_yX9lQItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yX_acItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYABgItiEe-3nrFY8n5C-Q" base_Element="_yX_acYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yYABgYtiEe-3nrFY8n5C-Q" base_Element="_yX_acYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yYABgotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yYIkYItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_yYHWQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYM10ItiEe-3nrFY8n5C-Q" base_Element="_yYMOw4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yYNc4ItiEe-3nrFY8n5C-Q" base_Element="_yYMOw4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yYOD8ItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYSVYItiEe-3nrFY8n5C-Q" base_Element="_yYRuUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYWm0ItiEe-3nrFY8n5C-Q" base_Element="_yYV_wItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yYWm0YtiEe-3nrFY8n5C-Q" base_Element="_yYV_wItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yYWm0otiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYYcAItiEe-3nrFY8n5C-Q" base_Element="_yYX08ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yYZDEItiEe-3nrFY8n5C-Q" base_Element="_yYX08ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yYZDEYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYZqIItiEe-3nrFY8n5C-Q" base_Element="_yYZDEotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yYaRMItiEe-3nrFY8n5C-Q" base_Element="_yYZDEotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yYaRMYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yYr-AItiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_yYqv4otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yYtzMItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_yYslEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yYvBUItiEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_yYuaQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yYxdkotiEe-3nrFY8n5C-Q" base_Element="_yYxdkItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yYyEoItiEe-3nrFY8n5C-Q" base_Element="_yYxdkItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yYyEoYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yY9DwItiEe-3nrFY8n5C-Q" base_Element="_yY8csItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yY9DwYtiEe-3nrFY8n5C-Q" base_Element="_yY8csItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yY9DwotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yZLGMItiEe-3nrFY8n5C-Q" dimensions="2" base_Element="_yZJ4EotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yZhEcItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_yZgdYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yZjgsItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_yZi5oItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yZnLEYtiEe-3nrFY8n5C-Q" base_Element="_yZmkAotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yZnLEotiEe-3nrFY8n5C-Q" base_Element="_yZmkAotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yZnLE4tiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yZoZMotiEe-3nrFY8n5C-Q" base_Element="_yZoZMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yZpAQItiEe-3nrFY8n5C-Q" base_Element="_yZoZMItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yZpAQYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yZpnUYtiEe-3nrFY8n5C-Q" base_Element="_yZpnUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yZqOYItiEe-3nrFY8n5C-Q" base_Element="_yZpnUItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yZqOYYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yZyKMItiEe-3nrFY8n5C-Q" base_Element="_yZxjI4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yZyKMYtiEe-3nrFY8n5C-Q" base_Element="_yZxjI4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yZyxQItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yZ0mcItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_yZzYUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yZ3pwItiEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_yZ3CsItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_yZ434ItiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_yZ4Q0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_yZ5e8YtiEe-3nrFY8n5C-Q" base_Element="_yZ434YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaEeEItiEe-3nrFY8n5C-Q" base_Element="_yaD3AItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaFFIItiEe-3nrFY8n5C-Q" base_Element="_yaD3AItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaFFIYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yaLy0ItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_yaLLwItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaXZAItiEe-3nrFY8n5C-Q" base_Element="_yaWx8YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaXZAYtiEe-3nrFY8n5C-Q" base_Element="_yaWx8YtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaXZAotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaYnIItiEe-3nrFY8n5C-Q" base_Element="_yaYAEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaYnIYtiEe-3nrFY8n5C-Q" base_Element="_yaYAEYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaYnIotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaZOMotiEe-3nrFY8n5C-Q" base_Element="_yaZOMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaZ1QItiEe-3nrFY8n5C-Q" base_Element="_yaZOMItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaZ1QYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yabqcItiEe-3nrFY8n5C-Q" base_Element="_yabDYotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yacRgItiEe-3nrFY8n5C-Q" base_Element="_yabDYotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yacRgYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yac4kItiEe-3nrFY8n5C-Q" base_Element="_yacRgotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yac4kYtiEe-3nrFY8n5C-Q" base_Element="_yacRgotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yadfoItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaeGsItiEe-3nrFY8n5C-Q" base_Element="_yadfoYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaeGsYtiEe-3nrFY8n5C-Q" base_Element="_yadfoYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaeGsotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaetwYtiEe-3nrFY8n5C-Q" base_Element="_yaeGs4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaetwotiEe-3nrFY8n5C-Q" base_Element="_yaeGs4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yafU0ItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaf74YtiEe-3nrFY8n5C-Q" base_Element="_yafU0otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaf74otiEe-3nrFY8n5C-Q" base_Element="_yafU0otiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaf744tiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_yahKAItiEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_yagi8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yat-UItiEe-3nrFY8n5C-Q" base_Element="_yatXQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaulYItiEe-3nrFY8n5C-Q" base_Element="_yatXQItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaulYYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yavMcItiEe-3nrFY8n5C-Q" base_Element="_yaulYotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yavMcYtiEe-3nrFY8n5C-Q" base_Element="_yaulYotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yavzgItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yavzgotiEe-3nrFY8n5C-Q" base_Element="_yavzgYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yawakItiEe-3nrFY8n5C-Q" base_Element="_yavzgYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yawakYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yaxBootiEe-3nrFY8n5C-Q" base_Element="_yawakotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yaxosItiEe-3nrFY8n5C-Q" base_Element="_yawakotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yaxosYtiEe-3nrFY8n5C-Q" base_Element="_yawakotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yaxosotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yayPwotiEe-3nrFY8n5C-Q" dimensions="2" base_Element="_yaxos4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yayPw4tiEe-3nrFY8n5C-Q" base_Element="_yaxos4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yay20ItiEe-3nrFY8n5C-Q" base_Element="_yaxos4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yay20YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ya16IItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_ya0sAItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ya3vUItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_ya3IQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_ya6LkItiEe-3nrFY8n5C-Q" base_Element="_ya49c4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ya6yoItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_ya6LkYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ybG_4ItiEe-3nrFY8n5C-Q" base_Element="_ybGY0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ybHm8ItiEe-3nrFY8n5C-Q" base_Element="_ybGY0ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ybHm8YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_ybKDMItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_ybJcIItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ybNGgYtiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_ybNGgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ybO7sItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_ybOUoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ybjr0ItiEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_ybjEwItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ybk58ItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_ybkS4YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ybmIEYtiEe-3nrFY8n5C-Q" base_Element="_ybmIEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ybrnoItiEe-3nrFY8n5C-Q" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_ybrAkItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ybv5EYtiEe-3nrFY8n5C-Q" base_Element="_ybv5EItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ybxHMotiEe-3nrFY8n5C-Q" base_Element="_ybxHMYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yb2mwYtiEe-3nrFY8n5C-Q" base_Element="_yb2mwItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yb3N0ItiEe-3nrFY8n5C-Q" base_Element="_yb2mwItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yb3N0YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yb3N04tiEe-3nrFY8n5C-Q" base_Element="_yb3N0otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yb304ItiEe-3nrFY8n5C-Q" base_Element="_yb3N0otiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yb304YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yb4b8ItiEe-3nrFY8n5C-Q" base_Element="_yb304otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yb4b8YtiEe-3nrFY8n5C-Q" base_Element="_yb304otiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yb4b8otiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_ycA-0YtiEe-3nrFY8n5C-Q" base_Element="_ycAXwotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_ycBl4otiEe-3nrFY8n5C-Q" dimensions="2" base_Element="_ycA-0otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycKIxItiEe-3nrFY8n5C-Q" base_Element="_ycKIw4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycKIxYtiEe-3nrFY8n5C-Q" base_Element="_ycKIw4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycKv0ItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycKv0otiEe-3nrFY8n5C-Q" base_Element="_ycKv0YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycKv04tiEe-3nrFY8n5C-Q" base_Element="_ycKv0YtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycKv1ItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycLW4otiEe-3nrFY8n5C-Q" base_Element="_ycLW4ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycL98ItiEe-3nrFY8n5C-Q" base_Element="_ycLW4ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycL98YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycUg0YtiEe-3nrFY8n5C-Q" base_Element="_ycUg0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycVH4ItiEe-3nrFY8n5C-Q" base_Element="_ycUg0ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycVH4YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycVu8ItiEe-3nrFY8n5C-Q" base_Element="_ycVH4otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycVu8YtiEe-3nrFY8n5C-Q" base_Element="_ycVH4otiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycVu8otiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycWWAYtiEe-3nrFY8n5C-Q" base_Element="_ycWWAItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycW9EItiEe-3nrFY8n5C-Q" base_Element="_ycWWAItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycW9EYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycYLMItiEe-3nrFY8n5C-Q" base_Element="_ycXkI4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycYLMYtiEe-3nrFY8n5C-Q" base_Element="_ycXkI4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycYLMotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycYyQItiEe-3nrFY8n5C-Q" base_Element="_ycYLM4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycYyQYtiEe-3nrFY8n5C-Q" base_Element="_ycYLM4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycYyQotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycZZUotiEe-3nrFY8n5C-Q" base_Element="_ycZZUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycaAYItiEe-3nrFY8n5C-Q" base_Element="_ycZZUItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycaAYYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycancItiEe-3nrFY8n5C-Q" base_Element="_ycaAYotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycancYtiEe-3nrFY8n5C-Q" base_Element="_ycaAYotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycancotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycb1kItiEe-3nrFY8n5C-Q" base_Element="_ycbOgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycb1kYtiEe-3nrFY8n5C-Q" base_Element="_ycbOgItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycb1kotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycccoItiEe-3nrFY8n5C-Q" base_Element="_ycb1k4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycdDsItiEe-3nrFY8n5C-Q" base_Element="_ycb1k4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycdDsYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycdqwItiEe-3nrFY8n5C-Q" base_Element="_ycdDsotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycdqwYtiEe-3nrFY8n5C-Q" base_Element="_ycdDsotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycdqwotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yceR0otiEe-3nrFY8n5C-Q" base_Element="_yceR0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_yceR04tiEe-3nrFY8n5C-Q" base_Element="_yceR0ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_yceR1ItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_yce44otiEe-3nrFY8n5C-Q" base_Element="_yce44ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycff8ItiEe-3nrFY8n5C-Q" base_Element="_yce44ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycff8YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycgHAItiEe-3nrFY8n5C-Q" base_Element="_ycff8otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycgHAYtiEe-3nrFY8n5C-Q" base_Element="_ycff8otiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycgHAotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ycguEItiEe-3nrFY8n5C-Q" base_Element="_ycgHA4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ycguEYtiEe-3nrFY8n5C-Q" base_Element="_ycgHA4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ycguEotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ychVIItiEe-3nrFY8n5C-Q" base_Element="_ycguE4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ychVIYtiEe-3nrFY8n5C-Q" base_Element="_ycguE4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ychVIotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_yczB8ItiEe-3nrFY8n5C-Q" base_Element="_ycya4ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_yczpAItiEe-3nrFY8n5C-Q" base_Element="_yczB84tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_yc0QFItiEe-3nrFY8n5C-Q" dimensions="0" base_Element="_yc0QEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_yc1eNItiEe-3nrFY8n5C-Q" base_Element="_yc1eMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ydDgoItiEe-3nrFY8n5C-Q" genericsValue="InstructionParameters" base_Element="_ydC5kItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ydEuxItiEe-3nrFY8n5C-Q" genericsValue="InstructionParameters" base_Element="_ydEuw4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_ydOfw4tiEe-3nrFY8n5C-Q" base_Element="_ydOfwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ydYQwYtiEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_ydYQwItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ydm6QItiEe-3nrFY8n5C-Q" base_Element="_ydmTMotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ydm6QYtiEe-3nrFY8n5C-Q" base_Element="_ydmTMotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ydm6QotiEe-3nrFY8n5C-Q" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ydtn84tiEe-3nrFY8n5C-Q" base_Element="_ydtn8otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_ydtn9ItiEe-3nrFY8n5C-Q" base_Element="_ydtn8otiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_ydtn9YtiEe-3nrFY8n5C-Q" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y2etQItiEe-3nrFY8n5C-Q" base_Element="_y2eGMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y2gicItiEe-3nrFY8n5C-Q" base_Element="_y2f7YItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y2hJgItiEe-3nrFY8n5C-Q" base_Element="_y2gicYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y2hJgotiEe-3nrFY8n5C-Q" base_Element="_y2hJgYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y2hwkItiEe-3nrFY8n5C-Q" base_Element="_y2hJg4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y2kM04tiEe-3nrFY8n5C-Q" base_Element="_y2kM0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y2kz4ItiEe-3nrFY8n5C-Q" base_Element="_y2kM0ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y2kz4YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y2mCBotiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y2mCBYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y2mpEotiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y2mpEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y2pFUItiEe-3nrFY8n5C-Q" genericsValue="String, Activation" base_Element="_y2oeQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y2tWwItiEe-3nrFY8n5C-Q" base_Element="_y2svsItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y2xoMItiEe-3nrFY8n5C-Q" base_Element="_y2xBI4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y2xoMYtiEe-3nrFY8n5C-Q" base_Element="_y2xBI4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y2xoMotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y20rgYtiEe-3nrFY8n5C-Q" base_Element="_y20rgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y22gsYtiEe-3nrFY8n5C-Q" base_Element="_y215oItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y22gsotiEe-3nrFY8n5C-Q" base_Element="_y215oItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y22gs4tiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y24V4ItiEe-3nrFY8n5C-Q" base_Element="_y23u0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y2488ItiEe-3nrFY8n5C-Q" base_Element="_y24V4YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y25kAYtiEe-3nrFY8n5C-Q" base_Element="_y25kAItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y26LEItiEe-3nrFY8n5C-Q" base_Element="_y25kAotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y26yIItiEe-3nrFY8n5C-Q" base_Element="_y26LEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y27ZMItiEe-3nrFY8n5C-Q" base_Element="_y26yIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y28AQItiEe-3nrFY8n5C-Q" base_Element="_y27ZMYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y291c4tiEe-3nrFY8n5C-Q" base_Element="_y291cItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y291dItiEe-3nrFY8n5C-Q" base_Element="_y291cItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y291dYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y3ARsYtiEe-3nrFY8n5C-Q" genericsValue="String, Flow" base_Element="_y3ARsItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y3A4wItiEe-3nrFY8n5C-Q" genericsValue="Node, Activation" base_Element="_y3ARsotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3DVAItiEe-3nrFY8n5C-Q" base_Element="_y3Ct8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3D8EItiEe-3nrFY8n5C-Q" base_Element="_y3DVAYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3D8EotiEe-3nrFY8n5C-Q" base_Element="_y3D8EYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3EjIItiEe-3nrFY8n5C-Q" base_Element="_y3D8E4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3EjIotiEe-3nrFY8n5C-Q" base_Element="_y3EjIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3FKMYtiEe-3nrFY8n5C-Q" base_Element="_y3FKMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3FKM4tiEe-3nrFY8n5C-Q" base_Element="_y3FKMotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3FxQYtiEe-3nrFY8n5C-Q" base_Element="_y3FxQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3GYU4tiEe-3nrFY8n5C-Q" base_Element="_y3GYUotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3G_YotiEe-3nrFY8n5C-Q" base_Element="_y3G_YItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3G_Y4tiEe-3nrFY8n5C-Q" base_Element="_y3G_YItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3G_ZItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y3HmcYtiEe-3nrFY8n5C-Q" base_Element="_y3HmcItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3INgotiEe-3nrFY8n5C-Q" base_Element="_y3INgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3INg4tiEe-3nrFY8n5C-Q" base_Element="_y3INgItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3INhItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y3I0kYtiEe-3nrFY8n5C-Q" base_Element="_y3I0kItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3JboItiEe-3nrFY8n5C-Q" base_Element="_y3I0kotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3JboYtiEe-3nrFY8n5C-Q" base_Element="_y3I0kotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3KCsItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y3KpwItiEe-3nrFY8n5C-Q" base_Element="_y3KCsYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3Kpw4tiEe-3nrFY8n5C-Q" base_Element="_y3KpwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3KpxItiEe-3nrFY8n5C-Q" base_Element="_y3KpwYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3KpxYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y3LQ0YtiEe-3nrFY8n5C-Q" base_Element="_y3LQ0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3LQ1ItiEe-3nrFY8n5C-Q" base_Element="_y3LQ0otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3L34ItiEe-3nrFY8n5C-Q" base_Element="_y3LQ0otiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3L34YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y3L344tiEe-3nrFY8n5C-Q" base_Element="_y3L34otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3Me8YtiEe-3nrFY8n5C-Q" base_Element="_y3L35ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3Me8otiEe-3nrFY8n5C-Q" base_Element="_y3L35ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3Me84tiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y3NtEItiEe-3nrFY8n5C-Q" base_Element="_y3NGAItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3OUIItiEe-3nrFY8n5C-Q" base_Element="_y3NtEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3OUIotiEe-3nrFY8n5C-Q" base_Element="_y3OUIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3O7MItiEe-3nrFY8n5C-Q" base_Element="_y3OUI4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3O7MotiEe-3nrFY8n5C-Q" base_Element="_y3O7MYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3O7NItiEe-3nrFY8n5C-Q" base_Element="_y3O7M4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3QJUYtiEe-3nrFY8n5C-Q" base_Element="_y3QJUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3QwYItiEe-3nrFY8n5C-Q" base_Element="_y3QJUotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y3SlkItiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y3R-gItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3TMoItiEe-3nrFY8n5C-Q" base_Element="_y3SlkYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3W3AItiEe-3nrFY8n5C-Q" base_Element="_y3WP8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3W3AYtiEe-3nrFY8n5C-Q" base_Element="_y3WP8ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3W3AotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y3YsMItiEe-3nrFY8n5C-Q" genericsValue="String, Node" base_Element="_y3YFIItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3ahYItiEe-3nrFY8n5C-Q" base_Element="_y3Z6UItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3ey0ItiEe-3nrFY8n5C-Q" base_Element="_y3eLxotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3ey0YtiEe-3nrFY8n5C-Q" base_Element="_y3eLxotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3ey0otiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y3gA8ItiEe-3nrFY8n5C-Q" genericsValue="ScheduleTime" base_Element="_y3fZ4YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y3idMItiEe-3nrFY8n5C-Q" base_Element="_y3hPEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y3idMYtiEe-3nrFY8n5C-Q" base_Element="_y3hPEItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y3jEQItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y3kSYYtiEe-3nrFY8n5C-Q" base_Element="_y3kSYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3k5cYtiEe-3nrFY8n5C-Q" base_Element="_y3k5cItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y3tcUItiEe-3nrFY8n5C-Q" genericsValue="String,InstructionTimeSlot" base_Element="_y3s1QItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y3wfoItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y3v4kYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y3xtwItiEe-3nrFY8n5C-Q" genericsValue="Double" base_Element="_y3xGtItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y3yU0YtiEe-3nrFY8n5C-Q" genericsValue="Double,ReliabilityRow" base_Element="_y3yU0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y37ewYtiEe-3nrFY8n5C-Q" genericsValue="Activation,Row&lt;Activation>" base_Element="_y37ewItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y38s4ItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y38F0YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y39T8YtiEe-3nrFY8n5C-Q" base_Element="_y39T8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3_JIItiEe-3nrFY8n5C-Q" base_Element="_y3-iEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y3_JIotiEe-3nrFY8n5C-Q" base_Element="_y3_JIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4HsAotiEe-3nrFY8n5C-Q" base_Element="_y4HsAItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4HsA4tiEe-3nrFY8n5C-Q" base_Element="_y4HsAItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4HsBItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4ITEItiEe-3nrFY8n5C-Q" base_Element="_y4HsBYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4ITEYtiEe-3nrFY8n5C-Q" base_Element="_y4HsBYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4ITEotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4ITFItiEe-3nrFY8n5C-Q" base_Element="_y4ITE4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4I6IYtiEe-3nrFY8n5C-Q" base_Element="_y4ITFYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4I6IotiEe-3nrFY8n5C-Q" base_Element="_y4ITFYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4I6I4tiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4JhMItiEe-3nrFY8n5C-Q" base_Element="_y4I6JItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4KIQItiEe-3nrFY8n5C-Q" base_Element="_y4JhMYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4KIQYtiEe-3nrFY8n5C-Q" base_Element="_y4JhMYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4KIQotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4LWYItiEe-3nrFY8n5C-Q" base_Element="_y4KvUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4LWY4tiEe-3nrFY8n5C-Q" base_Element="_y4LWYYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4LWZItiEe-3nrFY8n5C-Q" base_Element="_y4LWYYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4LWZYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4L9cYtiEe-3nrFY8n5C-Q" base_Element="_y4L9cItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4MkgItiEe-3nrFY8n5C-Q" base_Element="_y4L9cotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4MkgYtiEe-3nrFY8n5C-Q" base_Element="_y4L9cotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4MkgotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4MkhYtiEe-3nrFY8n5C-Q" base_Element="_y4Mkg4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4NLkItiEe-3nrFY8n5C-Q" base_Element="_y4Mkg4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4NLkYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4NLlItiEe-3nrFY8n5C-Q" base_Element="_y4NLkotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4NyoItiEe-3nrFY8n5C-Q" base_Element="_y4NLkotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4NyoYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4OZsItiEe-3nrFY8n5C-Q" base_Element="_y4NyootiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4OZsYtiEe-3nrFY8n5C-Q" base_Element="_y4NyootiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4OZsotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4VHYYtiEe-3nrFY8n5C-Q" base_Element="_y4VHYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4VucYtiEe-3nrFY8n5C-Q" base_Element="_y4VucItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4WVgItiEe-3nrFY8n5C-Q" base_Element="_y4VucotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4W8kItiEe-3nrFY8n5C-Q" base_Element="_y4WVgYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4dDMYtiEe-3nrFY8n5C-Q" base_Element="_y4dDMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4dqQItiEe-3nrFY8n5C-Q" base_Element="_y4dDMotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4dqQYtiEe-3nrFY8n5C-Q" base_Element="_y4dDMotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4dqQotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4dqRYtiEe-3nrFY8n5C-Q" base_Element="_y4dqQ4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4eRUItiEe-3nrFY8n5C-Q" base_Element="_y4dqQ4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4eRUYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4e4YYtiEe-3nrFY8n5C-Q" base_Element="_y4e4YItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4ffcItiEe-3nrFY8n5C-Q" base_Element="_y4e4YotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4ffcYtiEe-3nrFY8n5C-Q" base_Element="_y4e4YotiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4ffcotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4ffdItiEe-3nrFY8n5C-Q" base_Element="_y4ffc4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4gGgYtiEe-3nrFY8n5C-Q" base_Element="_y4ffdYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4gGgotiEe-3nrFY8n5C-Q" base_Element="_y4ffdYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4gGg4tiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4gtkItiEe-3nrFY8n5C-Q" base_Element="_y4gGhItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4hUootiEe-3nrFY8n5C-Q" base_Element="_y4hUoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4hUo4tiEe-3nrFY8n5C-Q" base_Element="_y4hUoItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4hUpItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4h7sItiEe-3nrFY8n5C-Q" base_Element="_y4hUpYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4h7s4tiEe-3nrFY8n5C-Q" base_Element="_y4h7sYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4iiwItiEe-3nrFY8n5C-Q" base_Element="_y4h7sYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4iiwYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4iiw4tiEe-3nrFY8n5C-Q" base_Element="_y4iiwotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y4jJ0ItiEe-3nrFY8n5C-Q" base_Element="_y4iixItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y4jJ0YtiEe-3nrFY8n5C-Q" base_Element="_y4iixItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y4jJ0otiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y4k_AItiEe-3nrFY8n5C-Q" base_Element="_y4kX8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4k_AotiEe-3nrFY8n5C-Q" base_Element="_y4k_AYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4lmEItiEe-3nrFY8n5C-Q" base_Element="_y4k_A4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4lmEotiEe-3nrFY8n5C-Q" base_Element="_y4lmEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4mNIItiEe-3nrFY8n5C-Q" base_Element="_y4lmE4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4qekItiEe-3nrFY8n5C-Q" base_Element="_y4p3gItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4rFoItiEe-3nrFY8n5C-Q" base_Element="_y4qekYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4xMQItiEe-3nrFY8n5C-Q" base_Element="_y4wlMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4xzUItiEe-3nrFY8n5C-Q" base_Element="_y4xMQYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4xzUotiEe-3nrFY8n5C-Q" base_Element="_y4xzUYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y4yaYYtiEe-3nrFY8n5C-Q" base_Element="_y4yaYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5CSAItiEe-3nrFY8n5C-Q" genericsValue="T, E" base_Element="_y5Bq8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y5DgIItiEe-3nrFY8n5C-Q" base_Element="_y5C5EYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5DgIotiEe-3nrFY8n5C-Q" genericsValue="Activation" base_Element="_y5DgIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5FVUItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y5EuQYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5FVU4tiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y5FVUotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5GjcItiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y5F8YYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5HKgItiEe-3nrFY8n5C-Q" genericsValue="ScheduleTime" base_Element="_y5GjcotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5I_sItiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y5IYoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5K04ItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y5KN0otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5K04YtiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y5KN04tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5Lb8otiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y5Lb8YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5MDAYtiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y5Lb9ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5MqEYtiEe-3nrFY8n5C-Q" genericsValue="Activation" base_Element="_y5MqEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y5N4MYtiEe-3nrFY8n5C-Q" base_Element="_y5NRIItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5OfQItiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_y5NRIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y5OfQYtiEe-3nrFY8n5C-Q" base_Element="_y5NRIItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y5OfQotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y5PtYItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5PGUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y5QUcItiEe-3nrFY8n5C-Q" base_Element="_y5PtYYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y5Q7gYtiEe-3nrFY8n5C-Q" base_Element="_y5QUcYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y5RikItiEe-3nrFY8n5C-Q" base_Element="_y5QUcYtiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y5RikYtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y5SJoYtiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y5SJoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5SwsYtiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y5SwsItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5Ul4ItiEe-3nrFY8n5C-Q" genericsValue="Flow" base_Element="_y5T-0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5WbEItiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_y5V0AotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5XCIItiEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_y5WbEotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y5aFcItiEe-3nrFY8n5C-Q" base_Element="_y5ZeYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5chsItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5b6oItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y5dIxItiEe-3nrFY8n5C-Q" base_Element="_y5dIwItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y5dIxYtiEe-3nrFY8n5C-Q" base_Element="_y5dIwItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y5dIxotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y5dv0YtiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5dv0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y5eW5ItiEe-3nrFY8n5C-Q" base_Element="_y5eW4ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y5e98ItiEe-3nrFY8n5C-Q" base_Element="_y5eW4ItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y5e98YtiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y5flAItiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_y5e98otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5gzIYtiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5gzIItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y5haNItiEe-3nrFY8n5C-Q" base_Element="_y5haMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y5haNYtiEe-3nrFY8n5C-Q" base_Element="_y5haMItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y5iBQItiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y5jPYItiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_y5ioUotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_y5jPZYtiEe-3nrFY8n5C-Q" base_Element="_y5jPYYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5j2cItiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_y5jPYotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y5lEkYtiEe-3nrFY8n5C-Q" base_Element="_y5lEkItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5mSsYtiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5mSsItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y5m5xItiEe-3nrFY8n5C-Q" base_Element="_y5m5wItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y5m5xYtiEe-3nrFY8n5C-Q" base_Element="_y5m5wItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y5m5xotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y5ng0YtiEe-3nrFY8n5C-Q" base_Element="_y5ng0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y5p9EItiEe-3nrFY8n5C-Q" base_Element="_y5pWBItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5ryQYtiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5ryQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y5sZVItiEe-3nrFY8n5C-Q" base_Element="_y5sZUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y5sZVYtiEe-3nrFY8n5C-Q" base_Element="_y5sZUItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y5sZVotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_y5wqwItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5wDtotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5xR04tiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5wqwotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5x45otiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5x44YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5yf8ItiEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_y5x44otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y5zuE4tiEe-3nrFY8n5C-Q" genericsValue="E" base_Element="_y5zuEotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y508MItiEe-3nrFY8n5C-Q" base_Element="_y50VIItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y51jQYtiEe-3nrFY8n5C-Q" base_Element="_y51jQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_y52xYotiEe-3nrFY8n5C-Q" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_y52xYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y52xY4tiEe-3nrFY8n5C-Q" base_Element="_y52xYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y550s4tiEe-3nrFY8n5C-Q" base_Element="_y550sItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y56bwItiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_y550sYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_y56bwYtiEe-3nrFY8n5C-Q" base_Element="_y550sItiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y56bwotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_y6C-oItiEe-3nrFY8n5C-Q" base_Element="_y6CXkYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y6IeMItiEe-3nrFY8n5C-Q" base_Element="_y6H3IItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6TdUYtiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y6TdUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6UrcItiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y6UEYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6VSgYtiEe-3nrFY8n5C-Q" genericsValue="ScheduleTime" base_Element="_y6VSgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6ayEYtiEe-3nrFY8n5C-Q" base_Element="_y6ayEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6ayE4tiEe-3nrFY8n5C-Q" base_Element="_y6ayEotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6bZIItiEe-3nrFY8n5C-Q" base_Element="_y6ayFItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6d1YItiEe-3nrFY8n5C-Q" base_Element="_y6dOU4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6d1YotiEe-3nrFY8n5C-Q" base_Element="_y6d1YYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6fDgItiEe-3nrFY8n5C-Q" base_Element="_y6eccotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6fDgotiEe-3nrFY8n5C-Q" base_Element="_y6fDgYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6fqkItiEe-3nrFY8n5C-Q" genericsValue="ChannelSet" base_Element="_y6fDg4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6fqkYtiEe-3nrFY8n5C-Q" base_Element="_y6fDg4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6g4sotiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y6g4sYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6hfwItiEe-3nrFY8n5C-Q" base_Element="_y6g4sYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6iG0ItiEe-3nrFY8n5C-Q" base_Element="_y6hfwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6jU8ItiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y6it4ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6jU8YtiEe-3nrFY8n5C-Q" base_Element="_y6it4ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6j8AYtiEe-3nrFY8n5C-Q" base_Element="_y6j8AItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6j8A4tiEe-3nrFY8n5C-Q" base_Element="_y6j8AotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6lKIYtiEe-3nrFY8n5C-Q" base_Element="_y6lKIItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6lxMItiEe-3nrFY8n5C-Q" base_Element="_y6lKIotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6lxMotiEe-3nrFY8n5C-Q" base_Element="_y6lxMYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6mYQItiEe-3nrFY8n5C-Q" base_Element="_y6lxM4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6oNcotiEe-3nrFY8n5C-Q" base_Element="_y6oNcYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6qCoItiEe-3nrFY8n5C-Q" base_Element="_y6pbmItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6qCootiEe-3nrFY8n5C-Q" base_Element="_y6qCoYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6qpsItiEe-3nrFY8n5C-Q" base_Element="_y6qCo4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6qpsotiEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_y6qpsYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6rQwItiEe-3nrFY8n5C-Q" base_Element="_y6qpsYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6rQwotiEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_y6rQwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6rQw4tiEe-3nrFY8n5C-Q" base_Element="_y6rQwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6r30YtiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y6r30ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6r30otiEe-3nrFY8n5C-Q" base_Element="_y6r30ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6se4YtiEe-3nrFY8n5C-Q" base_Element="_y6se4ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6se44tiEe-3nrFY8n5C-Q" base_Element="_y6se4otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6ttBYtiEe-3nrFY8n5C-Q" base_Element="_y6ttBItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6uUEItiEe-3nrFY8n5C-Q" base_Element="_y6ttBotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6uUEotiEe-3nrFY8n5C-Q" base_Element="_y6uUEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6uUFItiEe-3nrFY8n5C-Q" base_Element="_y6uUE4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6u7IItiEe-3nrFY8n5C-Q" base_Element="_y6uUFYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6u7IotiEe-3nrFY8n5C-Q" base_Element="_y6u7IYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6viMItiEe-3nrFY8n5C-Q" base_Element="_y6u7I4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6viMotiEe-3nrFY8n5C-Q" base_Element="_y6viMYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6viNItiEe-3nrFY8n5C-Q" base_Element="_y6viM4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6wJQ4tiEe-3nrFY8n5C-Q" base_Element="_y6wJQotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6wwUYtiEe-3nrFY8n5C-Q" base_Element="_y6wwUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6wwVItiEe-3nrFY8n5C-Q" base_Element="_y6wwUotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6x-cotiEe-3nrFY8n5C-Q" base_Element="_y6x-cItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6ylgItiEe-3nrFY8n5C-Q" base_Element="_y6x-c4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6ylg4tiEe-3nrFY8n5C-Q" base_Element="_y6ylgotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6zMkYtiEe-3nrFY8n5C-Q" base_Element="_y6zMkItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6zMk4tiEe-3nrFY8n5C-Q" base_Element="_y6zMkotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6zMlYtiEe-3nrFY8n5C-Q" base_Element="_y6zMlItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y6zzoYtiEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_y6zzoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6zzootiEe-3nrFY8n5C-Q" base_Element="_y6zzoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y60atYtiEe-3nrFY8n5C-Q" base_Element="_y60atItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y61BwItiEe-3nrFY8n5C-Q" base_Element="_y60atotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y61o0otiEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_y61o0YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6229ItiEe-3nrFY8n5C-Q" base_Element="_y62284tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y63eAItiEe-3nrFY8n5C-Q" base_Element="_y6229YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y63eBYtiEe-3nrFY8n5C-Q" base_Element="_y63eAYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y64FFItiEe-3nrFY8n5C-Q" base_Element="_y64FEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y64FFotiEe-3nrFY8n5C-Q" base_Element="_y64FFYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y64sIItiEe-3nrFY8n5C-Q" genericsValue="Activation" base_Element="_y64FF4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y64sIYtiEe-3nrFY8n5C-Q" base_Element="_y64FF4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y65TMItiEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_y64sIotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y65TMYtiEe-3nrFY8n5C-Q" base_Element="_y64sIotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y656QItiEe-3nrFY8n5C-Q" base_Element="_y65TMotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y66hWItiEe-3nrFY8n5C-Q" base_Element="_y66hV4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y67IYYtiEe-3nrFY8n5C-Q" base_Element="_y67IYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y67vcItiEe-3nrFY8n5C-Q" base_Element="_y67IYotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y67vcotiEe-3nrFY8n5C-Q" base_Element="_y67vcYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y67vdItiEe-3nrFY8n5C-Q" base_Element="_y67vc4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y67vdotiEe-3nrFY8n5C-Q" base_Element="_y67vdYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y68WgYtiEe-3nrFY8n5C-Q" base_Element="_y68WgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y68Wg4tiEe-3nrFY8n5C-Q" base_Element="_y68WgotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y689kItiEe-3nrFY8n5C-Q" base_Element="_y68WhItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y689kotiEe-3nrFY8n5C-Q" base_Element="_y689kYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y689lItiEe-3nrFY8n5C-Q" base_Element="_y689k4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y689lotiEe-3nrFY8n5C-Q" base_Element="_y689lYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y69koYtiEe-3nrFY8n5C-Q" base_Element="_y69koItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6-ywotiEe-3nrFY8n5C-Q" base_Element="_y6-ywYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6-yxItiEe-3nrFY8n5C-Q" base_Element="_y6-yw4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y6_Z0ItiEe-3nrFY8n5C-Q" base_Element="_y6-yxYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7AA54tiEe-3nrFY8n5C-Q" base_Element="_y7AA5otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7An8ItiEe-3nrFY8n5C-Q" base_Element="_y7AA6ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7An9ItiEe-3nrFY8n5C-Q" base_Element="_y7An84tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7BPAItiEe-3nrFY8n5C-Q" base_Element="_y7An9YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7B2EotiEe-3nrFY8n5C-Q" base_Element="_y7B2EYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7B2FItiEe-3nrFY8n5C-Q" base_Element="_y7B2E4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7CdIItiEe-3nrFY8n5C-Q" base_Element="_y7B2FYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7CdIotiEe-3nrFY8n5C-Q" base_Element="_y7CdIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7CdJItiEe-3nrFY8n5C-Q" base_Element="_y7CdI4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7DEMYtiEe-3nrFY8n5C-Q" base_Element="_y7DEMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7DEM4tiEe-3nrFY8n5C-Q" base_Element="_y7DEMotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7DrQItiEe-3nrFY8n5C-Q" base_Element="_y7DENItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7FgcItiEe-3nrFY8n5C-Q" base_Element="_y7E5YotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7FgcotiEe-3nrFY8n5C-Q" base_Element="_y7FgcYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7FgdItiEe-3nrFY8n5C-Q" base_Element="_y7Fgc4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7GHgItiEe-3nrFY8n5C-Q" base_Element="_y7FgdYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7GHgotiEe-3nrFY8n5C-Q" base_Element="_y7GHgYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7GHhItiEe-3nrFY8n5C-Q" base_Element="_y7GHg4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7GukItiEe-3nrFY8n5C-Q" base_Element="_y7GHhYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7Guk4tiEe-3nrFY8n5C-Q" base_Element="_y7GukYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7HVoItiEe-3nrFY8n5C-Q" base_Element="_y7GulItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7HVootiEe-3nrFY8n5C-Q" base_Element="_y7HVoYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7H8sItiEe-3nrFY8n5C-Q" base_Element="_y7HVo4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7H8sotiEe-3nrFY8n5C-Q" base_Element="_y7H8sYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7H8tItiEe-3nrFY8n5C-Q" base_Element="_y7H8s4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_y7IjwItiEe-3nrFY8n5C-Q" dimensions="2" base_Element="_y7H8t4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7IjwYtiEe-3nrFY8n5C-Q" base_Element="_y7H8t4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7Ijw4tiEe-3nrFY8n5C-Q" base_Element="_y7IjwotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7JK0YtiEe-3nrFY8n5C-Q" base_Element="_y7JK0ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7Jx44tiEe-3nrFY8n5C-Q" base_Element="_y7Jx4otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7Jx5YtiEe-3nrFY8n5C-Q" base_Element="_y7Jx5ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7KY8YtiEe-3nrFY8n5C-Q" base_Element="_y7KY8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7KY9ItiEe-3nrFY8n5C-Q" base_Element="_y7KY84tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7LAAYtiEe-3nrFY8n5C-Q" base_Element="_y7LAAItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7LAA4tiEe-3nrFY8n5C-Q" base_Element="_y7LAAotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7LABYtiEe-3nrFY8n5C-Q" base_Element="_y7LABItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7LnEItiEe-3nrFY8n5C-Q" base_Element="_y7LABotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7LnEotiEe-3nrFY8n5C-Q" base_Element="_y7LnEYtiEe-3nrFY8n5C-Q">
    <associatedElement xmi:type="uml:Operation" xmi:id="_y7LnE4tiEe-3nrFY8n5C-Q" name="getNumChannels" method="_y8DJxotiEe-3nrFY8n5C-Q">
      <ownedParameter xmi:id="_y7MOIItiEe-3nrFY8n5C-Q" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_y7MOIYtiEe-3nrFY8n5C-Q" base_Element="_y7LnE4tiEe-3nrFY8n5C-Q">
    <annotations xmi:id="_y7MOIotiEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7MOJYtiEe-3nrFY8n5C-Q" base_Element="_y7MOI4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7M1MItiEe-3nrFY8n5C-Q" base_Element="_y7MOJotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7ODUItiEe-3nrFY8n5C-Q" base_Element="_y7NcSotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7ODVYtiEe-3nrFY8n5C-Q" base_Element="_y7ODU4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7OqYYtiEe-3nrFY8n5C-Q" base_Element="_y7OqYItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y7OqY4tiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y7OqYotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y7PRcotiEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_y7PRcYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7Rtt4tiEe-3nrFY8n5C-Q" base_Element="_y7RttYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7SUwotiEe-3nrFY8n5C-Q" base_Element="_y7SUwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y7S70YtiEe-3nrFY8n5C-Q" genericsValue="InstructionParameters" base_Element="_y7S70ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7S70otiEe-3nrFY8n5C-Q" base_Element="_y7S70ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7Ti4ItiEe-3nrFY8n5C-Q" base_Element="_y7S704tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7UxA4tiEe-3nrFY8n5C-Q" base_Element="_y7UxAotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7UxBYtiEe-3nrFY8n5C-Q" base_Element="_y7UxBItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7VYEItiEe-3nrFY8n5C-Q" base_Element="_y7UxBotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7VYEotiEe-3nrFY8n5C-Q" base_Element="_y7VYEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7VYFItiEe-3nrFY8n5C-Q" base_Element="_y7VYE4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7VYFotiEe-3nrFY8n5C-Q" base_Element="_y7VYFYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7V_IItiEe-3nrFY8n5C-Q" base_Element="_y7VYF4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7V_IotiEe-3nrFY8n5C-Q" base_Element="_y7V_IYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7V_JItiEe-3nrFY8n5C-Q" base_Element="_y7V_I4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7V_JotiEe-3nrFY8n5C-Q" base_Element="_y7V_JYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7WmMYtiEe-3nrFY8n5C-Q" base_Element="_y7WmMItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7WmM4tiEe-3nrFY8n5C-Q" base_Element="_y7WmMotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7WmNYtiEe-3nrFY8n5C-Q" base_Element="_y7WmNItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7WmN4tiEe-3nrFY8n5C-Q" base_Element="_y7WmNotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7XNQotiEe-3nrFY8n5C-Q" base_Element="_y7XNQItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7XNRItiEe-3nrFY8n5C-Q" base_Element="_y7XNQ4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7X0UItiEe-3nrFY8n5C-Q" base_Element="_y7XNRYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7X0UotiEe-3nrFY8n5C-Q" base_Element="_y7X0UYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7aQk4tiEe-3nrFY8n5C-Q" base_Element="_y7aQkotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7a3ootiEe-3nrFY8n5C-Q" base_Element="_y7a3oYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7a3pItiEe-3nrFY8n5C-Q" base_Element="_y7a3o4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7a3potiEe-3nrFY8n5C-Q" base_Element="_y7a3pYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y7betItiEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_y7bes4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_y7cFwItiEe-3nrFY8n5C-Q" base_Element="_y7bes4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_y7cFwotiEe-3nrFY8n5C-Q" genericsValue="SchedulableObject" base_Element="_y7cFwYtiEe-3nrFY8n5C-Q"/>
  <uml:OpaqueBehavior xmi:id="_y8DJxotiEe-3nrFY8n5C-Q" name="getNumChannels" specification="_y7LnE4tiEe-3nrFY8n5C-Q">
    <ownedParameter xmi:id="_y8DJx4tiEe-3nrFY8n5C-Q" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_y81z8ItiEe-3nrFY8n5C-Q" base_Element="_y81M4ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y82bAItiEe-3nrFY8n5C-Q" base_Element="_y81z8YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y82bA4tiEe-3nrFY8n5C-Q" base_Element="_y82bAYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y83CEItiEe-3nrFY8n5C-Q" base_Element="_y82bBItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y83CE4tiEe-3nrFY8n5C-Q" base_Element="_y83CEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y83CFotiEe-3nrFY8n5C-Q" base_Element="_y83CFItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y83pIItiEe-3nrFY8n5C-Q" base_Element="_y83CF4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y83pI4tiEe-3nrFY8n5C-Q" base_Element="_y83pIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y84QMItiEe-3nrFY8n5C-Q" base_Element="_y83pJItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y84QM4tiEe-3nrFY8n5C-Q" base_Element="_y84QMYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y84QNotiEe-3nrFY8n5C-Q" base_Element="_y84QNItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y843QItiEe-3nrFY8n5C-Q" base_Element="_y84QN4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y843Q4tiEe-3nrFY8n5C-Q" base_Element="_y843QYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y85eUItiEe-3nrFY8n5C-Q" base_Element="_y843RItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y86FYItiEe-3nrFY8n5C-Q" base_Element="_y85eUYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y86scItiEe-3nrFY8n5C-Q" base_Element="_y86FYYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y86sc4tiEe-3nrFY8n5C-Q" base_Element="_y86scYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y87TgotiEe-3nrFY8n5C-Q" base_Element="_y87TgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y87ThYtiEe-3nrFY8n5C-Q" base_Element="_y87Tg4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y876kotiEe-3nrFY8n5C-Q" base_Element="_y876kItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y876lYtiEe-3nrFY8n5C-Q" base_Element="_y876k4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y88hoItiEe-3nrFY8n5C-Q" base_Element="_y876lotiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y88ho4tiEe-3nrFY8n5C-Q" base_Element="_y88hoYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y89IsItiEe-3nrFY8n5C-Q" base_Element="_y88hpItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y89Is4tiEe-3nrFY8n5C-Q" base_Element="_y89IsYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y89ItotiEe-3nrFY8n5C-Q" base_Element="_y89ItItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y89vwItiEe-3nrFY8n5C-Q" base_Element="_y89It4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y89vw4tiEe-3nrFY8n5C-Q" base_Element="_y89vwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y8-W0ItiEe-3nrFY8n5C-Q" base_Element="_y89vxItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y8-W04tiEe-3nrFY8n5C-Q" base_Element="_y8-W0YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y8-W1otiEe-3nrFY8n5C-Q" base_Element="_y8-W1ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y8-94otiEe-3nrFY8n5C-Q" base_Element="_y8-94ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y8-95YtiEe-3nrFY8n5C-Q" base_Element="_y8-944tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y8_k8ItiEe-3nrFY8n5C-Q" base_Element="_y8-95otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y8_k84tiEe-3nrFY8n5C-Q" base_Element="_y8_k8YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9AMAItiEe-3nrFY8n5C-Q" base_Element="_y8_k9ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9AMA4tiEe-3nrFY8n5C-Q" base_Element="_y9AMAYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9AMBotiEe-3nrFY8n5C-Q" base_Element="_y9AMBItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9AzEItiEe-3nrFY8n5C-Q" base_Element="_y9AMB4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9AzE4tiEe-3nrFY8n5C-Q" base_Element="_y9AzEYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9BaIItiEe-3nrFY8n5C-Q" base_Element="_y9AzFItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9BaI4tiEe-3nrFY8n5C-Q" base_Element="_y9BaIYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9BaJotiEe-3nrFY8n5C-Q" base_Element="_y9BaJItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9CBMItiEe-3nrFY8n5C-Q" base_Element="_y9BaJ4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9CBM4tiEe-3nrFY8n5C-Q" base_Element="_y9CBMYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9CoQItiEe-3nrFY8n5C-Q" base_Element="_y9CBNItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9CoQ4tiEe-3nrFY8n5C-Q" base_Element="_y9CoQYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9CoRotiEe-3nrFY8n5C-Q" base_Element="_y9CoRItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9DPUotiEe-3nrFY8n5C-Q" base_Element="_y9DPUItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9D2YItiEe-3nrFY8n5C-Q" base_Element="_y9DPU4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9D2Y4tiEe-3nrFY8n5C-Q" base_Element="_y9D2YYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9EdcItiEe-3nrFY8n5C-Q" base_Element="_y9D2ZItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9Edc4tiEe-3nrFY8n5C-Q" base_Element="_y9EdcYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9FEgotiEe-3nrFY8n5C-Q" base_Element="_y9FEgItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9FrkItiEe-3nrFY8n5C-Q" base_Element="_y9FEg4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9Frk4tiEe-3nrFY8n5C-Q" base_Element="_y9FrkYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9GSootiEe-3nrFY8n5C-Q" base_Element="_y9GSoItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9GSpYtiEe-3nrFY8n5C-Q" base_Element="_y9GSo4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9G5sotiEe-3nrFY8n5C-Q" base_Element="_y9G5sItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9HgwItiEe-3nrFY8n5C-Q" base_Element="_y9G5s4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9Hgw4tiEe-3nrFY8n5C-Q" base_Element="_y9HgwYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9IH0ItiEe-3nrFY8n5C-Q" base_Element="_y9HgxItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9IH04tiEe-3nrFY8n5C-Q" base_Element="_y9IH0YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9Iu4ItiEe-3nrFY8n5C-Q" base_Element="_y9IH1ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9Iu44tiEe-3nrFY8n5C-Q" base_Element="_y9Iu4YtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9Iu5otiEe-3nrFY8n5C-Q" base_Element="_y9Iu5ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9JV8otiEe-3nrFY8n5C-Q" base_Element="_y9JV8ItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9JV9YtiEe-3nrFY8n5C-Q" base_Element="_y9JV84tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9J9AItiEe-3nrFY8n5C-Q" base_Element="_y9JV9otiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9J9A4tiEe-3nrFY8n5C-Q" base_Element="_y9J9AYtiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9J9BotiEe-3nrFY8n5C-Q" base_Element="_y9J9BItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9KkEotiEe-3nrFY8n5C-Q" base_Element="_y9KkEItiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_y9KkFYtiEe-3nrFY8n5C-Q" base_Element="_y9KkE4tiEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_BfXa6ZV3Ee-EOddEwqrIsA" genericsValue="Integer" base_Element="_BfXa5pV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Generics xmi:id="_BfXa7ZV3Ee-EOddEwqrIsA" genericsValue="Integer" base_Element="_BfXa6pV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Generics xmi:id="_BfYB-5V3Ee-EOddEwqrIsA" genericsValue="Integer" base_Element="_BfYB9ZV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BfYpAZV3Ee-EOddEwqrIsA" base_Element="_BfYpAJV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BfYpA5V3Ee-EOddEwqrIsA" base_Element="_BfYpApV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BfYpBZV3Ee-EOddEwqrIsA" base_Element="_BfYpBJV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Reference xmi:id="_UQ81IJV4Ee-EOddEwqrIsA" base_Element="_UQ8OEJV4Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Annotations xmi:id="_ZBsnUJV4Ee-EOddEwqrIsA" base_Element="_ZBsAQJV4Ee-EOddEwqrIsA">
    <annotations xmi:id="_ZBsnUZV4Ee-EOddEwqrIsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZBsnUpV4Ee-EOddEwqrIsA" base_Element="_ZBsAQJV4Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Annotations xmi:id="_J-apAZWyEe-EOddEwqrIsA" base_Element="_J-apAJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-apApWyEe-EOddEwqrIsA" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-apBJWyEe-EOddEwqrIsA" base_Element="_J-apA5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-apBZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-apB5WyEe-EOddEwqrIsA" base_Element="_J-apBpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-apCJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-apCpWyEe-EOddEwqrIsA" base_Element="_J-apCZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-apC5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-apDZWyEe-EOddEwqrIsA" base_Element="_J-apDJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-apDpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-bQEJWyEe-EOddEwqrIsA" base_Element="_J-apD5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-bQEZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-bQE5WyEe-EOddEwqrIsA" base_Element="_J-bQEpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-bQFJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-bQFpWyEe-EOddEwqrIsA" base_Element="_J-bQFZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-bQF5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-bQGZWyEe-EOddEwqrIsA" base_Element="_J-bQGJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-bQGpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-bQHJWyEe-EOddEwqrIsA" base_Element="_J-bQG5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-bQHZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-b3IJWyEe-EOddEwqrIsA" base_Element="_J-bQHpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-b3IZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-b3I5WyEe-EOddEwqrIsA" base_Element="_J-b3IpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-b3JJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-b3JpWyEe-EOddEwqrIsA" base_Element="_J-b3JZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-b3J5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-b3KZWyEe-EOddEwqrIsA" base_Element="_J-b3KJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-b3KpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-b3LJWyEe-EOddEwqrIsA" base_Element="_J-b3K5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-b3LZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-b3L5WyEe-EOddEwqrIsA" base_Element="_J-b3LpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-b3MJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-ceMJWyEe-EOddEwqrIsA" base_Element="_J-b3MZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-ceMZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-ceM5WyEe-EOddEwqrIsA" base_Element="_J-ceMpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-ceNJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-ceNpWyEe-EOddEwqrIsA" base_Element="_J-ceNZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-ceN5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-ceOZWyEe-EOddEwqrIsA" base_Element="_J-ceOJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-ceOpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-cePJWyEe-EOddEwqrIsA" base_Element="_J-ceO5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-cePZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-ceP5WyEe-EOddEwqrIsA" base_Element="_J-cePpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFQJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dFQpWyEe-EOddEwqrIsA" base_Element="_J-dFQZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFQ5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dFRZWyEe-EOddEwqrIsA" base_Element="_J-dFRJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFRpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dFSJWyEe-EOddEwqrIsA" base_Element="_J-dFR5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFSZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dFS5WyEe-EOddEwqrIsA" base_Element="_J-dFSpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFTJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dFTpWyEe-EOddEwqrIsA" base_Element="_J-dFTZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFT5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dFUZWyEe-EOddEwqrIsA" base_Element="_J-dFUJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFUpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dFVJWyEe-EOddEwqrIsA" base_Element="_J-dFU5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dFVZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dsUJWyEe-EOddEwqrIsA" base_Element="_J-dFVpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dsUZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dsU5WyEe-EOddEwqrIsA" base_Element="_J-dsUpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dsVJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_J-dsVpWyEe-EOddEwqrIsA" base_Element="_J-dsVZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_J-dsV5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-dsWJWyEe-EOddEwqrIsA" base_Element="_J-apAJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-dsWZWyEe-EOddEwqrIsA" base_Element="_J-apA5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTYJWyEe-EOddEwqrIsA" base_Element="_J-apBpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTYZWyEe-EOddEwqrIsA" base_Element="_J-apCZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTYpWyEe-EOddEwqrIsA" base_Element="_J-apDJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTY5WyEe-EOddEwqrIsA" base_Element="_J-apD5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTZJWyEe-EOddEwqrIsA" base_Element="_J-bQEpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTZZWyEe-EOddEwqrIsA" base_Element="_J-bQFZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTZpWyEe-EOddEwqrIsA" base_Element="_J-bQGJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTZ5WyEe-EOddEwqrIsA" base_Element="_J-bQG5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTaJWyEe-EOddEwqrIsA" base_Element="_J-bQHpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTaZWyEe-EOddEwqrIsA" base_Element="_J-b3IpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTapWyEe-EOddEwqrIsA" base_Element="_J-b3JZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTa5WyEe-EOddEwqrIsA" base_Element="_J-b3KJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTbJWyEe-EOddEwqrIsA" base_Element="_J-b3K5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTbZWyEe-EOddEwqrIsA" base_Element="_J-b3LpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTbpWyEe-EOddEwqrIsA" base_Element="_J-b3MZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTb5WyEe-EOddEwqrIsA" base_Element="_J-ceMpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTcJWyEe-EOddEwqrIsA" base_Element="_J-ceNZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTcZWyEe-EOddEwqrIsA" base_Element="_J-ceOJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTcpWyEe-EOddEwqrIsA" base_Element="_J-ceO5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTc5WyEe-EOddEwqrIsA" base_Element="_J-cePpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTdJWyEe-EOddEwqrIsA" base_Element="_J-dFQZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTdZWyEe-EOddEwqrIsA" base_Element="_J-dFRJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-eTdpWyEe-EOddEwqrIsA" base_Element="_J-dFR5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-e6cJWyEe-EOddEwqrIsA" base_Element="_J-dFSpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-e6cZWyEe-EOddEwqrIsA" base_Element="_J-dFTZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-e6cpWyEe-EOddEwqrIsA" base_Element="_J-dFUJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-e6c5WyEe-EOddEwqrIsA" base_Element="_J-dFU5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-e6dJWyEe-EOddEwqrIsA" base_Element="_J-dFVpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-e6dZWyEe-EOddEwqrIsA" base_Element="_J-dsUpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-e6dpWyEe-EOddEwqrIsA" base_Element="_J-dsVZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_J-fhgZWyEe-EOddEwqrIsA" base_Element="_J-fhgJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:Reference xmi:id="_J-gvoJWyEe-EOddEwqrIsA" base_Element="_J-gImZWyEe-EOddEwqrIsA"/>
</xmi:XMI>
