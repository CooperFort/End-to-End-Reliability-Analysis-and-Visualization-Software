<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_cVByMItlEe-3nrFY8n5C-Q" name="Reliability">
    <eAnnotations xmi:id="_cc24gItlEe-3nrFY8n5C-Q" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_cc3fkItlEe-3nrFY8n5C-Q" source="codegen">
        <details xmi:id="_cc3fkYtlEe-3nrFY8n5C-Q" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_tR7YMItlEe-3nrFY8n5C-Q" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;3024343258/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;3853306824/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;2034073373/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;2811806748/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;3195166460/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;872941976/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2726194203/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;1667435476/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;2786849095/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;3175553779/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;4032503718/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;686679007/1;"/>
      </contents>
      <contents xmi:type="ecore:EAnnotation" xmi:id="_W1Xr8JVzEe-EOddEwqrIsA" source="preferences">
        <contents xmi:type="ecore:EAnnotation" xmi:id="_W1YTAJVzEe-EOddEwqrIsA" source="com.yattasolutions.codegen.reverse">
          <details xmi:id="_W1YTAZVzEe-EOddEwqrIsA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerNewFiles" value="true"/>
          <details xmi:id="_W1YTApVzEe-EOddEwqrIsA" key="com.yattasolutions.codegen.reverse.roundtrip.RemoveDeletedFiles" value="true"/>
          <details xmi:id="_W1YTA5VzEe-EOddEwqrIsA" key="com.yattasolutions.codegen.reverse.roundtrip.ReverseEngineerChangedFiles" value="true"/>
        </contents>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_dQVj4ItlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_dQVj4YtlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_dQVj4otlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_dQVj44tlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_dQVj5ItlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_dQVj5YtlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_dQVj5otlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_dQVj54tlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_dQWK8ItlEe-3nrFY8n5C-Q">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_dNwJ8ItlEe-3nrFY8n5C-Q" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_dNwxAItlEe-3nrFY8n5C-Q" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_dNwxAYtlEe-3nrFY8n5C-Q" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_dNymMItlEe-3nrFY8n5C-Q" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_dQxBsItlEe-3nrFY8n5C-Q" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_dqYbkotlEe-3nrFY8n5C-Q" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_dTXCsItlEe-3nrFY8n5C-Q" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_dq0gcotlEe-3nrFY8n5C-Q" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_dTeXcItlEe-3nrFY8n5C-Q" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_dq1ukItlEe-3nrFY8n5C-Q" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_dq2VoYtlEe-3nrFY8n5C-Q" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWDKUItlEe-3nrFY8n5C-Q" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_dsBaUItlEe-3nrFY8n5C-Q" general="_dp1pAItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds49AItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds49AYtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtsOQItlEe-3nrFY8n5C-Q" name="AbstractMap" specification="_dWE_gItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtsOQYtlEe-3nrFY8n5C-Q" type="_dWDKUItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWE_gItlEe-3nrFY8n5C-Q" name="AbstractMap" method="_dtsOQItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWFmkItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWFmkYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWFmkotlEe-3nrFY8n5C-Q" type="_dWDKUItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWG0sItlEe-3nrFY8n5C-Q" name="Activation">
              <generalization xmi:id="_dp6hg4tlEe-3nrFY8n5C-Q" general="_dYy8UItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds49AotlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q" isReadOnly="true" association="_dunbUItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds5kEYtlEe-3nrFY8n5C-Q" name="edges" type="_dp2QEYtlEe-3nrFY8n5C-Q" isReadOnly="true" association="_duopcItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds6LIItlEe-3nrFY8n5C-Q" name="additionalScheduleTimes" type="_dp2QEYtlEe-3nrFY8n5C-Q" isReadOnly="true" association="_dupQgItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds6LIotlEe-3nrFY8n5C-Q" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ds6LI4tlEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dsCBY4tlEe-3nrFY8n5C-Q" client="_dWG0sItlEe-3nrFY8n5C-Q" supplier="_dsCBYYtlEe-3nrFY8n5C-Q" contract="_dsCBYYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtsOQotlEe-3nrFY8n5C-Q" name="Activation" specification="_dWIC0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtsOQ4tlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtsORItlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtsORYtlEe-3nrFY8n5C-Q" name="Activation" specification="_dp4FQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtsORotlEe-3nrFY8n5C-Q" name="elem" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtsOR4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtsOSItlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1UItlEe-3nrFY8n5C-Q" name="clone" specification="_dWIp4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1UYtlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1UotlEe-3nrFY8n5C-Q" name="getEdgesByReleaseTime" specification="_dWJQ8otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1U4tlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1VItlEe-3nrFY8n5C-Q" name="getEdgesByLatestReleaseTime" specification="_dWJ4AYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1VYtlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1VotlEe-3nrFY8n5C-Q" name="getEdgesByPeriod" specification="_dWKfEYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1V4tlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1WItlEe-3nrFY8n5C-Q" name="getEdgesByDeadline" specification="_dWLGIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1WYtlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1WotlEe-3nrFY8n5C-Q" name="getEdgesByPriority" specification="_dWLtMYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1W4tlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1XItlEe-3nrFY8n5C-Q" name="addEdges" specification="_dsDPgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1XYtlEe-3nrFY8n5C-Q" name="edges" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dts1XotlEe-3nrFY8n5C-Q" name="addEdge" specification="_dp4sUYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dts1X4tlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcYItlEe-3nrFY8n5C-Q" name="increaseEdgePhases" specification="_dWMUQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcYYtlEe-3nrFY8n5C-Q" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcYotlEe-3nrFY8n5C-Q" name="updatePriorityAndRelease" specification="_dWMUQotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcY4tlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcZItlEe-3nrFY8n5C-Q" name="addConflict" specification="_dWM7UItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcZYtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcZotlEe-3nrFY8n5C-Q" name="addConflicts" specification="_dsDPg4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcZ4tlEe-3nrFY8n5C-Q" name="conflicts" type="_dp3eMYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcaItlEe-3nrFY8n5C-Q" name="addCoordinator" specification="_dWNiYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcaYtlEe-3nrFY8n5C-Q" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcaotlEe-3nrFY8n5C-Q" name="addCoordinators" specification="_dsD2kYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttca4tlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcbItlEe-3nrFY8n5C-Q" name="addScheduleTimes" specification="_dsEdoYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcbYtlEe-3nrFY8n5C-Q" name="scheduleTime" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcbotlEe-3nrFY8n5C-Q" name="getNextScheduleTime" specification="_dWNiYotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcb4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dttccItlEe-3nrFY8n5C-Q" type="_dX6LgItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttccYtlEe-3nrFY8n5C-Q" name="getMatchingEndTime" specification="_dWOJcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttccotlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dttcc4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dttcdItlEe-3nrFY8n5C-Q" name="getNextStartTime" specification="_dWOJc4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dttcdYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dttcdotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDcItlEe-3nrFY8n5C-Q" name="getNextEndTime" specification="_dWOwgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDcYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtuDcotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDc4tlEe-3nrFY8n5C-Q" name="getNumEdges" specification="_dWOwg4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDdItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDdYtlEe-3nrFY8n5C-Q" name="compareTo" specification="_dp4sVItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDdotlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtuDd4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDeItlEe-3nrFY8n5C-Q" name="conflictExists" specification="_dp5TY4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDeYtlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtuDeotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDe4tlEe-3nrFY8n5C-Q" name="canCombine" specification="_dp5TZotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDfItlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtuDfYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDfotlEe-3nrFY8n5C-Q" name="getDelta" specification="_dWPXkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDf4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDgItlEe-3nrFY8n5C-Q" name="getExecutionDuration" specification="_dWPXkotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDgYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDgotlEe-3nrFY8n5C-Q" name="getCombinedExecutionDuration" specification="_dp56cItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDg4tlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtuDhItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDhYtlEe-3nrFY8n5C-Q" name="printAll" specification="_dWP-oYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuDhotlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuDh4tlEe-3nrFY8n5C-Q" name="printAll" specification="_dWP-o4tlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuqgItlEe-3nrFY8n5C-Q" name="printEdges" specification="_dp56c4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuqgYtlEe-3nrFY8n5C-Q" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtuqgotlEe-3nrFY8n5C-Q" name="edges" type="_dXn3oItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuqg4tlEe-3nrFY8n5C-Q" name="printEdges" specification="_dp6hgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuqhItlEe-3nrFY8n5C-Q" name="edges" type="_dXn3oItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWIC0ItlEe-3nrFY8n5C-Q" name="Activation" visibility="package" method="_dtsOQotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWIC0otlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWIC04tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWIC0YtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWIC1ItlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWIp4ItlEe-3nrFY8n5C-Q" name="clone" method="_dts1UItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp4FRotlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWJQ8otlEe-3nrFY8n5C-Q" name="getEdgesByReleaseTime" method="_dts1UotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-EJV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dp4FR4tlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWJ4AYtlEe-3nrFY8n5C-Q" name="getEdgesByLatestReleaseTime" method="_dts1VItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-EZV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dp4FSItlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWKfEYtlEe-3nrFY8n5C-Q" name="getEdgesByPeriod" method="_dts1VotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-EpV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_dp4FSYtlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWLGIItlEe-3nrFY8n5C-Q" name="getEdgesByDeadline" method="_dts1WItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-E5V2Ee-EOddEwqrIsA">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_dp4FSotlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWLtMYtlEe-3nrFY8n5C-Q" name="getEdgesByPriority" method="_dts1WotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-FJV2Ee-EOddEwqrIsA">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dp4sUItlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWMUQItlEe-3nrFY8n5C-Q" name="increaseEdgePhases" method="_dttcYItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-FZV2Ee-EOddEwqrIsA">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWMUQYtlEe-3nrFY8n5C-Q" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWMUQotlEe-3nrFY8n5C-Q" name="updatePriorityAndRelease" method="_dttcYotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-FpV2Ee-EOddEwqrIsA">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_dWMUQ4tlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWM7UItlEe-3nrFY8n5C-Q" name="addConflict" method="_dttcZItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWM7UYtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWNiYItlEe-3nrFY8n5C-Q" name="addCoordinator" method="_dttcaItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWNiYYtlEe-3nrFY8n5C-Q" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWNiYotlEe-3nrFY8n5C-Q" name="getNextScheduleTime" method="_dttcbotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-GJV2Ee-EOddEwqrIsA">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWNiY4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dp4sU4tlEe-3nrFY8n5C-Q" type="_dX6LgItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWOJcItlEe-3nrFY8n5C-Q" name="getMatchingEndTime" method="_dttccYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-GZV2Ee-EOddEwqrIsA">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWOJcYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWOJcotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWOJc4tlEe-3nrFY8n5C-Q" name="getNextStartTime" method="_dttcdItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-GpV2Ee-EOddEwqrIsA">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWOJdItlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWOJdYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWOwgItlEe-3nrFY8n5C-Q" name="getNextEndTime" method="_dtuDcItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-G5V2Ee-EOddEwqrIsA">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWOwgYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWOwgotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWOwg4tlEe-3nrFY8n5C-Q" name="getNumEdges" method="_dtuDc4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWOwhItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWPXkItlEe-3nrFY8n5C-Q" name="getDelta" method="_dtuDfotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-HJV2Ee-EOddEwqrIsA">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWPXkYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWPXkotlEe-3nrFY8n5C-Q" name="getExecutionDuration" method="_dtuDgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWP-oItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWP-oYtlEe-3nrFY8n5C-Q" name="printAll" method="_dtuDhYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWP-ootlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWP-o4tlEe-3nrFY8n5C-Q" name="printAll" method="_dtuDh4tlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dp4FQItlEe-3nrFY8n5C-Q" name="Activation" visibility="package" method="_dtsORYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dp4FQ4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dp4FRItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dp4FQYtlEe-3nrFY8n5C-Q" name="elem" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp4FQotlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dp4FRYtlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dp4sUYtlEe-3nrFY8n5C-Q" name="addEdge" method="_dts1XotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp4sUotlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dp4sVItlEe-3nrFY8n5C-Q" name="compareTo" method="_dtuDdYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp4sVYtlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp4sVotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dp5TY4tlEe-3nrFY8n5C-Q" name="conflictExists" method="_dtuDeItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp5TZItlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp5TZYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dp5TZotlEe-3nrFY8n5C-Q" name="canCombine" method="_dtuDe4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp5TZ4tlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp5TaItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dp56cItlEe-3nrFY8n5C-Q" name="getCombinedExecutionDuration" method="_dtuDgotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp56cYtlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp56cotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dp56c4tlEe-3nrFY8n5C-Q" name="printEdges" visibility="private" method="_dtuqgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp56dItlEe-3nrFY8n5C-Q" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dp56dYtlEe-3nrFY8n5C-Q" name="edges" type="_dXn3oItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dp6hgItlEe-3nrFY8n5C-Q" name="printEdges" visibility="private" method="_dtuqg4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dp6hgYtlEe-3nrFY8n5C-Q" name="edges" type="_dXn3oItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsDPgItlEe-3nrFY8n5C-Q" name="addEdges" method="_dts1XItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsDPgYtlEe-3nrFY8n5C-Q" name="edges" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsDPg4tlEe-3nrFY8n5C-Q" name="addConflicts" method="_dttcZotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsDPhItlEe-3nrFY8n5C-Q" name="conflicts" type="_dp3eMYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsD2kYtlEe-3nrFY8n5C-Q" name="addCoordinators" method="_dttcaotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsD2kotlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsEdoYtlEe-3nrFY8n5C-Q" name="addScheduleTimes" method="_dttcbItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1Av-F5V2Ee-EOddEwqrIsA">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsEdootlEe-3nrFY8n5C-Q" name="scheduleTime" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWUQEItlEe-3nrFY8n5C-Q" name="Activations">
              <generalization xmi:id="_dp7voItlEe-3nrFY8n5C-Q" general="_dWDKUItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds6yMItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds6yMYtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWU3IItlEe-3nrFY8n5C-Q" name="BasicPoset">
              <ownedComment xmi:id="_1AwlIJV2Ee-EOddEwqrIsA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_dp8WtotlEe-3nrFY8n5C-Q" general="_dXO2EItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuqhYtlEe-3nrFY8n5C-Q" name="BasicPoset" specification="_dp8WsYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuqhotlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtuqh4tlEe-3nrFY8n5C-Q" type="_dWU3IItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dp8WsYtlEe-3nrFY8n5C-Q" name="BasicPoset" visibility="package" method="_dtuqhYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dp8Ws4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dp8WtItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dp8WsotlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp8WtYtlEe-3nrFY8n5C-Q" type="_dWU3IItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWVeMItlEe-3nrFY8n5C-Q" name="ChannelAnalysis">
              <ownedComment xmi:id="_1AwlIZV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ds6yMotlEe-3nrFY8n5C-Q" name="program" visibility="private" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_dupQg4tlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds7ZQItlEe-3nrFY8n5C-Q" name="programTable" visibility="private" type="_dXi_IItlEe-3nrFY8n5C-Q" association="_dup3kItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds7ZQotlEe-3nrFY8n5C-Q" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuqiItlEe-3nrFY8n5C-Q" name="ChannelAnalysis" specification="_dp89wItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuqiYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtuqiotlEe-3nrFY8n5C-Q" type="_dWVeMItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtuqi4tlEe-3nrFY8n5C-Q" name="ChannelAnalysis" specification="_dp89xYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtuqjItlEe-3nrFY8n5C-Q" name="program" type="_dXXY8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtuqjYtlEe-3nrFY8n5C-Q" type="_dWVeMItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtvRkItlEe-3nrFY8n5C-Q" name="isChannelConflict" specification="_dWWsUItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtvRkYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWWsUItlEe-3nrFY8n5C-Q" name="isChannelConflict" method="_dtvRkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWWsUYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dp89wItlEe-3nrFY8n5C-Q" name="ChannelAnalysis" visibility="package" method="_dtuqiItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dp89wotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dp89w4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dp89wYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp89xItlEe-3nrFY8n5C-Q" type="_dWVeMItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dp89xYtlEe-3nrFY8n5C-Q" name="ChannelAnalysis" visibility="package" method="_dtuqi4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dp89x4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dp89yItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dp89xotlEe-3nrFY8n5C-Q" name="program" type="_dXXY8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp89yYtlEe-3nrFY8n5C-Q" type="_dWVeMItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWXTYItlEe-3nrFY8n5C-Q" name="ChannelVisualization">
              <ownedComment xmi:id="_1AwlIpV2Ee-EOddEwqrIsA">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dp9k1YtlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds7ZRItlEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds7ZRYtlEe-3nrFY8n5C-Q" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds7ZRotlEe-3nrFY8n5C-Q" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds7ZR4tlEe-3nrFY8n5C-Q" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds7ZSItlEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_dYWQYItlEe-3nrFY8n5C-Q" association="_dup3k4tlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds8AUYtlEe-3nrFY8n5C-Q" name="ca" visibility="private" type="_dWVeMItlEe-3nrFY8n5C-Q" association="_duqeoItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtvRkotlEe-3nrFY8n5C-Q" name="ChannelVisualization" specification="_dp9k0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtvRk4tlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtvRlItlEe-3nrFY8n5C-Q" type="_dWXTYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dp9k0ItlEe-3nrFY8n5C-Q" name="ChannelVisualization" visibility="package" method="_dtvRkotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dp9k0otlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dp9k04tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dp9k0YtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dp9k1ItlEe-3nrFY8n5C-Q" type="_dWXTYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWX6cItlEe-3nrFY8n5C-Q" name="Channels">
              <ownedComment xmi:id="_1AwlI5V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_ds8AVYtlEe-3nrFY8n5C-Q" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds8AV4tlEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds8nYYtlEe-3nrFY8n5C-Q" name="channelsAvailable" visibility="package" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_duqeo4tlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtvRmotlEe-3nrFY8n5C-Q" name="Channels" specification="_dWaWsItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtvRm4tlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtvRnItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtvRnYtlEe-3nrFY8n5C-Q" type="_dWX6cItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtvRnotlEe-3nrFY8n5C-Q" name="getChannelSet" specification="_dWa9wItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtvRn4tlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtvRoItlEe-3nrFY8n5C-Q" type="_dp23IYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtvRoYtlEe-3nrFY8n5C-Q" name="addNewChannelSet" specification="_dWcL4ItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4oItlEe-3nrFY8n5C-Q" name="isEmpty" specification="_dWcL4YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4oYtlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtv4ootlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4o4tlEe-3nrFY8n5C-Q" name="removeChannel" specification="_dWcL5ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4pItlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtv4pYtlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtv4potlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4p4tlEe-3nrFY8n5C-Q" name="addChannel" specification="_dWcy8ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4qItlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtv4qYtlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtv4qotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4q4tlEe-3nrFY8n5C-Q" name="getNumChannels" specification="_dWcy9ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4rItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWaWsItlEe-3nrFY8n5C-Q" name="Channels" visibility="package" method="_dtvRmotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWaWs4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWaWtItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWaWsYtlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWaWsotlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWaWtYtlEe-3nrFY8n5C-Q" type="_dWX6cItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWa9wItlEe-3nrFY8n5C-Q" name="getChannelSet" method="_dtvRnotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWa9wYtlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsGS0ItlEe-3nrFY8n5C-Q" type="_dp23IYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWcL4ItlEe-3nrFY8n5C-Q" name="addNewChannelSet" method="_dtvRoYtlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dWcL4YtlEe-3nrFY8n5C-Q" name="isEmpty" method="_dtv4oItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWcL4otlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcL44tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWcL5ItlEe-3nrFY8n5C-Q" name="removeChannel" method="_dtv4o4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWcL5YtlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcL5otlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcL54tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWcy8ItlEe-3nrFY8n5C-Q" name="addChannel" method="_dtv4p4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWcy8YtlEe-3nrFY8n5C-Q" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcy8otlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWcy84tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWcy9ItlEe-3nrFY8n5C-Q" name="getNumChannels" method="_dtv4q4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWcy9YtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dWYhgItlEe-3nrFY8n5C-Q" name="ChannelSet" visibility="private">
                <generalization xmi:id="_dsFrwItlEe-3nrFY8n5C-Q" general="_dp23IYtlEe-3nrFY8n5C-Q"/>
                <ownedAttribute xmi:id="_ds8AU4tlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds8AVItlEe-3nrFY8n5C-Q" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtvRlYtlEe-3nrFY8n5C-Q" name="ChannelSet" specification="_dWZIkItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dtvRlotlEe-3nrFY8n5C-Q" type="_dWYhgItlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtvRl4tlEe-3nrFY8n5C-Q" name="ChannelSet" specification="_dWZIlItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dtvRmItlEe-3nrFY8n5C-Q" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dtvRmYtlEe-3nrFY8n5C-Q" type="_dWYhgItlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dWZIkItlEe-3nrFY8n5C-Q" name="ChannelSet" visibility="private" method="_dtvRlYtlEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_dWZIkYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dWZIkotlEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dWZIk4tlEe-3nrFY8n5C-Q" type="_dWYhgItlEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dWZIlItlEe-3nrFY8n5C-Q" name="ChannelSet" visibility="private" method="_dtvRl4tlEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_dWZIlotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dWZIl4tlEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dWZIlYtlEe-3nrFY8n5C-Q" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dWZvoItlEe-3nrFY8n5C-Q" type="_dWYhgItlEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWdaAItlEe-3nrFY8n5C-Q" name="CodeFragment">
              <ownedAttribute xmi:id="_ds9OcItlEe-3nrFY8n5C-Q" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds9OcYtlEe-3nrFY8n5C-Q" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds9OcotlEe-3nrFY8n5C-Q" name="edges" visibility="package" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_duqepotlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds91gItlEe-3nrFY8n5C-Q" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds91gotlEe-3nrFY8n5C-Q" name="codeFragment" visibility="package" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_durFsotlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds91hYtlEe-3nrFY8n5C-Q" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds-ckYtlEe-3nrFY8n5C-Q" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4rYtlEe-3nrFY8n5C-Q" name="CodeFragment" specification="_dWeoIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4rotlEe-3nrFY8n5C-Q" type="_dWdaAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4r4tlEe-3nrFY8n5C-Q" name="CodeFragment" specification="_dsG54ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4sItlEe-3nrFY8n5C-Q" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtv4sYtlEe-3nrFY8n5C-Q" name="edges" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtv4sotlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtv4s4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtv4tItlEe-3nrFY8n5C-Q" type="_dWdaAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4tYtlEe-3nrFY8n5C-Q" name="getCoordinator" specification="_dWeoJItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4totlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4t4tlEe-3nrFY8n5C-Q" name="instructions" specification="_dWeoJotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4uItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtv4uYtlEe-3nrFY8n5C-Q" name="size" specification="_dWfPMYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtv4uotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwfsItlEe-3nrFY8n5C-Q" name="generateCodeFragment" specification="_dWfPM4tlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwfsYtlEe-3nrFY8n5C-Q" name="getBaseInstruction" specification="_dWf2QItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtwfsotlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfs4tlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwftItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwftYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwftotlEe-3nrFY8n5C-Q" name="push" specification="_dWf2RYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtwft4tlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfuItlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfuYtlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfuotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwfu4tlEe-3nrFY8n5C-Q" name="pull" specification="_dWgdUItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtwfvItlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfvYtlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfvotlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfv4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwfwItlEe-3nrFY8n5C-Q" name="ifHas" specification="_dWgdVYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtwfwYtlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfwotlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfw4tlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfxItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwfxYtlEe-3nrFY8n5C-Q" name="ifNotHas" specification="_dWhEYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtwfxotlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfx4tlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfyItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfyYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwfyotlEe-3nrFY8n5C-Q" name="wait" specification="_dWhEZYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtwfy4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtwfzItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtwfzYtlEe-3nrFY8n5C-Q" name="sleep" specification="_dWhEaItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtwfzotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxGwItlEe-3nrFY8n5C-Q" name="reportIfDifferentCoordinators" specification="_dsHg84tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxGwYtlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxGwotlEe-3nrFY8n5C-Q" name="multipleCoordinators" specification="_dsIIAotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxGw4tlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxGxItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWeoIItlEe-3nrFY8n5C-Q" name="CodeFragment" visibility="package" method="_dtv4rYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWeoIYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWeoIotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AwlJJV2Ee-EOddEwqrIsA">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWeoI4tlEe-3nrFY8n5C-Q" type="_dWdaAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWeoJItlEe-3nrFY8n5C-Q" name="getCoordinator" method="_dtv4tYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlJpV2Ee-EOddEwqrIsA">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWeoJYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWeoJotlEe-3nrFY8n5C-Q" name="instructions" method="_dtv4t4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlJ5V2Ee-EOddEwqrIsA">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsHg8otlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWfPMYtlEe-3nrFY8n5C-Q" name="size" method="_dtv4uYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlKJV2Ee-EOddEwqrIsA">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWfPMotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWfPM4tlEe-3nrFY8n5C-Q" name="generateCodeFragment" visibility="private" method="_dtwfsItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dWf2QItlEe-3nrFY8n5C-Q" name="getBaseInstruction" visibility="private" method="_dtwfsYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWf2QYtlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWf2QotlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWf2Q4tlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWf2RItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWf2RYtlEe-3nrFY8n5C-Q" name="push" visibility="private" method="_dtwftotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWf2RotlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWf2R4tlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWf2SItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWf2SYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWgdUItlEe-3nrFY8n5C-Q" name="pull" visibility="private" method="_dtwfu4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWgdUYtlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgdUotlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgdU4tlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgdVItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWgdVYtlEe-3nrFY8n5C-Q" name="ifHas" visibility="private" method="_dtwfwItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWgdVotlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgdV4tlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgdWItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWgdWYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWhEYItlEe-3nrFY8n5C-Q" name="ifNotHas" visibility="private" method="_dtwfxYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWhEYYtlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWhEYotlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWhEY4tlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWhEZItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWhEZYtlEe-3nrFY8n5C-Q" name="wait" method="_dtwfyotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWhEZotlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWhEZ4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWhEaItlEe-3nrFY8n5C-Q" name="sleep" isStatic="true" method="_dtwfzYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWhEaYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dsG54ItlEe-3nrFY8n5C-Q" name="CodeFragment" visibility="package" method="_dtv4r4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsG55YtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsG55otlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AwlJZV2Ee-EOddEwqrIsA">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsG54YtlEe-3nrFY8n5C-Q" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsG54otlEe-3nrFY8n5C-Q" name="edges" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsG544tlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsG55ItlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsG554tlEe-3nrFY8n5C-Q" type="_dWdaAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsHg84tlEe-3nrFY8n5C-Q" name="reportIfDifferentCoordinators" visibility="private" method="_dtxGwItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsIIAItlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsIIAotlEe-3nrFY8n5C-Q" name="multipleCoordinators" visibility="private" method="_dtxGwotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsIIA4tlEe-3nrFY8n5C-Q" name="coordinators" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsIIBItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWi5kItlEe-3nrFY8n5C-Q" name="CombinedActivation">
              <generalization xmi:id="_dqAoJYtlEe-3nrFY8n5C-Q" general="_dWG0sItlEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_dsIvEYtlEe-3nrFY8n5C-Q" client="_dWi5kItlEe-3nrFY8n5C-Q" supplier="_dsCBYYtlEe-3nrFY8n5C-Q" contract="_dsCBYYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxGxYtlEe-3nrFY8n5C-Q" name="CombinedActivation" specification="_dWi5kYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxGxotlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtxGx4tlEe-3nrFY8n5C-Q" type="_dWi5kItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxGyItlEe-3nrFY8n5C-Q" name="CombinedActivation" specification="_dqABEItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxGyYtlEe-3nrFY8n5C-Q" name="elem" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxGyotlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtxGy4tlEe-3nrFY8n5C-Q" type="_dWi5kItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt0ItlEe-3nrFY8n5C-Q" name="CombinedActivation" specification="_dqABFotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt0YtlEe-3nrFY8n5C-Q" name="priorEntry" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt0otlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt04tlEe-3nrFY8n5C-Q" type="_dWi5kItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt1ItlEe-3nrFY8n5C-Q" name="canCombine" specification="_dqABHItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt1YtlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt1otlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWi5kYtlEe-3nrFY8n5C-Q" name="CombinedActivation" visibility="package" method="_dtxGxYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWi5k4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWi5lItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWi5kotlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWi5lYtlEe-3nrFY8n5C-Q" type="_dWi5kItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqABEItlEe-3nrFY8n5C-Q" name="CombinedActivation" visibility="package" method="_dtxGyItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqABE4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqABFItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqABEYtlEe-3nrFY8n5C-Q" name="elem" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqABEotlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqABFYtlEe-3nrFY8n5C-Q" type="_dWi5kItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqABFotlEe-3nrFY8n5C-Q" name="CombinedActivation" visibility="package" method="_dtxt0ItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqABGYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqABGotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqABF4tlEe-3nrFY8n5C-Q" name="priorEntry" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqABGItlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqABG4tlEe-3nrFY8n5C-Q" type="_dWi5kItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqABHItlEe-3nrFY8n5C-Q" name="canCombine" method="_dtxt1ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqAoIItlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqAoIYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWkHsItlEe-3nrFY8n5C-Q" name="CommunicationGraph">
              <ownedComment xmi:id="_1AwlKZV2Ee-EOddEwqrIsA">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqB2RotlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds-ck4tlEe-3nrFY8n5C-Q" name="wfm" visibility="package" type="_dWufwItlEe-3nrFY8n5C-Q" association="_durFtYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds_DoYtlEe-3nrFY8n5C-Q" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds_Do4tlEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds_DpYtlEe-3nrFY8n5C-Q" name="workLoad" visibility="package" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_durswYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt14tlEe-3nrFY8n5C-Q" name="CommunicationGraph" specification="_dqBPMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt2ItlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt2YtlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt2otlEe-3nrFY8n5C-Q" type="_dWkHsItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt24tlEe-3nrFY8n5C-Q" name="CommunicationGraph" specification="_dqBPNotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt3ItlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt3YtlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt3otlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtxt34tlEe-3nrFY8n5C-Q" type="_dWkHsItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt4ItlEe-3nrFY8n5C-Q" name="createHeader" specification="_dWkuwItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt4YtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt4otlEe-3nrFY8n5C-Q" name="createFooter" specification="_dWlV0otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt44tlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt5ItlEe-3nrFY8n5C-Q" name="visualization" specification="_dWlV1otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt5YtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt5otlEe-3nrFY8n5C-Q" name="createWarpFileContent" specification="_dWl84otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt54tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWkuwItlEe-3nrFY8n5C-Q" name="createHeader" method="_dtxt4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqB2Q4tlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWlV0otlEe-3nrFY8n5C-Q" name="createFooter" method="_dtxt4otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqB2RItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWlV1otlEe-3nrFY8n5C-Q" name="visualization" method="_dtxt5ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqB2RYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWl84otlEe-3nrFY8n5C-Q" name="createWarpFileContent" method="_dtxt5otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWl844tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqBPMItlEe-3nrFY8n5C-Q" name="CommunicationGraph" method="_dtxt14tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqBPM4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqBPNItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqBPMYtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqBPMotlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqBPNYtlEe-3nrFY8n5C-Q" type="_dWkHsItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqBPNotlEe-3nrFY8n5C-Q" name="CommunicationGraph" method="_dtxt24tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqB2QItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqB2QYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqBPN4tlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqBPOItlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqBPOYtlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqB2QotlEe-3nrFY8n5C-Q" type="_dWkHsItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWnLAItlEe-3nrFY8n5C-Q" name="ConnectivityPoset">
              <ownedComment xmi:id="_1AwlKpV2Ee-EOddEwqrIsA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_dqCdVItlEe-3nrFY8n5C-Q" general="_dXO2EItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtxt6ItlEe-3nrFY8n5C-Q" name="ConnectivityPoset" specification="_dqB2R4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtxt6YtlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtxt6otlEe-3nrFY8n5C-Q" type="_dWnLAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU4ItlEe-3nrFY8n5C-Q" name="findCoordinator" specification="_dsJ9MItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU4YtlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtyU4otlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dqB2R4tlEe-3nrFY8n5C-Q" name="ConnectivityPoset" visibility="package" method="_dtxt6ItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqCdUYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqCdUotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqCdUItlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqCdU4tlEe-3nrFY8n5C-Q" type="_dWnLAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsJ9MItlEe-3nrFY8n5C-Q" name="findCoordinator" visibility="protected" method="_dtyU4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsJ9MYtlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsJ9MotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWnyEItlEe-3nrFY8n5C-Q" name="DeadlineComparator">
              <interfaceRealization xmi:id="_dsKkQotlEe-3nrFY8n5C-Q" client="_dWnyEItlEe-3nrFY8n5C-Q" supplier="_dqCdVYtlEe-3nrFY8n5C-Q" contract="_dqCdVYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU44tlEe-3nrFY8n5C-Q" name="compare" specification="_dsLLUotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU5ItlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtyU5YtlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtyU5otlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dsLLUotlEe-3nrFY8n5C-Q" name="compare" method="_dtyU44tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsLLU4tlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsLyYItlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsLyYYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWoZIYtlEe-3nrFY8n5C-Q" name="Description">
              <ownedComment xmi:id="_1AwlK5V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dsLyZYtlEe-3nrFY8n5C-Q" general="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds_qsItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds_qsYtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU54tlEe-3nrFY8n5C-Q" name="Description" specification="_dWpAMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU6ItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU6YtlEe-3nrFY8n5C-Q" name="Description" specification="_dWpANItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU6otlEe-3nrFY8n5C-Q" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU64tlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU7ItlEe-3nrFY8n5C-Q" name="toString" specification="_dWpnQ4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU7YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWpAMItlEe-3nrFY8n5C-Q" name="Description" method="_dtyU54tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWpAMYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWpAMotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWpAM4tlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWpANItlEe-3nrFY8n5C-Q" name="Description" method="_dtyU6YtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWpnQItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWpnQYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWpANYtlEe-3nrFY8n5C-Q" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWpnQotlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWpnQ4tlEe-3nrFY8n5C-Q" name="toString" method="_dtyU7ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWpnRItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWqOUItlEe-3nrFY8n5C-Q" name="Edge">
              <generalization xmi:id="_dqESg4tlEe-3nrFY8n5C-Q" general="_dYy8UItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_ds_qsotlEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_ds_qs4tlEe-3nrFY8n5C-Q" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds_qtItlEe-3nrFY8n5C-Q" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds_qtYtlEe-3nrFY8n5C-Q" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds_qtotlEe-3nrFY8n5C-Q" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_ds_qt4tlEe-3nrFY8n5C-Q" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtARwItlEe-3nrFY8n5C-Q" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtARwYtlEe-3nrFY8n5C-Q" name="state" type="_dWq1YItlEe-3nrFY8n5C-Q" association="_duQO9YtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtARwotlEe-3nrFY8n5C-Q" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dsMZcYtlEe-3nrFY8n5C-Q" client="_dWqOUItlEe-3nrFY8n5C-Q" supplier="_dsCBYYtlEe-3nrFY8n5C-Q" contract="_dsCBYYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU7otlEe-3nrFY8n5C-Q" name="Edge" specification="_dWrccotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU74tlEe-3nrFY8n5C-Q" type="_dWqOUItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU8ItlEe-3nrFY8n5C-Q" name="Edge" specification="_dWrcdotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU8YtlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU8otlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU84tlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU9ItlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU9YtlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU9otlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU94tlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU-ItlEe-3nrFY8n5C-Q" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtyU-YtlEe-3nrFY8n5C-Q" type="_dWqOUItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtyU-otlEe-3nrFY8n5C-Q" name="compareTo" specification="_dqDrcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtyU-4tlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dtyU_ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty78ItlEe-3nrFY8n5C-Q" name="toString" specification="_dWsDiYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dty78YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty78otlEe-3nrFY8n5C-Q" name="print" specification="_dWsqk4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dty784tlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty79ItlEe-3nrFY8n5C-Q" name="print" specification="_dWtRoItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWrccotlEe-3nrFY8n5C-Q" name="Edge" visibility="package" method="_dtyU7otlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWrcc4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWrcdItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWrcdYtlEe-3nrFY8n5C-Q" type="_dWqOUItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWrcdotlEe-3nrFY8n5C-Q" name="Edge" visibility="package" method="_dtyU8ItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWsDhotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWsDh4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWrcd4tlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWrceItlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsDgItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsDgYtlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsDgotlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsDg4tlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsDhItlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsDhYtlEe-3nrFY8n5C-Q" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWsDiItlEe-3nrFY8n5C-Q" type="_dWqOUItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWsDiYtlEe-3nrFY8n5C-Q" name="toString" method="_dty78ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWsDiotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWsqk4tlEe-3nrFY8n5C-Q" name="print" method="_dty78otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWsqlItlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWtRoItlEe-3nrFY8n5C-Q" name="print" method="_dty79ItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dqDrcItlEe-3nrFY8n5C-Q" name="compareTo" method="_dtyU-otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqDrcYtlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqDrcotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dWq1YItlEe-3nrFY8n5C-Q" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_dWq1YotlEe-3nrFY8n5C-Q" name="RELEASED"/>
                <ownedLiteral xmi:id="_dWrccItlEe-3nrFY8n5C-Q" name="EXECUTING"/>
                <ownedLiteral xmi:id="_dWrccYtlEe-3nrFY8n5C-Q" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWufwItlEe-3nrFY8n5C-Q" name="FileManager">
              <ownedComment xmi:id="_1AwlLJV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtARw4tlEe-3nrFY8n5C-Q" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtARxItlEe-3nrFY8n5C-Q" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty79YtlEe-3nrFY8n5C-Q" name="FileManager" specification="_dWvG0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dty79otlEe-3nrFY8n5C-Q" type="_dWufwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty794tlEe-3nrFY8n5C-Q" name="FileManager" specification="_dWvG1ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dty7-ItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dty7-YtlEe-3nrFY8n5C-Q" type="_dWufwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty7-otlEe-3nrFY8n5C-Q" name="getDocumentsDirectory" specification="_dWvt5ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dty7-4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty7_ItlEe-3nrFY8n5C-Q" name="getCurrentDirectory" specification="_dWvt5otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dty7_YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dty7_otlEe-3nrFY8n5C-Q" name="createFile" specification="_dWvt6ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dty7_4tlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dty8AItlEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dty8AYtlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dty8AotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtzjAItlEe-3nrFY8n5C-Q" name="createFile" specification="_dWwU8YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtzjAYtlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjAotlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjA4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtzjBItlEe-3nrFY8n5C-Q" name="createDirectory" specification="_dWwU9YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtzjBYtlEe-3nrFY8n5C-Q" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjBotlEe-3nrFY8n5C-Q" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjB4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtzjCItlEe-3nrFY8n5C-Q" name="writeFile" specification="_dWw8AItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtzjCYtlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjCotlEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtzjC4tlEe-3nrFY8n5C-Q" name="readFile" specification="_dWw8A4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtzjDItlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjDYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWvG0ItlEe-3nrFY8n5C-Q" name="FileManager" method="_dty79YtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWvG0YtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWvG0otlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AwlLZV2Ee-EOddEwqrIsA">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWvG04tlEe-3nrFY8n5C-Q" type="_dWufwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWvG1ItlEe-3nrFY8n5C-Q" name="FileManager" method="_dty794tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWvt4YtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWvt4otlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dWvt4ItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWvt44tlEe-3nrFY8n5C-Q" type="_dWufwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWvt5ItlEe-3nrFY8n5C-Q" name="getDocumentsDirectory" method="_dty7-otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWvt5YtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWvt5otlEe-3nrFY8n5C-Q" name="getCurrentDirectory" method="_dty7_ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWvt54tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWvt6ItlEe-3nrFY8n5C-Q" name="createFile" method="_dty7_otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlLpV2Ee-EOddEwqrIsA">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWvt6YtlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWvt6otlEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWvt64tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwU8ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWwU8YtlEe-3nrFY8n5C-Q" name="createFile" method="_dtzjAItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWwU8otlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwU84tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwU9ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWwU9YtlEe-3nrFY8n5C-Q" name="createDirectory" method="_dtzjBItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWwU9otlEe-3nrFY8n5C-Q" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwU94tlEe-3nrFY8n5C-Q" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWwU-ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWw8AItlEe-3nrFY8n5C-Q" name="writeFile" method="_dtzjCItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWw8AYtlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWw8AotlEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWw8A4tlEe-3nrFY8n5C-Q" name="readFile" method="_dtzjC4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dWw8BItlEe-3nrFY8n5C-Q" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWw8BYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dWxjEItlEe-3nrFY8n5C-Q" name="Flow">
              <ownedComment xmi:id="_1AwlL5V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
Allows for Schedulable Objects to be compared to flow charataristics and tracks faults  &#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqIj84tlEe-3nrFY8n5C-Q" general="_dYy8UItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtA40YtlEe-3nrFY8n5C-Q" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtA40otlEe-3nrFY8n5C-Q" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtA404tlEe-3nrFY8n5C-Q" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtA41ItlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtA41YtlEe-3nrFY8n5C-Q" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtA41otlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtA414tlEe-3nrFY8n5C-Q" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtBf4ItlEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtBf4YtlEe-3nrFY8n5C-Q" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtBf4otlEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtBf44tlEe-3nrFY8n5C-Q" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtBf5ItlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtBf5YtlEe-3nrFY8n5C-Q" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtBf5otlEe-3nrFY8n5C-Q" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtBf6ItlEe-3nrFY8n5C-Q" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtCG8ItlEe-3nrFY8n5C-Q" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtCG8otlEe-3nrFY8n5C-Q" name="nodes" visibility="package" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_dursxItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtCuAYtlEe-3nrFY8n5C-Q" name="linkTxAndTotalCost" visibility="package" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_dusT0otlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtCuBItlEe-3nrFY8n5C-Q" name="edges" visibility="package" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_dusT1YtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtDVEotlEe-3nrFY8n5C-Q" name="nodePredecessor" visibility="package" type="_dXIIYItlEe-3nrFY8n5C-Q" association="_dus64YtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtDVFItlEe-3nrFY8n5C-Q" name="edgePredecessor" visibility="package" type="_dWqOUItlEe-3nrFY8n5C-Q" association="_dus65ItlEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_dsNnkItlEe-3nrFY8n5C-Q" client="_dWxjEItlEe-3nrFY8n5C-Q" supplier="_dsCBYYtlEe-3nrFY8n5C-Q" contract="_dsCBYYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtzjDotlEe-3nrFY8n5C-Q" name="Flow" specification="_dWyKIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtzjD4tlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjEItlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjEYtlEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dtzjEotlEe-3nrFY8n5C-Q" type="_dWxjEItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dtzjE4tlEe-3nrFY8n5C-Q" name="Flow" specification="_dWyxM4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dtzjFItlEe-3nrFY8n5C-Q" type="_dWxjEItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KEItlEe-3nrFY8n5C-Q" name="getInitialPriority" specification="_dWyxN4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KEotlEe-3nrFY8n5C-Q" name="getIndex" specification="_dWyxOYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KE4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KFItlEe-3nrFY8n5C-Q" name="getNumTxPerLink" specification="_dWzYQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KFYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KFotlEe-3nrFY8n5C-Q" name="getNodes" specification="_dWzYQotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KF4tlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KGItlEe-3nrFY8n5C-Q" name="getEdges" specification="_dWz_UItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KGYtlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KGotlEe-3nrFY8n5C-Q" name="addEdge" specification="_dqH84ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KG4tlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KHItlEe-3nrFY8n5C-Q" name="addNode" specification="_dqH84otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KHYtlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KHotlEe-3nrFY8n5C-Q" name="getLinkTxAndTotalCost" specification="_dWz_UotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KH4tlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KIItlEe-3nrFY8n5C-Q" name="setInitialPriority" specification="_dW0mYYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KIYtlEe-3nrFY8n5C-Q" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KIotlEe-3nrFY8n5C-Q" name="setIndex" specification="_dW0mY4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KI4tlEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0KJItlEe-3nrFY8n5C-Q" name="setNumTxPerLink" specification="_dW1NcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0KJYtlEe-3nrFY8n5C-Q" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0xIItlEe-3nrFY8n5C-Q" name="setNodes" specification="_dsO1sYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0xIYtlEe-3nrFY8n5C-Q" name="nodes" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0xIotlEe-3nrFY8n5C-Q" name="setLinkTxAndTotalCost" specification="_dsPcwItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0xI4tlEe-3nrFY8n5C-Q" name="linkTxAndTotalCost" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0xJItlEe-3nrFY8n5C-Q" name="compareTo" specification="_dqH85ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0xJYtlEe-3nrFY8n5C-Q" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt0xJotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0xJ4tlEe-3nrFY8n5C-Q" name="toString" specification="_dW1NcotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0xKItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dWyKIItlEe-3nrFY8n5C-Q" name="Flow" visibility="package" method="_dtzjDotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWyxMItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWyxMYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AwlMJV2Ee-EOddEwqrIsA">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWyKIYtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWyKIotlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWyKI4tlEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dWyxMotlEe-3nrFY8n5C-Q" type="_dWxjEItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWyxM4tlEe-3nrFY8n5C-Q" name="Flow" visibility="package" method="_dtzjE4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dWyxNItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dWyxNYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AwlMZV2Ee-EOddEwqrIsA">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWyxNotlEe-3nrFY8n5C-Q" type="_dWxjEItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWyxN4tlEe-3nrFY8n5C-Q" name="getInitialPriority" method="_dt0KEItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlMpV2Ee-EOddEwqrIsA">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWyxOItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWyxOYtlEe-3nrFY8n5C-Q" name="getIndex" method="_dt0KEotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlM5V2Ee-EOddEwqrIsA">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWyxOotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWzYQItlEe-3nrFY8n5C-Q" name="getNumTxPerLink" method="_dt0KFItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlNJV2Ee-EOddEwqrIsA">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_dWzYQYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dWzYQotlEe-3nrFY8n5C-Q" name="getNodes" method="_dt0KFotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlNZV2Ee-EOddEwqrIsA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsOOoItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWz_UItlEe-3nrFY8n5C-Q" name="getEdges" method="_dt0KGItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlNpV2Ee-EOddEwqrIsA">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsOOoYtlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dWz_UotlEe-3nrFY8n5C-Q" name="getLinkTxAndTotalCost" method="_dt0KHotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlOZV2Ee-EOddEwqrIsA">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsO1sItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dW0mYYtlEe-3nrFY8n5C-Q" name="setInitialPriority" method="_dt0KIItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlOpV2Ee-EOddEwqrIsA">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dW0mYotlEe-3nrFY8n5C-Q" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW0mY4tlEe-3nrFY8n5C-Q" name="setIndex" method="_dt0KIotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlO5V2Ee-EOddEwqrIsA">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dW0mZItlEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW1NcItlEe-3nrFY8n5C-Q" name="setNumTxPerLink" method="_dt0KJItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlPJV2Ee-EOddEwqrIsA">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dW1NcYtlEe-3nrFY8n5C-Q" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW1NcotlEe-3nrFY8n5C-Q" name="toString" method="_dt0xJ4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW1Nc4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqH84ItlEe-3nrFY8n5C-Q" name="addEdge" method="_dt0KGotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlN5V2Ee-EOddEwqrIsA">
                  <body>@param takes in an edge &#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqH84YtlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqH84otlEe-3nrFY8n5C-Q" name="addNode" method="_dt0KHItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlOJV2Ee-EOddEwqrIsA">
                  <body>@param takes in a node&#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqH844tlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqH85ItlEe-3nrFY8n5C-Q" name="compareTo" method="_dt0xJItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqH85YtlEe-3nrFY8n5C-Q" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqH85otlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dsO1sYtlEe-3nrFY8n5C-Q" name="setNodes" method="_dt0xIItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AwlPZV2Ee-EOddEwqrIsA">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsO1sotlEe-3nrFY8n5C-Q" name="nodes" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsPcwItlEe-3nrFY8n5C-Q" name="setLinkTxAndTotalCost" method="_dt0xIotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxMMJV2Ee-EOddEwqrIsA">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsPcwYtlEe-3nrFY8n5C-Q" name="linkTxAndTotalCost" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dW3psItlEe-3nrFY8n5C-Q" name="FlowMap">
              <ownedComment xmi:id="_1AxMMZV2Ee-EOddEwqrIsA">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqJyEItlEe-3nrFY8n5C-Q" general="_dWDKUItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtD8IYtlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtD8IotlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dW4QwItlEe-3nrFY8n5C-Q" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_1AxMMpV2Ee-EOddEwqrIsA">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqKZIYtlEe-3nrFY8n5C-Q" general="_dWDKUItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtD8I4tlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtD8JItlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dW430ItlEe-3nrFY8n5C-Q" name="GraphViz">
              <ownedComment xmi:id="_1AxMM5V2Ee-EOddEwqrIsA">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqMOVYtlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtD8JYtlEe-3nrFY8n5C-Q" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtEjMItlEe-3nrFY8n5C-Q" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtEjMYtlEe-3nrFY8n5C-Q" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtEjMotlEe-3nrFY8n5C-Q" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtEjM4tlEe-3nrFY8n5C-Q" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtEjNYtlEe-3nrFY8n5C-Q" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtEjN4tlEe-3nrFY8n5C-Q" name="wfm" visibility="package" type="_dWufwItlEe-3nrFY8n5C-Q" association="_duth8YtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtFKQYtlEe-3nrFY8n5C-Q" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtFKQ4tlEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtFKRYtlEe-3nrFY8n5C-Q" name="gv" visibility="package" type="_dW430ItlEe-3nrFY8n5C-Q" association="_duth9ItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0xKYtlEe-3nrFY8n5C-Q" name="GraphViz" specification="_dqLnQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0xKotlEe-3nrFY8n5C-Q" name="wfm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt0xK4tlEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt0xLItlEe-3nrFY8n5C-Q" type="_dW430ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt0xLYtlEe-3nrFY8n5C-Q" name="GraphViz" specification="_dqLnRotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt0xLotlEe-3nrFY8n5C-Q" name="wfm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt0xL4tlEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt0xMItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt0xMYtlEe-3nrFY8n5C-Q" type="_dW430ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YMItlEe-3nrFY8n5C-Q" name="visualization" specification="_dW5e4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YMYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YMotlEe-3nrFY8n5C-Q" name="initializeGraphVizContent" specification="_dW6F8ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YM4tlEe-3nrFY8n5C-Q" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YNItlEe-3nrFY8n5C-Q" name="finalizeGraphVizContent" specification="_dW6F8otlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YNYtlEe-3nrFY8n5C-Q" name="getGraphVizContent" specification="_dW6F84tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YNotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YN4tlEe-3nrFY8n5C-Q" name="createGraphVizContent" specification="_dW6F9YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YOItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YOYtlEe-3nrFY8n5C-Q" name="addFlowToGraphViz" specification="_dW6tAItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YOotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YO4tlEe-3nrFY8n5C-Q" name="addSrcNodeToGraphViz" specification="_dW6tAotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YPItlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YPYtlEe-3nrFY8n5C-Q" name="addSnkNodeToGraphViz" specification="_dW6tBItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YPotlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YP4tlEe-3nrFY8n5C-Q" name="finalizeCurrentFlowInGraphViz" specification="_dW6tBotlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YQItlEe-3nrFY8n5C-Q" name="addNodeName" specification="_dW6tB4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YQYtlEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt1YQotlEe-3nrFY8n5C-Q" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dW5e4ItlEe-3nrFY8n5C-Q" name="visualization" method="_dt1YMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqMOVItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dW6F8ItlEe-3nrFY8n5C-Q" name="initializeGraphVizContent" method="_dt1YMotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW6F8YtlEe-3nrFY8n5C-Q" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW6F8otlEe-3nrFY8n5C-Q" name="finalizeGraphVizContent" method="_dt1YNItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dW6F84tlEe-3nrFY8n5C-Q" name="getGraphVizContent" method="_dt1YNYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxMNJV2Ee-EOddEwqrIsA">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_dW6F9ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW6F9YtlEe-3nrFY8n5C-Q" name="createGraphVizContent" method="_dt1YN4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW6F9otlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW6tAItlEe-3nrFY8n5C-Q" name="addFlowToGraphViz" method="_dt1YOYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW6tAYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW6tAotlEe-3nrFY8n5C-Q" name="addSrcNodeToGraphViz" method="_dt1YO4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW6tA4tlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW6tBItlEe-3nrFY8n5C-Q" name="addSnkNodeToGraphViz" method="_dt1YPYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW6tBYtlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dW6tBotlEe-3nrFY8n5C-Q" name="finalizeCurrentFlowInGraphViz" method="_dt1YP4tlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dW6tB4tlEe-3nrFY8n5C-Q" name="addNodeName" visibility="private" method="_dt1YQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW6tCItlEe-3nrFY8n5C-Q" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dW6tCYtlEe-3nrFY8n5C-Q" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqLnQItlEe-3nrFY8n5C-Q" name="GraphViz" visibility="package" method="_dt0xKYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqLnQ4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqLnRItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqLnQYtlEe-3nrFY8n5C-Q" name="wfm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqLnQotlEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqLnRYtlEe-3nrFY8n5C-Q" type="_dW430ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqLnRotlEe-3nrFY8n5C-Q" name="GraphViz" visibility="package" method="_dt0xLYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqMOUYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqMOUotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqLnR4tlEe-3nrFY8n5C-Q" name="wfm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqLnSItlEe-3nrFY8n5C-Q" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqMOUItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqMOU4tlEe-3nrFY8n5C-Q" type="_dW430ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dW77IItlEe-3nrFY8n5C-Q" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_1AxMNZV2Ee-EOddEwqrIsA">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_dsQq4ItlEe-3nrFY8n5C-Q" general="_dqOqkYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtFxUItlEe-3nrFY8n5C-Q" name="gv" visibility="package" type="_dW430ItlEe-3nrFY8n5C-Q" association="_duuJAYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1YQ4tlEe-3nrFY8n5C-Q" name="GraphVizListener" specification="_dqPRootlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1YRItlEe-3nrFY8n5C-Q" name="gv" type="_dW430ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt1YRYtlEe-3nrFY8n5C-Q" type="_dW77IItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_QItlEe-3nrFY8n5C-Q" name="buildGraphViz" specification="_dqPRp4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_QYtlEe-3nrFY8n5C-Q" name="gv" type="_dW430ItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_QotlEe-3nrFY8n5C-Q" name="enterWarpName" specification="_dqP4s4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_Q4tlEe-3nrFY8n5C-Q" name="ctx" type="_dqP4sYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_RItlEe-3nrFY8n5C-Q" name="exitWarp" specification="_dqRG0YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_RYtlEe-3nrFY8n5C-Q" name="ctx" type="_dqQfw4tlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_RotlEe-3nrFY8n5C-Q" name="enterFlowName" specification="_dqRt4YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_R4tlEe-3nrFY8n5C-Q" name="ctx" type="_dqRG1otlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_SItlEe-3nrFY8n5C-Q" name="exitSrcNode" specification="_dqSU8YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_SYtlEe-3nrFY8n5C-Q" name="ctx" type="_dqRt5otlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_SotlEe-3nrFY8n5C-Q" name="exitSnkNode" specification="_dqS8AYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_S4tlEe-3nrFY8n5C-Q" name="ctx" type="_dqSU9otlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_TItlEe-3nrFY8n5C-Q" name="exitFlow" specification="_dqTjEYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_TYtlEe-3nrFY8n5C-Q" name="ctx" type="_dqS8BotlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dqPRootlEe-3nrFY8n5C-Q" name="GraphVizListener" visibility="private" method="_dt1YQ4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqPRpItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqPRpYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqPRo4tlEe-3nrFY8n5C-Q" name="gv" type="_dW430ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqPRpotlEe-3nrFY8n5C-Q" type="_dW77IItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqPRp4tlEe-3nrFY8n5C-Q" name="buildGraphViz" isStatic="true" method="_dt1_QItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqP4sItlEe-3nrFY8n5C-Q" name="gv" type="_dW430ItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqP4s4tlEe-3nrFY8n5C-Q" name="enterWarpName" method="_dt1_QotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqP4tItlEe-3nrFY8n5C-Q" name="ctx" type="_dqP4sYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqRG0YtlEe-3nrFY8n5C-Q" name="exitWarp" method="_dt1_RItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqRG0otlEe-3nrFY8n5C-Q" name="ctx" type="_dqQfw4tlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqRt4YtlEe-3nrFY8n5C-Q" name="enterFlowName" method="_dt1_RotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqRt4otlEe-3nrFY8n5C-Q" name="ctx" type="_dqRG1otlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqSU8YtlEe-3nrFY8n5C-Q" name="exitSrcNode" method="_dt1_SItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqSU8otlEe-3nrFY8n5C-Q" name="ctx" type="_dqRt5otlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqS8AYtlEe-3nrFY8n5C-Q" name="exitSnkNode" method="_dt1_SotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqS8AotlEe-3nrFY8n5C-Q" name="ctx" type="_dqSU9otlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqTjEYtlEe-3nrFY8n5C-Q" name="exitFlow" method="_dt1_TItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqTjEotlEe-3nrFY8n5C-Q" name="ctx" type="_dqS8BotlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dW9wUItlEe-3nrFY8n5C-Q" name="GuiVisualization">
              <ownedComment xmi:id="_1AxMNpV2Ee-EOddEwqrIsA">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtFxUotlEe-3nrFY8n5C-Q" name="frame" visibility="package" type="_dqUKIotlEe-3nrFY8n5C-Q" association="_duuJBItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtFxVItlEe-3nrFY8n5C-Q" name="jtable" visibility="package" type="_dqUxM4tlEe-3nrFY8n5C-Q" association="_duuwEYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt1_TotlEe-3nrFY8n5C-Q" name="GuiVisualization" specification="_dW9wUYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt1_T4tlEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt1_UItlEe-3nrFY8n5C-Q" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt1_UYtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt1_UotlEe-3nrFY8n5C-Q" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt1_U4tlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt1_VItlEe-3nrFY8n5C-Q" type="_dW9wUItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mUItlEe-3nrFY8n5C-Q" name="setVisible" specification="_dW-XZ4tlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mUYtlEe-3nrFY8n5C-Q" name="resizeColumnWidth" specification="_dsRR8ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt2mUotlEe-3nrFY8n5C-Q" name="table" type="_dqUxM4tlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dW9wUYtlEe-3nrFY8n5C-Q" name="GuiVisualization" method="_dt1_TotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dW-XYYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dW-XYotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AxMN5V2Ee-EOddEwqrIsA">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_dW9wUotlEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dW9wU4tlEe-3nrFY8n5C-Q" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dW-XZItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dW-XYItlEe-3nrFY8n5C-Q" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dW-XZYtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dW-XY4tlEe-3nrFY8n5C-Q" type="_dW9wUItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dW-XZ4tlEe-3nrFY8n5C-Q" name="setVisible" method="_dt2mUItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxMOJV2Ee-EOddEwqrIsA">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dsRR8ItlEe-3nrFY8n5C-Q" name="resizeColumnWidth" visibility="private" method="_dt2mUYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsRR8YtlEe-3nrFY8n5C-Q" name="table" type="_dqUxM4tlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dW--cItlEe-3nrFY8n5C-Q" name="InputGraphFile">
              <ownedComment xmi:id="_1AxMOZV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtGYYYtlEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtGYYotlEe-3nrFY8n5C-Q" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtGYY4tlEe-3nrFY8n5C-Q" name="wfm" visibility="private" type="_dWufwItlEe-3nrFY8n5C-Q" association="_duuwFItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtGYZYtlEe-3nrFY8n5C-Q" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtGYZotlEe-3nrFY8n5C-Q" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtG_cYtlEe-3nrFY8n5C-Q" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtG_cotlEe-3nrFY8n5C-Q" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mU4tlEe-3nrFY8n5C-Q" name="InputGraphFile" specification="_dqXNcYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt2mVItlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt2mVYtlEe-3nrFY8n5C-Q" type="_dW--cItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mVotlEe-3nrFY8n5C-Q" name="InputGraphFile" specification="_dqXNdotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt2mV4tlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt2mWItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt2mWYtlEe-3nrFY8n5C-Q" type="_dW--cItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mWotlEe-3nrFY8n5C-Q" name="setGraphFileName" specification="_dW_lgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt2mW4tlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mXItlEe-3nrFY8n5C-Q" name="verifyGraphFileName" specification="_dXAMkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt2mXYtlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mXotlEe-3nrFY8n5C-Q" name="readGraphFile" specification="_dXAMkotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt2mX4tlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt2mYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt2mYYtlEe-3nrFY8n5C-Q" name="getInputGraphFileName" specification="_dXAMlYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt2mYotlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt2mY4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NYItlEe-3nrFY8n5C-Q" name="readGraphFileContents" specification="_dXAzoItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NYYtlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NYotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NY4tlEe-3nrFY8n5C-Q" name="printVerboseMessage" specification="_dXAzo4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NZItlEe-3nrFY8n5C-Q" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NZYtlEe-3nrFY8n5C-Q" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NZotlEe-3nrFY8n5C-Q" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dW_lgItlEe-3nrFY8n5C-Q" name="setGraphFileName" visibility="private" method="_dt2mWotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dW_lgYtlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXAMkItlEe-3nrFY8n5C-Q" name="verifyGraphFileName" visibility="private" method="_dt2mXItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXAMkYtlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXAMkotlEe-3nrFY8n5C-Q" name="readGraphFile" method="_dt2mXotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXAMk4tlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXAMlItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXAMlYtlEe-3nrFY8n5C-Q" name="getInputGraphFileName" visibility="private" method="_dt2mYYtlEe-3nrFY8n5C-Q" raisedException="_dsRR8otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXAMlotlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXAMl4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXAzoItlEe-3nrFY8n5C-Q" name="readGraphFileContents" visibility="private" method="_dt3NYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXAzoYtlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXAzootlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXAzo4tlEe-3nrFY8n5C-Q" name="printVerboseMessage" visibility="private" method="_dt3NY4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXAzpItlEe-3nrFY8n5C-Q" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXAzpYtlEe-3nrFY8n5C-Q" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXAzpotlEe-3nrFY8n5C-Q" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqXNcYtlEe-3nrFY8n5C-Q" name="InputGraphFile" method="_dt2mU4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqXNc4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqXNdItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqXNcotlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqXNdYtlEe-3nrFY8n5C-Q" type="_dW--cItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqXNdotlEe-3nrFY8n5C-Q" name="InputGraphFile" method="_dt2mVotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqX0gYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqX0gotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqXNd4tlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqX0gItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqX0g4tlEe-3nrFY8n5C-Q" type="_dW--cItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXCBwItlEe-3nrFY8n5C-Q" name="InstructionTimeSlot">
              <generalization xmi:id="_dqYbkItlEe-3nrFY8n5C-Q" general="_dXvzcItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtG_dItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtG_dYtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NZ4tlEe-3nrFY8n5C-Q" name="InstructionTimeSlot" specification="_dXCBwYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NaItlEe-3nrFY8n5C-Q" type="_dXCBwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NaYtlEe-3nrFY8n5C-Q" name="InstructionTimeSlot" specification="_dXCo0otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NaotlEe-3nrFY8n5C-Q" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3Na4tlEe-3nrFY8n5C-Q" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NbItlEe-3nrFY8n5C-Q" type="_dXCBwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NbYtlEe-3nrFY8n5C-Q" name="InstructionTimeSlot" specification="_dXCo2ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NbotlEe-3nrFY8n5C-Q" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt3Nb4tlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NcItlEe-3nrFY8n5C-Q" type="_dXCBwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXCBwYtlEe-3nrFY8n5C-Q" name="InstructionTimeSlot" method="_dt3NZ4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXCBwotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXCo0ItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXCo0YtlEe-3nrFY8n5C-Q" type="_dXCBwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXCo0otlEe-3nrFY8n5C-Q" name="InstructionTimeSlot" visibility="package" method="_dt3NaYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXCo1YtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXCo1otlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXCo04tlEe-3nrFY8n5C-Q" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXCo1ItlEe-3nrFY8n5C-Q" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXCo14tlEe-3nrFY8n5C-Q" type="_dXCBwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXCo2ItlEe-3nrFY8n5C-Q" name="InstructionTimeSlot" visibility="package" method="_dt3NbYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXCo2otlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXCo24tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXCo2YtlEe-3nrFY8n5C-Q" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dXDP4ItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXCo3ItlEe-3nrFY8n5C-Q" type="_dXCBwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXDP4YtlEe-3nrFY8n5C-Q" name="LatencyAnalysis">
              <ownedComment xmi:id="_1AxMOpV2Ee-EOddEwqrIsA">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtG_dotlEe-3nrFY8n5C-Q" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtHmgItlEe-3nrFY8n5C-Q" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtHmgotlEe-3nrFY8n5C-Q" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtHmhItlEe-3nrFY8n5C-Q" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtHmhYtlEe-3nrFY8n5C-Q" name="latencyReport" visibility="private" type="_dWoZIYtlEe-3nrFY8n5C-Q" association="_duvXIYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtHmh4tlEe-3nrFY8n5C-Q" name="program" visibility="private" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_duvXJItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtINkYtlEe-3nrFY8n5C-Q" name="workload" visibility="private" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_duv-MYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtINk4tlEe-3nrFY8n5C-Q" name="programTable" visibility="private" type="_dXi_IItlEe-3nrFY8n5C-Q" association="_duwlQItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtINlYtlEe-3nrFY8n5C-Q" name="nodeIndex" visibility="private" type="_dp1pAItlEe-3nrFY8n5C-Q" association="_duwlQ4tlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NcYtlEe-3nrFY8n5C-Q" name="LatencyAnalysis" specification="_dqZCoYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NcotlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt3Nc4tlEe-3nrFY8n5C-Q" type="_dXDP4YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NdItlEe-3nrFY8n5C-Q" name="LatencyAnalysis" specification="_dqZps4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NdYtlEe-3nrFY8n5C-Q" name="program" type="_dXXY8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt3NdotlEe-3nrFY8n5C-Q" type="_dXDP4YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3Nd4tlEe-3nrFY8n5C-Q" name="latencyReport" specification="_dXD28ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NeItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt3NeYtlEe-3nrFY8n5C-Q" name="numMatchingTx" specification="_dXEeAItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt3NeotlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3Ne4tlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NfItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NfYtlEe-3nrFY8n5C-Q" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt3NfotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXD28ItlEe-3nrFY8n5C-Q" name="latencyReport" method="_dt3Nd4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqZpuItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXEeAItlEe-3nrFY8n5C-Q" name="numMatchingTx" method="_dt3NeYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXEeAYtlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXEeAotlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXEeA4tlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXEeBItlEe-3nrFY8n5C-Q" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXEeBYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqZCoYtlEe-3nrFY8n5C-Q" name="LatencyAnalysis" visibility="package" method="_dt3NcYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqZpsItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqZpsYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqZCootlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqZpsotlEe-3nrFY8n5C-Q" type="_dXDP4YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqZps4tlEe-3nrFY8n5C-Q" name="LatencyAnalysis" visibility="package" method="_dt3NdItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqZptYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqZptotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqZptItlEe-3nrFY8n5C-Q" name="program" type="_dXXY8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqZpt4tlEe-3nrFY8n5C-Q" type="_dXDP4YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXFFEItlEe-3nrFY8n5C-Q" name="LatencyVisualization">
              <ownedComment xmi:id="_1AxMO5V2Ee-EOddEwqrIsA">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqaQxYtlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtI0ootlEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtI0o4tlEe-3nrFY8n5C-Q" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtI0pItlEe-3nrFY8n5C-Q" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtI0pYtlEe-3nrFY8n5C-Q" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtI0potlEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_dYWQYItlEe-3nrFY8n5C-Q" association="_duxMUItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtJbsYtlEe-3nrFY8n5C-Q" name="la" visibility="private" type="_dXDP4YtlEe-3nrFY8n5C-Q" association="_duxMU4tlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30cItlEe-3nrFY8n5C-Q" name="LatencyVisualization" specification="_dqaQwItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30cYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt30cotlEe-3nrFY8n5C-Q" type="_dXFFEItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dqaQwItlEe-3nrFY8n5C-Q" name="LatencyVisualization" visibility="package" method="_dt30cItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqaQwotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqaQw4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqaQwYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqaQxItlEe-3nrFY8n5C-Q" type="_dXFFEItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXGTMItlEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_dsSgEItlEe-3nrFY8n5C-Q" client="_dXGTMItlEe-3nrFY8n5C-Q" supplier="_dqCdVYtlEe-3nrFY8n5C-Q" contract="_dqCdVYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30c4tlEe-3nrFY8n5C-Q" name="compare" specification="_dsTHIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30dItlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt30dYtlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt30dotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dsTHIItlEe-3nrFY8n5C-Q" name="compare" method="_dt30c4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsTHIYtlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsTHIotlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsTHI4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXHhUItlEe-3nrFY8n5C-Q" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_dsTuMItlEe-3nrFY8n5C-Q" client="_dXHhUItlEe-3nrFY8n5C-Q" supplier="_dqCdVYtlEe-3nrFY8n5C-Q" contract="_dqCdVYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30d4tlEe-3nrFY8n5C-Q" name="compare" specification="_dsUVQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30eItlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt30eYtlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt30eotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dsUVQItlEe-3nrFY8n5C-Q" name="compare" method="_dt30d4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsUVQYtlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsUVQotlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsUVQ4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXIIYItlEe-3nrFY8n5C-Q" name="Node">
              <generalization xmi:id="_dqcF8otlEe-3nrFY8n5C-Q" general="_dYy8UItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtJbs4tlEe-3nrFY8n5C-Q" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtJbtItlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtJbtYtlEe-3nrFY8n5C-Q" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtJbtotlEe-3nrFY8n5C-Q" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtJbt4tlEe-3nrFY8n5C-Q" name="edges" type="_dp2QEYtlEe-3nrFY8n5C-Q" isReadOnly="true" association="_duxzYItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtKCwYtlEe-3nrFY8n5C-Q" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dtKCwotlEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_dsUVR4tlEe-3nrFY8n5C-Q" client="_dXIIYItlEe-3nrFY8n5C-Q" supplier="_dsCBYYtlEe-3nrFY8n5C-Q" contract="_dsCBYYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30e4tlEe-3nrFY8n5C-Q" name="Node" specification="_dXIvcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30fItlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt30fYtlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt30fotlEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt30f4tlEe-3nrFY8n5C-Q" type="_dXIIYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30gItlEe-3nrFY8n5C-Q" name="compareTo" specification="_dqbe4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30gYtlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt30gotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30g4tlEe-3nrFY8n5C-Q" name="toString" specification="_dXJWgotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30hItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30hYtlEe-3nrFY8n5C-Q" name="addEdge" specification="_dqcF8ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30hotlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30h4tlEe-3nrFY8n5C-Q" name="addConflict" specification="_dXJ9kItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30iItlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt30iYtlEe-3nrFY8n5C-Q" name="numEdges" specification="_dXJ9kotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt30iotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4bgItlEe-3nrFY8n5C-Q" name="print" specification="_dXJ9lItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4bgYtlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4bgotlEe-3nrFY8n5C-Q" name="print" specification="_dXKkootlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXIvcItlEe-3nrFY8n5C-Q" name="Node" visibility="package" method="_dt30e4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXIvdItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXJWgItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXIvcYtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXIvcotlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXIvc4tlEe-3nrFY8n5C-Q" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXJWgYtlEe-3nrFY8n5C-Q" type="_dXIIYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXJWgotlEe-3nrFY8n5C-Q" name="toString" method="_dt30g4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXJWg4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXJ9kItlEe-3nrFY8n5C-Q" name="addConflict" method="_dt30h4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXJ9kYtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXJ9kotlEe-3nrFY8n5C-Q" name="numEdges" method="_dt30iYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXJ9k4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXJ9lItlEe-3nrFY8n5C-Q" name="print" method="_dt4bgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXJ9lYtlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXKkootlEe-3nrFY8n5C-Q" name="print" method="_dt4bgotlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dqbe4ItlEe-3nrFY8n5C-Q" name="compareTo" method="_dt30gItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqbe4YtlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqbe4otlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqcF8ItlEe-3nrFY8n5C-Q" name="addEdge" method="_dt30hYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqcF8YtlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXLywItlEe-3nrFY8n5C-Q" name="NodeMap">
              <ownedComment xmi:id="_1AxMPJV2Ee-EOddEwqrIsA">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqctAItlEe-3nrFY8n5C-Q" general="_dWDKUItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtKCw4tlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtKCxItlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXLywYtlEe-3nrFY8n5C-Q" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_1AxMPZV2Ee-EOddEwqrIsA">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqdUE4tlEe-3nrFY8n5C-Q" general="_dXy2wYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4bg4tlEe-3nrFY8n5C-Q" name="NonPreemptiveSchedule" specification="_dqctAotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4bhItlEe-3nrFY8n5C-Q" name="poset" type="_dXO2EItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt4bhYtlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt4bhotlEe-3nrFY8n5C-Q" type="_dXLywYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dqctAotlEe-3nrFY8n5C-Q" name="NonPreemptiveSchedule" visibility="package" method="_dt4bg4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqdUEItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqdUEYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqctA4tlEe-3nrFY8n5C-Q" name="poset" type="_dXO2EItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqctBItlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqdUEotlEe-3nrFY8n5C-Q" type="_dXLywYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXMZ0ItlEe-3nrFY8n5C-Q" name="NotImplentedVisualization">
              <generalization xmi:id="_dqdUFYtlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtKp0ItlEe-3nrFY8n5C-Q" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtKp0YtlEe-3nrFY8n5C-Q" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtKp0otlEe-3nrFY8n5C-Q" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtKp04tlEe-3nrFY8n5C-Q" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtKp1ItlEe-3nrFY8n5C-Q" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtKp1YtlEe-3nrFY8n5C-Q" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4bh4tlEe-3nrFY8n5C-Q" name="NotImplentedVisualization" specification="_dXNA4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4biItlEe-3nrFY8n5C-Q" type="_dXMZ0ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4biYtlEe-3nrFY8n5C-Q" name="NotImplentedVisualization" specification="_dXNA5ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4biotlEe-3nrFY8n5C-Q" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt4bi4tlEe-3nrFY8n5C-Q" type="_dXMZ0ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4bjItlEe-3nrFY8n5C-Q" name="visualization" specification="_dXNA6YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4bjYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXNA4ItlEe-3nrFY8n5C-Q" name="NotImplentedVisualization" visibility="package" method="_dt4bh4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXNA4YtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXNA4otlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXNA44tlEe-3nrFY8n5C-Q" type="_dXMZ0ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXNA5ItlEe-3nrFY8n5C-Q" name="NotImplentedVisualization" visibility="package" method="_dt4biYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXNA5otlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXNA54tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXNA5YtlEe-3nrFY8n5C-Q" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXNA6ItlEe-3nrFY8n5C-Q" type="_dXMZ0ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXNA6YtlEe-3nrFY8n5C-Q" name="visualization" method="_dt4bjItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqdUFItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXNn84tlEe-3nrFY8n5C-Q" name="PeriodComparator">
              <interfaceRealization xmi:id="_dsVjYItlEe-3nrFY8n5C-Q" client="_dXNn84tlEe-3nrFY8n5C-Q" supplier="_dqCdVYtlEe-3nrFY8n5C-Q" contract="_dqCdVYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4bjotlEe-3nrFY8n5C-Q" name="compare" specification="_dsWKcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4bj4tlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt4bkItlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt4bkYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dsWKcItlEe-3nrFY8n5C-Q" name="compare" method="_dt4bjotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsWKcYtlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsWKcotlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsWKc4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXO2EItlEe-3nrFY8n5C-Q" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_1AzBjJV2Ee-EOddEwqrIsA">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtKp1otlEe-3nrFY8n5C-Q" name="activations" visibility="private" type="_dWUQEItlEe-3nrFY8n5C-Q" association="_duxzY4tlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtKp2ItlEe-3nrFY8n5C-Q" name="workload" visibility="private" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_duyacItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtLQ4YtlEe-3nrFY8n5C-Q" name="flows" visibility="protected" type="_dWxjEItlEe-3nrFY8n5C-Q" association="_duyac4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dtLQ44tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dtLQ5ItlEe-3nrFY8n5C-Q" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dtLQ4otlEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtLQ5otlEe-3nrFY8n5C-Q" name="nodes" visibility="private" type="_dXIIYItlEe-3nrFY8n5C-Q" association="_duzBgItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dtLQ6ItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dtLQ6YtlEe-3nrFY8n5C-Q" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dtLQ54tlEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtL38YtlEe-3nrFY8n5C-Q" name="nodeMap" visibility="private" type="_dXLywItlEe-3nrFY8n5C-Q" association="_duzBg4tlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtL384tlEe-3nrFY8n5C-Q" name="priorityQueue" visibility="private" type="_dXpFwItlEe-3nrFY8n5C-Q" association="_duzokItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtMfAYtlEe-3nrFY8n5C-Q" name="nodeConnectivityMap" visibility="protected" type="_dp1pAItlEe-3nrFY8n5C-Q" association="_duzok4tlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtNGEItlEe-3nrFY8n5C-Q" name="activationMap" visibility="package" type="_dW4QwItlEe-3nrFY8n5C-Q" association="_du0PoItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4bkotlEe-3nrFY8n5C-Q" name="Poset" specification="_dqeiMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4bk4tlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt4blItlEe-3nrFY8n5C-Q" type="_dXO2EItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt4blYtlEe-3nrFY8n5C-Q" name="getNodeConnectivity" specification="_dXPdIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt4blotlEe-3nrFY8n5C-Q" type="_dp1pAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CkItlEe-3nrFY8n5C-Q" name="getNodeNames" specification="_dXQEMYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5CkYtlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CkotlEe-3nrFY8n5C-Q" name="getNodesNamesOrderedAlphabetically" specification="_dXQrQYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5Ck4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt5ClItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5ClYtlEe-3nrFY8n5C-Q" name="buildPosetOfActivations" specification="_dXQrRYtlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5ClotlEe-3nrFY8n5C-Q" name="createEdgeLists" specification="_dXQrRotlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5Cl4tlEe-3nrFY8n5C-Q" name="createConflictLists" specification="_dXQrR4tlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CmItlEe-3nrFY8n5C-Q" name="createGlobalConflictLists" specification="_dXRSUItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CmYtlEe-3nrFY8n5C-Q" name="createLocalConflictLists" specification="_dXRSUYtlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CmotlEe-3nrFY8n5C-Q" name="findCoordinator" specification="_dsWxgotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5Cm4tlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5CnItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CnYtlEe-3nrFY8n5C-Q" name="buildTxArray" specification="_dsXYkYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5CnotlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5Cn4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt5CoItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CoYtlEe-3nrFY8n5C-Q" name="createInitialActivations" specification="_dXRSUotlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CootlEe-3nrFY8n5C-Q" name="getMaxTx" specification="_dqfJQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5Co4tlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5CpItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CpYtlEe-3nrFY8n5C-Q" name="getActivation" specification="_dqfJQ4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5CpotlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5Cp4tlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5CqItlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5CqYtlEe-3nrFY8n5C-Q" name="getHyperPeriod" specification="_dXRSU4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5CqotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5poItlEe-3nrFY8n5C-Q" name="getMaxPhase" specification="_dXR5YItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5poYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5pootlEe-3nrFY8n5C-Q" name="orderActivations" specification="_dXR5YotlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5po4tlEe-3nrFY8n5C-Q" name="getNextActivation" specification="_dXR5Y4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5ppItlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5ppYtlEe-3nrFY8n5C-Q" name="addActivation" specification="_dqfJSItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5ppotlEe-3nrFY8n5C-Q" name="activation" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5pp4tlEe-3nrFY8n5C-Q" name="findBaseStation" specification="_dXR5ZItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5pqItlEe-3nrFY8n5C-Q" type="_dXIIYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXPdIItlEe-3nrFY8n5C-Q" name="getNodeConnectivity" visibility="private" method="_dt4blYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsWxgItlEe-3nrFY8n5C-Q" type="_dp1pAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXQEMYtlEe-3nrFY8n5C-Q" name="getNodeNames" method="_dt5CkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsWxgYtlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXQrQYtlEe-3nrFY8n5C-Q" name="getNodesNamesOrderedAlphabetically" method="_dt5CkotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXQrQotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dXQrQ4tlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXQrRYtlEe-3nrFY8n5C-Q" name="buildPosetOfActivations" method="_dt5ClYtlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXQrRotlEe-3nrFY8n5C-Q" name="createEdgeLists" visibility="private" method="_dt5ClotlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXQrR4tlEe-3nrFY8n5C-Q" name="createConflictLists" visibility="private" method="_dt5Cl4tlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXRSUItlEe-3nrFY8n5C-Q" name="createGlobalConflictLists" visibility="private" method="_dt5CmItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXRSUYtlEe-3nrFY8n5C-Q" name="createLocalConflictLists" visibility="private" method="_dt5CmYtlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXRSUotlEe-3nrFY8n5C-Q" name="createInitialActivations" visibility="private" method="_dt5CoYtlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXRSU4tlEe-3nrFY8n5C-Q" name="getHyperPeriod" method="_dt5CqYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXRSVItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXR5YItlEe-3nrFY8n5C-Q" name="getMaxPhase" method="_dt5poItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXR5YYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXR5YotlEe-3nrFY8n5C-Q" name="orderActivations" method="_dt5pootlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXR5Y4tlEe-3nrFY8n5C-Q" name="getNextActivation" method="_dt5po4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AzBj5V2Ee-EOddEwqrIsA">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqfJR4tlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXR5ZItlEe-3nrFY8n5C-Q" name="findBaseStation" visibility="protected" method="_dt5pp4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AzBkZV2Ee-EOddEwqrIsA">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqfJSotlEe-3nrFY8n5C-Q" type="_dXIIYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqeiMItlEe-3nrFY8n5C-Q" name="Poset" visibility="package" method="_dt4bkotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqeiMotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqeiM4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AzBjZV2Ee-EOddEwqrIsA">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqeiMYtlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqeiNItlEe-3nrFY8n5C-Q" type="_dXO2EItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqfJQItlEe-3nrFY8n5C-Q" name="getMaxTx" visibility="private" method="_dt5CootlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqfJQYtlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqfJQotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqfJQ4tlEe-3nrFY8n5C-Q" name="getActivation" visibility="private" method="_dt5CpYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqfJRItlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqfJRYtlEe-3nrFY8n5C-Q" name="node" type="_dXIIYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqfJRotlEe-3nrFY8n5C-Q" type="_dWG0sItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqfJSItlEe-3nrFY8n5C-Q" name="addActivation" method="_dt5ppYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AzBkJV2Ee-EOddEwqrIsA">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqfJSYtlEe-3nrFY8n5C-Q" name="activation" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsWxgotlEe-3nrFY8n5C-Q" name="findCoordinator" visibility="protected" method="_dt5CmotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AzBjpV2Ee-EOddEwqrIsA">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsWxg4tlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsWxhItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dsXYkYtlEe-3nrFY8n5C-Q" name="buildTxArray" visibility="private" method="_dt5CnYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsXYkotlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsXYk4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dsXYlItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXTukItlEe-3nrFY8n5C-Q" name="PreemptiveSchedule">
              <ownedComment xmi:id="_1AxMP5V2Ee-EOddEwqrIsA">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqizpItlEe-3nrFY8n5C-Q" general="_dXy2wYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5pqYtlEe-3nrFY8n5C-Q" name="PreemptiveSchedule" specification="_dqgXYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5pqotlEe-3nrFY8n5C-Q" name="poset" type="_dXO2EItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5pq4tlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5prItlEe-3nrFY8n5C-Q" type="_dXTukItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5prYtlEe-3nrFY8n5C-Q" name="continueSearch" specification="_dqgXZotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5protlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5pr4tlEe-3nrFY8n5C-Q" name="activation" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5psItlEe-3nrFY8n5C-Q" type="_dsYmsItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5psYtlEe-3nrFY8n5C-Q" name="toProgram" specification="_dXUVoItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5psotlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5ps4tlEe-3nrFY8n5C-Q" name="findPreeptiveChannelAndTime" specification="_dqg-dItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5ptItlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5ptYtlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5ptotlEe-3nrFY8n5C-Q" type="_dsYmsItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5pt4tlEe-3nrFY8n5C-Q" name="findAdditionalTime" specification="_dqg-d4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5puItlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5puYtlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5puotlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt5pu4tlEe-3nrFY8n5C-Q" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5pvItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt5pvYtlEe-3nrFY8n5C-Q" name="findMaxTimeAvailable" specification="_dqhlhItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt5pvotlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt5pv4tlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QsItlEe-3nrFY8n5C-Q" type="_dsYmsItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6QsYtlEe-3nrFY8n5C-Q" name="availableTime" specification="_dqiMkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt6QsotlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6Qs4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QtItlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QtYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6QtotlEe-3nrFY8n5C-Q" name="addToSchedule" specification="_dqiMlYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt6Qt4tlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QuItlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QuYtlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QuotlEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6Qu4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6QvItlEe-3nrFY8n5C-Q" name="addToSchedule" specification="_dqiMm4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt6QvYtlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QvotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXUVoItlEe-3nrFY8n5C-Q" name="toProgram" method="_dt5psYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqg-c4tlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqgXYItlEe-3nrFY8n5C-Q" name="PreemptiveSchedule" visibility="package" method="_dt5pqYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqgXY4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqgXZItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqgXYYtlEe-3nrFY8n5C-Q" name="poset" type="_dXO2EItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqgXYotlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqgXZYtlEe-3nrFY8n5C-Q" type="_dXTukItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqgXZotlEe-3nrFY8n5C-Q" name="continueSearch" visibility="protected" method="_dt5prYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqgXZ4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqgXaItlEe-3nrFY8n5C-Q" name="activation" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsYmsotlEe-3nrFY8n5C-Q" type="_dsYmsItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqg-dItlEe-3nrFY8n5C-Q" name="findPreeptiveChannelAndTime" visibility="private" method="_dt5ps4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqg-dYtlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqg-dotlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsYms4tlEe-3nrFY8n5C-Q" type="_dsYmsItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqg-d4tlEe-3nrFY8n5C-Q" name="findAdditionalTime" visibility="private" method="_dt5pt4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqg-eItlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqhlgItlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqhlgYtlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqhlgotlEe-3nrFY8n5C-Q" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsZNwItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqhlhItlEe-3nrFY8n5C-Q" name="findMaxTimeAvailable" visibility="private" method="_dt5pvYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqhlhYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqhlhotlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsZNwYtlEe-3nrFY8n5C-Q" type="_dsYmsItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqiMkItlEe-3nrFY8n5C-Q" name="availableTime" visibility="private" method="_dt6QsYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqiMkYtlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqiMkotlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqiMk4tlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqiMlItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqiMlYtlEe-3nrFY8n5C-Q" name="addToSchedule" visibility="private" method="_dt6QtotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqiMlotlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqiMl4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqiMmItlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqiMmYtlEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqiMmotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqiMm4tlEe-3nrFY8n5C-Q" name="addToSchedule" visibility="protected" method="_dt6QvItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqiMnItlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqizoItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXWx4ItlEe-3nrFY8n5C-Q" name="PriorityComparator">
              <interfaceRealization xmi:id="_dsZNwotlEe-3nrFY8n5C-Q" client="_dXWx4ItlEe-3nrFY8n5C-Q" supplier="_dqCdVYtlEe-3nrFY8n5C-Q" contract="_dqCdVYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6Qv4tlEe-3nrFY8n5C-Q" name="compare" specification="_dsZ00YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt6QwItlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QwYtlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QwotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dsZ00YtlEe-3nrFY8n5C-Q" name="compare" method="_dt6Qv4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsZ00otlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsZ004tlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsZ01ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXXY8ItlEe-3nrFY8n5C-Q" name="Program">
              <ownedComment xmi:id="_1AzBiJV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtNGEotlEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtNGE4tlEe-3nrFY8n5C-Q" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtNtIItlEe-3nrFY8n5C-Q" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtNtIYtlEe-3nrFY8n5C-Q" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtNtIotlEe-3nrFY8n5C-Q" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtNtI4tlEe-3nrFY8n5C-Q" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtNtJItlEe-3nrFY8n5C-Q" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtNtJYtlEe-3nrFY8n5C-Q" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtNtJotlEe-3nrFY8n5C-Q" name="workLoad" visibility="package" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_du0Po4tlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtNtKItlEe-3nrFY8n5C-Q" name="scheduleBuilt" visibility="package" type="_dXi_IItlEe-3nrFY8n5C-Q" association="_du02sYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtOUMYtlEe-3nrFY8n5C-Q" name="SchedulerSelected" visibility="package" type="_dsbC8ItlEe-3nrFY8n5C-Q" association="_du02tItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtOUM4tlEe-3nrFY8n5C-Q" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtOUNYtlEe-3nrFY8n5C-Q" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtOUN4tlEe-3nrFY8n5C-Q" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtO7QYtlEe-3nrFY8n5C-Q" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtO7Q4tlEe-3nrFY8n5C-Q" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtO7RYtlEe-3nrFY8n5C-Q" name="channelsAvailable" visibility="package" type="_dWX6cItlEe-3nrFY8n5C-Q" association="_du1dwYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtO7R4tlEe-3nrFY8n5C-Q" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtPiUYtlEe-3nrFY8n5C-Q" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtPiU4tlEe-3nrFY8n5C-Q" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtPiVYtlEe-3nrFY8n5C-Q" name="deadlineMisses" visibility="private" type="_dWoZIYtlEe-3nrFY8n5C-Q" association="_du1dxItlEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_dqkBw4tlEe-3nrFY8n5C-Q" client="_dXXY8ItlEe-3nrFY8n5C-Q" supplier="_dX8nwItlEe-3nrFY8n5C-Q" contract="_dX8nwItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6Qw4tlEe-3nrFY8n5C-Q" name="Program" specification="_dsbqAItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt6QxItlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QxYtlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QxotlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6Qx4tlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QyItlEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QyYtlEe-3nrFY8n5C-Q" type="_dXXY8ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6QyotlEe-3nrFY8n5C-Q" name="Program" specification="_dsbqCYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt6Qy4tlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QzItlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6QzYtlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6QzotlEe-3nrFY8n5C-Q" type="_dXXY8ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6Qz4tlEe-3nrFY8n5C-Q" name="setDefaultParameters" specification="_dqlP4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt6Q0ItlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt6Q0YtlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6Q0otlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6Q04tlEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt63wItlEe-3nrFY8n5C-Q" name="toWorkLoad" specification="_dXZOIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt63wYtlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt63wotlEe-3nrFY8n5C-Q" name="buildProgram" specification="_dscREItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt63w4tlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt63xItlEe-3nrFY8n5C-Q" name="buildOriginalProgram" specification="_dXZOIYtlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt63xYtlEe-3nrFY8n5C-Q" name="waitInstruction" specification="_dXZOIotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt63xotlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt63x4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt63yItlEe-3nrFY8n5C-Q" name="elseWaitInstruction" specification="_dXZ1MotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt63yYtlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt63yotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt63y4tlEe-3nrFY8n5C-Q" name="elsePullClause" specification="_dXZ1NYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt63zItlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt63zYtlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt63zotlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt63z4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt630ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt630YtlEe-3nrFY8n5C-Q" name="hasPushInstruction" specification="_dXacQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt630otlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6304tlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt631ItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt631YtlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt631otlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt6314tlEe-3nrFY8n5C-Q" name="pushInstruction" specification="_dXacRotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt632ItlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt632YtlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt632otlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6324tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt633ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt633YtlEe-3nrFY8n5C-Q" name="getFirstChannelInInstruction" specification="_dXbDUItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt633otlEe-3nrFY8n5C-Q" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6334tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt634ItlEe-3nrFY8n5C-Q" name="findNextAvailableInstructionTimeSlot" specification="_dqlP5otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt634YtlEe-3nrFY8n5C-Q" name="schedule" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt634otlEe-3nrFY8n5C-Q" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6344tlEe-3nrFY8n5C-Q" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt635ItlEe-3nrFY8n5C-Q" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt635YtlEe-3nrFY8n5C-Q" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt635otlEe-3nrFY8n5C-Q" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt6354tlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt636ItlEe-3nrFY8n5C-Q" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt636YtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt636otlEe-3nrFY8n5C-Q" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6364tlEe-3nrFY8n5C-Q" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt637ItlEe-3nrFY8n5C-Q" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt637YtlEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt637otlEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt6374tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e0ItlEe-3nrFY8n5C-Q" name="slotIsAvailable" specification="_dql2-otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e0YtlEe-3nrFY8n5C-Q" name="currentInstructionTimeSlot" type="_dXCBwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt7e0otlEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt7e04tlEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt7e1ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e1YtlEe-3nrFY8n5C-Q" name="findNextAvailableChannel" specification="_dqmeAYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e1otlEe-3nrFY8n5C-Q" name="schedule" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt7e14tlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt7e2ItlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt7e2YtlEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt7e2otlEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt7e24tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e3ItlEe-3nrFY8n5C-Q" name="selectPriority" specification="_dXbqYItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e3YtlEe-3nrFY8n5C-Q" name="selectRM" specification="_dXbqYYtlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e3otlEe-3nrFY8n5C-Q" name="selectDM" specification="_dXbqYotlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e34tlEe-3nrFY8n5C-Q" name="selectRtHART" specification="_dXbqY4tlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e4ItlEe-3nrFY8n5C-Q" name="setScheduleSelected" specification="_dscREotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e4YtlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e4otlEe-3nrFY8n5C-Q" name="setSchedule" specification="_dqmeCItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e44tlEe-3nrFY8n5C-Q" name="schedule" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e5ItlEe-3nrFY8n5C-Q" name="getSchedule" specification="_dXbqZItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e5YtlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e5otlEe-3nrFY8n5C-Q" name="getSchedulerName" specification="_dXbqZYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e54tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e6ItlEe-3nrFY8n5C-Q" name="getSchChoice" specification="_dXcRc4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e6YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e6otlEe-3nrFY8n5C-Q" name="getNumChannels" specification="_dXcRdYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e64tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt7e7ItlEe-3nrFY8n5C-Q" name="getNumTransmissions" specification="_dXc4gotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt7e7YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F4ItlEe-3nrFY8n5C-Q" name="getRealTimeHartFlag" specification="_dXc4h4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F4YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F4otlEe-3nrFY8n5C-Q" name="setRealTimeHartFlag" specification="_dXc4iYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F44tlEe-3nrFY8n5C-Q" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F5ItlEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" specification="_dXdfkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F5YtlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F5otlEe-3nrFY8n5C-Q" name="getE2e" specification="_dXdflItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F54tlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F6ItlEe-3nrFY8n5C-Q" name="getName" specification="_dXeGoYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F6YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F6otlEe-3nrFY8n5C-Q" name="getOptimizationFlag" specification="_dXeGpotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F64tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F7ItlEe-3nrFY8n5C-Q" name="deadlineMisses" specification="_dXetsotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F7YtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F7otlEe-3nrFY8n5C-Q" name="getNumFaults" specification="_dXets4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F74tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8F8ItlEe-3nrFY8n5C-Q" name="getNodeMapIndex" specification="_dXetuItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8F8YtlEe-3nrFY8n5C-Q" type="_dp1pAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXZOIItlEe-3nrFY8n5C-Q" name="toWorkLoad" method="_dt63wItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AzBiZV2Ee-EOddEwqrIsA">
                  <body>Returns the work load &#xD;
   * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqlP5YtlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXZOIYtlEe-3nrFY8n5C-Q" name="buildOriginalProgram" method="_dt63xItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXZOIotlEe-3nrFY8n5C-Q" name="waitInstruction" visibility="private" method="_dt63xYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXZ1MItlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXZ1MYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXZ1MotlEe-3nrFY8n5C-Q" name="elseWaitInstruction" visibility="private" method="_dt63yItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXZ1M4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXZ1NItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXZ1NYtlEe-3nrFY8n5C-Q" name="elsePullClause" visibility="private" method="_dt63y4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXZ1NotlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXZ1N4tlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXZ1OItlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXZ1OYtlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXZ1OotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXacQItlEe-3nrFY8n5C-Q" name="hasPushInstruction" visibility="private" method="_dt630YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXacQYtlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacQotlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacQ4tlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacRItlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacRYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXacRotlEe-3nrFY8n5C-Q" name="pushInstruction" visibility="private" method="_dt6314tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXacR4tlEe-3nrFY8n5C-Q" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacSItlEe-3nrFY8n5C-Q" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacSYtlEe-3nrFY8n5C-Q" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacSotlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXacS4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXbDUItlEe-3nrFY8n5C-Q" name="getFirstChannelInInstruction" visibility="private" method="_dt633YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXbDUYtlEe-3nrFY8n5C-Q" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXbDUotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXbqYItlEe-3nrFY8n5C-Q" name="selectPriority" method="_dt7e3ItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXbqYYtlEe-3nrFY8n5C-Q" name="selectRM" method="_dt7e3YtlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXbqYotlEe-3nrFY8n5C-Q" name="selectDM" method="_dt7e3otlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXbqY4tlEe-3nrFY8n5C-Q" name="selectRtHART" method="_dt7e34tlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dXbqZItlEe-3nrFY8n5C-Q" name="getSchedule" method="_dt7e5ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AzBipV2Ee-EOddEwqrIsA">
                  <body>Returns the built schulde&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqnFEItlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXbqZYtlEe-3nrFY8n5C-Q" name="getSchedulerName" method="_dt7e5otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXbqZotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXcRc4tlEe-3nrFY8n5C-Q" name="getSchChoice" method="_dt7e6ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXcRdItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXcRdYtlEe-3nrFY8n5C-Q" name="getNumChannels" method="_dt7e6otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXcRdotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXc4gotlEe-3nrFY8n5C-Q" name="getNumTransmissions" method="_dt7e7ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXc4g4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXc4h4tlEe-3nrFY8n5C-Q" name="getRealTimeHartFlag" visibility="private" method="_dt8F4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXc4iItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXc4iYtlEe-3nrFY8n5C-Q" name="setRealTimeHartFlag" visibility="private" method="_dt8F4otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXc4iotlEe-3nrFY8n5C-Q" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXdfkItlEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" method="_dt8F5ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsc4IYtlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXdflItlEe-3nrFY8n5C-Q" name="getE2e" method="_dt8F5otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsc4IotlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXeGoYtlEe-3nrFY8n5C-Q" name="getName" method="_dt8F6ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXeGootlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXeGpotlEe-3nrFY8n5C-Q" name="getOptimizationFlag" method="_dt8F6otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXeGp4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXetsotlEe-3nrFY8n5C-Q" name="deadlineMisses" method="_dt8F7ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqnFEYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXets4tlEe-3nrFY8n5C-Q" name="getNumFaults" method="_dt8F7otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXettItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXetuItlEe-3nrFY8n5C-Q" name="getNodeMapIndex" method="_dt8F8ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AzBi5V2Ee-EOddEwqrIsA">
                  <body>Retrieves a mapping of node names to their respective indices in the schedule table.&#xD;
   * @return nodeIndexMap</body>
                </ownedComment>
                <ownedParameter xmi:id="_dsc4I4tlEe-3nrFY8n5C-Q" type="_dp1pAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqlP4ItlEe-3nrFY8n5C-Q" name="setDefaultParameters" visibility="private" method="_dt6Qz4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqlP4YtlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqlP4otlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqlP44tlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqlP5ItlEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqlP5otlEe-3nrFY8n5C-Q" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_dt634ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqlP54tlEe-3nrFY8n5C-Q" name="schedule" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqlP6ItlEe-3nrFY8n5C-Q" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqlP6YtlEe-3nrFY8n5C-Q" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqlP6otlEe-3nrFY8n5C-Q" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqlP64tlEe-3nrFY8n5C-Q" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql28ItlEe-3nrFY8n5C-Q" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dql2-ItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql28YtlEe-3nrFY8n5C-Q" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dql2-YtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql28otlEe-3nrFY8n5C-Q" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql284tlEe-3nrFY8n5C-Q" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql29ItlEe-3nrFY8n5C-Q" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql29YtlEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql29otlEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql294tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dql2-otlEe-3nrFY8n5C-Q" name="slotIsAvailable" visibility="private" method="_dt7e0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dql2-4tlEe-3nrFY8n5C-Q" name="currentInstructionTimeSlot" type="_dXCBwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dql2_ItlEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dql2_YtlEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqmeAItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqmeAYtlEe-3nrFY8n5C-Q" name="findNextAvailableChannel" visibility="private" method="_dt7e1YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqmeAotlEe-3nrFY8n5C-Q" name="schedule" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqmeA4tlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqmeBItlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqmeBYtlEe-3nrFY8n5C-Q" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqmeBotlEe-3nrFY8n5C-Q" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqmeB4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqmeCItlEe-3nrFY8n5C-Q" name="setSchedule" visibility="private" method="_dt7e4otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqmeCYtlEe-3nrFY8n5C-Q" name="schedule" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsbqAItlEe-3nrFY8n5C-Q" name="Program" visibility="package" method="_dt6Qw4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsbqBotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsbqB4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dsbqAYtlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsbqAotlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsbqA4tlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsbqBItlEe-3nrFY8n5C-Q" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsbqBYtlEe-3nrFY8n5C-Q" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsbqCItlEe-3nrFY8n5C-Q" type="_dXXY8ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsbqCYtlEe-3nrFY8n5C-Q" name="Program" visibility="package" method="_dt6QyotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsbqDYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsbqDotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dsbqCotlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsbqC4tlEe-3nrFY8n5C-Q" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsbqDItlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsbqD4tlEe-3nrFY8n5C-Q" type="_dXXY8ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dscREItlEe-3nrFY8n5C-Q" name="buildProgram" method="_dt63wotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dscREYtlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dscREotlEe-3nrFY8n5C-Q" name="setScheduleSelected" visibility="private" method="_dt7e4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dscRE4tlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXi_IItlEe-3nrFY8n5C-Q" name="ProgramSchedule">
              <generalization xmi:id="_dqo6QItlEe-3nrFY8n5C-Q" general="_dX_EAItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtQJYItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtQJYYtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8s8ItlEe-3nrFY8n5C-Q" name="ProgramSchedule" specification="_dXi_IYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8s8YtlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8s8otlEe-3nrFY8n5C-Q" name="ProgramSchedule" specification="_dXjmMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8s84tlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt8s9ItlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt8s9YtlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXi_IYtlEe-3nrFY8n5C-Q" name="ProgramSchedule" method="_dt8s8ItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXi_IotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXi_I4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXi_JItlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXjmMItlEe-3nrFY8n5C-Q" name="ProgramSchedule" visibility="package" method="_dt8s8otlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXjmM4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXjmNItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXjmMYtlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXjmMotlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXjmNYtlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXjmNotlEe-3nrFY8n5C-Q" name="ProgramVisualization">
              <ownedComment xmi:id="_1AxMQZV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
@version 1.5&#xD;
ProgramVisualiztion builds graph based on data; checks if flows have passed their deadlines&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqqIZ4tlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtQwcItlEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtQwcYtlEe-3nrFY8n5C-Q" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtQwcotlEe-3nrFY8n5C-Q" name="sourceCode" visibility="private" type="_dXi_IItlEe-3nrFY8n5C-Q" association="_du2E0YtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtQwdItlEe-3nrFY8n5C-Q" name="program" visibility="private" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_du2E1ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtQwdotlEe-3nrFY8n5C-Q" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8s9otlEe-3nrFY8n5C-Q" name="ProgramVisualization" specification="_dqphUYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8s94tlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt8s-ItlEe-3nrFY8n5C-Q" type="_dXjmNotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8s-YtlEe-3nrFY8n5C-Q" name="displayVisualization" specification="_dXkNQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8s-otlEe-3nrFY8n5C-Q" type="_dW9wUItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8s-4tlEe-3nrFY8n5C-Q" name="createHeader" specification="_dXk0UItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8s_ItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8s_YtlEe-3nrFY8n5C-Q" name="createFooter" specification="_dXk0VItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8s_otlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8s_4tlEe-3nrFY8n5C-Q" name="createColumnHeader" specification="_dXlbYotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8tAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt8tAYtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8tAotlEe-3nrFY8n5C-Q" name="createVisualizationData" specification="_dXlbaYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8tA4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt8tBItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8tBYtlEe-3nrFY8n5C-Q" name="createTitle" specification="_dXmCdYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8tBotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXkNQItlEe-3nrFY8n5C-Q" name="displayVisualization" method="_dt8s-YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqqIZItlEe-3nrFY8n5C-Q" type="_dW9wUItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXk0UItlEe-3nrFY8n5C-Q" name="createHeader" visibility="protected" method="_dt8s-4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqqIZYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXk0VItlEe-3nrFY8n5C-Q" name="createFooter" visibility="protected" method="_dt8s_YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqqIZotlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXlbYotlEe-3nrFY8n5C-Q" name="createColumnHeader" visibility="protected" method="_dt8s_4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXlbY4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dXlbZItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXlbaYtlEe-3nrFY8n5C-Q" name="createVisualizationData" visibility="protected" method="_dt8tAotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dXlbaotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dXmCcItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dXmCdYtlEe-3nrFY8n5C-Q" name="createTitle" visibility="private" method="_dt8tBYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzQJV2Ee-EOddEwqrIsA">
                  <body>Returns title&#xD;
   * @return returns the title of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_dXmCdotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqphUYtlEe-3nrFY8n5C-Q" name="ProgramVisualization" visibility="package" method="_dt8s9otlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqqIYYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqqIYotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqqIYItlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqqIY4tlEe-3nrFY8n5C-Q" type="_dXjmNotlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXnQkItlEe-3nrFY8n5C-Q" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_dseGQItlEe-3nrFY8n5C-Q" client="_dXnQkItlEe-3nrFY8n5C-Q" supplier="_dqCdVYtlEe-3nrFY8n5C-Q" contract="_dqCdVYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt8tB4tlEe-3nrFY8n5C-Q" name="compare" specification="_dsetUItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt8tCItlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt8tCYtlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt8tCotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dsetUItlEe-3nrFY8n5C-Q" name="compare" method="_dt8tB4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsetUYtlEe-3nrFY8n5C-Q" name="obj1" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsetUotlEe-3nrFY8n5C-Q" name="obj2" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsetU4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXn3oItlEe-3nrFY8n5C-Q" name="ReleaseTimeQueue">
              <generalization xmi:id="_dXpFwotlEe-3nrFY8n5C-Q" general="_dXpFwItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtRXgYtlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtRXgotlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UAItlEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" specification="_dXoesYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UAYtlEe-3nrFY8n5C-Q" type="_dXn3oItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UAotlEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" specification="_dqqvcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UA4tlEe-3nrFY8n5C-Q" name="schedulableObjects" type="_dqd7IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt9UBItlEe-3nrFY8n5C-Q" type="_dXn3oItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXoesYtlEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" visibility="package" method="_dt9UAItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXoesotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXoes4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXoetItlEe-3nrFY8n5C-Q" type="_dXn3oItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqqvcItlEe-3nrFY8n5C-Q" name="ReleaseTimeQueue" visibility="package" method="_dt9UAotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqqvcotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqqvc4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqqvcYtlEe-3nrFY8n5C-Q" name="schedulableObjects" type="_dqd7IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqqvdItlEe-3nrFY8n5C-Q" type="_dXn3oItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXps0YtlEe-3nrFY8n5C-Q" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_M9TToJXAEe-EOddEwqrIsA">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to compute the probabilities that comprise the&#xD;
ReliablityMatrix, which is the core of the reliability visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined in the project assignment.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_BXvI4ZV3Ee-EOddEwqrIsA" name="e2e" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_BXvv8JV3Ee-EOddEwqrIsA" name="minPacketReceptionRate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_BXvv8pV3Ee-EOddEwqrIsA" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BXvv9JV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" specification="_BXtTsJV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXvv9ZV3Ee-EOddEwqrIsA" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXvv9pV3Ee-EOddEwqrIsA" name="minPacketReceptionRate" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXvv95V3Ee-EOddEwqrIsA" type="_dXps0YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.e2e = (e2e != null) ? e2e : 0.99;&#xD;
	    this.minPacketReceptionRate = (minPacketReceptionRate != null) ? minPacketReceptionRate : 0.9;&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BXvv-JV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" specification="_BXuh0JV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXvv-ZV3Ee-EOddEwqrIsA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BXvv-pV3Ee-EOddEwqrIsA" type="_dXps0YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numFaults = (numFaults != null) ? numFaults : 0;&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BXvv-5V3Ee-EOddEwqrIsA" name="numTxPerLinkAndTotalTxCost" specification="_BXt6xJV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXvv_JV3Ee-EOddEwqrIsA" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXvv_ZV3Ee-EOddEwqrIsA" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;Integer> txResults = new ArrayList&lt;>();&#xD;
&#xD;
	    if (numFaults > 0) {&#xD;
	      txResults = getFixedTxPerLinkAndTotalTxCost(flow);&#xD;
	    } else {&#xD;
	      txResults = numTxAttemptsPerLinkAndTotalTxAttempts(flow, e2e, minPacketReceptionRate, false);&#xD;
	    }&#xD;
&#xD;
	    return txResults;&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BXvv_pV3Ee-EOddEwqrIsA" name="getFixedTxPerLinkAndTotalTxCost" specification="_BXt6yJV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXvv_5V3Ee-EOddEwqrIsA" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXvwAJV3Ee-EOddEwqrIsA" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>int nNodesInFlow = flow.getNodes().size();&#xD;
	    int numEdgesInFlow = nNodesInFlow - 1;&#xD;
	    int maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
&#xD;
	    ArrayList&lt;Integer> txPerLink = new ArrayList&lt;>();&#xD;
&#xD;
	    for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
	      txPerLink.add(numFaults + 1);&#xD;
	    }&#xD;
&#xD;
	    txPerLink.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
	    return txPerLink;&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BXvwAZV3Ee-EOddEwqrIsA" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_BXuh1ZV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXvwApV3Ee-EOddEwqrIsA" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXvwA5V3Ee-EOddEwqrIsA" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXvwBJV3Ee-EOddEwqrIsA" name="M" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXvwBZV3Ee-EOddEwqrIsA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BXvwBpV3Ee-EOddEwqrIsA" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>int nNodesInFlow = flow.getNodes().size();&#xD;
	    int nHops = nNodesInFlow - 1;&#xD;
&#xD;
	    ArrayList&lt;Integer> nPushesArrayList = new ArrayList&lt;>();&#xD;
	    for (int i = 0; i &lt;= nNodesInFlow; i++) {&#xD;
	      nPushesArrayList.add(0);&#xD;
	    }&#xD;
&#xD;
	    double minLinkReliabilityNeeded = Math.max(e2e, Math.pow(e2e, 1.0 / nHops));&#xD;
	    ArrayList&lt;Double> currentReliabilityRow = new ArrayList&lt;>(nNodesInFlow);&#xD;
&#xD;
	    for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
	      currentReliabilityRow.add(0.0);&#xD;
	    }&#xD;
&#xD;
	    currentReliabilityRow.set(0, 1.0);&#xD;
&#xD;
	    int timeSlot = 0;&#xD;
	    double e2eReliabilityState = 0.0;&#xD;
&#xD;
	    while (e2eReliabilityState &lt; e2e) {&#xD;
	      ArrayList&lt;Double> prevReliabilityRow = new ArrayList&lt;>(currentReliabilityRow);&#xD;
&#xD;
	      for (int nodeIndex = 0; nodeIndex &lt; nHops; nodeIndex++) {&#xD;
	        double prevSrcNodeState = prevReliabilityRow.get(nodeIndex);&#xD;
	        double prevSnkNodeState = prevReliabilityRow.get(nodeIndex + 1);&#xD;
	        double nextSnkState;&#xD;
&#xD;
	        if (prevSnkNodeState &lt; minLinkReliabilityNeeded &amp;&amp; prevSrcNodeState > 0) {&#xD;
	          nextSnkState = (1 - M) * prevSnkNodeState + M * prevSrcNodeState;&#xD;
	          nPushesArrayList.set(nodeIndex, nPushesArrayList.get(nodeIndex) + 1);&#xD;
	        } else {&#xD;
	          nextSnkState = prevSnkNodeState;&#xD;
	        }&#xD;
&#xD;
	        currentReliabilityRow.set(nodeIndex + 1, nextSnkState);&#xD;
	      }&#xD;
&#xD;
	      e2eReliabilityState = currentReliabilityRow.get(nHops);&#xD;
	      timeSlot++;&#xD;
	    }&#xD;
&#xD;
	    nPushesArrayList.set(nNodesInFlow, timeSlot);&#xD;
	    return nPushesArrayList;&#xD;
	  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I6Hc85W-Ee-EOddEwqrIsA" name="verifyReliabilities" specification="_I6GO15W-Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_I6Hc9JW-Ee-EOddEwqrIsA" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
	    return true;&#xD;
	  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_BXtTsJV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" method="_BXvv9JV3Ee-EOddEwqrIsA">
                <eAnnotations xmi:id="_BXt6wpV3Ee-EOddEwqrIsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_BXt6w5V3Ee-EOddEwqrIsA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_BXtTsZV3Ee-EOddEwqrIsA" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXt6wJV3Ee-EOddEwqrIsA" name="minPacketReceptionRate" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXt6wZV3Ee-EOddEwqrIsA" type="_dXps0YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BXt6xJV3Ee-EOddEwqrIsA" name="numTxPerLinkAndTotalTxCost" method="_BXvv-5V3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXt6xZV3Ee-EOddEwqrIsA" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXt6xpV3Ee-EOddEwqrIsA" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BXt6yJV3Ee-EOddEwqrIsA" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_BXvv_pV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXt6yZV3Ee-EOddEwqrIsA" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXt6ypV3Ee-EOddEwqrIsA" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BXuh0JV3Ee-EOddEwqrIsA" name="ReliabilityAnalysis" method="_BXvv-JV3Ee-EOddEwqrIsA">
                <eAnnotations xmi:id="_BXuh05V3Ee-EOddEwqrIsA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_BXuh1JV3Ee-EOddEwqrIsA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_BXuh0ZV3Ee-EOddEwqrIsA" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_BXuh0pV3Ee-EOddEwqrIsA" type="_dXps0YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_BXuh1ZV3Ee-EOddEwqrIsA" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_BXvwAZV3Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_BXuh2pV3Ee-EOddEwqrIsA" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
                <ownedParameter xmi:id="_BXuh1pV3Ee-EOddEwqrIsA" name="flow" type="_dWxjEItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXuh15V3Ee-EOddEwqrIsA" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXuh2JV3Ee-EOddEwqrIsA" name="M" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_BXuh2ZV3Ee-EOddEwqrIsA" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_I6GO1ZW-Ee-EOddEwqrIsA" name="getReliabilities">
                <ownedParameter xmi:id="_I6GO1pW-Ee-EOddEwqrIsA" type="_dXsJEItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_I6GO15W-Ee-EOddEwqrIsA" name="verifyReliabilities" method="_I6Hc85W-Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_I6G14JW-Ee-EOddEwqrIsA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dXqT4otlEe-3nrFY8n5C-Q" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_1AxzQpV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dXq68ItlEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_dscRFItlEe-3nrFY8n5C-Q" isReadOnly="true"/>
              <ownedAttribute xmi:id="_dXq68YtlEe-3nrFY8n5C-Q" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXriAItlEe-3nrFY8n5C-Q" name="ReliabilityRow">
              <generalization xmi:id="_dqr9kItlEe-3nrFY8n5C-Q" general="_dXvzcItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtRXg4tlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtRXhItlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UCotlEe-3nrFY8n5C-Q" name="ReliabilityRow" specification="_dXriAYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UC4tlEe-3nrFY8n5C-Q" type="_dXriAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UDItlEe-3nrFY8n5C-Q" name="ReliabilityRow" specification="_dsfUYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UDYtlEe-3nrFY8n5C-Q" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt9UDotlEe-3nrFY8n5C-Q" name="element" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt9UD4tlEe-3nrFY8n5C-Q" type="_dXriAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UEItlEe-3nrFY8n5C-Q" name="ReliabilityRow" specification="_dsfUZotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UEYtlEe-3nrFY8n5C-Q" name="rowArray" type="_dscRFItlEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt9UEotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt9UE4tlEe-3nrFY8n5C-Q" type="_dXriAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXriAYtlEe-3nrFY8n5C-Q" name="ReliabilityRow" method="_dt9UCotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXriAotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXriA4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXriBItlEe-3nrFY8n5C-Q" type="_dXriAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsfUYItlEe-3nrFY8n5C-Q" name="ReliabilityRow" visibility="package" method="_dt9UDItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsfUY4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsfUZItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dsfUYYtlEe-3nrFY8n5C-Q" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsfUYotlEe-3nrFY8n5C-Q" name="element" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsfUZYtlEe-3nrFY8n5C-Q" type="_dXriAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsfUZotlEe-3nrFY8n5C-Q" name="ReliabilityRow" visibility="package" method="_dt9UEItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsfUaItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsfUaYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dsfUZ4tlEe-3nrFY8n5C-Q" name="rowArray" type="_dscRFItlEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dsf7cItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsfUaotlEe-3nrFY8n5C-Q" type="_dXriAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXsJEItlEe-3nrFY8n5C-Q" name="ReliabilityTable">
              <generalization xmi:id="_dqskoItlEe-3nrFY8n5C-Q" general="_dX_EAItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtRXhYtlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtRXhotlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UFItlEe-3nrFY8n5C-Q" name="ReliabilityTable" specification="_dXswIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UFYtlEe-3nrFY8n5C-Q" type="_dXsJEItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UFotlEe-3nrFY8n5C-Q" name="ReliabilityTable" specification="_dXswJItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UF4tlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt9UGItlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt9UGYtlEe-3nrFY8n5C-Q" type="_dXsJEItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXswIItlEe-3nrFY8n5C-Q" name="ReliabilityTable" method="_dt9UFItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXswIYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXswIotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXswI4tlEe-3nrFY8n5C-Q" type="_dXsJEItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXswJItlEe-3nrFY8n5C-Q" name="ReliabilityTable" visibility="package" method="_dt9UFotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXswJ4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXswKItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXswJYtlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXswJotlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXswKYtlEe-3nrFY8n5C-Q" type="_dXsJEItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXtXMItlEe-3nrFY8n5C-Q" name="ReliabilityVisualization">
              <ownedComment xmi:id="_1AxzQ5V2Ee-EOddEwqrIsA">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dqtLtYtlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtR-kItlEe-3nrFY8n5C-Q" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtR-kYtlEe-3nrFY8n5C-Q" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtR-kotlEe-3nrFY8n5C-Q" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtR-k4tlEe-3nrFY8n5C-Q" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtR-lItlEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_dYWQYItlEe-3nrFY8n5C-Q" association="_du2r4YtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtR-lotlEe-3nrFY8n5C-Q" name="ra" visibility="private" type="_dXps0YtlEe-3nrFY8n5C-Q" association="_du2r5ItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt9UGotlEe-3nrFY8n5C-Q" name="ReliabilityVisualization" specification="_dqtLsItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt9UG4tlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt9UHItlEe-3nrFY8n5C-Q" type="_dXtXMItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dqtLsItlEe-3nrFY8n5C-Q" name="ReliabilityVisualization" visibility="package" method="_dt9UGotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqtLsotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqtLs4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqtLsYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqtLtItlEe-3nrFY8n5C-Q" type="_dXtXMItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXt-QItlEe-3nrFY8n5C-Q" name="ReportVisualization">
              <generalization xmi:id="_dqtyyotlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtR-mItlEe-3nrFY8n5C-Q" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtSloItlEe-3nrFY8n5C-Q" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtSloYtlEe-3nrFY8n5C-Q" name="content" visibility="private" type="_dWoZIYtlEe-3nrFY8n5C-Q" association="_du3S8YtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtSlo4tlEe-3nrFY8n5C-Q" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97EItlEe-3nrFY8n5C-Q" name="ReportVisualization" specification="_dqtywItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97EYtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt97EotlEe-3nrFY8n5C-Q" name="warp" type="_dX8nwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt97E4tlEe-3nrFY8n5C-Q" name="content" type="_dWoZIYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt97FItlEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt97FYtlEe-3nrFY8n5C-Q" type="_dXt-QItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97FotlEe-3nrFY8n5C-Q" name="visualization" specification="_dXulUItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97F4tlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97GItlEe-3nrFY8n5C-Q" name="createReport" specification="_dXvMYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97GYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXulUItlEe-3nrFY8n5C-Q" name="visualization" method="_dt97FotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqtyyItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXvMYItlEe-3nrFY8n5C-Q" name="createReport" visibility="private" method="_dt97GItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqtyyYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqtywItlEe-3nrFY8n5C-Q" name="ReportVisualization" visibility="package" method="_dt97EItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqtyxYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqtyxotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqtywYtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqtywotlEe-3nrFY8n5C-Q" name="warp" type="_dX8nwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqtyw4tlEe-3nrFY8n5C-Q" name="content" type="_dWoZIYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqtyxItlEe-3nrFY8n5C-Q" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqtyx4tlEe-3nrFY8n5C-Q" type="_dXt-QItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXvzcItlEe-3nrFY8n5C-Q" name="Row">
              <generalization xmi:id="_dsgihotlEe-3nrFY8n5C-Q" general="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtSlpYtlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtSlpotlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97GotlEe-3nrFY8n5C-Q" name="Row" specification="_dXwagYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97G4tlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97HItlEe-3nrFY8n5C-Q" name="Row" specification="_dsf7cYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97HYtlEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt97HotlEe-3nrFY8n5C-Q" name="element" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt97H4tlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97IItlEe-3nrFY8n5C-Q" name="Row" specification="_dsgigItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97IYtlEe-3nrFY8n5C-Q" name="rowArray" type="_dsLLUItlEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dt97IotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt97I4tlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97JItlEe-3nrFY8n5C-Q" name="Row" specification="_dXxBkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97JYtlEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt97JotlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dXwagYtlEe-3nrFY8n5C-Q" name="Row" method="_dt97GotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXwagotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXwag4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXwahItlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dXxBkItlEe-3nrFY8n5C-Q" name="Row" visibility="package" method="_dt97JItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dXxBkotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dXxBk4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dXxBkYtlEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dXxBlItlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsf7cYtlEe-3nrFY8n5C-Q" name="Row" visibility="package" method="_dt97HItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsf7dItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsf7dYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dsf7cotlEe-3nrFY8n5C-Q" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsf7c4tlEe-3nrFY8n5C-Q" name="element" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsf7dotlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsgigItlEe-3nrFY8n5C-Q" name="Row" visibility="package" method="_dt97IItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsgigotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsgig4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dsgigYtlEe-3nrFY8n5C-Q" name="rowArray" type="_dsLLUItlEe-3nrFY8n5C-Q">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dsgihYtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsgihItlEe-3nrFY8n5C-Q" type="_dXvzcItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXxooItlEe-3nrFY8n5C-Q" name="SchedulableObjectQueue">
              <generalization xmi:id="_dXyPsItlEe-3nrFY8n5C-Q" general="_dXpFwItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtTMsItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtTMsYtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97J4tlEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" specification="_dshJkYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97KItlEe-3nrFY8n5C-Q" name="comparitor" type="_dqCdVYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt97KYtlEe-3nrFY8n5C-Q" type="_dXxooItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt97KotlEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" specification="_dshwoYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt97K4tlEe-3nrFY8n5C-Q" name="comparitor" type="_dqCdVYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt97LItlEe-3nrFY8n5C-Q" name="schedulableObjects" type="_dqd7IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt97LYtlEe-3nrFY8n5C-Q" type="_dXxooItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dshJkYtlEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" visibility="package" method="_dt97J4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dshJk4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dshJlItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dshJkotlEe-3nrFY8n5C-Q" name="comparitor" type="_dqCdVYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dshJlYtlEe-3nrFY8n5C-Q" type="_dXxooItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dshwoYtlEe-3nrFY8n5C-Q" name="SchedulableObjectQueue" visibility="package" method="_dt97KotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dshwpItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dshwpYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dshwootlEe-3nrFY8n5C-Q" name="comparitor" type="_dqCdVYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dshwo4tlEe-3nrFY8n5C-Q" name="schedulableObjects" type="_dqd7IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dshwpotlEe-3nrFY8n5C-Q" type="_dXxooItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dXy2wYtlEe-3nrFY8n5C-Q" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_1AyaUpV2Ee-EOddEwqrIsA">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtTMsotlEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtTMs4tlEe-3nrFY8n5C-Q" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtTMtItlEe-3nrFY8n5C-Q" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtTMtotlEe-3nrFY8n5C-Q" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtTzwItlEe-3nrFY8n5C-Q" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtTzwYtlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtTzw4tlEe-3nrFY8n5C-Q" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtTzxYtlEe-3nrFY8n5C-Q" name="schedule" visibility="protected" type="_dX49YItlEe-3nrFY8n5C-Q" association="_du3S9ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtTzx4tlEe-3nrFY8n5C-Q" name="poset" visibility="protected" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_du36AYtlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iIItlEe-3nrFY8n5C-Q" name="Schedule" specification="_dqvA4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt-iIYtlEe-3nrFY8n5C-Q" name="poset" type="_dXO2EItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt-iIotlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt-iI4tlEe-3nrFY8n5C-Q" type="_dXy2wYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iLotlEe-3nrFY8n5C-Q" name="getSchedule" specification="_dX0r-ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt-iL4tlEe-3nrFY8n5C-Q" type="_dX49YItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iMItlEe-3nrFY8n5C-Q" name="buildSchedule" specification="_dX1TAItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iMYtlEe-3nrFY8n5C-Q" name="toProgram" specification="_dX1TAYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt-iMotlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iM4tlEe-3nrFY8n5C-Q" name="replaceNullWithSleep" specification="_dqvn9YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt-iNItlEe-3nrFY8n5C-Q" name="program" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iNYtlEe-3nrFY8n5C-Q" name="fakeSchedulingToTestRest" specification="_dqvn94tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt-iNotlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iN4tlEe-3nrFY8n5C-Q" name="getChannelAndSetStartTime" specification="_dqvn-YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt-iOItlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt-iOYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JMItlEe-3nrFY8n5C-Q" name="findChannelAndTime" specification="_dqwPAotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JMYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JMotlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JM4tlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JNItlEe-3nrFY8n5C-Q" name="continueSearch" specification="_dqwPBotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JNYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JNotlEe-3nrFY8n5C-Q" name="activation" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JN4tlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JOItlEe-3nrFY8n5C-Q" name="noOtherChannelConflicts" specification="_dqwPCotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JOYtlEe-3nrFY8n5C-Q" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JOotlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JO4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JPItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JPYtlEe-3nrFY8n5C-Q" name="conflictsExist" specification="_dqw2E4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JPotlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JP4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JQItlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JQYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JQotlEe-3nrFY8n5C-Q" name="freeOfCoordinatorConflicts" specification="_dqw2GItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JQ4tlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JRItlEe-3nrFY8n5C-Q" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JRYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JRotlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JR4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JSItlEe-3nrFY8n5C-Q" name="isAvailable" specification="_dqxdIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JSYtlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JSotlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JS4tlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JTItlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JTYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JTotlEe-3nrFY8n5C-Q" name="isAvailable" specification="_dqxdJotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JT4tlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JUItlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JUYtlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JUotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JU4tlEe-3nrFY8n5C-Q" name="timeRemaining" specification="_dX16EItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JVItlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JVYtlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JVotlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_JV4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_JWItlEe-3nrFY8n5C-Q" name="canCombineEntriesInPlace" specification="_dqxdK4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_JWYtlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JWotlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_JW4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wQItlEe-3nrFY8n5C-Q" name="combinedEntriesInPlace" specification="_dqyEMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_wQYtlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_wQotlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_wQ4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_wRItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wRYtlEe-3nrFY8n5C-Q" name="addToSchedule" specification="_dqyENYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_wRotlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dt_wR4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wSItlEe-3nrFY8n5C-Q" name="reportNotSchedulable" specification="_dqyEOItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_wSYtlEe-3nrFY8n5C-Q" name="object" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wSotlEe-3nrFY8n5C-Q" name="printVerbose" specification="_dX2hIItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wS4tlEe-3nrFY8n5C-Q" name="print" specification="_dX2hIYtlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dX0r-ItlEe-3nrFY8n5C-Q" name="getSchedule" method="_dt-iLotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaVZV2Ee-EOddEwqrIsA">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqvn84tlEe-3nrFY8n5C-Q" type="_dX49YItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dX1TAItlEe-3nrFY8n5C-Q" name="buildSchedule" visibility="private" method="_dt-iMItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dX1TAYtlEe-3nrFY8n5C-Q" name="toProgram" method="_dt-iMYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqvn9ItlEe-3nrFY8n5C-Q" type="_dXi_IItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dX16EItlEe-3nrFY8n5C-Q" name="timeRemaining" visibility="protected" method="_dt_JU4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaW5V2Ee-EOddEwqrIsA">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_dX16EYtlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX16EotlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX16E4tlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX16FItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dX2hIItlEe-3nrFY8n5C-Q" name="printVerbose" method="_dt_wSotlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dX2hIYtlEe-3nrFY8n5C-Q" name="print" method="_dt_wS4tlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dqvA4ItlEe-3nrFY8n5C-Q" name="Schedule" visibility="package" method="_dt-iIItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqvn8ItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqvn8YtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqvA4YtlEe-3nrFY8n5C-Q" name="poset" type="_dXO2EItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqvA4otlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqvn8otlEe-3nrFY8n5C-Q" type="_dXy2wYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqvn9YtlEe-3nrFY8n5C-Q" name="replaceNullWithSleep" visibility="private" method="_dt-iM4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaVpV2Ee-EOddEwqrIsA">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqvn9otlEe-3nrFY8n5C-Q" name="program" type="_dXi_IItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqvn94tlEe-3nrFY8n5C-Q" name="fakeSchedulingToTestRest" visibility="private" method="_dt-iNYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqvn-ItlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqvn-YtlEe-3nrFY8n5C-Q" name="getChannelAndSetStartTime" visibility="protected" method="_dt-iN4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaV5V2Ee-EOddEwqrIsA">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqwPAItlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqwPAYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqwPAotlEe-3nrFY8n5C-Q" name="findChannelAndTime" visibility="protected" method="_dt_JMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqwPA4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqwPBItlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqwPBYtlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqwPBotlEe-3nrFY8n5C-Q" name="continueSearch" visibility="protected" method="_dt_JNItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaWJV2Ee-EOddEwqrIsA">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqwPB4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqwPCItlEe-3nrFY8n5C-Q" name="activation" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqwPCYtlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqwPCotlEe-3nrFY8n5C-Q" name="noOtherChannelConflicts" visibility="protected" method="_dt_JOItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqwPC4tlEe-3nrFY8n5C-Q" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqw2EItlEe-3nrFY8n5C-Q" name="schedulableObject" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqw2EYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqw2EotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqw2E4tlEe-3nrFY8n5C-Q" name="conflictsExist" visibility="protected" method="_dt_JPYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqw2FItlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqw2FYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqw2FotlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqw2F4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqw2GItlEe-3nrFY8n5C-Q" name="freeOfCoordinatorConflicts" visibility="protected" method="_dt_JQotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqw2GYtlEe-3nrFY8n5C-Q" name="obj" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqw2GotlEe-3nrFY8n5C-Q" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqw2G4tlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqw2HItlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqw2HYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqxdIItlEe-3nrFY8n5C-Q" name="isAvailable" visibility="protected" method="_dt_JSItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaWZV2Ee-EOddEwqrIsA">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqxdIYtlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqxdIotlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqxdI4tlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqxdJItlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqxdJYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqxdJotlEe-3nrFY8n5C-Q" name="isAvailable" visibility="protected" method="_dt_JTotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaWpV2Ee-EOddEwqrIsA">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_dqxdJ4tlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqxdKItlEe-3nrFY8n5C-Q" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqxdKYtlEe-3nrFY8n5C-Q" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqxdKotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqxdK4tlEe-3nrFY8n5C-Q" name="canCombineEntriesInPlace" visibility="private" method="_dt_JWItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqxdLItlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqxdLYtlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqxdLotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqyEMItlEe-3nrFY8n5C-Q" name="combinedEntriesInPlace" visibility="private" method="_dt_wQItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqyEMYtlEe-3nrFY8n5C-Q" name="a1" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqyEMotlEe-3nrFY8n5C-Q" name="a2" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqyEM4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dqyENItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqyENYtlEe-3nrFY8n5C-Q" name="addToSchedule" visibility="protected" method="_dt_wRYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqyENotlEe-3nrFY8n5C-Q" name="next" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqyEN4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dqyEOItlEe-3nrFY8n5C-Q" name="reportNotSchedulable" visibility="private" method="_dt_wSItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dqyEOYtlEe-3nrFY8n5C-Q" name="object" type="_dWG0sItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dX0E4ItlEe-3nrFY8n5C-Q" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_dtUa0ItlEe-3nrFY8n5C-Q" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dtUa0otlEe-3nrFY8n5C-Q" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iJItlEe-3nrFY8n5C-Q" name="ScheduleLocation" specification="_dX0E4YtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dt-iJYtlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iJotlEe-3nrFY8n5C-Q" name="ScheduleLocation" specification="_dX0E5YtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dt-iJ4tlEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dt-iKItlEe-3nrFY8n5C-Q" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dt-iKYtlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iKotlEe-3nrFY8n5C-Q" name="getChannel" specification="_dX0r9ItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dt-iK4tlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt-iLItlEe-3nrFY8n5C-Q" name="getTime" specification="_dX0r9otlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dt-iLYtlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dX0E4YtlEe-3nrFY8n5C-Q" name="ScheduleLocation" visibility="package" method="_dt-iJItlEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_dX0E4otlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dX0E44tlEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dX0E5ItlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dX0E5YtlEe-3nrFY8n5C-Q" name="ScheduleLocation" visibility="package" method="_dt-iJotlEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_dX0r8YtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dX0r8otlEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dX0E5otlEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dX0r8ItlEe-3nrFY8n5C-Q" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_dX0r84tlEe-3nrFY8n5C-Q" type="_dX0E4ItlEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dX0r9ItlEe-3nrFY8n5C-Q" name="getChannel" visibility="protected" method="_dt-iKotlEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_1AyaU5V2Ee-EOddEwqrIsA">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dX0r9YtlEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dX0r9otlEe-3nrFY8n5C-Q" name="getTime" visibility="protected" method="_dt-iLItlEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_1AyaVJV2Ee-EOddEwqrIsA">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dX0r94tlEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dX49YItlEe-3nrFY8n5C-Q" name="ScheduleTable">
              <generalization xmi:id="_dqzSUItlEe-3nrFY8n5C-Q" general="_dX_EAItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtVB4ItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtVB4YtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wTItlEe-3nrFY8n5C-Q" name="ScheduleTable" specification="_dX5kcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_wTYtlEe-3nrFY8n5C-Q" type="_dX49YItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wTotlEe-3nrFY8n5C-Q" name="ScheduleTable" specification="_dX5kdItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_wT4tlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_wUItlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_wUYtlEe-3nrFY8n5C-Q" type="_dX49YItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dX5kcItlEe-3nrFY8n5C-Q" name="ScheduleTable" visibility="package" method="_dt_wTItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dX5kcYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dX5kcotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dX5kc4tlEe-3nrFY8n5C-Q" type="_dX49YItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dX5kdItlEe-3nrFY8n5C-Q" name="ScheduleTable" visibility="package" method="_dt_wTotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dX5kd4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dX5keItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dX5kdYtlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX5kdotlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX5keYtlEe-3nrFY8n5C-Q" type="_dX49YItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dX6LgItlEe-3nrFY8n5C-Q" name="ScheduleTime">
              <ownedAttribute xmi:id="_dtVB4otlEe-3nrFY8n5C-Q" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtVB44tlEe-3nrFY8n5C-Q" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wUotlEe-3nrFY8n5C-Q" name="ScheduleTime" specification="_dX6LgYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_wU4tlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_wVItlEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dt_wVYtlEe-3nrFY8n5C-Q" type="_dX6LgItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dX6LgYtlEe-3nrFY8n5C-Q" name="ScheduleTime" visibility="package" method="_dt_wUotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dX6ykItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dX6ykYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dX6LgotlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX6Lg4tlEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dX6ykotlEe-3nrFY8n5C-Q" type="_dX6LgItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dX6yk4tlEe-3nrFY8n5C-Q" name="SimulatorInput">
              <ownedComment xmi:id="_1AxzRpV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dX7ZoItlEe-3nrFY8n5C-Q" name="SortedPeriodQueue">
              <generalization xmi:id="_dX8As4tlEe-3nrFY8n5C-Q" general="_dXpFwItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtVB5ItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtVB5YtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dt_wVotlEe-3nrFY8n5C-Q" name="SortedPeriodQueue" specification="_dX7ZootlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dt_wV4tlEe-3nrFY8n5C-Q" type="_dX7ZoItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duAXUItlEe-3nrFY8n5C-Q" name="SortedPeriodQueue" specification="_dqz5YItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duAXUYtlEe-3nrFY8n5C-Q" name="schedulableObjects" type="_dqd7IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duAXUotlEe-3nrFY8n5C-Q" type="_dX7ZoItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dX7ZootlEe-3nrFY8n5C-Q" name="SortedPeriodQueue" visibility="package" method="_dt_wVotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dX8AsItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dX8AsYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dX8AsotlEe-3nrFY8n5C-Q" type="_dX7ZoItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dqz5YItlEe-3nrFY8n5C-Q" name="SortedPeriodQueue" visibility="package" method="_duAXUItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dqz5YotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dqz5Y4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dqz5YYtlEe-3nrFY8n5C-Q" name="schedulableObjects" type="_dqd7IItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dqz5ZItlEe-3nrFY8n5C-Q" type="_dX7ZoItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dX8nwItlEe-3nrFY8n5C-Q" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_dq0gcYtlEe-3nrFY8n5C-Q" general="_dXqT4otlEe-3nrFY8n5C-Q"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dX9O0ItlEe-3nrFY8n5C-Q" name="ScheduleChoices">
                <ownedLiteral xmi:id="_dX9O0otlEe-3nrFY8n5C-Q" name="PRIORITY"/>
                <ownedLiteral xmi:id="_dX9O04tlEe-3nrFY8n5C-Q" name="RM"/>
                <ownedLiteral xmi:id="_dX9O1ItlEe-3nrFY8n5C-Q" name="DM"/>
                <ownedLiteral xmi:id="_dX9O1YtlEe-3nrFY8n5C-Q" name="RTHART"/>
                <ownedLiteral xmi:id="_dX9O1otlEe-3nrFY8n5C-Q" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_dX9O14tlEe-3nrFY8n5C-Q" name="POSET_RM"/>
                <ownedLiteral xmi:id="_dX9O2ItlEe-3nrFY8n5C-Q" name="POSET_DM"/>
                <ownedLiteral xmi:id="_dX9O2YtlEe-3nrFY8n5C-Q" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_dX914ItlEe-3nrFY8n5C-Q" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_dX914YtlEe-3nrFY8n5C-Q" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_dX914otlEe-3nrFY8n5C-Q" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_dX9144tlEe-3nrFY8n5C-Q" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_dX915ItlEe-3nrFY8n5C-Q" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_dX915YtlEe-3nrFY8n5C-Q" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dX915otlEe-3nrFY8n5C-Q" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dX-c8ItlEe-3nrFY8n5C-Q" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dX-c8YtlEe-3nrFY8n5C-Q" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dX-c8otlEe-3nrFY8n5C-Q" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dX-c84tlEe-3nrFY8n5C-Q" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dX-c9ItlEe-3nrFY8n5C-Q" name="SystemFactory">
              <ownedComment xmi:id="_1AxzR5V2Ee-EOddEwqrIsA">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_1AqegJV2Ee-EOddEwqrIsA" name="create" specification="_1AYxsJV2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1AqegZV2Ee-EOddEwqrIsA" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AqegpV2Ee-EOddEwqrIsA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_1Aqeg5V2Ee-EOddEwqrIsA" name="choice" type="_dq0gcotlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AqehJV2Ee-EOddEwqrIsA" type="_dYWQYItlEe-3nrFY8n5C-Q" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_1AYxsJV2Ee-EOddEwqrIsA" name="create" isStatic="true" method="_1AqegJV2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1AYxsZV2Ee-EOddEwqrIsA" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AYxspV2Ee-EOddEwqrIsA" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_1AYxs5V2Ee-EOddEwqrIsA" name="choice" type="_dq0gcotlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AYxtJV2Ee-EOddEwqrIsA" type="_dYWQYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dX_EAItlEe-3nrFY8n5C-Q" name="Table">
              <generalization xmi:id="_dsjl1YtlEe-3nrFY8n5C-Q" general="_dp2QEYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtVo8ItlEe-3nrFY8n5C-Q" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtVo8YtlEe-3nrFY8n5C-Q" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duAXWItlEe-3nrFY8n5C-Q" name="Table" specification="_dYASIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duAXWYtlEe-3nrFY8n5C-Q" type="_dX_EAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duAXWotlEe-3nrFY8n5C-Q" name="Table" specification="_dYASJItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duAXW4tlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duAXXItlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duAXXYtlEe-3nrFY8n5C-Q" type="_dX_EAItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duAXXotlEe-3nrFY8n5C-Q" name="getNumRows" specification="_dYASKotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duAXX4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duAXYItlEe-3nrFY8n5C-Q" name="getNumColumns" specification="_dYASLItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duAXYYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duAXYotlEe-3nrFY8n5C-Q" name="set" specification="_dsjl0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duAXY4tlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duAXZItlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duAXZYtlEe-3nrFY8n5C-Q" name="element" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duAXZotlEe-3nrFY8n5C-Q" name="get" specification="_dYA5MItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duAXZ4tlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duAXaItlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duAXaYtlEe-3nrFY8n5C-Q" type="_dsLLUItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYASIItlEe-3nrFY8n5C-Q" name="Table" method="_duAXWItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dYASIYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dYASIotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dYASI4tlEe-3nrFY8n5C-Q" type="_dX_EAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYASJItlEe-3nrFY8n5C-Q" name="Table" method="_duAXWotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dYASJ4tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dYASKItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dYASJYtlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYASJotlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYASKYtlEe-3nrFY8n5C-Q" type="_dX_EAItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYASKotlEe-3nrFY8n5C-Q" name="getNumRows" method="_duAXXotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYASK4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYASLItlEe-3nrFY8n5C-Q" name="getNumColumns" method="_duAXYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYASLYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYA5MItlEe-3nrFY8n5C-Q" name="get" method="_duAXZotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYA5MYtlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYA5MotlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsjl1ItlEe-3nrFY8n5C-Q" type="_dsLLUItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsjl0ItlEe-3nrFY8n5C-Q" name="set" method="_duAXYotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsjl0YtlEe-3nrFY8n5C-Q" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsjl0otlEe-3nrFY8n5C-Q" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsjl04tlEe-3nrFY8n5C-Q" name="element" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dYBgQItlEe-3nrFY8n5C-Q" name="Visualization">
              <ownedComment xmi:id="_1AxzSJV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dYBgQYtlEe-3nrFY8n5C-Q" name="SystemChoices">
                <ownedLiteral xmi:id="_dYCHUYtlEe-3nrFY8n5C-Q" name="SOURCE"/>
                <ownedLiteral xmi:id="_dYCHUotlEe-3nrFY8n5C-Q" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_dYCHU4tlEe-3nrFY8n5C-Q" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_dYCHVItlEe-3nrFY8n5C-Q" name="LATENCY"/>
                <ownedLiteral xmi:id="_dYCHVYtlEe-3nrFY8n5C-Q" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_dYCHVotlEe-3nrFY8n5C-Q" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_dYCHV4tlEe-3nrFY8n5C-Q" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_dYCuYItlEe-3nrFY8n5C-Q" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_dYCuYotlEe-3nrFY8n5C-Q" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_dYCuY4tlEe-3nrFY8n5C-Q" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_dYCuZItlEe-3nrFY8n5C-Q" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_dYCuZYtlEe-3nrFY8n5C-Q" name="toDisplay"/>
              <ownedOperation xmi:id="_dYCuZotlEe-3nrFY8n5C-Q" name="toFile"/>
              <ownedOperation xmi:id="_dYCuZ4tlEe-3nrFY8n5C-Q" name="toString">
                <ownedParameter xmi:id="_dYDVcItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYDVcYtlEe-3nrFY8n5C-Q" name="VisualizationFactory">
              <ownedComment xmi:id="_1AxzSZV2Ee-EOddEwqrIsA">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_1AqehZV2Ee-EOddEwqrIsA" name="createVisualization" specification="_1AZYwJV2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1AqehpV2Ee-EOddEwqrIsA" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1Aqeh5V2Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_1AqeiJV2Ee-EOddEwqrIsA" name="choice" type="_dq1ukItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AqeiZV2Ee-EOddEwqrIsA" type="_dYBgQItlEe-3nrFY8n5C-Q" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_1AqeipV2Ee-EOddEwqrIsA" name="createVisualization" specification="_1AZYxZV2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1Aqei5V2Ee-EOddEwqrIsA" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AqejJV2Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_1AqejZV2Ee-EOddEwqrIsA" name="choice" type="_dq2VoYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AqejpV2Ee-EOddEwqrIsA" type="_dYBgQItlEe-3nrFY8n5C-Q" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_1AZYwJV2Ee-EOddEwqrIsA" name="createVisualization" isStatic="true" method="_1AqehZV2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1AZYwZV2Ee-EOddEwqrIsA" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AZYwpV2Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_1AZYw5V2Ee-EOddEwqrIsA" name="choice" type="_dq1ukItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AZYxJV2Ee-EOddEwqrIsA" type="_dYBgQItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_1AZYxZV2Ee-EOddEwqrIsA" name="createVisualization" isStatic="true" method="_1AqeipV2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1AZYxpV2Ee-EOddEwqrIsA" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AZYx5V2Ee-EOddEwqrIsA" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_1AZYyJV2Ee-EOddEwqrIsA" name="choice" type="_dq2VoYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1AZYyZV2Ee-EOddEwqrIsA" type="_dYBgQItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYD8gItlEe-3nrFY8n5C-Q" name="VisualizationImplementation">
              <ownedComment xmi:id="_1AxzSpV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtVo8otlEe-3nrFY8n5C-Q" name="visualization" visibility="private" type="_dWoZIYtlEe-3nrFY8n5C-Q" association="_du36BItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtVo9ItlEe-3nrFY8n5C-Q" name="fileContent" visibility="private" type="_dWoZIYtlEe-3nrFY8n5C-Q" association="_du4hEYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtWQAItlEe-3nrFY8n5C-Q" name="window" visibility="private" type="_dW9wUItlEe-3nrFY8n5C-Q" association="_du4hFItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtWQAotlEe-3nrFY8n5C-Q" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtWQBItlEe-3nrFY8n5C-Q" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtWQBotlEe-3nrFY8n5C-Q" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtW3EYtlEe-3nrFY8n5C-Q" name="fm" visibility="private" type="_dWufwItlEe-3nrFY8n5C-Q" association="_du5IIYtlEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtW3EotlEe-3nrFY8n5C-Q" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtW3FItlEe-3nrFY8n5C-Q" name="warp" visibility="private" type="_dYWQYItlEe-3nrFY8n5C-Q" association="_du5vMItlEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtW3FYtlEe-3nrFY8n5C-Q" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtW3F4tlEe-3nrFY8n5C-Q" name="workLoad" visibility="private" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_du5vM4tlEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtXeIItlEe-3nrFY8n5C-Q" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtXeIotlEe-3nrFY8n5C-Q" name="visualizationObject" visibility="private" type="_dYHm4ItlEe-3nrFY8n5C-Q" association="_du6WQItlEe-3nrFY8n5C-Q"/>
              <interfaceRealization xmi:id="_dq3jxYtlEe-3nrFY8n5C-Q" client="_dYD8gItlEe-3nrFY8n5C-Q" supplier="_dYBgQItlEe-3nrFY8n5C-Q" contract="_dYBgQItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-ZYtlEe-3nrFY8n5C-Q" name="VisualizationImplementation" specification="_dskz8otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duA-ZotlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duA-Z4tlEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duA-aItlEe-3nrFY8n5C-Q" name="choice" type="_dskz8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duA-aYtlEe-3nrFY8n5C-Q" type="_dYD8gItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-aotlEe-3nrFY8n5C-Q" name="VisualizationImplementation" specification="_dslbAotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duA-a4tlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duA-bItlEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duA-bYtlEe-3nrFY8n5C-Q" name="choice" type="_dslbAItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duA-botlEe-3nrFY8n5C-Q" type="_dYD8gItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-b4tlEe-3nrFY8n5C-Q" name="toDisplay" specification="_dYFKoItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-cItlEe-3nrFY8n5C-Q" name="toFile" specification="_dYFKpItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-cYtlEe-3nrFY8n5C-Q" name="toString" specification="_dYFxsotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duA-cotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-c4tlEe-3nrFY8n5C-Q" name="createVisualization" specification="_dsmCEItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duA-dItlEe-3nrFY8n5C-Q" name="choice" type="_dskz8ItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-dYtlEe-3nrFY8n5C-Q" name="createVisualization" specification="_dsmCEotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duA-dotlEe-3nrFY8n5C-Q" name="choice" type="_dslbAItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-d4tlEe-3nrFY8n5C-Q" name="createVisualization" specification="_dsmCFItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duA-eItlEe-3nrFY8n5C-Q" name="obj" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duA-eYtlEe-3nrFY8n5C-Q" name="createFileNameTemplate" specification="_dYFxt4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duA-eotlEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duA-e4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYFKoItlEe-3nrFY8n5C-Q" name="toDisplay" method="_duA-b4tlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dYFKpItlEe-3nrFY8n5C-Q" name="toFile" method="_duA-cItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dYFxsotlEe-3nrFY8n5C-Q" name="toString" method="_duA-cYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYFxs4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYFxt4tlEe-3nrFY8n5C-Q" name="createFileNameTemplate" visibility="private" method="_duA-eYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYFxuItlEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYFxuYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dskz8otlEe-3nrFY8n5C-Q" name="VisualizationImplementation" method="_duA-ZYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dskz9otlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dskz94tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dskz84tlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dskz9ItlEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dskz9YtlEe-3nrFY8n5C-Q" name="choice" type="_dskz8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dskz-ItlEe-3nrFY8n5C-Q" type="_dYD8gItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dslbAotlEe-3nrFY8n5C-Q" name="VisualizationImplementation" method="_duA-aotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dslbBotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dslbB4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dslbA4tlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dslbBItlEe-3nrFY8n5C-Q" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dslbBYtlEe-3nrFY8n5C-Q" name="choice" type="_dslbAItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dslbCItlEe-3nrFY8n5C-Q" type="_dYD8gItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsmCEItlEe-3nrFY8n5C-Q" name="createVisualization" visibility="private" method="_duA-c4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsmCEYtlEe-3nrFY8n5C-Q" name="choice" type="_dskz8ItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsmCEotlEe-3nrFY8n5C-Q" name="createVisualization" visibility="private" method="_duA-dYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsmCE4tlEe-3nrFY8n5C-Q" name="choice" type="_dslbAItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsmCFItlEe-3nrFY8n5C-Q" name="createVisualization" visibility="private" method="_duA-d4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsmCFYtlEe-3nrFY8n5C-Q" name="obj" type="_dsLLUItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYHm4ItlEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_1AxzS5V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtXeJItlEe-3nrFY8n5C-Q" name="fm" visibility="private" type="_dWufwItlEe-3nrFY8n5C-Q" association="_du6WQ4tlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtYFMYtlEe-3nrFY8n5C-Q" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtYFM4tlEe-3nrFY8n5C-Q" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtYFNYtlEe-3nrFY8n5C-Q" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtYFNotlEe-3nrFY8n5C-Q" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtYFN4tlEe-3nrFY8n5C-Q" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dtYFOItlEe-3nrFY8n5C-Q" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBlcItlEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_dq5Y8ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBlcYtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBlcotlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBlc4tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBldItlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBldYtlEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_dq6AAItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBldotlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBld4tlEe-3nrFY8n5C-Q" name="warp" type="_dX8nwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBleItlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBleYtlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBleotlEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_dq6AB4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBle4tlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBlfItlEe-3nrFY8n5C-Q" name="warp" type="_dX8nwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBlfYtlEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBlfotlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBlf4tlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBlgItlEe-3nrFY8n5C-Q" name="VisualizationObject" specification="_dq6nEItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBlgYtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBlgotlEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBlg4tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBlhItlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBlhYtlEe-3nrFY8n5C-Q" name="nameExtension" specification="_dsnQMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBlhotlEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBlh4tlEe-3nrFY8n5C-Q" name="m" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duBliItlEe-3nrFY8n5C-Q" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBliYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBliotlEe-3nrFY8n5C-Q" name="nameExtension" specification="_dYI1AItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBli4tlEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBljItlEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBljYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBljotlEe-3nrFY8n5C-Q" name="getFileManager" specification="_dYJcEItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBlj4tlEe-3nrFY8n5C-Q" type="_dWufwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBlkItlEe-3nrFY8n5C-Q" name="visualization" specification="_dYJcEYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBlkYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duBlkotlEe-3nrFY8n5C-Q" name="createFile" specification="_dYJcEotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duBlk4tlEe-3nrFY8n5C-Q" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duBllItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMgItlEe-3nrFY8n5C-Q" name="fileVisualization" specification="_dYJcFYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMgYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMgotlEe-3nrFY8n5C-Q" name="displayVisualization" specification="_dYJcFotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMg4tlEe-3nrFY8n5C-Q" type="_dW9wUItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMhItlEe-3nrFY8n5C-Q" name="createHeader" specification="_dYKDIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMhYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMhotlEe-3nrFY8n5C-Q" name="createFooter" specification="_dYKDIYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMh4tlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMiItlEe-3nrFY8n5C-Q" name="createColumnHeader" specification="_dYKDIotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMiYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duCMiotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMi4tlEe-3nrFY8n5C-Q" name="createVisualizationData" specification="_dYKDJotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMjItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duCMjYtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYI1AItlEe-3nrFY8n5C-Q" name="nameExtension" visibility="private" method="_duBliotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYI1AYtlEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYI1AotlEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYI1A4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYJcEItlEe-3nrFY8n5C-Q" name="getFileManager" method="_duBljotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzTJV2Ee-EOddEwqrIsA">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_dq6nF4tlEe-3nrFY8n5C-Q" type="_dWufwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYJcEYtlEe-3nrFY8n5C-Q" name="visualization" method="_duBlkItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dq6nGItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYJcEotlEe-3nrFY8n5C-Q" name="createFile" method="_duBlkotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYJcE4tlEe-3nrFY8n5C-Q" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYJcFItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYJcFYtlEe-3nrFY8n5C-Q" name="fileVisualization" method="_duCMgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dq6nGYtlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYJcFotlEe-3nrFY8n5C-Q" name="displayVisualization" method="_duCMgotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dq6nGotlEe-3nrFY8n5C-Q" type="_dW9wUItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYKDIItlEe-3nrFY8n5C-Q" name="createHeader" visibility="protected" method="_duCMhItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dq6nG4tlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYKDIYtlEe-3nrFY8n5C-Q" name="createFooter" visibility="protected" method="_duCMhotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dq6nHItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYKDIotlEe-3nrFY8n5C-Q" name="createColumnHeader" visibility="protected" method="_duCMiItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYKDI4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYKDJItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYKDJotlEe-3nrFY8n5C-Q" name="createVisualizationData" visibility="protected" method="_duCMi4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYKDJ4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYKDKItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dq5Y8ItlEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_duBlcItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dq5Y9ItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dq5Y9YtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dq5Y8YtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dq5Y8otlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dq5Y84tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq5Y9otlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dq6AAItlEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_duBldYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dq6ABItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dq6ABYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dq6AAYtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dq6AAotlEe-3nrFY8n5C-Q" name="warp" type="_dX8nwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dq6AA4tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq6ABotlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dq6AB4tlEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_duBleotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dq6ADItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dq6ADYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dq6ACItlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dq6ACYtlEe-3nrFY8n5C-Q" name="warp" type="_dX8nwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dq6ACotlEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq6AC4tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq6ADotlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dq6nEItlEe-3nrFY8n5C-Q" name="VisualizationObject" visibility="package" method="_duBlgItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dq6nFItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dq6nFYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dq6nEYtlEe-3nrFY8n5C-Q" name="fm" type="_dWufwItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dq6nEotlEe-3nrFY8n5C-Q" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq6nE4tlEe-3nrFY8n5C-Q" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dq6nFotlEe-3nrFY8n5C-Q" type="_dYHm4ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsnQMItlEe-3nrFY8n5C-Q" name="nameExtension" visibility="private" method="_duBlhYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsnQMYtlEe-3nrFY8n5C-Q" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsnQMotlEe-3nrFY8n5C-Q" name="m" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsnQM4tlEe-3nrFY8n5C-Q" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsnQNItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYL4UItlEe-3nrFY8n5C-Q" name="Warp">
              <ownedComment xmi:id="_1AxzTZV2Ee-EOddEwqrIsA">
                <body>The Warp class sets default values of constants and also sets the warp parameters for the&#xD;
given input. It creates and visualizes any requested output files and runs verification&#xD;
checks to make sure deadlines and reliability targets are met, and that there are no &#xD;
channel conflicts. Runs additional tests to make sure everything will run smoothly. This&#xD;
class also prints out all warp parameters along with Boolean expressions for if any flags&#xD;
are requested. &#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtYsQYtlEe-3nrFY8n5C-Q" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtYsQotlEe-3nrFY8n5C-Q" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtYsQ4tlEe-3nrFY8n5C-Q" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_dscRFItlEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtYsRItlEe-3nrFY8n5C-Q" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtYsRYtlEe-3nrFY8n5C-Q" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_dscRFItlEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtYsRotlEe-3nrFY8n5C-Q" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtZTUItlEe-3nrFY8n5C-Q" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtZTUYtlEe-3nrFY8n5C-Q" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtZTUotlEe-3nrFY8n5C-Q" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_dq0gcotlEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtZTU4tlEe-3nrFY8n5C-Q" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtZTVItlEe-3nrFY8n5C-Q" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtZTVYtlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtZTVotlEe-3nrFY8n5C-Q" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtZTWItlEe-3nrFY8n5C-Q" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtZ6YYtlEe-3nrFY8n5C-Q" name="minLQ" visibility="private" isStatic="true" type="_dscRFItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtZ6Y4tlEe-3nrFY8n5C-Q" name="e2e" visibility="private" isStatic="true" type="_dscRFItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtZ6ZYtlEe-3nrFY8n5C-Q" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtZ6Z4tlEe-3nrFY8n5C-Q" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtahcYtlEe-3nrFY8n5C-Q" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtahc4tlEe-3nrFY8n5C-Q" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtahdYtlEe-3nrFY8n5C-Q" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtahd4tlEe-3nrFY8n5C-Q" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtbIgYtlEe-3nrFY8n5C-Q" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtbIg4tlEe-3nrFY8n5C-Q" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtbIhYtlEe-3nrFY8n5C-Q" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtbvkItlEe-3nrFY8n5C-Q" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtbvkotlEe-3nrFY8n5C-Q" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtbvk4tlEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtbvlYtlEe-3nrFY8n5C-Q" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtbvl4tlEe-3nrFY8n5C-Q" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtcWoYtlEe-3nrFY8n5C-Q" name="schedulerSelected" visibility="private" isStatic="true" type="_dq0gcotlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMjotlEe-3nrFY8n5C-Q" name="main" specification="_dYNGcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMj4tlEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duCMkItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCMl4tlEe-3nrFY8n5C-Q" name="verifyPerformanceRequirements" specification="_dq9qZotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCMmItlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzkItlEe-3nrFY8n5C-Q" name="verifyReliabilities" specification="_dq-RcItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCzkYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzkotlEe-3nrFY8n5C-Q" name="verifyDeadlines" specification="_dq-RcotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCzk4tlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzlItlEe-3nrFY8n5C-Q" name="verifyNoChannelConflicts" specification="_dq-RdItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCzlYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzlotlEe-3nrFY8n5C-Q" name="setWarpParameters" specification="_dYNtgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duCzl4tlEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duCzmItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzmYtlEe-3nrFY8n5C-Q" name="printWarpParameters" specification="_dYNthItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_1ArFkJV2Ee-EOddEwqrIsA" name="visualize" specification="_0_5pgJV2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1ArFkZV2Ee-EOddEwqrIsA" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1ArFkpV2Ee-EOddEwqrIsA" name="choice" type="_dq2VoYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_1ArFk5V2Ee-EOddEwqrIsA" name="visualize" specification="_0_5pg5V2Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_1ArFlJV2Ee-EOddEwqrIsA" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_1ArFlZV2Ee-EOddEwqrIsA" name="choice" type="_dq1ukItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYNGcItlEe-3nrFY8n5C-Q" name="main" isStatic="true" method="_duCMjotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzTpV2Ee-EOddEwqrIsA">
                  <body>Main method sets warp parameters with given input arguments and prints out the parameters&#xD;
   * if in verbose mode. It creates and visualizes the new workload. If the all output files &#xD;
   * flag is requested, it visualizes all workLoad Program choices and creates and visualizes&#xD;
   * the Warp System with all warp System choices. If not all output files are requested, it&#xD;
   * still visualizes the ones asked for of warp workload, source program, and other requested&#xD;
   * output items.&#xD;
   * @param args Command-line arguments passed to the application.</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYNGcYtlEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYNGcotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYNtgItlEe-3nrFY8n5C-Q" name="setWarpParameters" visibility="private" isStatic="true" method="_duCzlotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzVZV2Ee-EOddEwqrIsA">
                  <body>Creates holder objects to store results and creates the parser to process and comprehend &#xD;
   * the input data. Also checks that all arguments are valid and sets values for parser. It &#xD;
   * checks which flags are present and stores this as a Boolean value. Additionally, checks &#xD;
   * if schedulerSelected value is null and cannot run is null. Then checks value of &#xD;
   * schedulerSelected to see what the value wants to do and runs method before it breaks.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYNtgYtlEe-3nrFY8n5C-Q" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYNtgotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYNthItlEe-3nrFY8n5C-Q" name="printWarpParameters" visibility="private" isStatic="true" method="_duCzmYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzVpV2Ee-EOddEwqrIsA">
                  <body>Prints out all system configuration parameters including the scheduler, channels,&#xD;
   * number of faults, minimum Link Quality, end-to-end reliability, and if any flags&#xD;
   * are requested. Prints out the input file if given and if there is not one, it &#xD;
   * alerts that one will be needed.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dq9qZotlEe-3nrFY8n5C-Q" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_duCMl4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzUZV2Ee-EOddEwqrIsA">
                  <body>Runs verification checks over if deadlines are met, if reliability targets&#xD;
   * are met, and if there are channel conflicts for the input WarpInterface warp.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_dq9qZ4tlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dq-RcItlEe-3nrFY8n5C-Q" name="verifyReliabilities" visibility="private" isStatic="true" method="_duCzkItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzUpV2Ee-EOddEwqrIsA">
                  <body>Checks that the reliability targets are met in input warp. If reliability&#xD;
   * is not met, prints an error statement. If verboseMode is True with the input, &#xD;
   * prints out statement that flows meet reliability in this instance.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_dq-RcYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dq-RcotlEe-3nrFY8n5C-Q" name="verifyDeadlines" visibility="private" isStatic="true" method="_duCzkotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzU5V2Ee-EOddEwqrIsA">
                  <body>Checks if the deadlines are met in input warp. If deadlines are not met, prints&#xD;
   * out an error message and visualizes a Deadline Report. If verboseMode is true for&#xD;
   * input, prints out a message telling the deadlines are all met.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_dq-Rc4tlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dq-RdItlEe-3nrFY8n5C-Q" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_duCzlItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AxzVJV2Ee-EOddEwqrIsA">
                  <body>Determines if there is a channel conflict in the WarpInterface warp given &#xD;
   * as input. Creates a Channel Analysis visualization if not already requested.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_dq-RdYtlEe-3nrFY8n5C-Q" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_0_5pgJV2Ee-EOddEwqrIsA" name="visualize" visibility="private" isStatic="true" method="_1ArFkJV2Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_1AxzT5V2Ee-EOddEwqrIsA">
                  <body>Creates a visualization instance of input WorkLoad workLoad and WorkLoadChoices&#xD;
   * choice. If the visualization is null and if verboseMode holds True, prints out&#xD;
   * viz as a String, otherwise, convert viz to a file and if gui flag is requested,&#xD;
   * convert viz to a display.&#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_0_5pgZV2Ee-EOddEwqrIsA" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_0_5pgpV2Ee-EOddEwqrIsA" name="choice" type="_dq2VoYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_0_5pg5V2Ee-EOddEwqrIsA" name="visualize" visibility="private" isStatic="true" method="_1ArFk5V2Ee-EOddEwqrIsA">
                <ownedComment xmi:id="_1AxzUJV2Ee-EOddEwqrIsA">
                  <body>Creates a visualization instance of input WarpInterface warp with SystemChoices &#xD;
   * choice. If visualization is null, turns viz to a file, and if gui and schedule &#xD;
   * flags are requested, turn viz into a display.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_0_5phJV2Ee-EOddEwqrIsA" name="warp" type="_dYWQYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_0_5phZV2Ee-EOddEwqrIsA" name="choice" type="_dq1ukItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYQw0ItlEe-3nrFY8n5C-Q" name="WarpDSL">
              <ownedComment xmi:id="_1AxzV5V2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtcWo4tlEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtcWpItlEe-3nrFY8n5C-Q" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtcWpYtlEe-3nrFY8n5C-Q" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtc9sItlEe-3nrFY8n5C-Q" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtc9sYtlEe-3nrFY8n5C-Q" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtc9sotlEe-3nrFY8n5C-Q" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDapotlEe-3nrFY8n5C-Q" name="getInstructionParameters" specification="_dYSmBItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duDap4tlEe-3nrFY8n5C-Q" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duDaqItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYSmBItlEe-3nrFY8n5C-Q" name="getInstructionParameters" method="_duDapotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYSmBYtlEe-3nrFY8n5C-Q" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dspFYItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dYRX4ItlEe-3nrFY8n5C-Q" name="InstructionParameters">
                <ownedAttribute xmi:id="_dtc9s4tlEe-3nrFY8n5C-Q" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtc9tItlEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dtc9tYtlEe-3nrFY8n5C-Q" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtc9totlEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dtc9t4tlEe-3nrFY8n5C-Q" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtc9uItlEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dtc9uYtlEe-3nrFY8n5C-Q" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtc9uotlEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dtc9u4tlEe-3nrFY8n5C-Q" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtc9vItlEe-3nrFY8n5C-Q" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dtdkwItlEe-3nrFY8n5C-Q" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtdkwYtlEe-3nrFY8n5C-Q" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dtdkw4tlEe-3nrFY8n5C-Q" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtdkxItlEe-3nrFY8n5C-Q" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzmotlEe-3nrFY8n5C-Q" name="getCoordinator" specification="_dYRX4YtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duCzm4tlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCznItlEe-3nrFY8n5C-Q" name="setCoordinator" specification="_dYR-8ItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duCznYtlEe-3nrFY8n5C-Q" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCznotlEe-3nrFY8n5C-Q" name="setName" specification="_dYR-8otlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duCzn4tlEe-3nrFY8n5C-Q" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzoItlEe-3nrFY8n5C-Q" name="setFlow" specification="_dYR-9ItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duCzoYtlEe-3nrFY8n5C-Q" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duCzootlEe-3nrFY8n5C-Q" name="setSrc" specification="_dYR-9otlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duCzo4tlEe-3nrFY8n5C-Q" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDaoItlEe-3nrFY8n5C-Q" name="setSnk" specification="_dYR--ItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDaoYtlEe-3nrFY8n5C-Q" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDaootlEe-3nrFY8n5C-Q" name="setChannel" specification="_dYSmAItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDao4tlEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDapItlEe-3nrFY8n5C-Q" name="unused" specification="_dYSmAotlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDapYtlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dYRX4YtlEe-3nrFY8n5C-Q" name="getCoordinator" method="_duCzmotlEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_1AyaUJV2Ee-EOddEwqrIsA">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dYRX4otlEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dYR-8ItlEe-3nrFY8n5C-Q" name="setCoordinator" method="_duCznItlEe-3nrFY8n5C-Q">
                  <ownedComment xmi:id="_1AyaUZV2Ee-EOddEwqrIsA">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_dYR-8YtlEe-3nrFY8n5C-Q" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dYR-8otlEe-3nrFY8n5C-Q" name="setName" visibility="private" method="_duCznotlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dYR-84tlEe-3nrFY8n5C-Q" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dYR-9ItlEe-3nrFY8n5C-Q" name="setFlow" visibility="private" method="_duCzoItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dYR-9YtlEe-3nrFY8n5C-Q" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dYR-9otlEe-3nrFY8n5C-Q" name="setSrc" visibility="private" method="_duCzootlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dYR-94tlEe-3nrFY8n5C-Q" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dYR--ItlEe-3nrFY8n5C-Q" name="setSnk" visibility="private" method="_duDaoItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dYR--YtlEe-3nrFY8n5C-Q" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dYSmAItlEe-3nrFY8n5C-Q" name="setChannel" visibility="private" method="_duDaootlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dYSmAYtlEe-3nrFY8n5C-Q" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_dYSmAotlEe-3nrFY8n5C-Q" name="unused" method="_duDapItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dYSmA4tlEe-3nrFY8n5C-Q" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_dYTNEYtlEe-3nrFY8n5C-Q" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_dspscYtlEe-3nrFY8n5C-Q" general="_dspFYYtlEe-3nrFY8n5C-Q"/>
                <ownedAttribute xmi:id="_dtdkxYtlEe-3nrFY8n5C-Q" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_dteL0ItlEe-3nrFY8n5C-Q" name="instructionParametersArrayList" visibility="package" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_du69UItlEe-3nrFY8n5C-Q"/>
                <ownedAttribute xmi:id="_dteL04tlEe-3nrFY8n5C-Q" name="instructionParameters" visibility="package" type="_dqYbkotlEe-3nrFY8n5C-Q" association="_du69U4tlEe-3nrFY8n5C-Q"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDaqYtlEe-3nrFY8n5C-Q" name="ListenerDsl" specification="_dYT0IItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDaqotlEe-3nrFY8n5C-Q" type="_dYTNEYtlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDaq4tlEe-3nrFY8n5C-Q" name="getInstructionParameters" specification="_dYT0JItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDarItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return">
                    <name xsi:nil="true"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDarYtlEe-3nrFY8n5C-Q" name="enterAction" specification="_drAGootlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDarotlEe-3nrFY8n5C-Q" name="ctx" type="_drAGoItlEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDar4tlEe-3nrFY8n5C-Q" name="exitAction" specification="_drAts4tlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDasItlEe-3nrFY8n5C-Q" name="ctx" type="_drAGoItlEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDasYtlEe-3nrFY8n5C-Q" name="exitFlowName" specification="_drBUwYtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDasotlEe-3nrFY8n5C-Q" name="ctx" type="_drAtuItlEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDas4tlEe-3nrFY8n5C-Q" name="exitCmd" specification="_drB70YtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDatItlEe-3nrFY8n5C-Q" name="ctx" type="_drBUxotlEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDatYtlEe-3nrFY8n5C-Q" name="exitSrcNode" specification="_drCi4YtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDatotlEe-3nrFY8n5C-Q" name="ctx" type="_drB71otlEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duDat4tlEe-3nrFY8n5C-Q" name="exitSnkNode" specification="_drDJ8YtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duDauItlEe-3nrFY8n5C-Q" name="ctx" type="_drCi5otlEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEBsItlEe-3nrFY8n5C-Q" name="exitChannel" specification="_drDxAYtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_duEBsYtlEe-3nrFY8n5C-Q" name="ctx" type="_drDJ9otlEe-3nrFY8n5C-Q"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_dYT0IItlEe-3nrFY8n5C-Q" name="ListenerDsl" visibility="package" method="_duDaqYtlEe-3nrFY8n5C-Q">
                  <eAnnotations xmi:id="_dYT0IYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_dYT0IotlEe-3nrFY8n5C-Q" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_dYT0I4tlEe-3nrFY8n5C-Q" type="_dYTNEYtlEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_dYT0JItlEe-3nrFY8n5C-Q" name="getInstructionParameters" method="_duDaq4tlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_dspscItlEe-3nrFY8n5C-Q" type="_dp2QEYtlEe-3nrFY8n5C-Q" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_drAGootlEe-3nrFY8n5C-Q" name="enterAction" method="_duDarYtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_drAGo4tlEe-3nrFY8n5C-Q" name="ctx" type="_drAGoItlEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_drAts4tlEe-3nrFY8n5C-Q" name="exitAction" method="_duDar4tlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_drAttItlEe-3nrFY8n5C-Q" name="ctx" type="_drAGoItlEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_drBUwYtlEe-3nrFY8n5C-Q" name="exitFlowName" method="_duDasYtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_drBUwotlEe-3nrFY8n5C-Q" name="ctx" type="_drAtuItlEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_drB70YtlEe-3nrFY8n5C-Q" name="exitCmd" method="_duDas4tlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_drB70otlEe-3nrFY8n5C-Q" name="ctx" type="_drBUxotlEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_drCi4YtlEe-3nrFY8n5C-Q" name="exitSrcNode" method="_duDatYtlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_drCi4otlEe-3nrFY8n5C-Q" name="ctx" type="_drB71otlEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_drDJ8YtlEe-3nrFY8n5C-Q" name="exitSnkNode" method="_duDat4tlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_drDJ8otlEe-3nrFY8n5C-Q" name="ctx" type="_drCi5otlEe-3nrFY8n5C-Q"/>
                </ownedOperation>
                <ownedOperation xmi:id="_drDxAYtlEe-3nrFY8n5C-Q" name="exitChannel" method="_duEBsItlEe-3nrFY8n5C-Q">
                  <ownedParameter xmi:id="_drDxAotlEe-3nrFY8n5C-Q" name="ctx" type="_drDJ9otlEe-3nrFY8n5C-Q"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dYWQYItlEe-3nrFY8n5C-Q" name="WarpInterface">
              <ownedComment xmi:id="_1AxzRZV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_drE_IItlEe-3nrFY8n5C-Q" general="_dX8nwItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dYW3cItlEe-3nrFY8n5C-Q" name="toWorkload">
                <ownedParameter xmi:id="_drE_IYtlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYW3cYtlEe-3nrFY8n5C-Q" name="toProgram">
                <ownedParameter xmi:id="_drE_IotlEe-3nrFY8n5C-Q" type="_dXXY8ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYW3cotlEe-3nrFY8n5C-Q" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_drE_I4tlEe-3nrFY8n5C-Q" type="_dXps0YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYW3c4tlEe-3nrFY8n5C-Q" name="toSimulator">
                <ownedParameter xmi:id="_drE_JItlEe-3nrFY8n5C-Q" type="_dX6yk4tlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYW3dItlEe-3nrFY8n5C-Q" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_drE_JYtlEe-3nrFY8n5C-Q" type="_dXDP4YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYXegItlEe-3nrFY8n5C-Q" name="toChannelAnalysis">
                <ownedParameter xmi:id="_drE_JotlEe-3nrFY8n5C-Q" type="_dWVeMItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYXegYtlEe-3nrFY8n5C-Q" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_dYXegotlEe-3nrFY8n5C-Q" name="reliabilitiesMet">
                <ownedParameter xmi:id="_dYXeg4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYXehItlEe-3nrFY8n5C-Q" name="deadlinesMet">
                <ownedParameter xmi:id="_dYXehYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYYFkItlEe-3nrFY8n5C-Q" name="WarpPoset">
              <ownedComment xmi:id="_1AxzRJV2Ee-EOddEwqrIsA">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_drFmNItlEe-3nrFY8n5C-Q" general="_dXO2EItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEBsotlEe-3nrFY8n5C-Q" name="WarpPoset" specification="_drE_J4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEBs4tlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duEBtItlEe-3nrFY8n5C-Q" type="_dYYFkItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEBtYtlEe-3nrFY8n5C-Q" name="findCoordinator" specification="_dsqTgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEBtotlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duEBt4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_drE_J4tlEe-3nrFY8n5C-Q" name="WarpPoset" visibility="package" method="_duEBsotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_drFmMYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_drFmMotlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_drFmMItlEe-3nrFY8n5C-Q" name="workload" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drFmM4tlEe-3nrFY8n5C-Q" type="_dYYFkItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsqTgItlEe-3nrFY8n5C-Q" name="findCoordinator" visibility="protected" method="_duEBtYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsqTgYtlEe-3nrFY8n5C-Q" name="nodesInFlow" type="_dp2QEYtlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsqTgotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYYsoItlEe-3nrFY8n5C-Q" name="WarpSystem">
              <ownedComment xmi:id="_0JD3kJW3Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_dtey4ItlEe-3nrFY8n5C-Q" name="program" visibility="private" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_du7kYYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtey4otlEe-3nrFY8n5C-Q" name="workLoad" visibility="private" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_du7kZItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtfZ8ItlEe-3nrFY8n5C-Q" name="ra" visibility="private" type="_dXps0YtlEe-3nrFY8n5C-Q" association="_du8LcYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtfZ8otlEe-3nrFY8n5C-Q" name="la" visibility="private" type="_dXDP4YtlEe-3nrFY8n5C-Q" association="_du8LdItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtfZ9ItlEe-3nrFY8n5C-Q" name="ca" visibility="private" type="_dWVeMItlEe-3nrFY8n5C-Q" association="_du8ygYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtfZ9otlEe-3nrFY8n5C-Q" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtgBBItlEe-3nrFY8n5C-Q" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtgBBYtlEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtgoEYtlEe-3nrFY8n5C-Q" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtgoEotlEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_drFmNYtlEe-3nrFY8n5C-Q" client="_dYYsoItlEe-3nrFY8n5C-Q" supplier="_dYWQYItlEe-3nrFY8n5C-Q" contract="_dYWQYItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEBuotlEe-3nrFY8n5C-Q" name="WarpSystem" specification="_dsrhoItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEBu4tlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duEBvItlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duEBvYtlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duEBvotlEe-3nrFY8n5C-Q" type="_dYYsoItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEBv4tlEe-3nrFY8n5C-Q" name="toWorkload" specification="_dYZTsItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEBwItlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEowItlEe-3nrFY8n5C-Q" name="toProgram" specification="_dYZ6w4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEowYtlEe-3nrFY8n5C-Q" type="_dXXY8ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEowotlEe-3nrFY8n5C-Q" name="toReliabilityAnalysis" specification="_dYah0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEow4tlEe-3nrFY8n5C-Q" type="_dXps0YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(workLoad.getE2e(), workLoad.getMinPacketReceptionRate());&#xD;
   return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEoxotlEe-3nrFY8n5C-Q" name="toLatencyAnalysis" specification="_dYbI4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEox4tlEe-3nrFY8n5C-Q" type="_dXDP4YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEoyItlEe-3nrFY8n5C-Q" name="toChannelAnalysis" specification="_dYbI5ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEoyYtlEe-3nrFY8n5C-Q" type="_dWVeMItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEoyotlEe-3nrFY8n5C-Q" name="reliabilitiesMet" specification="_dYbI6ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEoy4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
       ra = new ReliabilityAnalysis(workLoad.getE2e(), workLoad.getMinPacketReceptionRate());&#xD;
   }&#xD;
   return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEozItlEe-3nrFY8n5C-Q" name="deadlinesMet" specification="_dYbv9ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEozYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEozotlEe-3nrFY8n5C-Q" name="createProgram" specification="_dsrhp4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEoz4tlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duEo0ItlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duEo0YtlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEo0otlEe-3nrFY8n5C-Q" name="getNumFaults" specification="_dYcXAItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEo04tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEo1ItlEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" specification="_dYcXBYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEo1YtlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEo1otlEe-3nrFY8n5C-Q" name="getE2e" specification="_dYc-EItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEo14tlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duEo2ItlEe-3nrFY8n5C-Q" name="getName" specification="_dYc-FItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duEo2YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP0ItlEe-3nrFY8n5C-Q" name="getSchedulerName" specification="_dYdlIYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP0YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP0otlEe-3nrFY8n5C-Q" name="getNumTransmissions" specification="_dYdlJotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP04tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP1ItlEe-3nrFY8n5C-Q" name="getOptimizationFlag" specification="_dYeMMYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP1YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Yy7LgJV4Ee-EOddEwqrIsA" name="toSimulator" specification="_Yy59YJV4Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_Yy7LgZV4Ee-EOddEwqrIsA" type="_dX6yk4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYZTsItlEe-3nrFY8n5C-Q" name="toWorkload" method="_duEBv4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drGNQItlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYZ6w4tlEe-3nrFY8n5C-Q" name="toProgram" method="_duEowItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drGNQYtlEe-3nrFY8n5C-Q" type="_dXXY8ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYah0ItlEe-3nrFY8n5C-Q" name="toReliabilityAnalysis" method="_duEowotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drGNQotlEe-3nrFY8n5C-Q" type="_dXps0YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYbI4ItlEe-3nrFY8n5C-Q" name="toLatencyAnalysis" method="_duEoxotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drG0UYtlEe-3nrFY8n5C-Q" type="_dXDP4YtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYbI5ItlEe-3nrFY8n5C-Q" name="toChannelAnalysis" method="_duEoyItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drG0UotlEe-3nrFY8n5C-Q" type="_dWVeMItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYbI6ItlEe-3nrFY8n5C-Q" name="reliabilitiesMet" method="_duEoyotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYbv8ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYbv9ItlEe-3nrFY8n5C-Q" name="deadlinesMet" method="_duEozItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYbv9YtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYcXAItlEe-3nrFY8n5C-Q" name="getNumFaults" method="_duEo0otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYcXAYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYcXBYtlEe-3nrFY8n5C-Q" name="getMinPacketReceptionRate" method="_duEo1ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dssIsItlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYc-EItlEe-3nrFY8n5C-Q" name="getE2e" method="_duEo1otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dssIsYtlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYc-FItlEe-3nrFY8n5C-Q" name="getName" method="_duEo2ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYc-FYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYdlIYtlEe-3nrFY8n5C-Q" name="getSchedulerName" method="_duFP0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYdlIotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYdlJotlEe-3nrFY8n5C-Q" name="getNumTransmissions" method="_duFP0otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYdlJ4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYeMMYtlEe-3nrFY8n5C-Q" name="getOptimizationFlag" method="_duFP1ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYeMMotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYeMNotlEe-3nrFY8n5C-Q" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_dsrhoItlEe-3nrFY8n5C-Q" name="WarpSystem" method="_duEBuotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dsrhpItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dsrhpYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dsrhoYtlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsrhootlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsrho4tlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsrhpotlEe-3nrFY8n5C-Q" type="_dYYsoItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dsrhp4tlEe-3nrFY8n5C-Q" name="createProgram" visibility="private" method="_duEozotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dsrhqItlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dsrhqYtlEe-3nrFY8n5C-Q" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dsrhqotlEe-3nrFY8n5C-Q" name="choice" type="_dsbC8ItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Yy59YJV4Ee-EOddEwqrIsA" name="toSimulator" method="_Yy7LgJV4Ee-EOddEwqrIsA">
                <ownedParameter xmi:id="_Yy59YZV4Ee-EOddEwqrIsA" type="_dX6yk4tlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYgBYItlEe-3nrFY8n5C-Q" name="WorkLoad">
              <ownedComment xmi:id="_veNugJW2Ee-EOddEwqrIsA">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
Initializes nodes and flows from the specified workload description file (`inputFileName`). &#xD;
Default values for the second constructor are m = 0.9, e2e = 0.99, and numFaults = 1.&#xD;
&#xD;
@author sgoddard&#xD;
@jcbates&#xD;
@version 1.4&#xD;
&#xD;
 *&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_drLs1ItlEe-3nrFY8n5C-Q" general="_dYuD0ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dthPIItlEe-3nrFY8n5C-Q" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dthPIYtlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dthPIotlEe-3nrFY8n5C-Q" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dthPI4tlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dthPJItlEe-3nrFY8n5C-Q" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dthPJYtlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dthPJotlEe-3nrFY8n5C-Q" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dthPJ4tlEe-3nrFY8n5C-Q" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dth2MItlEe-3nrFY8n5C-Q" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dth2MYtlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dth2MotlEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_dscRFItlEe-3nrFY8n5C-Q" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dth2M4tlEe-3nrFY8n5C-Q" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dth2NItlEe-3nrFY8n5C-Q" name="e2e" visibility="private" type="_dscRFItlEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dth2NYtlEe-3nrFY8n5C-Q" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dth2N4tlEe-3nrFY8n5C-Q" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtidQItlEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtidQYtlEe-3nrFY8n5C-Q" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtidQotlEe-3nrFY8n5C-Q" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtidRItlEe-3nrFY8n5C-Q" name="flows" type="_dW3psItlEe-3nrFY8n5C-Q" association="_duT5UYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtidRYtlEe-3nrFY8n5C-Q" name="nodes" type="_dXLywItlEe-3nrFY8n5C-Q" association="_duUgYItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtidRotlEe-3nrFY8n5C-Q" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtjEUItlEe-3nrFY8n5C-Q" name="flowNamesInOriginalOrder" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_du8yhItlEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtjEUotlEe-3nrFY8n5C-Q" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtjEU4tlEe-3nrFY8n5C-Q" name="flowNamesInPriorityOrder" type="_dp2QEYtlEe-3nrFY8n5C-Q" association="_du9ZkYtlEe-3nrFY8n5C-Q">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtjrYYtlEe-3nrFY8n5C-Q" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_drJ3oYtlEe-3nrFY8n5C-Q" client="_dYgBYItlEe-3nrFY8n5C-Q" supplier="_dXqT4otlEe-3nrFY8n5C-Q" contract="_dXqT4otlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP1otlEe-3nrFY8n5C-Q" name="WorkLoad" specification="_dstW0ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP14tlEe-3nrFY8n5C-Q" name="m" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duFP2ItlEe-3nrFY8n5C-Q" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duFP2YtlEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duFP2otlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
   setDefaultParameters();&#xD;
   this.minPacketReceptionRate = (m != null) ? m : 0.9; // Default to 0.9 if null&#xD;
   this.e2e = (e2e != null) ? e2e : 0.99; // Default to 0.99 if null&#xD;
   WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP24tlEe-3nrFY8n5C-Q" name="WorkLoad" specification="_dstW14tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP3ItlEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duFP3YtlEe-3nrFY8n5C-Q" name="m" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duFP3otlEe-3nrFY8n5C-Q" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duFP34tlEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duFP4ItlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(inputFileName);&#xD;
   setDefaultParameters();&#xD;
   this.numFaults = (numFaults != null) ? numFaults : 1; // Default to 1 if null&#xD;
   this.minPacketReceptionRate = (m != null) ? m : 0.9; // Default to 0.9 if null&#xD;
   this.e2e = (e2e != null) ? e2e : 0.99; // Default to 0.99 if null&#xD;
   WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP4YtlEe-3nrFY8n5C-Q" name="setDefaultParameters" specification="_dYh2kItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP4otlEe-3nrFY8n5C-Q" name="getE2e" specification="_dYh2kYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP44tlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP5ItlEe-3nrFY8n5C-Q" name="getIntForFlowNames" specification="_dYidoItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP5YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duFP5otlEe-3nrFY8n5C-Q" name="getName" specification="_dYidootlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duFP54tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF24ItlEe-3nrFY8n5C-Q" name="setMinPacketReceptionRate" specification="_dst95ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF24YtlEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF24otlEe-3nrFY8n5C-Q" name="getMaxPhase" specification="_dYidpItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF244tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF25ItlEe-3nrFY8n5C-Q" name="getMinPeriod" specification="_dYidpotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF25YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF25otlEe-3nrFY8n5C-Q" name="setE2e" specification="_dst95otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF254tlEe-3nrFY8n5C-Q" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF26ItlEe-3nrFY8n5C-Q" name="setIntForFlowNames" specification="_dYjEsYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF26YtlEe-3nrFY8n5C-Q" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF26otlEe-3nrFY8n5C-Q" name="setName" specification="_dYjEs4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF264tlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF27ItlEe-3nrFY8n5C-Q" name="setNodeChannel" specification="_dYjEtYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF27YtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duF27otlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF274tlEe-3nrFY8n5C-Q" name="getNodeChannel" specification="_dYjrwItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF28ItlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duF28YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF28otlEe-3nrFY8n5C-Q" name="addFlow" specification="_dYjrw4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF284tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF29ItlEe-3nrFY8n5C-Q" name="isIntForNodeNames" specification="_dYjrxYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF29YtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF29otlEe-3nrFY8n5C-Q" name="isIntForFlowNames" specification="_dYjrx4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF294tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duF2-ItlEe-3nrFY8n5C-Q" name="addNodeToFlow" specification="_dYjryYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duF2-YtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duF2-otlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGd8ItlEe-3nrFY8n5C-Q" name="getFlowPriority" specification="_dYkS0YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGd8YtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGd8otlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGd84tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGd9ItlEe-3nrFY8n5C-Q" name="setFlowPriority" specification="_dYkS1YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGd9YtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGd9otlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGd94tlEe-3nrFY8n5C-Q" name="setFlowPeriod" specification="_dYkS2ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGd-ItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGd-YtlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGd-otlEe-3nrFY8n5C-Q" name="setFlowDeadline" specification="_dYk54ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGd-4tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGd_ItlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGd_YtlEe-3nrFY8n5C-Q" name="setFlowPhase" specification="_dYk544tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGd_otlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGd_4tlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGeAItlEe-3nrFY8n5C-Q" name="getFlowIndex" specification="_dYk55otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGeAYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGeAotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGeA4tlEe-3nrFY8n5C-Q" name="getFlowPriority" specification="_dYk56YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGeBItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGeBYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGeBotlEe-3nrFY8n5C-Q" name="getFlowPeriod" specification="_dYlg8otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGeB4tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGeCItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGeCYtlEe-3nrFY8n5C-Q" name="getFlowDeadline" specification="_dYlg9YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGeCotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGeC4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGeDItlEe-3nrFY8n5C-Q" name="getFlowPhase" specification="_dYlg-ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGeDYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGeDotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGeD4tlEe-3nrFY8n5C-Q" name="getFlowTxAttemptsPerLink" specification="_dYmIAItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duGeEItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duGeEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duGeEotlEe-3nrFY8n5C-Q" name="setFlowsInPriorityOrder" specification="_dYmIA4tlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFAItlEe-3nrFY8n5C-Q" name="setFlowsInDMorder" specification="_dYmIBItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFAYtlEe-3nrFY8n5C-Q" name="setFlowsInRMorder" specification="_dYmIBYtlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFAotlEe-3nrFY8n5C-Q" name="setFlowsInRealTimeHARTorder" specification="_dYmIBotlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFA4tlEe-3nrFY8n5C-Q" name="finalizeCurrentFlow" specification="_dYmIB4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHFBItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaults > 0) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFBYtlEe-3nrFY8n5C-Q" name="nextReleaseTime" specification="_dYmICYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHFBotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHFB4tlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHFCItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFCYtlEe-3nrFY8n5C-Q" name="nextAbsoluteDeadline" specification="_dYmvEotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHFCotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHFC4tlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHFDItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFDYtlEe-3nrFY8n5C-Q" name="finalizeFlowWithE2eParameters" specification="_dYmvFotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHFDotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis ra = new ReliabilityAnalysis(numFaults);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = ra.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFD4tlEe-3nrFY8n5C-Q" name="finalizeFlowWithFixedFaultTolerance" specification="_dYmvGItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHFEItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   ReliabilityAnalysis ra = new ReliabilityAnalysis(e2e, minPacketReceptionRate);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = ra.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFGotlEe-3nrFY8n5C-Q" name="getNodeNamesOrderedAlphabetically" specification="_dYnWIItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHFG4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duHFHItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHFHYtlEe-3nrFY8n5C-Q" name="getFlow" specification="_dYnWJItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHFHotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHFH4tlEe-3nrFY8n5C-Q" type="_dWxjEItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsEItlEe-3nrFY8n5C-Q" name="getFlowNames" specification="_dYn9MItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsEYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duHsEotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsE4tlEe-3nrFY8n5C-Q" name="getNodeIndex" specification="_dYn9NItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsFItlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHsFYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsFotlEe-3nrFY8n5C-Q" name="getNodesInFlow" specification="_dYn9N4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsF4tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHsGItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duHsGYtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsGotlEe-3nrFY8n5C-Q" name="getHyperPeriod" specification="_dYokQ4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsG4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsHItlEe-3nrFY8n5C-Q" name="getTotalTxAttemptsInFlow" specification="_dYokRYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsHYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHsHotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsH4tlEe-3nrFY8n5C-Q" name="getNumTxAttemptsPerLink" specification="_dYokSItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsIItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHsIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_duHsIotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsI4tlEe-3nrFY8n5C-Q" name="addEdge" specification="_drLs0YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsJItlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duHsJYtlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duHsJotlEe-3nrFY8n5C-Q" name="maxFlowLength" specification="_dYpLUotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duHsJ4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYh2kItlEe-3nrFY8n5C-Q" name="setDefaultParameters" visibility="private" method="_duFP4YtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNug5W2Ee-EOddEwqrIsA">
                  <body>Initialize the default parameters for the WorkLoad object</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dYh2kYtlEe-3nrFY8n5C-Q" name="getE2e" method="_duFP4otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuhJW2Ee-EOddEwqrIsA">
                  <body>@return the e2e</body>
                </ownedComment>
                <ownedParameter xmi:id="_dst944tlEe-3nrFY8n5C-Q" type="_dscRFItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYidoItlEe-3nrFY8n5C-Q" name="getIntForFlowNames" method="_duFP5ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuhZW2Ee-EOddEwqrIsA">
                  <body>@return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYidoYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYidootlEe-3nrFY8n5C-Q" name="getName" method="_duFP5otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuhpW2Ee-EOddEwqrIsA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYido4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYidpItlEe-3nrFY8n5C-Q" name="getMaxPhase" method="_duF24otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuiJW2Ee-EOddEwqrIsA">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYidpYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYidpotlEe-3nrFY8n5C-Q" name="getMinPeriod" method="_duF25ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuiZW2Ee-EOddEwqrIsA">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjEsItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjEsYtlEe-3nrFY8n5C-Q" name="setIntForFlowNames" method="_duF26ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNui5W2Ee-EOddEwqrIsA">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjEsotlEe-3nrFY8n5C-Q" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjEs4tlEe-3nrFY8n5C-Q" name="setName" method="_duF26otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNujJW2Ee-EOddEwqrIsA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjEtItlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjEtYtlEe-3nrFY8n5C-Q" name="setNodeChannel" method="_duF27ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNujZW2Ee-EOddEwqrIsA">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjEtotlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYjEt4tlEe-3nrFY8n5C-Q" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjrwItlEe-3nrFY8n5C-Q" name="getNodeChannel" method="_duF274tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNujpW2Ee-EOddEwqrIsA">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjrwYtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYjrwotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjrw4tlEe-3nrFY8n5C-Q" name="addFlow" method="_duF28otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuj5W2Ee-EOddEwqrIsA">
                  <body>add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
    default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
    This will create a default priority equal to the order listed in the input graph file. We&#xD;
    also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
    initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
    optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
    over written&#xD;
    &#xD;
    Initializes default parameters for the WorkLoad object, including settings for node and flow names,  &#xD;
    and initializes maps for flow and node storage.&#xD;
 @param flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjrxItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjrxYtlEe-3nrFY8n5C-Q" name="isIntForNodeNames" method="_duF29ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNukJW2Ee-EOddEwqrIsA">
                  <body>@return returns true if all node names are ints</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjrxotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjrx4tlEe-3nrFY8n5C-Q" name="isIntForFlowNames" method="_duF29otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYjryItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYjryYtlEe-3nrFY8n5C-Q" name="addNodeToFlow" method="_duF2-ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNukZW2Ee-EOddEwqrIsA">
                  <body>Adds node to flow creating one if no node exists &#xD;
@param flowName&#xD;
@param nodeName</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYjryotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYkS0ItlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYkS0YtlEe-3nrFY8n5C-Q" name="getFlowPriority" method="_duGd8ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNukpW2Ee-EOddEwqrIsA">
                  <body>Iterates over nodes and returns the priority node &#xD;
&#xD;
@param flowName&#xD;
@param nodeName&#xD;
@return the node priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYkS0otlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYkS04tlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYkS1ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYkS1YtlEe-3nrFY8n5C-Q" name="setFlowPriority" method="_duGd9ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuk5W2Ee-EOddEwqrIsA">
                  <body>Sets the flow node and makes it priority&#xD;
   * @param flowName&#xD;
   * @param priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYkS1otlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYkS14tlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYkS2ItlEe-3nrFY8n5C-Q" name="setFlowPeriod" method="_duGd94tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNulJW2Ee-EOddEwqrIsA">
                  <body>Takes in the flowNode and sets the period&#xD;
	 * @param flowName&#xD;
	 * @param period</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYkS2YtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYkS2otlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYk54ItlEe-3nrFY8n5C-Q" name="setFlowDeadline" method="_duGd-otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNulZW2Ee-EOddEwqrIsA">
                  <body>Gets the flow Node and sets the deadline &#xD;
   * @param flowName&#xD;
   * @param deadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYk54YtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYk54otlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYk544tlEe-3nrFY8n5C-Q" name="setFlowPhase" method="_duGd_YtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNulpW2Ee-EOddEwqrIsA">
                  <body>Gets the flow Node and sets the Phase&#xD;
   * @param flowName&#xD;
   * @param phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYk55ItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYk55YtlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYk55otlEe-3nrFY8n5C-Q" name="getFlowIndex" method="_duGeAItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNul5W2Ee-EOddEwqrIsA">
                  <body>Sets the flowNode with the flowName and Returns the Nodes Index&#xD;
   * @param flowName&#xD;
   * @return flowNode Index</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYk554tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYk56ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYk56YtlEe-3nrFY8n5C-Q" name="getFlowPriority" method="_duGeA4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNumJW2Ee-EOddEwqrIsA">
                  <body>Takes in the flowName, sets it to flowNode, and returns the Node Priority&#xD;
   * @param flowName&#xD;
   * @return flowNode Priority</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYlg8ItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYlg8YtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYlg8otlEe-3nrFY8n5C-Q" name="getFlowPeriod" method="_duGeBotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNumZW2Ee-EOddEwqrIsA">
                  <body>Takes in flowName, sets it to flowNode, and returns the Nodes Period&#xD;
   * @param flowName&#xD;
   * @return flowNode Period</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYlg84tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYlg9ItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYlg9YtlEe-3nrFY8n5C-Q" name="getFlowDeadline" method="_duGeCYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNumpW2Ee-EOddEwqrIsA">
                  <body>gets flow deadline from flowname&#xD;
   * @param flowName&#xD;
   * @return flowDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYlg9otlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYlg94tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYlg-ItlEe-3nrFY8n5C-Q" name="getFlowPhase" method="_duGeDItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNum5W2Ee-EOddEwqrIsA">
                  <body>Retrieves the phase of a flow node based on the specified flow name.&#xD;
   * @param flowName&#xD;
   * @return Flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYlg-YtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYlg-otlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmIAItlEe-3nrFY8n5C-Q" name="getFlowTxAttemptsPerLink" method="_duGeD4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNunJW2Ee-EOddEwqrIsA">
                  <body>Retrieves priority of a specified node within a given flow&#xD;
   * @param flowName&#xD;
   * @return flow node</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYmIAYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYmIAotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmIA4tlEe-3nrFY8n5C-Q" name="setFlowsInPriorityOrder" method="_duGeEotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNunZW2Ee-EOddEwqrIsA">
                  <body>Sorts the flows in priority order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmIBItlEe-3nrFY8n5C-Q" name="setFlowsInDMorder" method="_duHFAItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNunpW2Ee-EOddEwqrIsA">
                  <body>Sorts the flows in Deadline-Monotonic (DM) order and updates the flow names list accordingly.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmIBYtlEe-3nrFY8n5C-Q" name="setFlowsInRMorder" method="_duHFAYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNun5W2Ee-EOddEwqrIsA">
                  <body>Create list Flow objects and sort them by the secondary key (Priority)&#xD;
   * Next sort them by the primary key (Period) and create flowNamesInPriority Order&#xD;
   * With names in requested order</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmIBotlEe-3nrFY8n5C-Q" name="setFlowsInRealTimeHARTorder" method="_duHFAotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuoJW2Ee-EOddEwqrIsA">
                  <body>*</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmIB4tlEe-3nrFY8n5C-Q" name="finalizeCurrentFlow" method="_duHFA4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYmICItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmICYtlEe-3nrFY8n5C-Q" name="nextReleaseTime" method="_duHFBYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYmICotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYmvEItlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYmvEYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmvEotlEe-3nrFY8n5C-Q" name="nextAbsoluteDeadline" method="_duHFCYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYmvE4tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYmvFItlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYmvFYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmvFotlEe-3nrFY8n5C-Q" name="finalizeFlowWithE2eParameters" visibility="private" method="_duHFDYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYmvF4tlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYmvGItlEe-3nrFY8n5C-Q" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_duHFD4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYmvGYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYnWIItlEe-3nrFY8n5C-Q" name="getNodeNamesOrderedAlphabetically" method="_duHFGotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuoZW2Ee-EOddEwqrIsA">
                  <body>Retrieves and returns an array of node names sorted alphabetically or numerically if the names represent integers.&#xD;
   * @return nodeNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYnWIYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYnWIotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYnWJItlEe-3nrFY8n5C-Q" name="getFlow" visibility="private" method="_duHFHYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYnWJYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_drLs0ItlEe-3nrFY8n5C-Q" type="_dWxjEItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYn9MItlEe-3nrFY8n5C-Q" name="getFlowNames" method="_duHsEItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuopW2Ee-EOddEwqrIsA">
                  <body>to return an array of flow names in the order they were read from the graph file&#xD;
   * @return Flow Names in Original Order</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYn9MYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYn9MotlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYn9NItlEe-3nrFY8n5C-Q" name="getNodeIndex" method="_duHsE4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuo5W2Ee-EOddEwqrIsA">
                  <body>return the dictionary of nodes&#xD;
   * @param nodeName&#xD;
   * @return node index</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYn9NYtlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYn9NotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYn9N4tlEe-3nrFY8n5C-Q" name="getNodesInFlow" method="_duHsFotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNupJW2Ee-EOddEwqrIsA">
                  <body>Returns an array of node names for the specified flow in the order they appear in the flow specification.&#xD;
   * @param flowName&#xD;
   * @return Array of node names</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYn9OItlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYokQItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYokQYtlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYokQ4tlEe-3nrFY8n5C-Q" name="getHyperPeriod" method="_duHsGotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNupZW2Ee-EOddEwqrIsA">
                  <body>Set hyperPeriods to 1 and find the LCM and update the hyperPeriod&#xD;
   * @return the HyperPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYokRItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYokRYtlEe-3nrFY8n5C-Q" name="getTotalTxAttemptsInFlow" method="_duHsHItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuppW2Ee-EOddEwqrIsA">
                  <body>Gets the total transmission attempts for the specified flow and returns it as total cost&#xD;
   * @param flowName&#xD;
   * @return totalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYokRotlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYokR4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYokSItlEe-3nrFY8n5C-Q" name="getNumTxAttemptsPerLink" method="_duHsH4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNup5W2Ee-EOddEwqrIsA">
                  <body>Retrieves the number of transmission attempts for each link in the specified flow.&#xD;
   * @param flowName&#xD;
   * @return return an array of the number of transmission needed for each</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYokSYtlEe-3nrFY8n5C-Q" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYokSotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_dYpLUItlEe-3nrFY8n5C-Q" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYpLUotlEe-3nrFY8n5C-Q" name="maxFlowLength" method="_duHsJotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuqZW2Ee-EOddEwqrIsA">
                  <body>Start with the max flow length to 0 return the max length of flow Nodes&#xD;
   * @return maxLength</body>
                </ownedComment>
                <ownedParameter xmi:id="_dYpLU4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drLs0YtlEe-3nrFY8n5C-Q" name="addEdge" method="_duHsI4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuqJW2Ee-EOddEwqrIsA">
                  <body>Get the node object and add it to the edge &#xD;
   * @param nodeName&#xD;
   * @param edge</body>
                </ownedComment>
                <ownedParameter xmi:id="_drLs0otlEe-3nrFY8n5C-Q" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_drLs04tlEe-3nrFY8n5C-Q" name="edge" type="_dWqOUItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dstW0ItlEe-3nrFY8n5C-Q" name="WorkLoad" visibility="public" method="_duFP1otlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dstW1ItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dstW1YtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_veNugZW2Ee-EOddEwqrIsA">
                  <body>Constructs a WorkLoad object by reading and processing an input file to build node and flow data.&#xD;
   * @param m&#xD;
   * @param e2e&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_dstW0YtlEe-3nrFY8n5C-Q" name="m" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dstW0otlEe-3nrFY8n5C-Q" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dstW04tlEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dstW1otlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dstW14tlEe-3nrFY8n5C-Q" name="WorkLoad" visibility="public" method="_duFP24tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dst94ItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dst94YtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_veNugpW2Ee-EOddEwqrIsA">
                  <body>Constructs a WorkLoad object with specified fault tolerance parameters by reading and processing an input file.&#xD;
   * @param numFaults Number of faults allowed per flow&#xD;
   * @param m Minimum packet reception rate&#xD;
   * @param e2e End-to-end reliability requirement&#xD;
   * @param inputFileName Name of the input file</body>
                </ownedComment>
                <ownedParameter xmi:id="_dstW2ItlEe-3nrFY8n5C-Q" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dstW2YtlEe-3nrFY8n5C-Q" name="m" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dstW2otlEe-3nrFY8n5C-Q" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_dstW24tlEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dst94otlEe-3nrFY8n5C-Q" type="_dYgBYItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dst95ItlEe-3nrFY8n5C-Q" name="setMinPacketReceptionRate" method="_duF24ItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuh5W2Ee-EOddEwqrIsA">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dst95YtlEe-3nrFY8n5C-Q" name="minPacketReceptionRate" type="_dscRFItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dst95otlEe-3nrFY8n5C-Q" name="setE2e" method="_duF25otlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_veNuipW2Ee-EOddEwqrIsA">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dst954tlEe-3nrFY8n5C-Q" name="e2e" type="_dscRFItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYuD0ItlEe-3nrFY8n5C-Q" name="WorkLoadDescription">
              <ownedComment xmi:id="_1AxMQJV2Ee-EOddEwqrIsA">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <generalization xmi:id="_drOwIYtlEe-3nrFY8n5C-Q" general="_dYHm4ItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtkScItlEe-3nrFY8n5C-Q" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtkScYtlEe-3nrFY8n5C-Q" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtkScotlEe-3nrFY8n5C-Q" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtkSc4tlEe-3nrFY8n5C-Q" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtkSdItlEe-3nrFY8n5C-Q" name="description" visibility="private" type="_dWoZIYtlEe-3nrFY8n5C-Q" association="_du9ZlItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtkSdotlEe-3nrFY8n5C-Q" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtk5gItlEe-3nrFY8n5C-Q" name="fm" visibility="private" type="_dWufwItlEe-3nrFY8n5C-Q" association="_du-AoYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtk5gotlEe-3nrFY8n5C-Q" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITIItlEe-3nrFY8n5C-Q" name="WorkLoadDescription" specification="_dYuq4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITIYtlEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duITIotlEe-3nrFY8n5C-Q" type="_dYuD0ItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITI4tlEe-3nrFY8n5C-Q" name="visualization" specification="_dYuq5YtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITJItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITJYtlEe-3nrFY8n5C-Q" name="fileVisualization" specification="_dYvR84tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITJotlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITJ4tlEe-3nrFY8n5C-Q" name="toString" specification="_dYv5AItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITKItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITKYtlEe-3nrFY8n5C-Q" name="initialize" specification="_dYv5BYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITKotlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYuq4ItlEe-3nrFY8n5C-Q" name="WorkLoadDescription" visibility="package" method="_duITIItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dYuq4otlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dYuq44tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dYuq4YtlEe-3nrFY8n5C-Q" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dYuq5ItlEe-3nrFY8n5C-Q" type="_dYuD0ItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYuq5YtlEe-3nrFY8n5C-Q" name="visualization" method="_duITI4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drOJEItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYvR84tlEe-3nrFY8n5C-Q" name="fileVisualization" method="_duITJYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drOwIItlEe-3nrFY8n5C-Q" type="_dWoZIYtlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dYv5AItlEe-3nrFY8n5C-Q" name="toString" method="_duITJ4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYv5AYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dYv5BYtlEe-3nrFY8n5C-Q" name="initialize" visibility="private" method="_duITKYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYv5BotlEe-3nrFY8n5C-Q" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYxHIItlEe-3nrFY8n5C-Q" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_1AxMPpV2Ee-EOddEwqrIsA">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_dswaIItlEe-3nrFY8n5C-Q" general="_dqOqkYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtk5g4tlEe-3nrFY8n5C-Q" name="workLoad" visibility="package" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_du-ApItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtk5hYtlEe-3nrFY8n5C-Q" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITK4tlEe-3nrFY8n5C-Q" name="WorkLoadListener" specification="_drPXMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITLItlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duITLYtlEe-3nrFY8n5C-Q" type="_dYxHIItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITLotlEe-3nrFY8n5C-Q" name="buildNodesAndFlows" specification="_drPXNYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITL4tlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITMItlEe-3nrFY8n5C-Q" name="testPrintStdOut" specification="_dYxHIYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITMYtlEe-3nrFY8n5C-Q" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITMotlEe-3nrFY8n5C-Q" name="enterWarpName" specification="_drPXN4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITM4tlEe-3nrFY8n5C-Q" name="ctx" type="_dqP4sYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITNItlEe-3nrFY8n5C-Q" name="enterFlowName" specification="_drP-Q4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duITNYtlEe-3nrFY8n5C-Q" name="ctx" type="_dqRG1otlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duITNotlEe-3nrFY8n5C-Q" name="exitPriority" specification="_drQlU4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6MItlEe-3nrFY8n5C-Q" name="ctx" type="_drQlUYtlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6MYtlEe-3nrFY8n5C-Q" name="exitPeriod" specification="_drRMZItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6MotlEe-3nrFY8n5C-Q" name="ctx" type="_drRMYotlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6M4tlEe-3nrFY8n5C-Q" name="exitDeadline" specification="_drSagYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6NItlEe-3nrFY8n5C-Q" name="ctx" type="_drRzc4tlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6NYtlEe-3nrFY8n5C-Q" name="exitPhase" specification="_drTBkYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6NotlEe-3nrFY8n5C-Q" name="ctx" type="_drSahotlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6N4tlEe-3nrFY8n5C-Q" name="exitSrcNode" specification="_drTBlotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6OItlEe-3nrFY8n5C-Q" name="ctx" type="_dqRt5otlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6OYtlEe-3nrFY8n5C-Q" name="exitSnkNode" specification="_drToo4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6OotlEe-3nrFY8n5C-Q" name="ctx" type="_dqSU9otlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6O4tlEe-3nrFY8n5C-Q" name="exitFlow" specification="_drToqItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6PItlEe-3nrFY8n5C-Q" name="ctx" type="_dqS8BotlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYxHIYtlEe-3nrFY8n5C-Q" name="testPrintStdOut" method="_duITMItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dYxHIotlEe-3nrFY8n5C-Q" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drPXMItlEe-3nrFY8n5C-Q" name="WorkLoadListener" visibility="private" method="_duITK4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_drPXMotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_drPXM4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_drPXMYtlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drPXNItlEe-3nrFY8n5C-Q" type="_dYxHIItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drPXNYtlEe-3nrFY8n5C-Q" name="buildNodesAndFlows" isStatic="true" method="_duITLotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drPXNotlEe-3nrFY8n5C-Q" name="workLoad" type="_dYgBYItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drPXN4tlEe-3nrFY8n5C-Q" name="enterWarpName" method="_duITMotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drPXOItlEe-3nrFY8n5C-Q" name="ctx" type="_dqP4sYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drP-Q4tlEe-3nrFY8n5C-Q" name="enterFlowName" method="_duITNItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drP-RItlEe-3nrFY8n5C-Q" name="ctx" type="_dqRG1otlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drQlU4tlEe-3nrFY8n5C-Q" name="exitPriority" method="_duITNotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drQlVItlEe-3nrFY8n5C-Q" name="ctx" type="_drQlUYtlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drRMZItlEe-3nrFY8n5C-Q" name="exitPeriod" method="_duI6MYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drRMZYtlEe-3nrFY8n5C-Q" name="ctx" type="_drRMYotlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drSagYtlEe-3nrFY8n5C-Q" name="exitDeadline" method="_duI6M4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drSagotlEe-3nrFY8n5C-Q" name="ctx" type="_drRzc4tlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drTBkYtlEe-3nrFY8n5C-Q" name="exitPhase" method="_duI6NYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drTBkotlEe-3nrFY8n5C-Q" name="ctx" type="_drSahotlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drTBlotlEe-3nrFY8n5C-Q" name="exitSrcNode" method="_duI6N4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drTBl4tlEe-3nrFY8n5C-Q" name="ctx" type="_dqRt5otlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drToo4tlEe-3nrFY8n5C-Q" name="exitSnkNode" method="_duI6OYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drTopItlEe-3nrFY8n5C-Q" name="ctx" type="_dqSU9otlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drToqItlEe-3nrFY8n5C-Q" name="exitFlow" method="_duI6O4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drToqYtlEe-3nrFY8n5C-Q" name="ctx" type="_dqS8BotlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dYy8UItlEe-3nrFY8n5C-Q" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_dtlgkYtlEe-3nrFY8n5C-Q" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtlgkotlEe-3nrFY8n5C-Q" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtlgk4tlEe-3nrFY8n5C-Q" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtlglItlEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtlglYtlEe-3nrFY8n5C-Q" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtlglotlEe-3nrFY8n5C-Q" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmHoItlEe-3nrFY8n5C-Q" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtmHoYtlEe-3nrFY8n5C-Q" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmHootlEe-3nrFY8n5C-Q" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtmHo4tlEe-3nrFY8n5C-Q" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmHpItlEe-3nrFY8n5C-Q" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmHpotlEe-3nrFY8n5C-Q" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmHp4tlEe-3nrFY8n5C-Q" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmHqItlEe-3nrFY8n5C-Q" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmHqYtlEe-3nrFY8n5C-Q" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmusYtlEe-3nrFY8n5C-Q" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmus4tlEe-3nrFY8n5C-Q" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmutYtlEe-3nrFY8n5C-Q" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtmutotlEe-3nrFY8n5C-Q" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_dtmut4tlEe-3nrFY8n5C-Q" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_dtnVwItlEe-3nrFY8n5C-Q" name="predecessor" type="_dYy8UItlEe-3nrFY8n5C-Q" association="_duVugItlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtnVwYtlEe-3nrFY8n5C-Q" name="endTimes" visibility="private" type="_dXpFwItlEe-3nrFY8n5C-Q" association="_du-nsYtlEe-3nrFY8n5C-Q"/>
              <ownedAttribute xmi:id="_dtnVxItlEe-3nrFY8n5C-Q" name="subObjects" type="_drVd0ItlEe-3nrFY8n5C-Q" isReadOnly="true" association="_du-ntItlEe-3nrFY8n5C-Q"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6PYtlEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_dYzjYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6PotlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duI6P4tlEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_drWE4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duI6QItlEe-3nrFY8n5C-Q" name="obj" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duI6QYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duI6QotlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhQItlEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_dY0Kc4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhQYtlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhQotlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhQ4tlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhRItlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhRYtlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhRotlEe-3nrFY8n5C-Q" name="SchedulableObject" specification="_dY0xgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhR4tlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhSItlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhSYtlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhSotlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhS4tlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duJhTItlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhTYtlEe-3nrFY8n5C-Q" name="setDefaultParameters" specification="_dY0xiYtlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhTotlEe-3nrFY8n5C-Q" name="getAllEndTimes" specification="_dY0xiotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhT4tlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhUItlEe-3nrFY8n5C-Q" name="addToEndTimes" specification="_dY1YkYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhUYtlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhUotlEe-3nrFY8n5C-Q" name="peekEndTimes" specification="_dY1_oItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhU4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhVItlEe-3nrFY8n5C-Q" name="pollEndTimes" specification="_dY1_ootlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhVYtlEe-3nrFY8n5C-Q" name="addSubObject" specification="_drWE54tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhVotlEe-3nrFY8n5C-Q" name="obj" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhV4tlEe-3nrFY8n5C-Q" name="getName" specification="_dY1_o4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhWItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhWYtlEe-3nrFY8n5C-Q" name="setName" specification="_dY1_pYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhWotlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhW4tlEe-3nrFY8n5C-Q" name="getReleaseTime" specification="_dY1_p4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhXItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duJhXYtlEe-3nrFY8n5C-Q" name="getPhase" specification="_dY2msItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duJhXotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIUItlEe-3nrFY8n5C-Q" name="getStartTime" specification="_dY2msotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIUYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIUotlEe-3nrFY8n5C-Q" name="setEndTime" specification="_dY2mtItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIU4tlEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIVItlEe-3nrFY8n5C-Q" name="setStartTime" specification="_dY2mtotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIVYtlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIVotlEe-3nrFY8n5C-Q" name="setReleaseTime" specification="_dY2muItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIV4tlEe-3nrFY8n5C-Q" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIWItlEe-3nrFY8n5C-Q" name="setPeriod" specification="_dY3NwYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIWYtlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIWotlEe-3nrFY8n5C-Q" name="setPhase" specification="_dY3Nw4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIW4tlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIXItlEe-3nrFY8n5C-Q" name="setNextReleaseTime" specification="_dY3NxYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIXYtlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIXotlEe-3nrFY8n5C-Q" name="maxPhaseComparison" specification="_drWr8ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIX4tlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKIYItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIYYtlEe-3nrFY8n5C-Q" name="maxPhaseComparison" specification="_drWr84tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIYotlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKIY4tlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKIZItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIZYtlEe-3nrFY8n5C-Q" name="deadlineComparison" specification="_drWr94tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIZotlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKIZ4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKIaItlEe-3nrFY8n5C-Q" name="deadlineComparison" specification="_drWr-otlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKIaYtlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKIaotlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKIa4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvYItlEe-3nrFY8n5C-Q" name="periodComparison" specification="_drXTAYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvYYtlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvYotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvY4tlEe-3nrFY8n5C-Q" name="periodComparison" specification="_drXTBItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvZItlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvZYtlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvZotlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvZ4tlEe-3nrFY8n5C-Q" name="priorityComparison" specification="_drXTCItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvaItlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvaYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvaotlEe-3nrFY8n5C-Q" name="priorityComparison" specification="_drXTC4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKva4tlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvbItlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvbYtlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvbotlEe-3nrFY8n5C-Q" name="releaseTimeComparison" specification="_drX6EotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvb4tlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvcItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvcYtlEe-3nrFY8n5C-Q" name="releaseTimeComparison" specification="_drX6FYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvcotlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvc4tlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvdItlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvdYtlEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" specification="_drX6GYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvdotlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKvd4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKveItlEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" specification="_drX6HItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKveYtlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKveotlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_duKve4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvfItlEe-3nrFY8n5C-Q" name="compareAscendingOrder" specification="_dY300ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvfYtlEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duKvfotlEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duKvf4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvgItlEe-3nrFY8n5C-Q" name="compareDescendingOrder" specification="_dY4b4ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvgYtlEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duKvgotlEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_duKvg4tlEe-3nrFY8n5C-Q" direction="return">
                  <name xsi:nil="true"/>
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duKvhItlEe-3nrFY8n5C-Q" name="print" specification="_dY4b5ItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_duKvhYtlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duLWcItlEe-3nrFY8n5C-Q" name="print" specification="_dY4b5otlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dYzjYItlEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_duI6PYtlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dY0KcItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dY0KcYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dY0KcotlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dY0Kc4tlEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_duJhQItlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dY0KeItlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dY0KeYtlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dY0KdItlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0KdYtlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0KdotlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0Kd4tlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0KeotlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dY0xgItlEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_duJhRotlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_dY0xhotlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_dY0xh4tlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_dY0xgYtlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0xgotlEe-3nrFY8n5C-Q" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0xg4tlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0xhItlEe-3nrFY8n5C-Q" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0xhYtlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY0xiItlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dY0xiYtlEe-3nrFY8n5C-Q" name="setDefaultParameters" visibility="private" method="_duJhTYtlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dY0xiotlEe-3nrFY8n5C-Q" name="getAllEndTimes" method="_duJhTotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaXZV2Ee-EOddEwqrIsA">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_drWE5otlEe-3nrFY8n5C-Q" type="_dXpFwItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_dY1YkYtlEe-3nrFY8n5C-Q" name="addToEndTimes" method="_duJhUItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dY1YkotlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY1_oItlEe-3nrFY8n5C-Q" name="peekEndTimes" method="_duJhUotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dY1_oYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY1_ootlEe-3nrFY8n5C-Q" name="pollEndTimes" method="_duJhVItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dY1_o4tlEe-3nrFY8n5C-Q" name="getName" method="_duJhV4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaXpV2Ee-EOddEwqrIsA">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY1_pItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY1_pYtlEe-3nrFY8n5C-Q" name="setName" method="_duJhWYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaX5V2Ee-EOddEwqrIsA">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY1_potlEe-3nrFY8n5C-Q" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY1_p4tlEe-3nrFY8n5C-Q" name="getReleaseTime" method="_duJhW4tlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaYJV2Ee-EOddEwqrIsA">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY1_qItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY2msItlEe-3nrFY8n5C-Q" name="getPhase" method="_duJhXYtlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaYZV2Ee-EOddEwqrIsA">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY2msYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY2msotlEe-3nrFY8n5C-Q" name="getStartTime" method="_duKIUItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaYpV2Ee-EOddEwqrIsA">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY2ms4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY2mtItlEe-3nrFY8n5C-Q" name="setEndTime" method="_duKIUotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaY5V2Ee-EOddEwqrIsA">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY2mtYtlEe-3nrFY8n5C-Q" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY2mtotlEe-3nrFY8n5C-Q" name="setStartTime" method="_duKIVItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaZJV2Ee-EOddEwqrIsA">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY2mt4tlEe-3nrFY8n5C-Q" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY2muItlEe-3nrFY8n5C-Q" name="setReleaseTime" method="_duKIVotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaZZV2Ee-EOddEwqrIsA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY3NwItlEe-3nrFY8n5C-Q" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY3NwYtlEe-3nrFY8n5C-Q" name="setPeriod" method="_duKIWItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaZpV2Ee-EOddEwqrIsA">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY3NwotlEe-3nrFY8n5C-Q" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY3Nw4tlEe-3nrFY8n5C-Q" name="setPhase" method="_duKIWotlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaZ5V2Ee-EOddEwqrIsA">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY3NxItlEe-3nrFY8n5C-Q" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY3NxYtlEe-3nrFY8n5C-Q" name="setNextReleaseTime" method="_duKIXItlEe-3nrFY8n5C-Q">
                <ownedComment xmi:id="_1AyaaJV2Ee-EOddEwqrIsA">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_dY3NxotlEe-3nrFY8n5C-Q" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY300ItlEe-3nrFY8n5C-Q" name="compareAscendingOrder" method="_duKvfItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dY300YtlEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY300otlEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY3004tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY4b4ItlEe-3nrFY8n5C-Q" name="compareDescendingOrder" method="_duKvgItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dY4b4YtlEe-3nrFY8n5C-Q" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY4b4otlEe-3nrFY8n5C-Q" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_dY4b44tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY4b5ItlEe-3nrFY8n5C-Q" name="print" method="_duKvhItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_dY4b5YtlEe-3nrFY8n5C-Q" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_dY4b5otlEe-3nrFY8n5C-Q" name="print" method="_duLWcItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_drWE4ItlEe-3nrFY8n5C-Q" name="SchedulableObject" visibility="package" method="_duI6P4tlEe-3nrFY8n5C-Q">
                <eAnnotations xmi:id="_drWE44tlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_drWE5ItlEe-3nrFY8n5C-Q" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_1AyaXJV2Ee-EOddEwqrIsA">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_drWE4YtlEe-3nrFY8n5C-Q" name="obj" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drWE4otlEe-3nrFY8n5C-Q" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_drWE5YtlEe-3nrFY8n5C-Q" type="_dYy8UItlEe-3nrFY8n5C-Q" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drWE54tlEe-3nrFY8n5C-Q" name="addSubObject" method="_duJhVYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drWE6ItlEe-3nrFY8n5C-Q" name="obj" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
              </ownedOperation>
              <ownedOperation xmi:id="_drWr8ItlEe-3nrFY8n5C-Q" name="maxPhaseComparison" method="_duKIXotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drWr8YtlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drWr8otlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drWr84tlEe-3nrFY8n5C-Q" name="maxPhaseComparison" method="_duKIYYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drWr9ItlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drWr9YtlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drWr9otlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drWr94tlEe-3nrFY8n5C-Q" name="deadlineComparison" method="_duKIZYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drWr-ItlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drWr-YtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drWr-otlEe-3nrFY8n5C-Q" name="deadlineComparison" method="_duKIaItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drWr-4tlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drWr_ItlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drXTAItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drXTAYtlEe-3nrFY8n5C-Q" name="periodComparison" method="_duKvYItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drXTAotlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drXTA4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drXTBItlEe-3nrFY8n5C-Q" name="periodComparison" method="_duKvY4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drXTBYtlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drXTBotlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drXTB4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drXTCItlEe-3nrFY8n5C-Q" name="priorityComparison" method="_duKvZ4tlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drXTCYtlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drXTCotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drXTC4tlEe-3nrFY8n5C-Q" name="priorityComparison" method="_duKvaotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drXTDItlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drX6EItlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drX6EYtlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drX6EotlEe-3nrFY8n5C-Q" name="releaseTimeComparison" method="_duKvbotlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drX6E4tlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drX6FItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drX6FYtlEe-3nrFY8n5C-Q" name="releaseTimeComparison" method="_duKvcYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drX6FotlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drX6F4tlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drX6GItlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drX6GYtlEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" method="_duKvdYtlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drX6GotlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drX6G4tlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_drX6HItlEe-3nrFY8n5C-Q" name="LatestReleaseTimeComparison" method="_duKveItlEe-3nrFY8n5C-Q">
                <ownedParameter xmi:id="_drYhIItlEe-3nrFY8n5C-Q" name="obj1" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drYhIYtlEe-3nrFY8n5C-Q" name="obj2" type="_dYy8UItlEe-3nrFY8n5C-Q"/>
                <ownedParameter xmi:id="_drYhIotlEe-3nrFY8n5C-Q" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dY8GQItlEe-3nrFY8n5C-Q" name="WorkLoadTest">
              <eAnnotations xmi:id="_dY8GQYtlEe-3nrFY8n5C-Q" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_dY8GQotlEe-3nrFY8n5C-Q" source="codegen">
                  <details xmi:id="_dY8GQ4tlEe-3nrFY8n5C-Q" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_JwNN4JWyEe-EOddEwqrIsA" name="workload" visibility="private" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_JwOcApWyEe-EOddEwqrIsA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duLWcYtlEe-3nrFY8n5C-Q" name="setUp" specification="_dY8tUItlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;StressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_duL9hotlEe-3nrFY8n5C-Q" name="testGetFlowNames" specification="_dZA-xotlEe-3nrFY8n5C-Q">
                <language>java</language>
                <body>workload.addFlow(&quot;Flow1&quot;);&#xD;
		workload.addFlow(&quot;Flow2&quot;);&#xD;
		workload.addFlow(&quot;Flow3&quot;);&#xD;
		// Expected array after adding new flows&#xD;
		String[] expectedFlowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;Flow1&quot;, &quot;Flow2&quot;, &quot;Flow3&quot;};&#xD;
		// Get actual flow names from workload&#xD;
		String[] actualFlowNames = workload.getFlowNames();&#xD;
		// Assert actual flow names match expected names&#xD;
		assertArrayEquals(expectedFlowNames, actualFlowNames, &quot;FlowNames are incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN08JWyEe-EOddEwqrIsA" name="addFlowAddTest" specification="_JwI8c5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// ArrayList of actual flow names in original order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		// new ArrayList of expected flows in expected order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected flow names with an additional flow are in the same order as &#xD;
		 * the actual flow names in the original order &#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add a flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN08ZWyEe-EOddEwqrIsA" name="addFlowOverridingTest" specification="_JwJjgpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F9&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F9&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList of flows with a repeated flow are in the same order&#xD;
		 * as the actual flow names with the repeated flow&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not override new flow correctly&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN08pWyEe-EOddEwqrIsA" name="addFlowMultipleAddsTest" specification="_JwJjhZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds second new flow &#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds third new flow &#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// adds fourth new flow&#xD;
		workload.addFlow(&quot;F14&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;, &quot;F14&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList with an addition of multiple flows is equal&#xD;
		 * to the actual ArrayList with the new flows&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN085WyEe-EOddEwqrIsA" name="addNodeToFlowExistsTest" specification="_JwJjiJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node to &quot;F1&quot; but that already exists within &quot;StressTest4.txt&quot; is equal to the &#xD;
		 * corresponding elements in the actual &quot;F1&quot; array when calling getNodesInFlow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted existing node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN09JWyEe-EOddEwqrIsA" name="addNodeToFlowDoesntExistTest" specification="_JwJji5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;newNode&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;newNode&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node new to the file is equal to the actual array elements when calling getNodesInFLow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted new node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN09ZWyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowOneFlowTest" specification="_JwJjjpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actual = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		Integer exp = 4;&#xD;
		/*&#xD;
		 * Tests that the expected totalCost of &quot;F1&quot; is equal to the actual cost as found with&#xD;
		 * getTotalTxAttemptsInFlow()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Produces the incorrect total cost&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN09pWyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowMultiFlowsTest" specification="_JwJjkZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer flowOneCost = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		// finds number of transmission attempts for &quot;F2&quot; and returns as totalCost&#xD;
		Integer flowTwoCost = workload.getTotalTxAttemptsInFlow(&quot;F2&quot;);&#xD;
		// finds number of transmission attempts for &quot;F3&quot; and returns as totalCost&#xD;
		Integer flowThreeCost = workload.getTotalTxAttemptsInFlow(&quot;F3&quot;);&#xD;
		// sum of &quot;F1&quot;, &quot;F2&quot;, and &quot;F3&quot; total cost&#xD;
		Integer actual = flowOneCost + flowTwoCost + flowThreeCost;&#xD;
		Integer exp = 21;&#xD;
		/* &#xD;
		 * Tests that the expected sum of multiple flows' costs is equal to the actual sum as&#xD;
		 * found with getTotalTxAttemptsInFlow() to conclude that the method can accurately find&#xD;
		 * multiple flows' costs&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Incorrectly adds total cost of multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN095WyEe-EOddEwqrIsA" name="getFlowPriorityTest" specification="_JwJjlJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>var actual = workload.getFlowPriority(&quot;F1&quot;, &quot;C&quot;);&#xD;
		var exp = 0;&#xD;
		/*&#xD;
		 * Tests that the expected priority of node &quot;C&quot; in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as found with getFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority for src node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0-JWyEe-EOddEwqrIsA" name="setFlowPriorityTest" specification="_JwJjl5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.setFlowPriority(&quot;F1&quot;, 5);&#xD;
		Integer actual = workload.getFlowPriority(&quot;F1&quot;);&#xD;
		Integer exp = 5;&#xD;
		/*&#xD;
		 * Tests that the expected priority of flow node in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as set with setFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Does not set current flow priority&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0-ZWyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkTest" specification="_JwKKkpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer exp = 3;&#xD;
		/* &#xD;
		 * Tests that the expected priority of flow &quot;F1&quot; is equal to the actual priority&#xD;
		 * found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority of specified flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0-pWyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkEmptyTest" specification="_JwKKlZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(null);&#xD;
		Integer exp = 1;&#xD;
		/*&#xD;
		 * Tests that the expected priority of a null input, an empty list, is equal to &#xD;
		 * the actual priority of an empty list found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect default priority of flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0-5WyEe-EOddEwqrIsA" name="setFlowsInRMorderCorrectOrderTest" specification="_JwKKmJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flow names in &quot;StressTest4.txt&quot; is &#xD;
		 * equal to the actual order of flow names in this file as found with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0_JWyEe-EOddEwqrIsA" name="setFlowsInRMorderAddFlowsTest" specification="_JwKKm5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// orders flow names with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flows of &quot;StressTest4.txt&quot; with three new flows&#xD;
		 * is equivalent to the actual ordered array with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows with new additional flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0_ZWyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyTest" specification="_JwKKnpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of alphabetically ordered flows is equivalent to the &#xD;
		 * actual array order using getFlowNames() to find actual order&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0_pWyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" specification="_JwKKoZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// alphabetically ordered array of flow names in &quot;StressTest4.txt&quot; with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected alphabetically ordered array of flows in &quot;StressTest4.txt&quot; with &#xD;
		 * three new flows is equal to the actual alphabetical order of flows using getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN0_5WyEe-EOddEwqrIsA" name="testGetFlowNamesEmpty" specification="_JwKKpJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Get flow names from the empty workload&#xD;
		String[] actualFlowNames = emptyWorkload.getFlowNames();&#xD;
		// Assert the array of flow names is empty&#xD;
		assertEquals(0, actualFlowNames.length, &quot;Array is not empty!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1AJWyEe-EOddEwqrIsA" name="testGetNodeIndexNonExistentNode" specification="_JwKKp5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer expectedIndex = 0;&#xD;
		// Get the actual index of a non-existent node &quot;Z&quot;&#xD;
		Integer actualIndex = workload.getNodeIndex(&quot;Z&quot;);&#xD;
		// Assert that the actual index matches the expected index&#xD;
		assertEquals(expectedIndex, actualIndex, &quot;The method should return 0 for a non-existent node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1AZWyEe-EOddEwqrIsA" name="testGetNodeIndexExistingNode" specification="_JwKxopWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actualIndex = workload.getNodeIndex(&quot;C&quot;);&#xD;
		// Assert that the actual index of node &quot;C&quot; is correct&#xD;
		assertEquals(1, actualIndex, &quot;The index for node C is incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1ApWyEe-EOddEwqrIsA" name="testGetNodesInFlowValidFlowF1" specification="_JwKxpZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] expectedNodes = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		// Getting the actual nodes in the flow &quot;F1&quot;&#xD;
		String[] actualNodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		// Assert that the actual nodes match the expected nodes&#xD;
		assertArrayEquals(expectedNodes, actualNodes, &quot;Incorrect nodes for flow F1&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1A5WyEe-EOddEwqrIsA" name="testGetNodesInFlowNonExistentFlow" specification="_JwKxqJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];  &#xD;
		// Getting the actual nodes in the non-existent flow &quot;F99&quot;&#xD;
     String[] actualNodes = workload.getNodesInFlow(&quot;F99&quot;);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for non-existent flow F99&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1BJWyEe-EOddEwqrIsA" name="testGetNodesInFlowNullFlow" specification="_JwKxq5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];&#xD;
     // Getting the actual nodes in a null flow&#xD;
     String[] actualNodes = workload.getNodesInFlow(null);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for null flow name&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1BZWyEe-EOddEwqrIsA" name="testGetHyperPeriodValidFlows" specification="_JwKxrpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>int expectedHyperPeriod = 300;&#xD;
		// Getting the actual hyper period from the workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod calculation is incorrect for valid flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1BpWyEe-EOddEwqrIsA" name="testGetHyperPeriodEmptyFlow" specification="_JwKxsZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);  &#xD;
     // Expected hyper period when no flows exist&#xD;
     int expectedHyperPeriod = 1;&#xD;
     // Getting the actual hyper period from the empty workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod should be 1 when no flows exist&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1B5WyEe-EOddEwqrIsA" name="testMaxFlowLengthStressTest4" specification="_JwKxtJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer expectedMaxFlowLength = 8;&#xD;
		// Getting the actual max flow length from the workload&#xD;
		Integer actualMaxFlowLength = workload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length is incorrect for StressTest4.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1CJWyEe-EOddEwqrIsA" name="testMaxFlowLengthNoFlows" specification="_JwKxt5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Expected max flow length when there are no flows&#xD;
		Integer expectedMaxFlowLength = 0;&#xD;
		// Getting the actual max flow length from the empty workload&#xD;
		Integer actualMaxFlowLength = emptyWorkload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length should be 0 for no flows.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1CZWyEe-EOddEwqrIsA" name="testGetFlowDeadlineValidFlow" specification="_JwKxupWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer expectedDeadline = 20;&#xD;
     // Getting the actual deadline for the flow &quot;F1&quot;&#xD;
     Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
     // Asserting that the actual deadline matches the expected value&#xD;
     assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for flow F1 should be 20.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1CpWyEe-EOddEwqrIsA" name="testGetFlowDeadlineInvalidFlow" specification="_JwLYsJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer actualDeadline = workload.getFlowDeadline(&quot;InvalidFlow&quot;);&#xD;
		// Expected deadline for a non-existent flow&#xD;
		Integer expectedDeadline = 100;&#xD;
		// Asserting that the actual deadline matches the expected value&#xD;
		assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for a non-existent flow should be 100.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1C5WyEe-EOddEwqrIsA" name="testSetFlowDeadlineValidFlow" specification="_JwLYs5WyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer newDeadline = 50;&#xD;
		// Setting the new deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, newDeadline);&#xD;
		// Getting the actual deadline after setting the new value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the new deadline&#xD;
		assertEquals(newDeadline, actualDeadline, &quot;The deadline for flow F1 should be set to 50.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwN1DJWyEe-EOddEwqrIsA" name="testSetFlowDeadlineUpdateExistingFlow" specification="_JwLYtpWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>Integer initialDeadline = 30;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, initialDeadline);&#xD;
		// Updated deadline to set for the flow &quot;F1&quot;&#xD;
		Integer updatedDeadline = 75;&#xD;
		// Setting the updated deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, updatedDeadline);&#xD;
		// Getting the actual deadline after updating the value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the updated deadline&#xD;
		assertEquals(updatedDeadline, actualDeadline, &quot;The deadline for flow F1 should be updated to 75.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwOcAJWyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_ExistingFlow" specification="_JwLYuZWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String flowName = &quot;F1&quot;;&#xD;
		// Getting the transmission attempts per link for the existing flow&#xD;
		Integer[] txAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
		// Asserting that the array is not null for an existing flow&#xD;
		assertNotNull(txAttemptsPerLink, &quot;The Tx attempts per link array should not be null for an existing flow.&quot;);&#xD;
		// Asserting that the array size is as expected&#xD;
		assertEquals(3, txAttemptsPerLink.length, &quot;The array size should be equal to the number of links in the flow minus the total cost.&quot;);&#xD;
		// Asserting that the Tx attempts per link match expected values&#xD;
		assertArrayEquals(new Integer[]{3, 3, 0}, txAttemptsPerLink, &quot;The Tx attempts per link should match expected values.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JwOcAZWyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_MultipleFlows" specification="_JwLYvJWyEe-EOddEwqrIsA">
                <language>java</language>
                <body>String flowName1 = &quot;F1&quot;;  &#xD;
		String flowName2 = &quot;F5&quot;;&#xD;
		// Getting the transmission attempts per link for both flows&#xD;
		Integer[] txAttemptsFlow1 = workload.getNumTxAttemptsPerLink(flowName1);&#xD;
		Integer[] txAttemptsFlow2 = workload.getNumTxAttemptsPerLink(flowName2);&#xD;
		// Asserting that the arrays are not null&#xD;
		assertNotNull(txAttemptsFlow1, &quot;The Tx attempts per link for F1 should not be null.&quot;);&#xD;
		assertNotNull(txAttemptsFlow2, &quot;The Tx attempts per link for F5 should not be null.&quot;);&#xD;
		// Asserting that the array sizes are as expected&#xD;
		assertEquals(3, txAttemptsFlow1.length, &quot;The array size for F1 should match the number of links minus the total cost.&quot;);&#xD;
		assertEquals(5, txAttemptsFlow2.length, &quot;The array size for F5 should match the number of links minus the total cost.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_dY8tUItlEe-3nrFY8n5C-Q" name="setUp" visibility="package" method="_duLWcYtlEe-3nrFY8n5C-Q" raisedException="_dsyPUItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_dZA-xotlEe-3nrFY8n5C-Q" name="testGetFlowNames" visibility="package" method="_duL9hotlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_JwI8cJWyEe-EOddEwqrIsA" name="tearDown" visibility="package" raisedException="_dsyPUItlEe-3nrFY8n5C-Q"/>
              <ownedOperation xmi:id="_JwI8c5WyEe-EOddEwqrIsA" name="addFlowAddTest" visibility="package" method="_JwN08JWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJjgpWyEe-EOddEwqrIsA" name="addFlowOverridingTest" visibility="package" method="_JwN08ZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJjhZWyEe-EOddEwqrIsA" name="addFlowMultipleAddsTest" visibility="package" method="_JwN08pWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJjiJWyEe-EOddEwqrIsA" name="addNodeToFlowExistsTest" visibility="package" method="_JwN085WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJji5WyEe-EOddEwqrIsA" name="addNodeToFlowDoesntExistTest" visibility="package" method="_JwN09JWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJjjpWyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowOneFlowTest" visibility="package" method="_JwN09ZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJjkZWyEe-EOddEwqrIsA" name="getTotalTxAttemptsInFlowMultiFlowsTest" visibility="package" method="_JwN09pWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJjlJWyEe-EOddEwqrIsA" name="getFlowPriorityTest" visibility="package" method="_JwN095WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwJjl5WyEe-EOddEwqrIsA" name="setFlowPriorityTest" visibility="package" method="_JwN0-JWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKkpWyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkTest" visibility="package" method="_JwN0-ZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKlZWyEe-EOddEwqrIsA" name="getFlowTxAttemptsPerLinkEmptyTest" visibility="package" method="_JwN0-pWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKmJWyEe-EOddEwqrIsA" name="setFlowsInRMorderCorrectOrderTest" visibility="package" method="_JwN0-5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKm5WyEe-EOddEwqrIsA" name="setFlowsInRMorderAddFlowsTest" visibility="package" method="_JwN0_JWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKnpWyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyTest" visibility="package" method="_JwN0_ZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKoZWyEe-EOddEwqrIsA" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" visibility="package" method="_JwN0_pWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKpJWyEe-EOddEwqrIsA" name="testGetFlowNamesEmpty" visibility="package" method="_JwN0_5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKKp5WyEe-EOddEwqrIsA" name="testGetNodeIndexNonExistentNode" visibility="package" method="_JwN1AJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxopWyEe-EOddEwqrIsA" name="testGetNodeIndexExistingNode" visibility="package" method="_JwN1AZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxpZWyEe-EOddEwqrIsA" name="testGetNodesInFlowValidFlowF1" visibility="package" method="_JwN1ApWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxqJWyEe-EOddEwqrIsA" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_JwN1A5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxq5WyEe-EOddEwqrIsA" name="testGetNodesInFlowNullFlow" visibility="package" method="_JwN1BJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxrpWyEe-EOddEwqrIsA" name="testGetHyperPeriodValidFlows" visibility="package" method="_JwN1BZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxsZWyEe-EOddEwqrIsA" name="testGetHyperPeriodEmptyFlow" visibility="package" method="_JwN1BpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxtJWyEe-EOddEwqrIsA" name="testMaxFlowLengthStressTest4" visibility="package" method="_JwN1B5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxt5WyEe-EOddEwqrIsA" name="testMaxFlowLengthNoFlows" visibility="package" method="_JwN1CJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwKxupWyEe-EOddEwqrIsA" name="testGetFlowDeadlineValidFlow" visibility="package" method="_JwN1CZWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwLYsJWyEe-EOddEwqrIsA" name="testGetFlowDeadlineInvalidFlow" visibility="package" method="_JwN1CpWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwLYs5WyEe-EOddEwqrIsA" name="testSetFlowDeadlineValidFlow" visibility="package" method="_JwN1C5WyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwLYtpWyEe-EOddEwqrIsA" name="testSetFlowDeadlineUpdateExistingFlow" visibility="package" method="_JwN1DJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwLYuZWyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_ExistingFlow" method="_JwOcAJWyEe-EOddEwqrIsA"/>
              <ownedOperation xmi:id="_JwLYvJWyEe-EOddEwqrIsA" name="testGetNumTxAttemptsPerLink_MultipleFlows" method="_JwOcAZWyEe-EOddEwqrIsA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_dsLLUItlEe-3nrFY8n5C-Q" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dsYmsItlEe-3nrFY8n5C-Q" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dsbC8ItlEe-3nrFY8n5C-Q" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dskz8ItlEe-3nrFY8n5C-Q" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dslbAItlEe-3nrFY8n5C-Q" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_duQO9YtlEe-3nrFY8n5C-Q" name="" memberEnd="_dtARwYtlEe-3nrFY8n5C-Q _duQO9otlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duQO9otlEe-3nrFY8n5C-Q" name="" type="_dWqOUItlEe-3nrFY8n5C-Q" association="_duQO9YtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duT5UYtlEe-3nrFY8n5C-Q" name="" memberEnd="_dtidRItlEe-3nrFY8n5C-Q _duT5UotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duT5UotlEe-3nrFY8n5C-Q" name="" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_duT5UYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duUgYItlEe-3nrFY8n5C-Q" name="" memberEnd="_dtidRYtlEe-3nrFY8n5C-Q _duUgYYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duUgYYtlEe-3nrFY8n5C-Q" name="" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_duUgYItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duVugItlEe-3nrFY8n5C-Q" name="" memberEnd="_dtnVwItlEe-3nrFY8n5C-Q _duVugYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duVugYtlEe-3nrFY8n5C-Q" name="" type="_dYy8UItlEe-3nrFY8n5C-Q" association="_duVugItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dunbUItlEe-3nrFY8n5C-Q" name="" memberEnd="_dunbUYtlEe-3nrFY8n5C-Q _ds49AotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dunbUYtlEe-3nrFY8n5C-Q" name="" type="_dWG0sItlEe-3nrFY8n5C-Q" association="_dunbUItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duopcItlEe-3nrFY8n5C-Q" name="" memberEnd="_duopcYtlEe-3nrFY8n5C-Q _ds5kEYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duopcYtlEe-3nrFY8n5C-Q" name="" type="_dWG0sItlEe-3nrFY8n5C-Q" association="_duopcItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dupQgItlEe-3nrFY8n5C-Q" name="" memberEnd="_dupQgYtlEe-3nrFY8n5C-Q _ds6LIItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dupQgYtlEe-3nrFY8n5C-Q" name="" type="_dWG0sItlEe-3nrFY8n5C-Q" association="_dupQgItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dupQg4tlEe-3nrFY8n5C-Q" name="" memberEnd="_dupQhItlEe-3nrFY8n5C-Q _ds6yMotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dupQhItlEe-3nrFY8n5C-Q" name="" type="_dWVeMItlEe-3nrFY8n5C-Q" association="_dupQg4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dup3kItlEe-3nrFY8n5C-Q" name="" memberEnd="_dup3kYtlEe-3nrFY8n5C-Q _ds7ZQItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dup3kYtlEe-3nrFY8n5C-Q" name="" type="_dWVeMItlEe-3nrFY8n5C-Q" association="_dup3kItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dup3k4tlEe-3nrFY8n5C-Q" name="" memberEnd="_dup3lItlEe-3nrFY8n5C-Q _ds7ZSItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dup3lItlEe-3nrFY8n5C-Q" name="" type="_dWXTYItlEe-3nrFY8n5C-Q" association="_dup3k4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duqeoItlEe-3nrFY8n5C-Q" name="" memberEnd="_duqeoYtlEe-3nrFY8n5C-Q _ds8AUYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duqeoYtlEe-3nrFY8n5C-Q" name="" type="_dWXTYItlEe-3nrFY8n5C-Q" association="_duqeoItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duqeo4tlEe-3nrFY8n5C-Q" name="" memberEnd="_duqepItlEe-3nrFY8n5C-Q _ds8nYYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duqepItlEe-3nrFY8n5C-Q" name="" type="_dWX6cItlEe-3nrFY8n5C-Q" association="_duqeo4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duqepotlEe-3nrFY8n5C-Q" name="" memberEnd="_durFsItlEe-3nrFY8n5C-Q _ds9OcotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_durFsItlEe-3nrFY8n5C-Q" name="" type="_dWdaAItlEe-3nrFY8n5C-Q" association="_duqepotlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_durFsotlEe-3nrFY8n5C-Q" name="" memberEnd="_durFs4tlEe-3nrFY8n5C-Q _ds91gotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_durFs4tlEe-3nrFY8n5C-Q" name="" type="_dWdaAItlEe-3nrFY8n5C-Q" association="_durFsotlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_durFtYtlEe-3nrFY8n5C-Q" name="" memberEnd="_durFtotlEe-3nrFY8n5C-Q _ds-ck4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_durFtotlEe-3nrFY8n5C-Q" name="" type="_dWkHsItlEe-3nrFY8n5C-Q" association="_durFtYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_durswYtlEe-3nrFY8n5C-Q" name="" memberEnd="_durswotlEe-3nrFY8n5C-Q _ds_DpYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_durswotlEe-3nrFY8n5C-Q" name="" type="_dWkHsItlEe-3nrFY8n5C-Q" association="_durswYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dursxItlEe-3nrFY8n5C-Q" name="" memberEnd="_dusT0ItlEe-3nrFY8n5C-Q _dtCG8otlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dusT0ItlEe-3nrFY8n5C-Q" name="" type="_dWxjEItlEe-3nrFY8n5C-Q" association="_dursxItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dusT0otlEe-3nrFY8n5C-Q" name="" memberEnd="_dusT04tlEe-3nrFY8n5C-Q _dtCuAYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dusT04tlEe-3nrFY8n5C-Q" name="" type="_dWxjEItlEe-3nrFY8n5C-Q" association="_dusT0otlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dusT1YtlEe-3nrFY8n5C-Q" name="" memberEnd="_dusT1otlEe-3nrFY8n5C-Q _dtCuBItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dusT1otlEe-3nrFY8n5C-Q" name="" type="_dWxjEItlEe-3nrFY8n5C-Q" association="_dusT1YtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dus64YtlEe-3nrFY8n5C-Q" name="" memberEnd="_dus64otlEe-3nrFY8n5C-Q _dtDVEotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dus64otlEe-3nrFY8n5C-Q" name="" type="_dWxjEItlEe-3nrFY8n5C-Q" association="_dus64YtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_dus65ItlEe-3nrFY8n5C-Q" name="" memberEnd="_dus65YtlEe-3nrFY8n5C-Q _dtDVFItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_dus65YtlEe-3nrFY8n5C-Q" name="" type="_dWxjEItlEe-3nrFY8n5C-Q" association="_dus65ItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duth8YtlEe-3nrFY8n5C-Q" name="" memberEnd="_duth8otlEe-3nrFY8n5C-Q _dtEjN4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duth8otlEe-3nrFY8n5C-Q" name="" type="_dW430ItlEe-3nrFY8n5C-Q" association="_duth8YtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duth9ItlEe-3nrFY8n5C-Q" name="" memberEnd="_duth9YtlEe-3nrFY8n5C-Q _dtFKRYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duth9YtlEe-3nrFY8n5C-Q" name="" type="_dW430ItlEe-3nrFY8n5C-Q" association="_duth9ItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duuJAYtlEe-3nrFY8n5C-Q" name="" memberEnd="_duuJAotlEe-3nrFY8n5C-Q _dtFxUItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duuJAotlEe-3nrFY8n5C-Q" name="" type="_dW77IItlEe-3nrFY8n5C-Q" association="_duuJAYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duuJBItlEe-3nrFY8n5C-Q" name="" memberEnd="_duuJBYtlEe-3nrFY8n5C-Q _dtFxUotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duuJBYtlEe-3nrFY8n5C-Q" name="" type="_dW9wUItlEe-3nrFY8n5C-Q" association="_duuJBItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duuwEYtlEe-3nrFY8n5C-Q" name="" memberEnd="_duuwEotlEe-3nrFY8n5C-Q _dtFxVItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duuwEotlEe-3nrFY8n5C-Q" name="" type="_dW9wUItlEe-3nrFY8n5C-Q" association="_duuwEYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duuwFItlEe-3nrFY8n5C-Q" name="" memberEnd="_duuwFYtlEe-3nrFY8n5C-Q _dtGYY4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duuwFYtlEe-3nrFY8n5C-Q" name="" type="_dW--cItlEe-3nrFY8n5C-Q" association="_duuwFItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duvXIYtlEe-3nrFY8n5C-Q" name="" memberEnd="_duvXIotlEe-3nrFY8n5C-Q _dtHmhYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duvXIotlEe-3nrFY8n5C-Q" name="" type="_dXDP4YtlEe-3nrFY8n5C-Q" association="_duvXIYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duvXJItlEe-3nrFY8n5C-Q" name="" memberEnd="_duvXJYtlEe-3nrFY8n5C-Q _dtHmh4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duvXJYtlEe-3nrFY8n5C-Q" name="" type="_dXDP4YtlEe-3nrFY8n5C-Q" association="_duvXJItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duv-MYtlEe-3nrFY8n5C-Q" name="" memberEnd="_duv-MotlEe-3nrFY8n5C-Q _dtINkYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duv-MotlEe-3nrFY8n5C-Q" name="" type="_dXDP4YtlEe-3nrFY8n5C-Q" association="_duv-MYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duwlQItlEe-3nrFY8n5C-Q" name="" memberEnd="_duwlQYtlEe-3nrFY8n5C-Q _dtINk4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duwlQYtlEe-3nrFY8n5C-Q" name="" type="_dXDP4YtlEe-3nrFY8n5C-Q" association="_duwlQItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duwlQ4tlEe-3nrFY8n5C-Q" name="" memberEnd="_duwlRItlEe-3nrFY8n5C-Q _dtINlYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duwlRItlEe-3nrFY8n5C-Q" name="" type="_dXDP4YtlEe-3nrFY8n5C-Q" association="_duwlQ4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duxMUItlEe-3nrFY8n5C-Q" name="" memberEnd="_duxMUYtlEe-3nrFY8n5C-Q _dtI0potlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duxMUYtlEe-3nrFY8n5C-Q" name="" type="_dXFFEItlEe-3nrFY8n5C-Q" association="_duxMUItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duxMU4tlEe-3nrFY8n5C-Q" name="" memberEnd="_duxMVItlEe-3nrFY8n5C-Q _dtJbsYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duxMVItlEe-3nrFY8n5C-Q" name="" type="_dXFFEItlEe-3nrFY8n5C-Q" association="_duxMU4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duxzYItlEe-3nrFY8n5C-Q" name="" memberEnd="_duxzYYtlEe-3nrFY8n5C-Q _dtJbt4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duxzYYtlEe-3nrFY8n5C-Q" name="" type="_dXIIYItlEe-3nrFY8n5C-Q" association="_duxzYItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duxzY4tlEe-3nrFY8n5C-Q" name="" memberEnd="_duxzZItlEe-3nrFY8n5C-Q _dtKp1otlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duxzZItlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_duxzY4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duyacItlEe-3nrFY8n5C-Q" name="" memberEnd="_duyacYtlEe-3nrFY8n5C-Q _dtKp2ItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duyacYtlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_duyacItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duyac4tlEe-3nrFY8n5C-Q" name="" memberEnd="_duyadItlEe-3nrFY8n5C-Q _dtLQ4YtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duyadItlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_duyac4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duzBgItlEe-3nrFY8n5C-Q" name="" memberEnd="_duzBgYtlEe-3nrFY8n5C-Q _dtLQ5otlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duzBgYtlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_duzBgItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duzBg4tlEe-3nrFY8n5C-Q" name="" memberEnd="_duzBhItlEe-3nrFY8n5C-Q _dtL38YtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duzBhItlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_duzBg4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duzokItlEe-3nrFY8n5C-Q" name="" memberEnd="_duzokYtlEe-3nrFY8n5C-Q _dtL384tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duzokYtlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_duzokItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_duzok4tlEe-3nrFY8n5C-Q" name="" memberEnd="_duzolItlEe-3nrFY8n5C-Q _dtMfAYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_duzolItlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_duzok4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du0PoItlEe-3nrFY8n5C-Q" name="" memberEnd="_du0PoYtlEe-3nrFY8n5C-Q _dtNGEItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du0PoYtlEe-3nrFY8n5C-Q" name="" type="_dXO2EItlEe-3nrFY8n5C-Q" association="_du0PoItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du0Po4tlEe-3nrFY8n5C-Q" name="" memberEnd="_du0PpItlEe-3nrFY8n5C-Q _dtNtJotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du0PpItlEe-3nrFY8n5C-Q" name="" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_du0Po4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du02sYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du02sotlEe-3nrFY8n5C-Q _dtNtKItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du02sotlEe-3nrFY8n5C-Q" name="" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_du02sYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du02tItlEe-3nrFY8n5C-Q" name="" memberEnd="_du02tYtlEe-3nrFY8n5C-Q _dtOUMYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du02tYtlEe-3nrFY8n5C-Q" name="" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_du02tItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du1dwYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du1dwotlEe-3nrFY8n5C-Q _dtO7RYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du1dwotlEe-3nrFY8n5C-Q" name="" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_du1dwYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du1dxItlEe-3nrFY8n5C-Q" name="" memberEnd="_du1dxYtlEe-3nrFY8n5C-Q _dtPiVYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du1dxYtlEe-3nrFY8n5C-Q" name="" type="_dXXY8ItlEe-3nrFY8n5C-Q" association="_du1dxItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du2E0YtlEe-3nrFY8n5C-Q" name="" memberEnd="_du2E0otlEe-3nrFY8n5C-Q _dtQwcotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du2E0otlEe-3nrFY8n5C-Q" name="" type="_dXjmNotlEe-3nrFY8n5C-Q" association="_du2E0YtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du2E1ItlEe-3nrFY8n5C-Q" name="" memberEnd="_du2E1YtlEe-3nrFY8n5C-Q _dtQwdItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du2E1YtlEe-3nrFY8n5C-Q" name="" type="_dXjmNotlEe-3nrFY8n5C-Q" association="_du2E1ItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du2r4YtlEe-3nrFY8n5C-Q" name="" memberEnd="_du2r4otlEe-3nrFY8n5C-Q _dtR-lItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du2r4otlEe-3nrFY8n5C-Q" name="" type="_dXtXMItlEe-3nrFY8n5C-Q" association="_du2r4YtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du2r5ItlEe-3nrFY8n5C-Q" name="" memberEnd="_du2r5YtlEe-3nrFY8n5C-Q _dtR-lotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du2r5YtlEe-3nrFY8n5C-Q" name="" type="_dXtXMItlEe-3nrFY8n5C-Q" association="_du2r5ItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du3S8YtlEe-3nrFY8n5C-Q" name="" memberEnd="_du3S8otlEe-3nrFY8n5C-Q _dtSloYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du3S8otlEe-3nrFY8n5C-Q" name="" type="_dXt-QItlEe-3nrFY8n5C-Q" association="_du3S8YtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du3S9ItlEe-3nrFY8n5C-Q" name="" memberEnd="_du3S9YtlEe-3nrFY8n5C-Q _dtTzxYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du3S9YtlEe-3nrFY8n5C-Q" name="" type="_dXy2wYtlEe-3nrFY8n5C-Q" association="_du3S9ItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du36AYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du36AotlEe-3nrFY8n5C-Q _dtTzx4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du36AotlEe-3nrFY8n5C-Q" name="" type="_dXy2wYtlEe-3nrFY8n5C-Q" association="_du36AYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du36BItlEe-3nrFY8n5C-Q" name="" memberEnd="_du36BYtlEe-3nrFY8n5C-Q _dtVo8otlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du36BYtlEe-3nrFY8n5C-Q" name="" type="_dYD8gItlEe-3nrFY8n5C-Q" association="_du36BItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du4hEYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du4hEotlEe-3nrFY8n5C-Q _dtVo9ItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du4hEotlEe-3nrFY8n5C-Q" name="" type="_dYD8gItlEe-3nrFY8n5C-Q" association="_du4hEYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du4hFItlEe-3nrFY8n5C-Q" name="" memberEnd="_du4hFYtlEe-3nrFY8n5C-Q _dtWQAItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du4hFYtlEe-3nrFY8n5C-Q" name="" type="_dYD8gItlEe-3nrFY8n5C-Q" association="_du4hFItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du5IIYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du5IIotlEe-3nrFY8n5C-Q _dtW3EYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du5IIotlEe-3nrFY8n5C-Q" name="" type="_dYD8gItlEe-3nrFY8n5C-Q" association="_du5IIYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du5vMItlEe-3nrFY8n5C-Q" name="" memberEnd="_du5vMYtlEe-3nrFY8n5C-Q _dtW3FItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du5vMYtlEe-3nrFY8n5C-Q" name="" type="_dYD8gItlEe-3nrFY8n5C-Q" association="_du5vMItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du5vM4tlEe-3nrFY8n5C-Q" name="" memberEnd="_du5vNItlEe-3nrFY8n5C-Q _dtW3F4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du5vNItlEe-3nrFY8n5C-Q" name="" type="_dYD8gItlEe-3nrFY8n5C-Q" association="_du5vM4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du6WQItlEe-3nrFY8n5C-Q" name="" memberEnd="_du6WQYtlEe-3nrFY8n5C-Q _dtXeIotlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du6WQYtlEe-3nrFY8n5C-Q" name="" type="_dYD8gItlEe-3nrFY8n5C-Q" association="_du6WQItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du6WQ4tlEe-3nrFY8n5C-Q" name="" memberEnd="_du6WRItlEe-3nrFY8n5C-Q _dtXeJItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du6WRItlEe-3nrFY8n5C-Q" name="" type="_dYHm4ItlEe-3nrFY8n5C-Q" association="_du6WQ4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du69UItlEe-3nrFY8n5C-Q" name="" memberEnd="_du69UYtlEe-3nrFY8n5C-Q _dteL0ItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du69UYtlEe-3nrFY8n5C-Q" name="" type="_dYTNEYtlEe-3nrFY8n5C-Q" association="_du69UItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du69U4tlEe-3nrFY8n5C-Q" name="" memberEnd="_du69VItlEe-3nrFY8n5C-Q _dteL04tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du69VItlEe-3nrFY8n5C-Q" name="" type="_dYTNEYtlEe-3nrFY8n5C-Q" association="_du69U4tlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du7kYYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du7kYotlEe-3nrFY8n5C-Q _dtey4ItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du7kYotlEe-3nrFY8n5C-Q" name="" type="_dYYsoItlEe-3nrFY8n5C-Q" association="_du7kYYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du7kZItlEe-3nrFY8n5C-Q" name="" memberEnd="_du7kZYtlEe-3nrFY8n5C-Q _dtey4otlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du7kZYtlEe-3nrFY8n5C-Q" name="" type="_dYYsoItlEe-3nrFY8n5C-Q" association="_du7kZItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du8LcYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du8LcotlEe-3nrFY8n5C-Q _dtfZ8ItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du8LcotlEe-3nrFY8n5C-Q" name="" type="_dYYsoItlEe-3nrFY8n5C-Q" association="_du8LcYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du8LdItlEe-3nrFY8n5C-Q" name="" memberEnd="_du8LdYtlEe-3nrFY8n5C-Q _dtfZ8otlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du8LdYtlEe-3nrFY8n5C-Q" name="" type="_dYYsoItlEe-3nrFY8n5C-Q" association="_du8LdItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du8ygYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du8ygotlEe-3nrFY8n5C-Q _dtfZ9ItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du8ygotlEe-3nrFY8n5C-Q" name="" type="_dYYsoItlEe-3nrFY8n5C-Q" association="_du8ygYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du8yhItlEe-3nrFY8n5C-Q" name="" memberEnd="_du8yhYtlEe-3nrFY8n5C-Q _dtjEUItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du8yhYtlEe-3nrFY8n5C-Q" name="" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_du8yhItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du9ZkYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du9ZkotlEe-3nrFY8n5C-Q _dtjEU4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du9ZkotlEe-3nrFY8n5C-Q" name="" type="_dYgBYItlEe-3nrFY8n5C-Q" association="_du9ZkYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du9ZlItlEe-3nrFY8n5C-Q" name="" memberEnd="_du9ZlYtlEe-3nrFY8n5C-Q _dtkSdItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du9ZlYtlEe-3nrFY8n5C-Q" name="" type="_dYuD0ItlEe-3nrFY8n5C-Q" association="_du9ZlItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du-AoYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du-AootlEe-3nrFY8n5C-Q _dtk5gItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du-AootlEe-3nrFY8n5C-Q" name="" type="_dYuD0ItlEe-3nrFY8n5C-Q" association="_du-AoYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du-ApItlEe-3nrFY8n5C-Q" name="" memberEnd="_du-ApYtlEe-3nrFY8n5C-Q _dtk5g4tlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du-ApYtlEe-3nrFY8n5C-Q" name="" type="_dYxHIItlEe-3nrFY8n5C-Q" association="_du-ApItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du-nsYtlEe-3nrFY8n5C-Q" name="" memberEnd="_du-nsotlEe-3nrFY8n5C-Q _dtnVwYtlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du-nsotlEe-3nrFY8n5C-Q" name="" type="_dYy8UItlEe-3nrFY8n5C-Q" association="_du-nsYtlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_du-ntItlEe-3nrFY8n5C-Q" name="" memberEnd="_du-ntYtlEe-3nrFY8n5C-Q _dtnVxItlEe-3nrFY8n5C-Q">
              <ownedEnd xmi:id="_du-ntYtlEe-3nrFY8n5C-Q" name="" type="_dYy8UItlEe-3nrFY8n5C-Q" association="_du-ntItlEe-3nrFY8n5C-Q"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_JwOcApWyEe-EOddEwqrIsA" name="" memberEnd="_JwOcA5WyEe-EOddEwqrIsA _JwNN4JWyEe-EOddEwqrIsA">
              <ownedEnd xmi:id="_JwOcA5WyEe-EOddEwqrIsA" name="" type="_dY8GQItlEe-3nrFY8n5C-Q" association="_JwOcApWyEe-EOddEwqrIsA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_dQTusYtlEe-3nrFY8n5C-Q" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_dqOqkYtlEe-3nrFY8n5C-Q" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dqOqk4tlEe-3nrFY8n5C-Q" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dqPRoItlEe-3nrFY8n5C-Q" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dspFYYtlEe-3nrFY8n5C-Q" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_dRxuUItlEe-3nrFY8n5C-Q" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_dqjasItlEe-3nrFY8n5C-Q" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dNxYEItlEe-3nrFY8n5C-Q" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_dNxYEYtlEe-3nrFY8n5C-Q" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_dOxdoItlEe-3nrFY8n5C-Q" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_dp-L4ItlEe-3nrFY8n5C-Q" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_dUENUItlEe-3nrFY8n5C-Q" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_drJQk4tlEe-3nrFY8n5C-Q" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dXpFwItlEe-3nrFY8n5C-Q" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dp1pAItlEe-3nrFY8n5C-Q" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dp2QEYtlEe-3nrFY8n5C-Q" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dp23IYtlEe-3nrFY8n5C-Q" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dp23I4tlEe-3nrFY8n5C-Q" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dp3eMYtlEe-3nrFY8n5C-Q" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dqCdVYtlEe-3nrFY8n5C-Q" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_dqd7IItlEe-3nrFY8n5C-Q" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqkBwYtlEe-3nrFY8n5C-Q" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_drIpgItlEe-3nrFY8n5C-Q" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_drIpgotlEe-3nrFY8n5C-Q" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_drJQkYtlEe-3nrFY8n5C-Q" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_drU2wItlEe-3nrFY8n5C-Q" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_drVd0ItlEe-3nrFY8n5C-Q" name="Queue"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UDV28JV4Ee-EOddEwqrIsA" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dPlV8ItlEe-3nrFY8n5C-Q" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_dqFgoYtlEe-3nrFY8n5C-Q" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqFgo4tlEe-3nrFY8n5C-Q" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqWmYItlEe-3nrFY8n5C-Q" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqWmYotlEe-3nrFY8n5C-Q" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dPlV8YtlEe-3nrFY8n5C-Q" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_dPlV8otlEe-3nrFY8n5C-Q" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_dqGHsItlEe-3nrFY8n5C-Q" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dqGHsotlEe-3nrFY8n5C-Q" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dqGuwItlEe-3nrFY8n5C-Q" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dQet0ItlEe-3nrFY8n5C-Q" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_dqUKIItlEe-3nrFY8n5C-Q" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dsCBYItlEe-3nrFY8n5C-Q" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_dsCBYYtlEe-3nrFY8n5C-Q" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dsRR8otlEe-3nrFY8n5C-Q" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_dscRFItlEe-3nrFY8n5C-Q" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dsyPUItlEe-3nrFY8n5C-Q" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dPku4ItlEe-3nrFY8n5C-Q" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_dPku4YtlEe-3nrFY8n5C-Q" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_dPku4otlEe-3nrFY8n5C-Q" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_dqE5kItlEe-3nrFY8n5C-Q" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dPlV84tlEe-3nrFY8n5C-Q" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_dPl9AItlEe-3nrFY8n5C-Q" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_dQfU4ItlEe-3nrFY8n5C-Q" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_dqVYQYtlEe-3nrFY8n5C-Q" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dqVYQ4tlEe-3nrFY8n5C-Q" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqGuwotlEe-3nrFY8n5C-Q" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqUKIotlEe-3nrFY8n5C-Q" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqUxMYtlEe-3nrFY8n5C-Q" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dqUxM4tlEe-3nrFY8n5C-Q" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dQTHoItlEe-3nrFY8n5C-Q" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_dQTHoYtlEe-3nrFY8n5C-Q" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_dQTHootlEe-3nrFY8n5C-Q" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_dQTHo4tlEe-3nrFY8n5C-Q" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_dQTusItlEe-3nrFY8n5C-Q" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_dqODgYtlEe-3nrFY8n5C-Q" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_dqODg4tlEe-3nrFY8n5C-Q" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dqM1YItlEe-3nrFY8n5C-Q" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dqNccYtlEe-3nrFY8n5C-Q" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_dqNcc4tlEe-3nrFY8n5C-Q" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dUj8kItlEe-3nrFY8n5C-Q" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_dUj8kYtlEe-3nrFY8n5C-Q" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_dUj8kotlEe-3nrFY8n5C-Q" name="api">
            <packagedElement xmi:type="uml:Class" xmi:id="_drZvQItlEe-3nrFY8n5C-Q" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_draWUYtlEe-3nrFY8n5C-Q" name="AfterEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_draWU4tlEe-3nrFY8n5C-Q" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_dra9YYtlEe-3nrFY8n5C-Q" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dQWK8YtlEe-3nrFY8n5C-Q" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_dqP4sYtlEe-3nrFY8n5C-Q" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dqQfw4tlEe-3nrFY8n5C-Q" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dqRG1otlEe-3nrFY8n5C-Q" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dqRt5otlEe-3nrFY8n5C-Q" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dqSU9otlEe-3nrFY8n5C-Q" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dqS8BotlEe-3nrFY8n5C-Q" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drQlUYtlEe-3nrFY8n5C-Q" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drRMYotlEe-3nrFY8n5C-Q" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drRzc4tlEe-3nrFY8n5C-Q" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drSahotlEe-3nrFY8n5C-Q" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dTry0ItlEe-3nrFY8n5C-Q" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_dq7OIItlEe-3nrFY8n5C-Q" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dq71MYtlEe-3nrFY8n5C-Q" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dq8cQItlEe-3nrFY8n5C-Q" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dq8cQotlEe-3nrFY8n5C-Q" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_dq8cRItlEe-3nrFY8n5C-Q" name="StringHolder"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dT2K4ItlEe-3nrFY8n5C-Q" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_drAGoItlEe-3nrFY8n5C-Q" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drAtuItlEe-3nrFY8n5C-Q" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drBUxotlEe-3nrFY8n5C-Q" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drB71otlEe-3nrFY8n5C-Q" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drCi5otlEe-3nrFY8n5C-Q" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_drDJ9otlEe-3nrFY8n5C-Q" name="ChannelContext"/>
    </packagedElement>
    <profileApplication xmi:id="_cc4tsItlEe-3nrFY8n5C-Q">
      <eAnnotations xmi:id="_cc4tsYtlEe-3nrFY8n5C-Q" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_cc5UwItlEe-3nrFY8n5C-Q" base_Package="_cVByMItlEe-3nrFY8n5C-Q">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_dWEYcItlEe-3nrFY8n5C-Q" genericsValue="T,E" base_Element="_dWDKUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWIp4YtlEe-3nrFY8n5C-Q" base_Element="_dWIp4ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWJQ8ItlEe-3nrFY8n5C-Q" base_Element="_dWIp4ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWJQ8YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dWJ4AItlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dWJQ8otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dWKfEItlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dWJ4AYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dWKfEotlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dWKfEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dWLtMItlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dWLGIItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dWLtMotlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dWLtMYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dWbk0ItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dWa9wItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dWfPMItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dWeoJotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWkuwYtlEe-3nrFY8n5C-Q" base_Element="_dWkuwItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWlV0ItlEe-3nrFY8n5C-Q" base_Element="_dWkuwItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWlV0YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWlV04tlEe-3nrFY8n5C-Q" base_Element="_dWlV0otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWlV1ItlEe-3nrFY8n5C-Q" base_Element="_dWlV0otlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWlV1YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWlV14tlEe-3nrFY8n5C-Q" base_Element="_dWlV1otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWl84ItlEe-3nrFY8n5C-Q" base_Element="_dWlV1otlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWl84YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dWoZIItlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dWnyEItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWpnRYtlEe-3nrFY8n5C-Q" base_Element="_dWpnQ4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWpnRotlEe-3nrFY8n5C-Q" base_Element="_dWpnQ4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWpnR4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWq1YYtlEe-3nrFY8n5C-Q" base_Element="_dWq1YItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWsqkItlEe-3nrFY8n5C-Q" base_Element="_dWsDiYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWsqkYtlEe-3nrFY8n5C-Q" base_Element="_dWsDiYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWsqkotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWsqlYtlEe-3nrFY8n5C-Q" base_Element="_dWsqk4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWsqlotlEe-3nrFY8n5C-Q" base_Element="_dWsqk4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWsql4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dWtRoYtlEe-3nrFY8n5C-Q" base_Element="_dWtRoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dWtRootlEe-3nrFY8n5C-Q" base_Element="_dWtRoItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dWtRo4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dWzYQ4tlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dWzYQotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dWz_UYtlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dWz_UItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dW0mYItlEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_dWz_UotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dW1NdItlEe-3nrFY8n5C-Q" base_Element="_dW1NcotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dW10gItlEe-3nrFY8n5C-Q" base_Element="_dW1NcotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dW10gYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dW5e4YtlEe-3nrFY8n5C-Q" base_Element="_dW5e4ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dW5e4otlEe-3nrFY8n5C-Q" base_Element="_dW5e4ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dW5e44tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_dW-XZotlEe-3nrFY8n5C-Q" dimensions="2" base_Element="_dW-XYItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXG6QItlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dXGTMItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXHhUYtlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dXHhUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXJWhItlEe-3nrFY8n5C-Q" base_Element="_dXJWgotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXJWhYtlEe-3nrFY8n5C-Q" base_Element="_dXJWgotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXJWhotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXJ9lotlEe-3nrFY8n5C-Q" base_Element="_dXJ9lItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXKkoItlEe-3nrFY8n5C-Q" base_Element="_dXJ9lItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXKkoYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXKko4tlEe-3nrFY8n5C-Q" base_Element="_dXKkootlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXKkpItlEe-3nrFY8n5C-Q" base_Element="_dXKkootlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXKkpYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXNn8ItlEe-3nrFY8n5C-Q" base_Element="_dXNA6YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXNn8YtlEe-3nrFY8n5C-Q" base_Element="_dXNA6YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXNn8otlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dXOPAItlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dXNn84tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXQEMItlEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_dXPdIItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXQrQItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dXQEMYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dXQrRItlEe-3nrFY8n5C-Q" base_Element="_dXQrQYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXU8sItlEe-3nrFY8n5C-Q" base_Element="_dXUVoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXU8sYtlEe-3nrFY8n5C-Q" base_Element="_dXUVoItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXU8sotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dXWx4YtlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dXWx4ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXcRcItlEe-3nrFY8n5C-Q" base_Element="_dXbqZYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXcRcYtlEe-3nrFY8n5C-Q" base_Element="_dXbqZYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXcRcotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXcRd4tlEe-3nrFY8n5C-Q" base_Element="_dXcRdYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXc4gItlEe-3nrFY8n5C-Q" base_Element="_dXcRdYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXc4gYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXc4hItlEe-3nrFY8n5C-Q" base_Element="_dXc4gotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXc4hYtlEe-3nrFY8n5C-Q" base_Element="_dXc4gotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXc4hotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXdfkYtlEe-3nrFY8n5C-Q" base_Element="_dXdfkItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXdfkotlEe-3nrFY8n5C-Q" base_Element="_dXdfkItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXdfk4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXdflYtlEe-3nrFY8n5C-Q" base_Element="_dXdflItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXdflotlEe-3nrFY8n5C-Q" base_Element="_dXdflItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXeGoItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXeGo4tlEe-3nrFY8n5C-Q" base_Element="_dXeGoYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXeGpItlEe-3nrFY8n5C-Q" base_Element="_dXeGoYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXeGpYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXeGqItlEe-3nrFY8n5C-Q" base_Element="_dXeGpotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXetsItlEe-3nrFY8n5C-Q" base_Element="_dXeGpotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXetsYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXettYtlEe-3nrFY8n5C-Q" base_Element="_dXets4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXettotlEe-3nrFY8n5C-Q" base_Element="_dXets4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXett4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dXfUwItlEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_dXetuItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXkNQYtlEe-3nrFY8n5C-Q" base_Element="_dXkNQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXkNQotlEe-3nrFY8n5C-Q" base_Element="_dXkNQItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXkNQ4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXk0UYtlEe-3nrFY8n5C-Q" base_Element="_dXk0UItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXk0UotlEe-3nrFY8n5C-Q" base_Element="_dXk0UItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXk0U4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXk0VYtlEe-3nrFY8n5C-Q" base_Element="_dXk0VItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXlbYItlEe-3nrFY8n5C-Q" base_Element="_dXk0VItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXlbYYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_dXlbZYtlEe-3nrFY8n5C-Q" base_Element="_dXlbYotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXlbZotlEe-3nrFY8n5C-Q" base_Element="_dXlbYotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXlbZ4tlEe-3nrFY8n5C-Q" base_Element="_dXlbYotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXlbaItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_dXmCcYtlEe-3nrFY8n5C-Q" dimensions="2" base_Element="_dXlbaYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXmCcotlEe-3nrFY8n5C-Q" base_Element="_dXlbaYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXmCc4tlEe-3nrFY8n5C-Q" base_Element="_dXlbaYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXmCdItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dXnQkYtlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dXnQkItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXoesItlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dXn3oItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dXpFwYtlEe-3nrFY8n5C-Q" base_Element="_dXpFwItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXps0ItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dXpFwotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dXulUYtlEe-3nrFY8n5C-Q" base_Element="_dXulUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dXulUotlEe-3nrFY8n5C-Q" base_Element="_dXulUItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dXulU4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dXwagItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dXvzcItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXxooYtlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dXxooItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dXy2wItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dXyPsItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dX7ZoYtlEe-3nrFY8n5C-Q" genericsValue="T extends SchedulableObject" base_Element="_dX7ZoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dX8AtItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dX8As4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dX9O0YtlEe-3nrFY8n5C-Q" base_Element="_dX9O0ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dX_rEItlEe-3nrFY8n5C-Q" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_dX_EAItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYCHUItlEe-3nrFY8n5C-Q" base_Element="_dYBgQYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYCuYYtlEe-3nrFY8n5C-Q" base_Element="_dYCuYItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYFKoYtlEe-3nrFY8n5C-Q" base_Element="_dYFKoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYFKootlEe-3nrFY8n5C-Q" base_Element="_dYFKoItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYFKo4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYFKpYtlEe-3nrFY8n5C-Q" base_Element="_dYFKpItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYFxsItlEe-3nrFY8n5C-Q" base_Element="_dYFKpItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYFxsYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYFxtItlEe-3nrFY8n5C-Q" base_Element="_dYFxsotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYFxtYtlEe-3nrFY8n5C-Q" base_Element="_dYFxsotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYFxtotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_dYKDJYtlEe-3nrFY8n5C-Q" base_Element="_dYKDIotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dYKqMItlEe-3nrFY8n5C-Q" dimensions="2" base_Element="_dYKDJotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dYNtg4tlEe-3nrFY8n5C-Q" base_Element="_dYNtgYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dYTNEItlEe-3nrFY8n5C-Q" genericsValue="InstructionParameters" base_Element="_dYSmBItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dYUbMItlEe-3nrFY8n5C-Q" genericsValue="InstructionParameters" base_Element="_dYT0JItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYZ6wItlEe-3nrFY8n5C-Q" base_Element="_dYZTsItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYZ6wYtlEe-3nrFY8n5C-Q" base_Element="_dYZTsItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYZ6wotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYZ6xItlEe-3nrFY8n5C-Q" base_Element="_dYZ6w4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYZ6xYtlEe-3nrFY8n5C-Q" base_Element="_dYZ6w4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYZ6xotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYah0YtlEe-3nrFY8n5C-Q" base_Element="_dYah0ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYah0otlEe-3nrFY8n5C-Q" base_Element="_dYah0ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYah04tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYbI4YtlEe-3nrFY8n5C-Q" base_Element="_dYbI4ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYbI4otlEe-3nrFY8n5C-Q" base_Element="_dYbI4ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYbI44tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYbI5YtlEe-3nrFY8n5C-Q" base_Element="_dYbI5ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYbI5otlEe-3nrFY8n5C-Q" base_Element="_dYbI5ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYbI54tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYbv8YtlEe-3nrFY8n5C-Q" base_Element="_dYbI6ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYbv8otlEe-3nrFY8n5C-Q" base_Element="_dYbI6ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYbv84tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYbv9otlEe-3nrFY8n5C-Q" base_Element="_dYbv9ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYbv94tlEe-3nrFY8n5C-Q" base_Element="_dYbv9ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYbv-ItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYcXAotlEe-3nrFY8n5C-Q" base_Element="_dYcXAItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYcXA4tlEe-3nrFY8n5C-Q" base_Element="_dYcXAItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYcXBItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYcXBotlEe-3nrFY8n5C-Q" base_Element="_dYcXBYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYcXB4tlEe-3nrFY8n5C-Q" base_Element="_dYcXBYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYcXCItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYc-EYtlEe-3nrFY8n5C-Q" base_Element="_dYc-EItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYc-EotlEe-3nrFY8n5C-Q" base_Element="_dYc-EItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYc-E4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYc-FotlEe-3nrFY8n5C-Q" base_Element="_dYc-FItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYc-F4tlEe-3nrFY8n5C-Q" base_Element="_dYc-FItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYdlIItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYdlI4tlEe-3nrFY8n5C-Q" base_Element="_dYdlIYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYdlJItlEe-3nrFY8n5C-Q" base_Element="_dYdlIYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYdlJYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYdlKItlEe-3nrFY8n5C-Q" base_Element="_dYdlJotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYdlKYtlEe-3nrFY8n5C-Q" base_Element="_dYdlJotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYeMMItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYeMM4tlEe-3nrFY8n5C-Q" base_Element="_dYeMMYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYeMNItlEe-3nrFY8n5C-Q" base_Element="_dYeMMYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYeMNYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYeMN4tlEe-3nrFY8n5C-Q" base_Element="_dYeMNotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYeMOItlEe-3nrFY8n5C-Q" base_Element="_dYeMNotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYeMOYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_dYnWI4tlEe-3nrFY8n5C-Q" base_Element="_dYnWIItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dYn9M4tlEe-3nrFY8n5C-Q" base_Element="_dYn9MItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dYokQotlEe-3nrFY8n5C-Q" dimensions="0" base_Element="_dYn9N4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dYpLUYtlEe-3nrFY8n5C-Q" base_Element="_dYokSItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYvR8ItlEe-3nrFY8n5C-Q" base_Element="_dYuq5YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYvR8YtlEe-3nrFY8n5C-Q" base_Element="_dYuq5YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYvR8otlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYvR9ItlEe-3nrFY8n5C-Q" base_Element="_dYvR84tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYvR9YtlEe-3nrFY8n5C-Q" base_Element="_dYvR84tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYvR9otlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dYv5AotlEe-3nrFY8n5C-Q" base_Element="_dYv5AItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dYv5A4tlEe-3nrFY8n5C-Q" base_Element="_dYv5AItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dYv5BItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dY1YkItlEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_dY0xiotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dY8tUYtlEe-3nrFY8n5C-Q" base_Element="_dY8tUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dY8tUotlEe-3nrFY8n5C-Q" base_Element="_dY8tUItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dY8tU4tlEe-3nrFY8n5C-Q" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dZA-x4tlEe-3nrFY8n5C-Q" base_Element="_dZA-xotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dZA-yItlEe-3nrFY8n5C-Q" base_Element="_dZA-xotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dZA-yYtlEe-3nrFY8n5C-Q" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dp2QEItlEe-3nrFY8n5C-Q" base_Element="_dp1pAItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dp23IItlEe-3nrFY8n5C-Q" base_Element="_dp2QEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dp23IotlEe-3nrFY8n5C-Q" base_Element="_dp23IYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dp3eMItlEe-3nrFY8n5C-Q" base_Element="_dp23I4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dp3eMotlEe-3nrFY8n5C-Q" base_Element="_dp3eMYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dp5TYItlEe-3nrFY8n5C-Q" base_Element="_dp4sVItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dp5TYYtlEe-3nrFY8n5C-Q" base_Element="_dp4sVItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dp5TYotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dp56dotlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dp56dYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dp6hgotlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dp6hgYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dp8WsItlEe-3nrFY8n5C-Q" genericsValue="String, Activation" base_Element="_dp7voItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dp-y8ItlEe-3nrFY8n5C-Q" base_Element="_dp-L4ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqAoIotlEe-3nrFY8n5C-Q" base_Element="_dqABHItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqAoI4tlEe-3nrFY8n5C-Q" base_Element="_dqABHItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqAoJItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqDEYItlEe-3nrFY8n5C-Q" base_Element="_dqCdVYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqESgItlEe-3nrFY8n5C-Q" base_Element="_dqDrcItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqESgYtlEe-3nrFY8n5C-Q" base_Element="_dqDrcItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqESgotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqFgoItlEe-3nrFY8n5C-Q" base_Element="_dqE5kItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqFgootlEe-3nrFY8n5C-Q" base_Element="_dqFgoYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqFgpItlEe-3nrFY8n5C-Q" base_Element="_dqFgo4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqGHsYtlEe-3nrFY8n5C-Q" base_Element="_dqGHsItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqGHs4tlEe-3nrFY8n5C-Q" base_Element="_dqGHsotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqGuwYtlEe-3nrFY8n5C-Q" base_Element="_dqGuwItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqGuw4tlEe-3nrFY8n5C-Q" base_Element="_dqGuwotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqIj8ItlEe-3nrFY8n5C-Q" base_Element="_dqH85ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqIj8YtlEe-3nrFY8n5C-Q" base_Element="_dqH85ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqIj8otlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dqKZIItlEe-3nrFY8n5C-Q" genericsValue="String, Flow" base_Element="_dqJyEItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dqLAMItlEe-3nrFY8n5C-Q" genericsValue="Node, Activation" base_Element="_dqKZIYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqNccItlEe-3nrFY8n5C-Q" base_Element="_dqM1YItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqNccotlEe-3nrFY8n5C-Q" base_Element="_dqNccYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqODgItlEe-3nrFY8n5C-Q" base_Element="_dqNcc4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqODgotlEe-3nrFY8n5C-Q" base_Element="_dqODgYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqOqkItlEe-3nrFY8n5C-Q" base_Element="_dqODg4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqOqkotlEe-3nrFY8n5C-Q" base_Element="_dqOqkYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqOqlItlEe-3nrFY8n5C-Q" base_Element="_dqOqk4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqPRoYtlEe-3nrFY8n5C-Q" base_Element="_dqPRoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqP4sotlEe-3nrFY8n5C-Q" base_Element="_dqP4sYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqQfwItlEe-3nrFY8n5C-Q" base_Element="_dqP4s4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqQfwYtlEe-3nrFY8n5C-Q" base_Element="_dqP4s4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqQfwotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqRG0ItlEe-3nrFY8n5C-Q" base_Element="_dqQfw4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqRG04tlEe-3nrFY8n5C-Q" base_Element="_dqRG0YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqRG1ItlEe-3nrFY8n5C-Q" base_Element="_dqRG0YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqRG1YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqRt4ItlEe-3nrFY8n5C-Q" base_Element="_dqRG1otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqRt44tlEe-3nrFY8n5C-Q" base_Element="_dqRt4YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqRt5ItlEe-3nrFY8n5C-Q" base_Element="_dqRt4YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqRt5YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqSU8ItlEe-3nrFY8n5C-Q" base_Element="_dqRt5otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqSU84tlEe-3nrFY8n5C-Q" base_Element="_dqSU8YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqSU9ItlEe-3nrFY8n5C-Q" base_Element="_dqSU8YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqSU9YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqS8AItlEe-3nrFY8n5C-Q" base_Element="_dqSU9otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqS8A4tlEe-3nrFY8n5C-Q" base_Element="_dqS8AYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqS8BItlEe-3nrFY8n5C-Q" base_Element="_dqS8AYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqS8BYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqTjEItlEe-3nrFY8n5C-Q" base_Element="_dqS8BotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqTjE4tlEe-3nrFY8n5C-Q" base_Element="_dqTjEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqTjFItlEe-3nrFY8n5C-Q" base_Element="_dqTjEYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqTjFYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqUKIYtlEe-3nrFY8n5C-Q" base_Element="_dqUKIItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqUxMItlEe-3nrFY8n5C-Q" base_Element="_dqUKIotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqUxMotlEe-3nrFY8n5C-Q" base_Element="_dqUxMYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqVYQItlEe-3nrFY8n5C-Q" base_Element="_dqUxM4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqVYQotlEe-3nrFY8n5C-Q" base_Element="_dqVYQYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqV_UItlEe-3nrFY8n5C-Q" base_Element="_dqVYQ4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqWmYYtlEe-3nrFY8n5C-Q" base_Element="_dqWmYItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqXNcItlEe-3nrFY8n5C-Q" base_Element="_dqWmYotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dqYbkYtlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dqYbkItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqZCoItlEe-3nrFY8n5C-Q" base_Element="_dqYbkotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqbe44tlEe-3nrFY8n5C-Q" base_Element="_dqbe4ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqbe5ItlEe-3nrFY8n5C-Q" base_Element="_dqbe4ItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqbe5YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dqctAYtlEe-3nrFY8n5C-Q" genericsValue="String, Node" base_Element="_dqctAItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqd7IYtlEe-3nrFY8n5C-Q" base_Element="_dqd7IItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqg-cItlEe-3nrFY8n5C-Q" base_Element="_dqgXZotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqg-cYtlEe-3nrFY8n5C-Q" base_Element="_dqgXZotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqg-cotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dqhlg4tlEe-3nrFY8n5C-Q" genericsValue="ScheduleTime" base_Element="_dqg-d4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dqizoYtlEe-3nrFY8n5C-Q" base_Element="_dqiMm4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dqizootlEe-3nrFY8n5C-Q" base_Element="_dqiMm4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dqizo4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dqkBwItlEe-3nrFY8n5C-Q" base_Element="_dqjasItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dqkBwotlEe-3nrFY8n5C-Q" base_Element="_dqkBwYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dqphUItlEe-3nrFY8n5C-Q" genericsValue="String,InstructionTimeSlot" base_Element="_dqo6QItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dqrWgItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dqqvcYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dqr9kYtlEe-3nrFY8n5C-Q" genericsValue="Double" base_Element="_dqr9kItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dqskoYtlEe-3nrFY8n5C-Q" genericsValue="Double,ReliabilityRow" base_Element="_dqskoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dqzSUYtlEe-3nrFY8n5C-Q" genericsValue="Activation,Row&lt;Activation>" base_Element="_dqzSUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dq0gcItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dqz5YYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq1HgItlEe-3nrFY8n5C-Q" base_Element="_dq0gcotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq2VoItlEe-3nrFY8n5C-Q" base_Element="_dq1ukItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq28sItlEe-3nrFY8n5C-Q" base_Element="_dq2VoYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq71MItlEe-3nrFY8n5C-Q" base_Element="_dq7OIItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq71MotlEe-3nrFY8n5C-Q" base_Element="_dq71MYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq8cQYtlEe-3nrFY8n5C-Q" base_Element="_dq8cQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq8cQ4tlEe-3nrFY8n5C-Q" base_Element="_dq8cQotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dq9DUItlEe-3nrFY8n5C-Q" base_Element="_dq8cRItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_drAGoYtlEe-3nrFY8n5C-Q" base_Element="_drAGoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drAtsItlEe-3nrFY8n5C-Q" base_Element="_drAGootlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drAtsYtlEe-3nrFY8n5C-Q" base_Element="_drAGootlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drAtsotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drAttYtlEe-3nrFY8n5C-Q" base_Element="_drAts4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drAttotlEe-3nrFY8n5C-Q" base_Element="_drAts4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drAtt4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drBUwItlEe-3nrFY8n5C-Q" base_Element="_drAtuItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drBUw4tlEe-3nrFY8n5C-Q" base_Element="_drBUwYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drBUxItlEe-3nrFY8n5C-Q" base_Element="_drBUwYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drBUxYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drB70ItlEe-3nrFY8n5C-Q" base_Element="_drBUxotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drB704tlEe-3nrFY8n5C-Q" base_Element="_drB70YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drB71ItlEe-3nrFY8n5C-Q" base_Element="_drB70YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drB71YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drCi4ItlEe-3nrFY8n5C-Q" base_Element="_drB71otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drCi44tlEe-3nrFY8n5C-Q" base_Element="_drCi4YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drCi5ItlEe-3nrFY8n5C-Q" base_Element="_drCi4YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drCi5YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drDJ8ItlEe-3nrFY8n5C-Q" base_Element="_drCi5otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drDJ84tlEe-3nrFY8n5C-Q" base_Element="_drDJ8YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drDJ9ItlEe-3nrFY8n5C-Q" base_Element="_drDJ8YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drDJ9YtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drDxAItlEe-3nrFY8n5C-Q" base_Element="_drDJ9otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drDxA4tlEe-3nrFY8n5C-Q" base_Element="_drDxAYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drDxBItlEe-3nrFY8n5C-Q" base_Element="_drDxAYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drDxBYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drIpgYtlEe-3nrFY8n5C-Q" base_Element="_drIpgItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_drJQkItlEe-3nrFY8n5C-Q" base_Element="_drIpgotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_drJQkotlEe-3nrFY8n5C-Q" base_Element="_drJQkYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_drJ3oItlEe-3nrFY8n5C-Q" base_Element="_drJQk4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drP-QItlEe-3nrFY8n5C-Q" base_Element="_drPXN4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drP-QYtlEe-3nrFY8n5C-Q" base_Element="_drPXN4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drP-QotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drP-RYtlEe-3nrFY8n5C-Q" base_Element="_drP-Q4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drP-RotlEe-3nrFY8n5C-Q" base_Element="_drP-Q4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drQlUItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drQlUotlEe-3nrFY8n5C-Q" base_Element="_drQlUYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drQlVYtlEe-3nrFY8n5C-Q" base_Element="_drQlU4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drRMYItlEe-3nrFY8n5C-Q" base_Element="_drQlU4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drRMYYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drRMY4tlEe-3nrFY8n5C-Q" base_Element="_drRMYotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drRzcItlEe-3nrFY8n5C-Q" base_Element="_drRMZItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drRzcYtlEe-3nrFY8n5C-Q" base_Element="_drRMZItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drRzcotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drSagItlEe-3nrFY8n5C-Q" base_Element="_drRzc4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drSag4tlEe-3nrFY8n5C-Q" base_Element="_drSagYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drSahItlEe-3nrFY8n5C-Q" base_Element="_drSagYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drSahYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drTBkItlEe-3nrFY8n5C-Q" base_Element="_drSahotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drTBk4tlEe-3nrFY8n5C-Q" base_Element="_drTBkYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drTBlItlEe-3nrFY8n5C-Q" base_Element="_drTBkYtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drTBlYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drTooItlEe-3nrFY8n5C-Q" base_Element="_drTBlotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drTooYtlEe-3nrFY8n5C-Q" base_Element="_drTBlotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drToootlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drTopYtlEe-3nrFY8n5C-Q" base_Element="_drToo4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drTopotlEe-3nrFY8n5C-Q" base_Element="_drToo4tlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drTop4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_drUPsItlEe-3nrFY8n5C-Q" base_Element="_drToqItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_drUPsYtlEe-3nrFY8n5C-Q" base_Element="_drToqItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_drUPsotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_drU2wYtlEe-3nrFY8n5C-Q" base_Element="_drU2wItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_drVd0YtlEe-3nrFY8n5C-Q" base_Element="_drVd0ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_draWUItlEe-3nrFY8n5C-Q" base_Element="_drZvQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_draWUotlEe-3nrFY8n5C-Q" base_Element="_draWUYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dra9YItlEe-3nrFY8n5C-Q" base_Element="_draWU4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dra9YotlEe-3nrFY8n5C-Q" base_Element="_dra9YYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsBaUYtlEe-3nrFY8n5C-Q" genericsValue="T, E" base_Element="_dsBaUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dsCBYotlEe-3nrFY8n5C-Q" base_Element="_dsCBYYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsCocItlEe-3nrFY8n5C-Q" genericsValue="Activation" base_Element="_dsCBY4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsDPgotlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dsDPgYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsD2kItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dsDPhItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsEdoItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dsD2kotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsEdo4tlEe-3nrFY8n5C-Q" genericsValue="ScheduleTime" base_Element="_dsEdootlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsFrwYtlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dsFrwItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsHg8ItlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dsG54otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsHg8YtlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dsG544tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsIIAYtlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dsIIAItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsIvEItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dsIIA4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsJWIItlEe-3nrFY8n5C-Q" genericsValue="Activation" base_Element="_dsIvEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsJ9M4tlEe-3nrFY8n5C-Q" base_Element="_dsJ9MItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsJ9NItlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dsJ9MYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsKkQItlEe-3nrFY8n5C-Q" base_Element="_dsJ9MItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsKkQYtlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dsKkQ4tlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dsKkQotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dsLLUYtlEe-3nrFY8n5C-Q" base_Element="_dsLLUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsLyYotlEe-3nrFY8n5C-Q" base_Element="_dsLLUotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsLyY4tlEe-3nrFY8n5C-Q" base_Element="_dsLLUotlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsLyZItlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dsMZcItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dsLyZYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsNAgItlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dsMZcYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsNnkYtlEe-3nrFY8n5C-Q" genericsValue="Flow" base_Element="_dsNnkItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsO1s4tlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dsO1sotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsPcwotlEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_dsPcwYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dsR5AItlEe-3nrFY8n5C-Q" base_Element="_dsRR8otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsSgEYtlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dsSgEItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsTHJItlEe-3nrFY8n5C-Q" base_Element="_dsTHIItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsTHJYtlEe-3nrFY8n5C-Q" base_Element="_dsTHIItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsTHJotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dsTuMYtlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dsTuMItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsUVRItlEe-3nrFY8n5C-Q" base_Element="_dsUVQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsUVRYtlEe-3nrFY8n5C-Q" base_Element="_dsUVQItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsUVRotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dsU8UItlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dsUVR4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsVjYYtlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dsVjYItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsWKdItlEe-3nrFY8n5C-Q" base_Element="_dsWKcItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsWKdYtlEe-3nrFY8n5C-Q" base_Element="_dsWKcItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsWKdotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dsXYkItlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dsWxg4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dsXYlYtlEe-3nrFY8n5C-Q" base_Element="_dsXYkYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsX_oItlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dsXYkotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dsYmsYtlEe-3nrFY8n5C-Q" base_Element="_dsYmsItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsZ00ItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dsZNwotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsab4ItlEe-3nrFY8n5C-Q" base_Element="_dsZ00YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsab4YtlEe-3nrFY8n5C-Q" base_Element="_dsZ00YtlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsab4otlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dsbC8YtlEe-3nrFY8n5C-Q" base_Element="_dsbC8ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dsc4IItlEe-3nrFY8n5C-Q" base_Element="_dscRFItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dseGQYtlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dseGQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsetVItlEe-3nrFY8n5C-Q" base_Element="_dsetUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsetVYtlEe-3nrFY8n5C-Q" base_Element="_dsetUItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsetVotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_dshJkItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dsgihotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dshwoItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dshJkotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsiXsItlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dshwootlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsiXsYtlEe-3nrFY8n5C-Q" genericsValue="T" base_Element="_dshwo4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dskM4ItlEe-3nrFY8n5C-Q" genericsValue="E" base_Element="_dsjl1YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dskz8YtlEe-3nrFY8n5C-Q" base_Element="_dskz8ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dslbAYtlEe-3nrFY8n5C-Q" base_Element="_dslbAItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_dsmpIItlEe-3nrFY8n5C-Q" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_dsmCFItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsmpIYtlEe-3nrFY8n5C-Q" base_Element="_dsmCFItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dspFYotlEe-3nrFY8n5C-Q" base_Element="_dspFYYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dsqTg4tlEe-3nrFY8n5C-Q" base_Element="_dsqTgItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dsq6kItlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dsqTgYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Annotations xmi:id="_dsq6kYtlEe-3nrFY8n5C-Q" base_Element="_dsqTgItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dsq6kotlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_dsyPUYtlEe-3nrFY8n5C-Q" base_Element="_dsyPUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ds5kEItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_ds49AotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ds5kEotlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_ds5kEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ds6LIYtlEe-3nrFY8n5C-Q" genericsValue="ScheduleTime" base_Element="_ds6LIItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds6yM4tlEe-3nrFY8n5C-Q" base_Element="_ds6yMotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds7ZQYtlEe-3nrFY8n5C-Q" base_Element="_ds7ZQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds7ZQ4tlEe-3nrFY8n5C-Q" base_Element="_ds7ZQotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds8AUItlEe-3nrFY8n5C-Q" base_Element="_ds7ZSItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds8AUotlEe-3nrFY8n5C-Q" base_Element="_ds8AUYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds8AVotlEe-3nrFY8n5C-Q" base_Element="_ds8AVYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds8nYItlEe-3nrFY8n5C-Q" base_Element="_ds8AV4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ds8nYotlEe-3nrFY8n5C-Q" genericsValue="ChannelSet" base_Element="_ds8nYYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds8nY4tlEe-3nrFY8n5C-Q" base_Element="_ds8nYYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ds9Oc4tlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_ds9OcotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds9OdItlEe-3nrFY8n5C-Q" base_Element="_ds9OcotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds91gYtlEe-3nrFY8n5C-Q" base_Element="_ds91gItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_ds91g4tlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_ds91gotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds91hItlEe-3nrFY8n5C-Q" base_Element="_ds91gotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds-ckItlEe-3nrFY8n5C-Q" base_Element="_ds91hYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds-ckotlEe-3nrFY8n5C-Q" base_Element="_ds-ckYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds_DoItlEe-3nrFY8n5C-Q" base_Element="_ds-ck4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds_DootlEe-3nrFY8n5C-Q" base_Element="_ds_DoYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds_DpItlEe-3nrFY8n5C-Q" base_Element="_ds_Do4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ds_DpotlEe-3nrFY8n5C-Q" base_Element="_ds_DpYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtA40ItlEe-3nrFY8n5C-Q" base_Element="_dtARxItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtBf54tlEe-3nrFY8n5C-Q" base_Element="_dtBf5YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtBf6YtlEe-3nrFY8n5C-Q" base_Element="_dtBf6ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtCG8YtlEe-3nrFY8n5C-Q" base_Element="_dtCG8ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtCG84tlEe-3nrFY8n5C-Q" genericsValue="Node" base_Element="_dtCG8otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtCuAItlEe-3nrFY8n5C-Q" base_Element="_dtCG8otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtCuAotlEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_dtCuAYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtCuA4tlEe-3nrFY8n5C-Q" base_Element="_dtCuAYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtDVEItlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dtCuBItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtDVEYtlEe-3nrFY8n5C-Q" base_Element="_dtCuBItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtDVE4tlEe-3nrFY8n5C-Q" base_Element="_dtDVEotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtD8IItlEe-3nrFY8n5C-Q" base_Element="_dtDVFItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtEjNItlEe-3nrFY8n5C-Q" base_Element="_dtEjM4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtEjNotlEe-3nrFY8n5C-Q" base_Element="_dtEjNYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtFKQItlEe-3nrFY8n5C-Q" base_Element="_dtEjN4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtFKQotlEe-3nrFY8n5C-Q" base_Element="_dtFKQYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtFKRItlEe-3nrFY8n5C-Q" base_Element="_dtFKQ4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtFKRotlEe-3nrFY8n5C-Q" base_Element="_dtFKRYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtFxUYtlEe-3nrFY8n5C-Q" base_Element="_dtFxUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtFxU4tlEe-3nrFY8n5C-Q" base_Element="_dtFxUotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtGYYItlEe-3nrFY8n5C-Q" base_Element="_dtFxVItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtGYZItlEe-3nrFY8n5C-Q" base_Element="_dtGYY4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtG_cItlEe-3nrFY8n5C-Q" base_Element="_dtGYZotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtG_c4tlEe-3nrFY8n5C-Q" base_Element="_dtG_cYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtHmgYtlEe-3nrFY8n5C-Q" base_Element="_dtG_dotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtHmg4tlEe-3nrFY8n5C-Q" base_Element="_dtHmgotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtHmhotlEe-3nrFY8n5C-Q" base_Element="_dtHmhYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtINkItlEe-3nrFY8n5C-Q" base_Element="_dtHmh4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtINkotlEe-3nrFY8n5C-Q" base_Element="_dtINkYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtINlItlEe-3nrFY8n5C-Q" base_Element="_dtINk4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtI0oItlEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_dtINlYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtI0oYtlEe-3nrFY8n5C-Q" base_Element="_dtINlYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtJbsItlEe-3nrFY8n5C-Q" base_Element="_dtI0potlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtJbsotlEe-3nrFY8n5C-Q" base_Element="_dtJbsYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtKCwItlEe-3nrFY8n5C-Q" genericsValue="Edge" base_Element="_dtJbt4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtKp14tlEe-3nrFY8n5C-Q" base_Element="_dtKp1otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtLQ4ItlEe-3nrFY8n5C-Q" base_Element="_dtKp2ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtLQ5YtlEe-3nrFY8n5C-Q" base_Element="_dtLQ4YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtL38ItlEe-3nrFY8n5C-Q" base_Element="_dtLQ5otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtL38otlEe-3nrFY8n5C-Q" base_Element="_dtL38YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtL39ItlEe-3nrFY8n5C-Q" genericsValue="Activation" base_Element="_dtL384tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtMfAItlEe-3nrFY8n5C-Q" base_Element="_dtL384tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtMfAotlEe-3nrFY8n5C-Q" genericsValue="String, Integer" base_Element="_dtMfAYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtMfA4tlEe-3nrFY8n5C-Q" base_Element="_dtMfAYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtNGEYtlEe-3nrFY8n5C-Q" base_Element="_dtNGEItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtNtJ4tlEe-3nrFY8n5C-Q" base_Element="_dtNtJotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtOUMItlEe-3nrFY8n5C-Q" base_Element="_dtNtKItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtOUMotlEe-3nrFY8n5C-Q" base_Element="_dtOUMYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtOUNItlEe-3nrFY8n5C-Q" base_Element="_dtOUM4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtOUNotlEe-3nrFY8n5C-Q" base_Element="_dtOUNYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtO7QItlEe-3nrFY8n5C-Q" base_Element="_dtOUN4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtO7QotlEe-3nrFY8n5C-Q" base_Element="_dtO7QYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtO7RItlEe-3nrFY8n5C-Q" base_Element="_dtO7Q4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtO7RotlEe-3nrFY8n5C-Q" base_Element="_dtO7RYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtPiUItlEe-3nrFY8n5C-Q" base_Element="_dtO7R4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtPiUotlEe-3nrFY8n5C-Q" base_Element="_dtPiUYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtPiVItlEe-3nrFY8n5C-Q" base_Element="_dtPiU4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtPiVotlEe-3nrFY8n5C-Q" base_Element="_dtPiVYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtQwc4tlEe-3nrFY8n5C-Q" base_Element="_dtQwcotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtQwdYtlEe-3nrFY8n5C-Q" base_Element="_dtQwdItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtRXgItlEe-3nrFY8n5C-Q" base_Element="_dtQwdotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtR-lYtlEe-3nrFY8n5C-Q" base_Element="_dtR-lItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtR-l4tlEe-3nrFY8n5C-Q" base_Element="_dtR-lotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtSlootlEe-3nrFY8n5C-Q" base_Element="_dtSloYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtSlpItlEe-3nrFY8n5C-Q" base_Element="_dtSlo4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtTMtYtlEe-3nrFY8n5C-Q" base_Element="_dtTMtItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtTMt4tlEe-3nrFY8n5C-Q" base_Element="_dtTMtotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtTzwotlEe-3nrFY8n5C-Q" base_Element="_dtTzwItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtTzxItlEe-3nrFY8n5C-Q" base_Element="_dtTzw4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtTzxotlEe-3nrFY8n5C-Q" base_Element="_dtTzxYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtTzyItlEe-3nrFY8n5C-Q" base_Element="_dtTzx4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtUa0YtlEe-3nrFY8n5C-Q" base_Element="_dtUa0ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtUa04tlEe-3nrFY8n5C-Q" base_Element="_dtUa0otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtVo84tlEe-3nrFY8n5C-Q" base_Element="_dtVo8otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtVo9YtlEe-3nrFY8n5C-Q" base_Element="_dtVo9ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtWQAYtlEe-3nrFY8n5C-Q" base_Element="_dtWQAItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtWQA4tlEe-3nrFY8n5C-Q" base_Element="_dtWQAotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtWQBYtlEe-3nrFY8n5C-Q" base_Element="_dtWQBItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtW3EItlEe-3nrFY8n5C-Q" base_Element="_dtWQBotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtW3E4tlEe-3nrFY8n5C-Q" base_Element="_dtW3EYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtW3FotlEe-3nrFY8n5C-Q" base_Element="_dtW3FItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtXeIYtlEe-3nrFY8n5C-Q" base_Element="_dtW3F4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtXeI4tlEe-3nrFY8n5C-Q" base_Element="_dtXeIotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtYFMItlEe-3nrFY8n5C-Q" base_Element="_dtXeJItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtYFMotlEe-3nrFY8n5C-Q" base_Element="_dtYFMYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtYFNItlEe-3nrFY8n5C-Q" base_Element="_dtYFM4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Array xmi:id="_dtYFOYtlEe-3nrFY8n5C-Q" dimensions="2" base_Element="_dtYFN4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtYsQItlEe-3nrFY8n5C-Q" base_Element="_dtYFN4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtZTV4tlEe-3nrFY8n5C-Q" base_Element="_dtZTVotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtZ6YItlEe-3nrFY8n5C-Q" base_Element="_dtZTWItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtZ6YotlEe-3nrFY8n5C-Q" base_Element="_dtZ6YYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtZ6ZItlEe-3nrFY8n5C-Q" base_Element="_dtZ6Y4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtZ6ZotlEe-3nrFY8n5C-Q" base_Element="_dtZ6ZYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtahcItlEe-3nrFY8n5C-Q" base_Element="_dtZ6Z4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtahcotlEe-3nrFY8n5C-Q" base_Element="_dtahcYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtahdItlEe-3nrFY8n5C-Q" base_Element="_dtahc4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtahdotlEe-3nrFY8n5C-Q" base_Element="_dtahdYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtbIgItlEe-3nrFY8n5C-Q" base_Element="_dtahd4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtbIgotlEe-3nrFY8n5C-Q" base_Element="_dtbIgYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtbIhItlEe-3nrFY8n5C-Q" base_Element="_dtbIg4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtbIhotlEe-3nrFY8n5C-Q" base_Element="_dtbIhYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtbvkYtlEe-3nrFY8n5C-Q" base_Element="_dtbvkItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtbvlItlEe-3nrFY8n5C-Q" base_Element="_dtbvkotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtbvlotlEe-3nrFY8n5C-Q" base_Element="_dtbvlYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtcWoItlEe-3nrFY8n5C-Q" base_Element="_dtbvl4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtcWootlEe-3nrFY8n5C-Q" base_Element="_dtcWoYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtdkwotlEe-3nrFY8n5C-Q" base_Element="_dtdkwItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtdkxotlEe-3nrFY8n5C-Q" base_Element="_dtdkxYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dteL0YtlEe-3nrFY8n5C-Q" genericsValue="InstructionParameters" base_Element="_dteL0ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dteL0otlEe-3nrFY8n5C-Q" base_Element="_dteL0ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dteL1ItlEe-3nrFY8n5C-Q" base_Element="_dteL04tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtey4YtlEe-3nrFY8n5C-Q" base_Element="_dtey4ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtey44tlEe-3nrFY8n5C-Q" base_Element="_dtey4otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtfZ8YtlEe-3nrFY8n5C-Q" base_Element="_dtfZ8ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtfZ84tlEe-3nrFY8n5C-Q" base_Element="_dtfZ8otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtfZ9YtlEe-3nrFY8n5C-Q" base_Element="_dtfZ9ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtfZ94tlEe-3nrFY8n5C-Q" base_Element="_dtfZ9otlEe-3nrFY8n5C-Q">
    <associatedElement xmi:type="uml:Operation" xmi:id="_dtgBAItlEe-3nrFY8n5C-Q" name="getNumChannels" method="_duEBuItlEe-3nrFY8n5C-Q">
      <ownedParameter xmi:id="_dtgBAYtlEe-3nrFY8n5C-Q" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_dtgBAotlEe-3nrFY8n5C-Q" base_Element="_dtgBAItlEe-3nrFY8n5C-Q">
    <annotations xmi:id="_dtgBA4tlEe-3nrFY8n5C-Q" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtgoEItlEe-3nrFY8n5C-Q" base_Element="_dtgBBItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtgoE4tlEe-3nrFY8n5C-Q" base_Element="_dtgoEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dth2NotlEe-3nrFY8n5C-Q" base_Element="_dth2NItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtidQ4tlEe-3nrFY8n5C-Q" base_Element="_dtidQYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtidR4tlEe-3nrFY8n5C-Q" base_Element="_dtidRotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtjEUYtlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dtjEUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtjrYItlEe-3nrFY8n5C-Q" genericsValue="String" base_Element="_dtjEU4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtkSdYtlEe-3nrFY8n5C-Q" base_Element="_dtkSdItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtkSd4tlEe-3nrFY8n5C-Q" base_Element="_dtkSdotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtk5gYtlEe-3nrFY8n5C-Q" base_Element="_dtk5gItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtk5hItlEe-3nrFY8n5C-Q" base_Element="_dtk5g4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtlgkItlEe-3nrFY8n5C-Q" base_Element="_dtk5hYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtmHpYtlEe-3nrFY8n5C-Q" base_Element="_dtmHpItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtmusItlEe-3nrFY8n5C-Q" base_Element="_dtmHqYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtmusotlEe-3nrFY8n5C-Q" base_Element="_dtmusYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtmutItlEe-3nrFY8n5C-Q" base_Element="_dtmus4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtnVwotlEe-3nrFY8n5C-Q" genericsValue="Integer" base_Element="_dtnVwYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dtnVw4tlEe-3nrFY8n5C-Q" base_Element="_dtnVwYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_dtn80ItlEe-3nrFY8n5C-Q" genericsValue="SchedulableObject" base_Element="_dtnVxItlEe-3nrFY8n5C-Q"/>
  <uml:OpaqueBehavior xmi:id="_duEBuItlEe-3nrFY8n5C-Q" name="getNumChannels" specification="_dtgBAItlEe-3nrFY8n5C-Q">
    <ownedParameter xmi:id="_duEBuYtlEe-3nrFY8n5C-Q" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_duoCYItlEe-3nrFY8n5C-Q" base_Element="_dunbUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duopcotlEe-3nrFY8n5C-Q" base_Element="_duopcItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dupQgotlEe-3nrFY8n5C-Q" base_Element="_dupQgItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dupQhYtlEe-3nrFY8n5C-Q" base_Element="_dupQg4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dup3kotlEe-3nrFY8n5C-Q" base_Element="_dup3kItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dup3lYtlEe-3nrFY8n5C-Q" base_Element="_dup3k4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duqeootlEe-3nrFY8n5C-Q" base_Element="_duqeoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duqepYtlEe-3nrFY8n5C-Q" base_Element="_duqeo4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_durFsYtlEe-3nrFY8n5C-Q" base_Element="_duqepotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_durFtItlEe-3nrFY8n5C-Q" base_Element="_durFsotlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_durswItlEe-3nrFY8n5C-Q" base_Element="_durFtYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dursw4tlEe-3nrFY8n5C-Q" base_Element="_durswYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dusT0YtlEe-3nrFY8n5C-Q" base_Element="_dursxItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dusT1ItlEe-3nrFY8n5C-Q" base_Element="_dusT0otlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dus64ItlEe-3nrFY8n5C-Q" base_Element="_dusT1YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_dus644tlEe-3nrFY8n5C-Q" base_Element="_dus64YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duth8ItlEe-3nrFY8n5C-Q" base_Element="_dus65ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duth84tlEe-3nrFY8n5C-Q" base_Element="_duth8YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duuJAItlEe-3nrFY8n5C-Q" base_Element="_duth9ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duuJA4tlEe-3nrFY8n5C-Q" base_Element="_duuJAYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duuwEItlEe-3nrFY8n5C-Q" base_Element="_duuJBItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duuwE4tlEe-3nrFY8n5C-Q" base_Element="_duuwEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duvXIItlEe-3nrFY8n5C-Q" base_Element="_duuwFItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duvXI4tlEe-3nrFY8n5C-Q" base_Element="_duvXIYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duv-MItlEe-3nrFY8n5C-Q" base_Element="_duvXJItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duv-M4tlEe-3nrFY8n5C-Q" base_Element="_duv-MYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duwlQotlEe-3nrFY8n5C-Q" base_Element="_duwlQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duwlRYtlEe-3nrFY8n5C-Q" base_Element="_duwlQ4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duxMUotlEe-3nrFY8n5C-Q" base_Element="_duxMUItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duxMVYtlEe-3nrFY8n5C-Q" base_Element="_duxMU4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duxzYotlEe-3nrFY8n5C-Q" base_Element="_duxzYItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duxzZYtlEe-3nrFY8n5C-Q" base_Element="_duxzY4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duyacotlEe-3nrFY8n5C-Q" base_Element="_duyacItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duyadYtlEe-3nrFY8n5C-Q" base_Element="_duyac4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duzBgotlEe-3nrFY8n5C-Q" base_Element="_duzBgItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duzBhYtlEe-3nrFY8n5C-Q" base_Element="_duzBg4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duzokotlEe-3nrFY8n5C-Q" base_Element="_duzokItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_duzolYtlEe-3nrFY8n5C-Q" base_Element="_duzok4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du0PootlEe-3nrFY8n5C-Q" base_Element="_du0PoItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du02sItlEe-3nrFY8n5C-Q" base_Element="_du0Po4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du02s4tlEe-3nrFY8n5C-Q" base_Element="_du02sYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du1dwItlEe-3nrFY8n5C-Q" base_Element="_du02tItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du1dw4tlEe-3nrFY8n5C-Q" base_Element="_du1dwYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du2E0ItlEe-3nrFY8n5C-Q" base_Element="_du1dxItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du2E04tlEe-3nrFY8n5C-Q" base_Element="_du2E0YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du2r4ItlEe-3nrFY8n5C-Q" base_Element="_du2E1ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du2r44tlEe-3nrFY8n5C-Q" base_Element="_du2r4YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du3S8ItlEe-3nrFY8n5C-Q" base_Element="_du2r5ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du3S84tlEe-3nrFY8n5C-Q" base_Element="_du3S8YtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du36AItlEe-3nrFY8n5C-Q" base_Element="_du3S9ItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du36A4tlEe-3nrFY8n5C-Q" base_Element="_du36AYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du4hEItlEe-3nrFY8n5C-Q" base_Element="_du36BItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du4hE4tlEe-3nrFY8n5C-Q" base_Element="_du4hEYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du5IIItlEe-3nrFY8n5C-Q" base_Element="_du4hFItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du5II4tlEe-3nrFY8n5C-Q" base_Element="_du5IIYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du5vMotlEe-3nrFY8n5C-Q" base_Element="_du5vMItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du5vNYtlEe-3nrFY8n5C-Q" base_Element="_du5vM4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du6WQotlEe-3nrFY8n5C-Q" base_Element="_du6WQItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du6WRYtlEe-3nrFY8n5C-Q" base_Element="_du6WQ4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du69UotlEe-3nrFY8n5C-Q" base_Element="_du69UItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du7kYItlEe-3nrFY8n5C-Q" base_Element="_du69U4tlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du7kY4tlEe-3nrFY8n5C-Q" base_Element="_du7kYYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du8LcItlEe-3nrFY8n5C-Q" base_Element="_du7kZItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du8Lc4tlEe-3nrFY8n5C-Q" base_Element="_du8LcYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du8ygItlEe-3nrFY8n5C-Q" base_Element="_du8LdItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du8yg4tlEe-3nrFY8n5C-Q" base_Element="_du8ygYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du9ZkItlEe-3nrFY8n5C-Q" base_Element="_du8yhItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du9Zk4tlEe-3nrFY8n5C-Q" base_Element="_du9ZkYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du-AoItlEe-3nrFY8n5C-Q" base_Element="_du9ZlItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du-Ao4tlEe-3nrFY8n5C-Q" base_Element="_du-AoYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du-nsItlEe-3nrFY8n5C-Q" base_Element="_du-ApItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du-ns4tlEe-3nrFY8n5C-Q" base_Element="_du-nsYtlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Reference xmi:id="_du_OwItlEe-3nrFY8n5C-Q" base_Element="_du-ntItlEe-3nrFY8n5C-Q"/>
  <UMLLabProfile:Generics xmi:id="_BXt6x5V3Ee-EOddEwqrIsA" genericsValue="Integer" base_Element="_BXt6xJV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Generics xmi:id="_BXt6y5V3Ee-EOddEwqrIsA" genericsValue="Integer" base_Element="_BXt6yJV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Generics xmi:id="_BXvI4JV3Ee-EOddEwqrIsA" genericsValue="Integer" base_Element="_BXuh1ZV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BXvI4pV3Ee-EOddEwqrIsA" base_Element="_BXvI4ZV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BXvv8ZV3Ee-EOddEwqrIsA" base_Element="_BXvv8JV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BXvv85V3Ee-EOddEwqrIsA" base_Element="_BXvv8pV3Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Reference xmi:id="_UDV28ZV4Ee-EOddEwqrIsA" base_Element="_UDV28JV4Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Annotations xmi:id="_Yy59YpV4Ee-EOddEwqrIsA" base_Element="_Yy59YJV4Ee-EOddEwqrIsA">
    <annotations xmi:id="_Yy59Y5V4Ee-EOddEwqrIsA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Yy6kcJV4Ee-EOddEwqrIsA" base_Element="_Yy59YJV4Ee-EOddEwqrIsA"/>
  <UMLLabProfile:Annotations xmi:id="_JwI8cZWyEe-EOddEwqrIsA" base_Element="_JwI8cJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwI8cpWyEe-EOddEwqrIsA" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjgJWyEe-EOddEwqrIsA" base_Element="_JwI8c5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjgZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjg5WyEe-EOddEwqrIsA" base_Element="_JwJjgpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjhJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjhpWyEe-EOddEwqrIsA" base_Element="_JwJjhZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjh5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjiZWyEe-EOddEwqrIsA" base_Element="_JwJjiJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjipWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjjJWyEe-EOddEwqrIsA" base_Element="_JwJji5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjjZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjj5WyEe-EOddEwqrIsA" base_Element="_JwJjjpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjkJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjkpWyEe-EOddEwqrIsA" base_Element="_JwJjkZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjk5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwJjlZWyEe-EOddEwqrIsA" base_Element="_JwJjlJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwJjlpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKkJWyEe-EOddEwqrIsA" base_Element="_JwJjl5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKkZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKk5WyEe-EOddEwqrIsA" base_Element="_JwKKkpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKlJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKlpWyEe-EOddEwqrIsA" base_Element="_JwKKlZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKl5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKmZWyEe-EOddEwqrIsA" base_Element="_JwKKmJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKmpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKnJWyEe-EOddEwqrIsA" base_Element="_JwKKm5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKnZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKn5WyEe-EOddEwqrIsA" base_Element="_JwKKnpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKoJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKopWyEe-EOddEwqrIsA" base_Element="_JwKKoZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKo5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKKpZWyEe-EOddEwqrIsA" base_Element="_JwKKpJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKKppWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxoJWyEe-EOddEwqrIsA" base_Element="_JwKKp5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxoZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxo5WyEe-EOddEwqrIsA" base_Element="_JwKxopWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxpJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxppWyEe-EOddEwqrIsA" base_Element="_JwKxpZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxp5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxqZWyEe-EOddEwqrIsA" base_Element="_JwKxqJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxqpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxrJWyEe-EOddEwqrIsA" base_Element="_JwKxq5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxrZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxr5WyEe-EOddEwqrIsA" base_Element="_JwKxrpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxsJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxspWyEe-EOddEwqrIsA" base_Element="_JwKxsZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxs5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxtZWyEe-EOddEwqrIsA" base_Element="_JwKxtJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxtpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxuJWyEe-EOddEwqrIsA" base_Element="_JwKxt5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxuZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwKxu5WyEe-EOddEwqrIsA" base_Element="_JwKxupWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwKxvJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwLYsZWyEe-EOddEwqrIsA" base_Element="_JwLYsJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwLYspWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwLYtJWyEe-EOddEwqrIsA" base_Element="_JwLYs5WyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwLYtZWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwLYt5WyEe-EOddEwqrIsA" base_Element="_JwLYtpWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwLYuJWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwLYupWyEe-EOddEwqrIsA" base_Element="_JwLYuZWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwLYu5WyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_JwLYvZWyEe-EOddEwqrIsA" base_Element="_JwLYvJWyEe-EOddEwqrIsA">
    <annotations xmi:id="_JwLYvpWyEe-EOddEwqrIsA" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_wJWyEe-EOddEwqrIsA" base_Element="_JwI8cJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_wZWyEe-EOddEwqrIsA" base_Element="_JwI8c5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_wpWyEe-EOddEwqrIsA" base_Element="_JwJjgpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_w5WyEe-EOddEwqrIsA" base_Element="_JwJjhZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_xJWyEe-EOddEwqrIsA" base_Element="_JwJjiJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_xZWyEe-EOddEwqrIsA" base_Element="_JwJji5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_xpWyEe-EOddEwqrIsA" base_Element="_JwJjjpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_x5WyEe-EOddEwqrIsA" base_Element="_JwJjkZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_yJWyEe-EOddEwqrIsA" base_Element="_JwJjlJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_yZWyEe-EOddEwqrIsA" base_Element="_JwJjl5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_ypWyEe-EOddEwqrIsA" base_Element="_JwKKkpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_y5WyEe-EOddEwqrIsA" base_Element="_JwKKlZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_zJWyEe-EOddEwqrIsA" base_Element="_JwKKmJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_zZWyEe-EOddEwqrIsA" base_Element="_JwKKm5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_zpWyEe-EOddEwqrIsA" base_Element="_JwKKnpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwL_z5WyEe-EOddEwqrIsA" base_Element="_JwKKoZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm0JWyEe-EOddEwqrIsA" base_Element="_JwKKpJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm0ZWyEe-EOddEwqrIsA" base_Element="_JwKKp5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm0pWyEe-EOddEwqrIsA" base_Element="_JwKxopWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm05WyEe-EOddEwqrIsA" base_Element="_JwKxpZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm1JWyEe-EOddEwqrIsA" base_Element="_JwKxqJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm1ZWyEe-EOddEwqrIsA" base_Element="_JwKxq5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm1pWyEe-EOddEwqrIsA" base_Element="_JwKxrpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm15WyEe-EOddEwqrIsA" base_Element="_JwKxsZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm2JWyEe-EOddEwqrIsA" base_Element="_JwKxtJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm2ZWyEe-EOddEwqrIsA" base_Element="_JwKxt5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm2pWyEe-EOddEwqrIsA" base_Element="_JwKxupWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm25WyEe-EOddEwqrIsA" base_Element="_JwLYsJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm3JWyEe-EOddEwqrIsA" base_Element="_JwLYs5WyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm3ZWyEe-EOddEwqrIsA" base_Element="_JwLYtpWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm3pWyEe-EOddEwqrIsA" base_Element="_JwLYuZWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwMm35WyEe-EOddEwqrIsA" base_Element="_JwLYvJWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_JwNN4ZWyEe-EOddEwqrIsA" base_Element="_JwNN4JWyEe-EOddEwqrIsA"/>
  <UMLLabProfile:Reference xmi:id="_JwPDEJWyEe-EOddEwqrIsA" base_Element="_JwOcApWyEe-EOddEwqrIsA"/>
</xmi:XMI>
