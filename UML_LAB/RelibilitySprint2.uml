<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_TUZXkKlTEe-NBpoHimppkw" name="RelibilitySprint2">
    <eAnnotations xmi:id="_TecrcKlTEe-NBpoHimppkw" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_TecrcalTEe-NBpoHimppkw" source="codegen">
        <details xmi:id="_TecrcqlTEe-NBpoHimppkw" key="codegenDirectory" value="/cs2820-fall24/src"/>
        <details xmi:id="_XKk-8KlTEe-NBpoHimppkw" key="AssociatedSourceCode" value="/cs2820-fall24/src/edu/uiowa/cs/warp/AbstractMap.java;2633489473/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activation.java;3634548837/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Activations.java;3305092594/1;/cs2820-fall24/src/edu/uiowa/cs/warp/BasicPoset.java;3238489715/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelAnalysis.java;1217720653/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ChannelVisualization.java;2873127052/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Channels.java;3701064188/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CodeFragment.java;1941462046/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CombinedActivation.java;3978818808/1;/cs2820-fall24/src/edu/uiowa/cs/warp/CommunicationGraph.java;724670632/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ConnectivityPoset.java;3754377617/1;/cs2820-fall24/src/edu/uiowa/cs/warp/DeadlineComparator.java;492899634/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Description.java;2596849957/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Edge.java;1242144003/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FileManager.java;1791012323/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Flow.java;3024343258/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowMap.java;3735737588/1;/cs2820-fall24/src/edu/uiowa/cs/warp/FlowNodeToActivationMap.java;4234899521/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphViz.java;1071888484/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GraphVizListener.java;2126849807/1;/cs2820-fall24/src/edu/uiowa/cs/warp/GuiVisualization.java;654882569/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InputGraphFile.java;937049578/1;/cs2820-fall24/src/edu/uiowa/cs/warp/InstructionTimeSlot.java;3408505142/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyAnalysis.java;2064230864/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatencyVisualization.java;2426998793/1;/cs2820-fall24/src/edu/uiowa/cs/warp/LatestReleaseTimeComparator.java;1106993157/1;/cs2820-fall24/src/edu/uiowa/cs/warp/MaxPhaseComparator.java;1745026972/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Node.java;1243472081/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NodeMap.java;2177811796/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NonPreemptiveSchedule.java;387408079/1;/cs2820-fall24/src/edu/uiowa/cs/warp/NotImplentedVisualization.java;3646556153/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PeriodComparator.java;3057078727/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Poset.java;4263200805/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PreemptiveSchedule.java;3080876127/1;/cs2820-fall24/src/edu/uiowa/cs/warp/PriorityComparator.java;349151360/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Program.java;3853306824/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramSchedule.java;1770485609/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ProgramVisualization.java;2034073373/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeComparator.java;2065273961/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReleaseTimeQueue.java;1776494724/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityAnalysis.java;4045988259/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityParameters.java;2925534695/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityRow.java;625982311/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityTable.java;2918095589/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReliabilityVisualization.java;659442202/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ReportVisualization.java;2571131140/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Row.java;3413533457/1;/cs2820-fall24/test/edu/uiowa/cs/warp/MockWarpInterface.java;2001418428/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObjectQueue.java;3263525257/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Schedule.java;3152618411/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTable.java;970860350/1;/cs2820-fall24/src/edu/uiowa/cs/warp/ScheduleTime.java;2579980776/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SimulatorInput.java;3699590899/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SortedPeriodQueue.java;3537725478/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemAttributes.java;876440066/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SystemFactory.java;4134708055/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Table.java;2577872269/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Visualization.java;2548788944/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationFactory.java;3425614056/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationImplementation.java;2726194203/1;/cs2820-fall24/src/edu/uiowa/cs/warp/VisualizationObject.java;1022989847/1;/cs2820-fall24/src/edu/uiowa/cs/warp/get.java;2404287404/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpInterface.java;2926400465/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpPoset.java;4000167019/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpSystem.java;2786849095/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadListener.java;195958787/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoadDescription.java;4032503718/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WorkLoad.java;2543026489/1;/cs2820-fall24/src/edu/uiowa/cs/warp/WarpDSL.java;1986156920/1;/cs2820-fall24/src/edu/uiowa/cs/warp/Warp.java;1667435476/1;/cs2820-fall24/src/edu/uiowa/cs/warp/SchedulableObject.java;2451757979/1;/cs2820-fall24/test/edu/uiowa/cs/warp/ReliabilityVisualizationTest.java;91029637/1;/cs2820-fall24/test/edu/uiowa/cs/warp/WorkLoadTest.java;686679007/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_UZCEYKlTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_UZCEYalTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_UZCEYqlTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_UZCEY6lTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_UZCEZKlTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_UZCEZalTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_UZCEZqlTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_UZCEZ6lTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_UZCrcKlTEe-NBpoHimppkw">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_UYLIwKlTEe-NBpoHimppkw" name="edu">
      <packagedElement xmi:type="uml:Package" xmi:id="_UYLIwalTEe-NBpoHimppkw" name="uiowa">
        <packagedElement xmi:type="uml:Package" xmi:id="_UYLIwqlTEe-NBpoHimppkw" name="cs">
          <packagedElement xmi:type="uml:Package" xmi:id="_UYM98KlTEe-NBpoHimppkw" name="warp">
            <packagedElement xmi:type="uml:Package" xmi:id="_UZNDgKlTEe-NBpoHimppkw" name="WarpDSL">
              <packagedElement xmi:type="uml:Class" xmi:id="_UyE2gKlTEe-NBpoHimppkw" name="InstructionParameters"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_UajuYKlTEe-NBpoHimppkw" name="SystemAttributes">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_UyzPQKlTEe-NBpoHimppkw" name="ScheduleChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Uaom4KlTEe-NBpoHimppkw" name="Visualization">
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_Uy0dYKlTEe-NBpoHimppkw" name="SystemChoices"/>
              <packagedElement xmi:type="uml:Enumeration" xmi:id="_Uy1EcalTEe-NBpoHimppkw" name="WorkLoadChoices"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UfzawKlTEe-NBpoHimppkw" name="AbstractMap" isAbstract="true">
              <generalization xmi:id="_UzsnIKlTEe-NBpoHimppkw" general="_UxXE0KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1FHMKlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1FHMalTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2RaAKlTEe-NBpoHimppkw" name="AbstractMap" specification="_Uf1P8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2RaAalTEe-NBpoHimppkw" type="_UfzawKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uf1P8KlTEe-NBpoHimppkw" name="AbstractMap" method="_U2RaAKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uf13AKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uf13AalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uf13AqlTEe-NBpoHimppkw" type="_UfzawKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uf3FIKlTEe-NBpoHimppkw" name="Activation">
              <generalization xmi:id="_UxdygqlTEe-NBpoHimppkw" general="_Ult1gKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1FuQKlTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw" isReadOnly="true" association="_U3bQkKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1FuQqlTEe-NBpoHimppkw" name="edges" type="_UxYS8KlTEe-NBpoHimppkw" isReadOnly="true" association="_U3b3oKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1GVUalTEe-NBpoHimppkw" name="additionalScheduleTimes" type="_UxYS8KlTEe-NBpoHimppkw" isReadOnly="true" association="_U3cesalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1G8YalTEe-NBpoHimppkw" name="conflicts">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U1G8YqlTEe-NBpoHimppkw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Uzt1QKlTEe-NBpoHimppkw" client="_Uf3FIKlTEe-NBpoHimppkw" supplier="_UztOMalTEe-NBpoHimppkw" contract="_UztOMalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2RaAqlTEe-NBpoHimppkw" name="Activation" specification="_Uf46UKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2RaA6lTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2RaBKlTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		setName(name);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBEKlTEe-NBpoHimppkw" name="Activation" specification="_UxavMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBEalTEe-NBpoHimppkw" name="elem" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2SBEqlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2SBE6lTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);&#xD;
		this.edges = new ArrayList&lt;Edge>();&#xD;
		this.edges.addAll(elem.getEdges());&#xD;
		this.coordinators = new ArrayList&lt;String>();&#xD;
		this.coordinators.addAll(elem.getCoordinators());&#xD;
		// conflicts = new Set&lt;String>();&#xD;
		this.conflicts = new HashSet&lt;String>();&#xD;
		this.conflicts.addAll(elem.getConflicts());&#xD;
		this.additionalScheduleTimes = new ArrayList&lt;ScheduleTime>();&#xD;
		this.additionalScheduleTimes.addAll(elem.getAdditionalScheduleTimes());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBFKlTEe-NBpoHimppkw" name="clone" specification="_Uf5hYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBFalTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var time = getLastUpdateTime();&#xD;
		var clone = new Activation(this, time);&#xD;
		return clone;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBFqlTEe-NBpoHimppkw" name="getEdgesByReleaseTime" specification="_Uf6vgqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBF6lTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new ReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBGKlTEe-NBpoHimppkw" name="getEdgesByLatestReleaseTime" specification="_Uf8ksKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBGalTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new LatestReleaseTimeComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBGqlTEe-NBpoHimppkw" name="getEdgesByPeriod" specification="_Uf9LwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBG6lTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new PeriodComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBHKlTEe-NBpoHimppkw" name="getEdgesByDeadline" specification="_Uf9y0alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBHalTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
		SchedulableObjectQueue&lt;Edge>(new DeadlineComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBHqlTEe-NBpoHimppkw" name="getEdgesByPriority" specification="_Uf_A8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBH6lTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new &#xD;
			SchedulableObjectQueue&lt;Edge>(new PriorityComparator&lt;Edge>(),this.edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBIKlTEe-NBpoHimppkw" name="addEdges" specification="_UzucUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBIalTEe-NBpoHimppkw" name="edges" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.edges.addAll(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SBIqlTEe-NBpoHimppkw" name="addEdge" specification="_UxbWQalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SBI6lTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.edges.add(edge);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoIKlTEe-NBpoHimppkw" name="increaseEdgePhases" specification="_UgAPEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoIalTEe-NBpoHimppkw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (additionalOffset > 0) { // make sure increase is needed&#xD;
			for (Edge edge: this.edges) {&#xD;
				var oldPhase = edge.getPhase();&#xD;
				edge.setPhase(oldPhase+additionalOffset);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoIqlTEe-NBpoHimppkw" name="updatePriorityAndRelease" specification="_UgA2IKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoI6lTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var lastUpdateTime = getLastUpdateTime();&#xD;
		if (currentTime >= lastUpdateTime) {&#xD;
			for(Edge edge: edges) {&#xD;
				edge.setNextReleaseTime(currentTime);&#xD;
			}&#xD;
			&#xD;
			/* get the edges with earliest release time and &#xD;
			 * highest priority ==> get head of the queue just built&#xD;
			 */&#xD;
			var edgesByReleaseTime = getEdgesByReleaseTime();&#xD;
			var firstEdge = edgesByReleaseTime.element();&#xD;
			setPhase(firstEdge.getPhase()); &#xD;
			var edgesByPeriod = getEdgesByPeriod();&#xD;
			firstEdge = edgesByPeriod.element();&#xD;
			setPeriod(firstEdge.getPeriod()); // shortest period &#xD;
			var edgesByDeadline = getEdgesByDeadline();&#xD;
			firstEdge = edgesByDeadline.element();&#xD;
			setDeadline(firstEdge.getDeadline()); // earliest deadline&#xD;
			var edgesByPrioriy = getEdgesByPriority();&#xD;
			firstEdge = edgesByPrioriy.element();&#xD;
			setPriority(firstEdge.getPriority());&#xD;
			&#xD;
			/* With the partition scheduling parameters set to match  &#xD;
			 * the highest priority edge with respect to the parameter, &#xD;
			 * we can now set the next release time based on the&#xD;
			 * current time.&#xD;
			 * */&#xD;
			setNextReleaseTime(currentTime);&#xD;
			&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoJKlTEe-NBpoHimppkw" name="addConflict" specification="_UgA2IqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoJalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoJqlTEe-NBpoHimppkw" name="addConflicts" specification="_UzvDYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoJ6lTEe-NBpoHimppkw" name="conflicts" type="_UxZhE6lTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.conflicts.addAll(conflicts);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoKKlTEe-NBpoHimppkw" name="addCoordinator" specification="_UgBdMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoKalTEe-NBpoHimppkw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>coordinators.add(coordinator);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoKqlTEe-NBpoHimppkw" name="addCoordinators" specification="_UzvqcalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoK6lTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.coordinators.addAll(coordinators);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoLKlTEe-NBpoHimppkw" name="addScheduleTimes" specification="_UzwRgalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoLalTEe-NBpoHimppkw" name="scheduleTime" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.additionalScheduleTimes.addAll(scheduleTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoLqlTEe-NBpoHimppkw" name="getNextScheduleTime" specification="_UgCEQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoL6lTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2SoMKlTEe-NBpoHimppkw" type="_UkK9YKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var result = new ScheduleTime(Integer.MAX_VALUE, Integer.MAX_VALUE);&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		while (iter.hasNext() ) {&#xD;
			var next = iter.next();&#xD;
			if (next.getStartTime() > time) {&#xD;
				result = next;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoMalTEe-NBpoHimppkw" name="getMatchingEndTime" specification="_UgDSYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoMqlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2SoM6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = Integer.MAX_VALUE;&#xD;
		var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		// var nextEndTime = time;&#xD;
		while (iter.hasNext()) { //  &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			// nextEndTime = iter.next().getEndTime();&#xD;
			var scheduleTime = iter.next();&#xD;
			if (time == scheduleTime.getStartTime()) {&#xD;
				result = scheduleTime.getEndTime();&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoNKlTEe-NBpoHimppkw" name="getNextStartTime" specification="_UgD5cKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoNalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2SoNqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextStartTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextStartTime &lt;= time  ) {&#xD;
			nextStartTime = iter.next().getStartTime();&#xD;
		}&#xD;
		if (nextStartTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextStartTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextStartTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2SoN6lTEe-NBpoHimppkw" name="getNextEndTime" specification="_UgEggKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2SoOKlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2SoOalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var moreScheduleTimes = getAdditionalScheduleTimes();&#xD;
		Iterator&lt;ScheduleTime> iter = moreScheduleTimes.iterator();&#xD;
		var nextEndTime = time;&#xD;
		while (iter.hasNext() &amp;&amp; nextEndTime &lt;= time  ) {&#xD;
			nextEndTime = iter.next().getEndTime();&#xD;
		}&#xD;
		if (nextEndTime == time) {&#xD;
			/* no next StartTime found &#xD;
			 * could be an error &#xD;
			 */&#xD;
			nextEndTime = Integer.MAX_VALUE;&#xD;
			&#xD;
		}&#xD;
		return nextEndTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPMKlTEe-NBpoHimppkw" name="getNumEdges" specification="_UgEgg6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPMalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPMqlTEe-NBpoHimppkw" name="compareTo" specification="_Uxb9UKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPM6lTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2TPNKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return priorityComparison(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPNalTEe-NBpoHimppkw" name="conflictExists" specification="_UxckYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPNqlTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2TPN6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* create a copy of this.conflicts and obj.conflicts&#xD;
		 * and then check the intersection of the two &#xD;
		 * sets. &#xD;
		 * Conflicts exists if |intersection| > 0&#xD;
		 */&#xD;
		var conflicts = new HashSet&lt;String>();&#xD;
		conflicts.addAll(getConflicts());&#xD;
		var objConflicts = new HashSet&lt;String>();&#xD;
		objConflicts.addAll(obj.getConflicts());&#xD;
		conflicts.retainAll(objConflicts); // get the intersection&#xD;
		if (conflicts.size() > 0) {&#xD;
			result = true; // |intersection| > 0 => conflict&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPOKlTEe-NBpoHimppkw" name="canCombine" specification="_UxckY6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPOalTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2TPOqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency.&#xD;
				 */&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPO6lTEe-NBpoHimppkw" name="getDelta" specification="_UgFHkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPPKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxTxPerLink = 0;&#xD;
		for (Edge edge: getEdges()) {&#xD;
			maxTxPerLink = Math.max(maxTxPerLink, edge.getNumTx());&#xD;
		}&#xD;
		return maxTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPPalTEe-NBpoHimppkw" name="getExecutionDuration" specification="_UgFuoalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPPqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 */&#xD;
		return getDelta() + (getNumEdges() - 1);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPP6lTEe-NBpoHimppkw" name="getCombinedExecutionDuration" specification="_UxckZqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPQKlTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2TPQalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Each edge requires delta time units. However, assuming &#xD;
		 * the WARP pipeline scheduling approach, the activation only&#xD;
		 * executes for Delta + (numEdges - 1) time units, because&#xD;
		 * a new edge will be added to the pipeline every time unit&#xD;
		 * it executes.&#xD;
		 * So, if combined, we consider edges in both activations&#xD;
		 */&#xD;
		var result = 0;&#xD;
		if (a2 != null) {&#xD;
			result = Math.max(getDelta(), a2.getDelta()) + (getNumEdges() + a2.getNumEdges() - 1);&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPQqlTEe-NBpoHimppkw" name="printAll" specification="_UgG8wKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPQ6lTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.printAll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPRKlTEe-NBpoHimppkw" name="printAll" specification="_UgG8wqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>super.print();&#xD;
		printEdges(&quot;Parition &quot;+getName(),new ReleaseTimeQueue&lt;Edge>(edges));&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPRalTEe-NBpoHimppkw" name="printEdges" specification="_UxdLcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPRqlTEe-NBpoHimppkw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2TPR6lTEe-NBpoHimppkw" name="edges" type="_UjK30KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s\nEdges in edge list:&quot;, header);&#xD;
		printEdges(edges);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2TPSKlTEe-NBpoHimppkw" name="printEdges" specification="_UxdLdKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2TPSalTEe-NBpoHimppkw" name="edges" type="_UjK30KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var q = new ReleaseTimeQueue&lt;Edge>();&#xD;
 		q.addAll(edges);&#xD;
 		Iterator&lt;Edge> qValue = q.iterator();&#xD;
         while (qValue.hasNext()) {&#xD;
         	var next = q.poll();&#xD;
         	next.print();&#xD;
         }&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uf46UKlTEe-NBpoHimppkw" name="Activation" visibility="package" method="_U2RaAqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uf46UqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uf46U6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uf46UalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uf46VKlTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uf5hYKlTEe-NBpoHimppkw" name="clone" method="_U2SBFKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxavNqlTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uf6vgqlTEe-NBpoHimppkw" name="getEdgesByReleaseTime" method="_U2SBFqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FEKlTEe-NBpoHimppkw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_UxavN6lTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uf8ksKlTEe-NBpoHimppkw" name="getEdgesByLatestReleaseTime" method="_U2SBGKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FEalTEe-NBpoHimppkw">
                  <body>@return the edgesByReleaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_UxavOKlTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uf9LwKlTEe-NBpoHimppkw" name="getEdgesByPeriod" method="_U2SBGqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FEqlTEe-NBpoHimppkw">
                  <body>@return the edgesByPeriod</body>
                </ownedComment>
                <ownedParameter xmi:id="_UxavOalTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uf9y0alTEe-NBpoHimppkw" name="getEdgesByDeadline" method="_U2SBHKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FE6lTEe-NBpoHimppkw">
                  <body>@return the edgesByDeadline</body>
                </ownedComment>
                <ownedParameter xmi:id="_UxavOqlTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uf_A8KlTEe-NBpoHimppkw" name="getEdgesByPriority" method="_U2SBHqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FFKlTEe-NBpoHimppkw">
                  <body>@return the edgesByPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_UxbWQKlTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UgAPEKlTEe-NBpoHimppkw" name="increaseEdgePhases" method="_U2SoIKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FFalTEe-NBpoHimppkw">
                  <body>Increase the phase of each edge by the input parameter.&#xD;
	 * &#xD;
	 * @param additionalOffset</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgAPEalTEe-NBpoHimppkw" name="additionalOffset">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgA2IKlTEe-NBpoHimppkw" name="updatePriorityAndRelease" method="_U2SoIqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FFqlTEe-NBpoHimppkw">
                  <body>Updates priority and release time of &#xD;
	 * this activation.&lt;br>&#xD;
	 * &#xD;
	 * The priority of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br>&#xD;
	 *&#xD;
	 * The release time of the element is equal to the&#xD;
	 * edge priority with the earliest release time.&#xD;
	 * Thus, it can change dynamically. &lt;br></body>
                </ownedComment>
                <ownedParameter xmi:id="_UgA2IalTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgA2IqlTEe-NBpoHimppkw" name="addConflict" method="_U2SoJKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgA2I6lTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgBdMKlTEe-NBpoHimppkw" name="addCoordinator" method="_U2SoKKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgBdMalTEe-NBpoHimppkw" name="coordinator">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgCEQKlTEe-NBpoHimppkw" name="getNextScheduleTime" method="_U2SoLqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FGKlTEe-NBpoHimppkw">
                  <body>getNextScheduleTime returns the next entry in the additional&#xD;
	 * schedule time array list whose start time is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next schedule time or MAX_VALUEs if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgCrUKlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UxbWQ6lTEe-NBpoHimppkw" type="_UkK9YKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UgDSYKlTEe-NBpoHimppkw" name="getMatchingEndTime" method="_U2SoMalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FGalTEe-NBpoHimppkw">
                  <body>getMatchingEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgDSYalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgDSYqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgD5cKlTEe-NBpoHimppkw" name="getNextStartTime" method="_U2SoNKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FGqlTEe-NBpoHimppkw">
                  <body>getNextStartTime returns the next start time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgD5calTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgD5cqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgEggKlTEe-NBpoHimppkw" name="getNextEndTime" method="_U2SoN6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FG6lTEe-NBpoHimppkw">
                  <body>getNextEndTime returns the next end time in the additional&#xD;
	 * schedule time array list that is greater than the input&#xD;
	 * parameter time. MAX_INT is returned if such a time&#xD;
	 * is not found&#xD;
	 * @param next&#xD;
	 * @param time&#xD;
	 * @return next start time or MAX_VALUE if not found</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgEggalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgEggqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgEgg6lTEe-NBpoHimppkw" name="getNumEdges" method="_U2TPMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgEghKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgFHkKlTEe-NBpoHimppkw" name="getDelta" method="_U2TPO6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FHKlTEe-NBpoHimppkw">
                  <body>Returns the maximum number of transmissions&#xD;
	 * needed on any link in activation to ensure e2e &#xD;
	 * reliability is met.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgFuoKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgFuoalTEe-NBpoHimppkw" name="getExecutionDuration" method="_U2TPPalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgFuoqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgG8wKlTEe-NBpoHimppkw" name="printAll" method="_U2TPQqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgG8walTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgG8wqlTEe-NBpoHimppkw" name="printAll" method="_U2TPRKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UxavMKlTEe-NBpoHimppkw" name="Activation" visibility="package" method="_U2SBEKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxavM6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxavNKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxavMalTEe-NBpoHimppkw" name="elem" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxavMqlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UxavNalTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UxbWQalTEe-NBpoHimppkw" name="addEdge" method="_U2SBIqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxbWQqlTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uxb9UKlTEe-NBpoHimppkw" name="compareTo" method="_U2TPMqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uxb9UalTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uxb9UqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UxckYKlTEe-NBpoHimppkw" name="conflictExists" method="_U2TPNalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxckYalTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxckYqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UxckY6lTEe-NBpoHimppkw" name="canCombine" method="_U2TPOKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxckZKlTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxckZalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UxckZqlTEe-NBpoHimppkw" name="getCombinedExecutionDuration" method="_U2TPP6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxckZ6lTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxckaKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UxdLcKlTEe-NBpoHimppkw" name="printEdges" visibility="private" method="_U2TPRalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxdLcalTEe-NBpoHimppkw" name="header">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UxdLcqlTEe-NBpoHimppkw" name="edges" type="_UjK30KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UxdLdKlTEe-NBpoHimppkw" name="printEdges" visibility="private" method="_U2TPSKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxdygKlTEe-NBpoHimppkw" name="edges" type="_UjK30KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzucUKlTEe-NBpoHimppkw" name="addEdges" method="_U2SBIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzucUalTEe-NBpoHimppkw" name="edges" type="_UxYS8KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzvDYalTEe-NBpoHimppkw" name="addConflicts" method="_U2SoJqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzvDYqlTEe-NBpoHimppkw" name="conflicts" type="_UxZhE6lTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzvqcalTEe-NBpoHimppkw" name="addCoordinators" method="_U2SoKqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzvqcqlTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzwRgalTEe-NBpoHimppkw" name="addScheduleTimes" method="_U2SoLKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25FF6lTEe-NBpoHimppkw">
                  <body>@param additionalScheduleTimes</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzwRgqlTEe-NBpoHimppkw" name="scheduleTime" type="_UxYS8KlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UgO4kKlTEe-NBpoHimppkw" name="Activations">
              <generalization xmi:id="_UxfnsKlTEe-NBpoHimppkw" general="_UfzawKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1HjcKlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1HjcalTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UgQGsKlTEe-NBpoHimppkw" name="BasicPoset">
              <ownedComment xmi:id="_U25sIKlTEe-NBpoHimppkw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
local connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_UxgOxqlTEe-NBpoHimppkw" general="_UiPqwKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2T2QKlTEe-NBpoHimppkw" name="BasicPoset" specification="_UxgOwalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2T2QalTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2T2QqlTEe-NBpoHimppkw" type="_UgQGsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UxgOwalTEe-NBpoHimppkw" name="BasicPoset" visibility="package" method="_U2T2QKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxgOw6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxgOxKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxgOwqlTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxgOxalTEe-NBpoHimppkw" type="_UgQGsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UgRU0KlTEe-NBpoHimppkw" name="ChannelAnalysis">
              <ownedComment xmi:id="_U25sIalTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1HjcqlTEe-NBpoHimppkw" name="program" visibility="private" type="_UijMwKlTEe-NBpoHimppkw" association="_U3cetKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1HjdKlTEe-NBpoHimppkw" name="programTable" visibility="private" type="_Ui-qkKlTEe-NBpoHimppkw" association="_U3dFwalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1IKgalTEe-NBpoHimppkw" name="conflictExists" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2T2Q6lTEe-NBpoHimppkw" name="ChannelAnalysis" specification="_Uxg10KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2T2RKlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2T2RalTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.program = warp.toProgram();&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2T2RqlTEe-NBpoHimppkw" name="ChannelAnalysis" specification="_Uxg11alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2T2R6lTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2T2SKlTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.program = program;&#xD;
 this.programTable = program.getSchedule();&#xD;
 conflictExists = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2T2SalTEe-NBpoHimppkw" name="isChannelConflict" specification="_UgTKAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2UdUKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return conflictExists;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UgTKAKlTEe-NBpoHimppkw" name="isChannelConflict" method="_U2T2SalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgTKAalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uxg10KlTEe-NBpoHimppkw" name="ChannelAnalysis" visibility="package" method="_U2T2Q6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uxg10qlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uxg106lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uxg10alTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uxg11KlTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uxg11alTEe-NBpoHimppkw" name="ChannelAnalysis" visibility="package" method="_U2T2RqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxiD8KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxiD8alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uxg11qlTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxiD8qlTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UgU_MKlTEe-NBpoHimppkw" name="ChannelVisualization">
              <ownedComment xmi:id="_U25sIqlTEe-NBpoHimppkw">
                <body>ChannelVisualization creates the visualizations for the channel analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2022 Project: Implement this class to create the file visualization that is requested&#xD;
in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UxirAKlTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1IKg6lTEe-NBpoHimppkw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1IKhKlTEe-NBpoHimppkw" value="&quot;.ch&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1IKhalTEe-NBpoHimppkw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1IxkKlTEe-NBpoHimppkw" value="&quot;Channel Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1IxkalTEe-NBpoHimppkw" name="warp" visibility="private" type="_Ukr6wKlTEe-NBpoHimppkw" association="_U3ds0alTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1Ixk6lTEe-NBpoHimppkw" name="ca" visibility="private" type="_UgRU0KlTEe-NBpoHimppkw" association="_U3eT4alTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdUalTEe-NBpoHimppkw" name="ChannelVisualization" specification="_UxiD86lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2UdUqlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2UdU6lTEe-NBpoHimppkw" type="_UgU_MKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.ca = warp.toChannelAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UxiD86lTEe-NBpoHimppkw" name="ChannelVisualization" visibility="package" method="_U2UdUalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxiD9alTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxiD9qlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxiD9KlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxiD96lTEe-NBpoHimppkw" type="_UgU_MKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UgXbcKlTEe-NBpoHimppkw" name="Channels">
              <ownedComment xmi:id="_U25sI6lTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1JYoqlTEe-NBpoHimppkw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1JYpKlTEe-NBpoHimppkw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1J_salTEe-NBpoHimppkw" name="channelsAvailable" visibility="package" type="_UxYS8KlTEe-NBpoHimppkw" association="_U3e68alTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdWalTEe-NBpoHimppkw" name="Channels" specification="_UgbF0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2UdWqlTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2UdW6lTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2UdXKlTEe-NBpoHimppkw" type="_UgXbcKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new ArrayList&lt;ChannelSet>();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdXalTEe-NBpoHimppkw" name="getChannelSet" specification="_Ugbs4qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2UdXqlTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2UdX6lTEe-NBpoHimppkw" type="_UxY6AalTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>/* get the channel set for this timeSlot */&#xD;
 HashSet&lt;String> channelSet = new HashSet&lt;String>(channelsAvailable.get(timeSlot));&#xD;
 return channelSet;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdYKlTEe-NBpoHimppkw" name="addNewChannelSet" specification="_UgcT8alTEe-NBpoHimppkw">
                <language>java</language>
                <body>var channels = new ChannelSet(nChannels);&#xD;
 channelsAvailable.add(channels);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdYalTEe-NBpoHimppkw" name="isEmpty" specification="_UgdiEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2UdYqlTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2UdY6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>ChannelSet channelSet = channelsAvailable.get(timeSlot); // get the channel set for this&#xD;
                                                          // timeSlot&#xD;
 return channelSet.isEmpty(); // returns true channel set is empty and false if not&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdZKlTEe-NBpoHimppkw" name="removeChannel" specification="_UgeJIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2UdZalTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2UdZqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2UdZ6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot);&#xD;
 result = channels.remove(channel);&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEYKlTEe-NBpoHimppkw" name="addChannel" specification="_UgewMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEYalTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VEYqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VEY6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result;&#xD;
 ChannelSet channels = channelsAvailable.get(timeSlot); // get a pointer to the channel set&#xD;
 result = channels.add(channel); // remove the channel, returning the result&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEZKlTEe-NBpoHimppkw" name="getNumChannels" specification="_UgfXQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEZalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UgbF0KlTEe-NBpoHimppkw" name="Channels" visibility="package" method="_U2UdWalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UgbF06lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ugbs4KlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UgbF0alTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgbF0qlTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ugbs4alTEe-NBpoHimppkw" type="_UgXbcKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ugbs4qlTEe-NBpoHimppkw" name="getChannelSet" method="_U2UdXalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ugbs46lTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UzytwKlTEe-NBpoHimppkw" type="_UxY6AalTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UgcT8alTEe-NBpoHimppkw" name="addNewChannelSet" method="_U2UdYKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UgdiEKlTEe-NBpoHimppkw" name="isEmpty" method="_U2UdYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgdiEalTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgdiEqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgeJIKlTEe-NBpoHimppkw" name="removeChannel" method="_U2UdZKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgeJIalTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgeJIqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgeJI6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgewMKlTEe-NBpoHimppkw" name="addChannel" method="_U2VEYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgewMalTEe-NBpoHimppkw" name="timeSlot">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgewMqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgewM6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgfXQKlTEe-NBpoHimppkw" name="getNumChannels" method="_U2VEZKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgfXQalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_UgYCgKlTEe-NBpoHimppkw" name="ChannelSet" visibility="private">
                <generalization xmi:id="_UzxfoKlTEe-NBpoHimppkw" general="_UxY6AalTEe-NBpoHimppkw"/>
                <ownedAttribute xmi:id="_U1JYoKlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1JYoalTEe-NBpoHimppkw" value="6725256944325470867L"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdVKlTEe-NBpoHimppkw" name="ChannelSet" specification="_UgYpkKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2UdValTEe-NBpoHimppkw" type="_UgYCgKlTEe-NBpoHimppkw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
 </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2UdVqlTEe-NBpoHimppkw" name="ChannelSet" specification="_UgZ3sKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2UdV6lTEe-NBpoHimppkw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_U2UdWKlTEe-NBpoHimppkw" type="_UgYCgKlTEe-NBpoHimppkw" direction="return"/>
                  <language>java</language>
                  <body>super();&#xD;
   for (int i = 0; i &lt; nChannels; i++) { // ASSUMES channels range from 0 to nChannels-1&#xD;
     this.add(String.valueOf(i));&#xD;
   }&#xD;
 </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_UgYpkKlTEe-NBpoHimppkw" name="ChannelSet" visibility="private" method="_U2UdVKlTEe-NBpoHimppkw">
                  <eAnnotations xmi:id="_UgZQoKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_UgZQoalTEe-NBpoHimppkw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_UgZQoqlTEe-NBpoHimppkw" type="_UgYCgKlTEe-NBpoHimppkw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UgZ3sKlTEe-NBpoHimppkw" name="ChannelSet" visibility="private" method="_U2UdVqlTEe-NBpoHimppkw">
                  <eAnnotations xmi:id="_UgZ3sqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_UgZ3s6lTEe-NBpoHimppkw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_UgZ3salTEe-NBpoHimppkw" name="nChannels">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_UgZ3tKlTEe-NBpoHimppkw" type="_UgYCgKlTEe-NBpoHimppkw" direction="return"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UghzgKlTEe-NBpoHimppkw" name="CodeFragment">
              <ownedAttribute xmi:id="_U1KmwalTEe-NBpoHimppkw" name="SLEEP" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1KmwqlTEe-NBpoHimppkw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1Kmw6lTEe-NBpoHimppkw" name="edges" visibility="package" type="_UxYS8KlTEe-NBpoHimppkw" association="_U3e69KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1LN0qlTEe-NBpoHimppkw" name="coordinator" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1L04KlTEe-NBpoHimppkw" name="codeFragment" visibility="package" type="_UxYS8KlTEe-NBpoHimppkw" association="_U3fiAalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1Mb8KlTEe-NBpoHimppkw" name="delta" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1Mb8qlTEe-NBpoHimppkw" name="channel" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEZqlTEe-NBpoHimppkw" name="CodeFragment" specification="_UgjBoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEZ6lTEe-NBpoHimppkw" type="_UghzgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.delta = 0;&#xD;
		this.channel = 0;&#xD;
		this.edges = null;&#xD;
		this.coordinator = null;&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		this.codeFragment.add(SLEEP);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEaKlTEe-NBpoHimppkw" name="CodeFragment" specification="_UzzU0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEaalTEe-NBpoHimppkw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VEaqlTEe-NBpoHimppkw" name="edges" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2VEa6lTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2VEbKlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VEbalTEe-NBpoHimppkw" type="_UghzgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.delta = delta;&#xD;
		this.channel = channel;&#xD;
		this.edges = edges;&#xD;
		this.coordinator = coordinators.get(0);&#xD;
		this.codeFragment = new ArrayList&lt;String>();&#xD;
		if (multipleCoordinators(coordinators)) {&#xD;
			reportIfDifferentCoordinators(coordinators);&#xD;
		}	&#xD;
		generateCodeFragment();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEbqlTEe-NBpoHimppkw" name="getCoordinator" specification="_UgjosKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEb6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return coordinator;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEcKlTEe-NBpoHimppkw" name="instructions" specification="_UgkPwalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEcalTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return codeFragment;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEcqlTEe-NBpoHimppkw" name="size" specification="_Ugk20alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEc6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return codeFragment.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEdKlTEe-NBpoHimppkw" name="generateCodeFragment" specification="_Ugld4KlTEe-NBpoHimppkw">
                <language>java</language>
                <body>var edgeQueue = new SchedulableObjectQueue&lt;Edge>(new &#xD;
				PriorityComparator&lt;Edge>(),this.edges);&#xD;
		Iterator&lt;Edge> q = edgeQueue.iterator();&#xD;
		var size = edgeQueue.size();&#xD;
		/* the code length will be equal to &#xD;
		 * delta + #edges -1&#xD;
		 */&#xD;
		var codeLength = delta + size -1;&#xD;
		var basicInstructions = new ArrayList&lt;String>();&#xD;
		/* create basic instructions for each edge &#xD;
		 * and initial receiver set for each instruction&#xD;
		 * */&#xD;
		while(q.hasNext()) {&#xD;
			var edge = edgeQueue.poll();&#xD;
			var src = edge.getSrc();&#xD;
			var snk = edge.getSnk();&#xD;
			var flow = edge.getFlow();&#xD;
			var instr = getBaseInstruction(flow,src,snk);&#xD;
			basicInstructions.add(instr);&#xD;
		}&#xD;
		/* start building code fragments */&#xD;
		&#xD;
		codeFragment.add(basicInstructions.get(0));&#xD;
		&#xD;
		/* when size &lt; delta, we need to repeat the&#xD;
		 * middle stage delta - size times&#xD;
		 */&#xD;
		var numRepeatStages = Math.max(0, delta - size);&#xD;
		if (size &lt; delta) {&#xD;
			numRepeatStages = delta - size;&#xD;
		}&#xD;
		&#xD;
		/* build the initial code fragment */&#xD;
		Integer localDelta = Math.min(size, delta);&#xD;
		var instr = new String();&#xD;
		var dropInstr = new String();&#xD;
		var priorInstr = new String();&#xD;
		for (int i = 1; i &lt; localDelta ; i++) { &#xD;
			instr = codeFragment.get(i-1) +&#xD;
					&quot; else &quot; + basicInstructions.get(i);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* now repeat middle stage if size &lt; delta &#xD;
		 * otherwise, this for loop will be skipped&#xD;
		 */&#xD;
		for (int i = localDelta; (i &lt; localDelta + numRepeatStages) &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			instr = codeFragment.get(i-1);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* The first Instruction has been repeated&#xD;
		 * delta times. Now it gets removed from&#xD;
		 * the pipeline. E.g., with delta = 3 and&#xD;
		 * size = 3&#xD;
		 *  a &lt;-- dropInstr&#xD;
		 *  ab&#xD;
		 *  abc &lt;-- priorInstr&#xD;
		 *  bc &lt;-- instr&#xD;
		 */&#xD;
&#xD;
		/* Now loop through dropping old instructions&#xD;
		 * and adding new ones for size - localDelta times.&#xD;
		 * This loop will be skipped if size = localDelta.&#xD;
		 */&#xD;
		for (int i = localDelta + numRepeatStages; (i &lt; numRepeatStages + size)  &amp;&amp; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-(localDelta + numRepeatStages)) + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			instr += &quot; else &quot; + basicInstructions.get(i-numRepeatStages);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
		/* Now loop through dropping old instructions, draining&#xD;
		 * the pipleline.&#xD;
		 */&#xD;
		for (int i = numRepeatStages + size; i &lt; codeLength ; i++) { &#xD;
			priorInstr = codeFragment.get(i-1);&#xD;
			dropInstr =  basicInstructions.get(i-delta)  + &quot; else &quot;;&#xD;
			instr = priorInstr.replaceFirst(Pattern.quote(dropInstr),&quot;&quot;);&#xD;
			codeFragment.add(instr);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VEdalTEe-NBpoHimppkw" name="getBaseInstruction" specification="_Ugld4alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VEdqlTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VEd6lTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VEeKlTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VEealTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instr = new String();&#xD;
		if (coordinator.equals(src)) {&#xD;
			/* push instruction */&#xD;
			instr += ifHas(flow,src,snk) + push(flow,src,snk);&#xD;
		} else {&#xD;
			/* pull instruction */&#xD;
			instr += ifNotHas(flow,src,snk) + pull(flow,src,snk);&#xD;
		}&#xD;
		return instr;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VrcKlTEe-NBpoHimppkw" name="push" specification="_UgmsAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VrcalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrcqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Vrc6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrdKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;push(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VrdalTEe-NBpoHimppkw" name="pull" specification="_UgnTEalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VrdqlTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Vrd6lTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VreKlTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrealTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;pull(%s: %s -> %s, #%d)&quot;, flow, src, snk, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VreqlTEe-NBpoHimppkw" name="ifHas" specification="_UgohMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Vre6lTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrfKlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrfalTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrfqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Vrf6lTEe-NBpoHimppkw" name="ifNotHas" specification="_UgpIQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VrgKlTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrgalTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrgqlTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Vrg6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;if !has(%s: %s -> %s) &quot;, flow, src, snk);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VrhKlTEe-NBpoHimppkw" name="wait" specification="_UgpIRalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VrhalTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2VrhqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = String.format(&quot;wait(#%d)&quot;, channel);&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Vrh6lTEe-NBpoHimppkw" name="sleep" specification="_UgpvUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VriKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var instruction = SLEEP;&#xD;
		return instruction;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2VrialTEe-NBpoHimppkw" name="reportIfDifferentCoordinators" specification="_Uz0i8alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VriqlTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var numUniqueCoordinators = 1;&#xD;
		var coordinatorNames = this.coordinator;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					coordinatorNames += &quot;, &quot; + coordinators.get(i);&#xD;
					numUniqueCoordinators++;&#xD;
				}&#xD;
			}&#xD;
			if (numUniqueCoordinators > 1) {&#xD;
				System.err.printf(&quot;\n%d Coordinators: %s\n&quot;, &#xD;
						numUniqueCoordinators, this.coordinator, coordinatorNames);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Vri6lTEe-NBpoHimppkw" name="multipleCoordinators" specification="_Uz1KAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2VrjKlTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2VrjalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (coordinators.size() > 1) {&#xD;
			for (int i = 1 ; i &lt; coordinators.size(); i++) {&#xD;
				if (!this.coordinator.equals(coordinators.get(i))) {&#xD;
					result = true;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UgjBoKlTEe-NBpoHimppkw" name="CodeFragment" visibility="package" method="_U2VEZqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UgjBoalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UgjBoqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U25sJKlTEe-NBpoHimppkw">
                  <body>Constructor generates a SLEEP instruction for the&#xD;
	 * code fragment.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgjBo6lTEe-NBpoHimppkw" type="_UghzgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UgjosKlTEe-NBpoHimppkw" name="getCoordinator" method="_U2VEbqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25sJqlTEe-NBpoHimppkw">
                  <body>@return the coordinator</body>
                </ownedComment>
                <ownedParameter xmi:id="_UgkPwKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgkPwalTEe-NBpoHimppkw" name="instructions" method="_U2VEcKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25sJ6lTEe-NBpoHimppkw">
                  <body>@return the codeFragment</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uz0i8KlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ugk20alTEe-NBpoHimppkw" name="size" method="_U2VEcqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U25sKKlTEe-NBpoHimppkw">
                  <body>@return the size</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ugk20qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ugld4KlTEe-NBpoHimppkw" name="generateCodeFragment" visibility="private" method="_U2VEdKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Ugld4alTEe-NBpoHimppkw" name="getBaseInstruction" visibility="private" method="_U2VEdalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ugld4qlTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ugld46lTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ugld5KlTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgmE8KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgmsAKlTEe-NBpoHimppkw" name="push" visibility="private" method="_U2VrcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgmsAalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgmsAqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgmsA6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgnTEKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgnTEalTEe-NBpoHimppkw" name="pull" visibility="private" method="_U2VrdalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ugn6IKlTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ugn6IalTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ugn6IqlTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ugn6I6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgohMKlTEe-NBpoHimppkw" name="ifHas" visibility="private" method="_U2VreqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgohMalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgohMqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgohM6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgohNKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgpIQKlTEe-NBpoHimppkw" name="ifNotHas" visibility="private" method="_U2Vrf6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgpIQalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgpIQqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgpIQ6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgpIRKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgpIRalTEe-NBpoHimppkw" name="wait" method="_U2VrhKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgpIRqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UgpIR6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UgpvUKlTEe-NBpoHimppkw" name="sleep" isStatic="true" method="_U2Vrh6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UgpvUalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzzU0KlTEe-NBpoHimppkw" name="CodeFragment" visibility="package" method="_U2VEaKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UzzU1alTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UzzU1qlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U25sJalTEe-NBpoHimppkw">
                  <body>Constructor generates DSL instructions to transmit&#xD;
	 * the data over edges using the coordinator and channel&#xD;
	 * to determine the type of instruction and delta to &#xD;
	 * determine the number of times each instructions must&#xD;
	 * be attempted.&#xD;
	 * &#xD;
	 * @param delta&#xD;
	 * @param edges&#xD;
	 * @param coordinators&#xD;
	 * @param channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzzU0alTEe-NBpoHimppkw" name="delta">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UzzU0qlTEe-NBpoHimppkw" name="edges" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzzU06lTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzzU1KlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UzzU16lTEe-NBpoHimppkw" type="_UghzgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uz0i8alTEe-NBpoHimppkw" name="reportIfDifferentCoordinators" visibility="private" method="_U2VrialTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uz0i8qlTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uz1KAKlTEe-NBpoHimppkw" name="multipleCoordinators" visibility="private" method="_U2Vri6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uz1KAalTEe-NBpoHimppkw" name="coordinators" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uz1KAqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UgsyoKlTEe-NBpoHimppkw" name="CombinedActivation">
              <generalization xmi:id="_UxmVZqlTEe-NBpoHimppkw" general="_Uf3FIKlTEe-NBpoHimppkw"/>
              <interfaceRealization xmi:id="_Uz2_MKlTEe-NBpoHimppkw" client="_UgsyoKlTEe-NBpoHimppkw" supplier="_UztOMalTEe-NBpoHimppkw" contract="_UztOMalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2WSgKlTEe-NBpoHimppkw" name="CombinedActivation" specification="_UguAwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2WSgalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2WSgqlTEe-NBpoHimppkw" type="_UgsyoKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(name);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2WSg6lTEe-NBpoHimppkw" name="CombinedActivation" specification="_UxlHQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2WShKlTEe-NBpoHimppkw" name="elem" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WShalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2WShqlTEe-NBpoHimppkw" type="_UgsyoKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(elem, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2WSh6lTEe-NBpoHimppkw" name="CombinedActivation" specification="_UxlHRqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2WSiKlTEe-NBpoHimppkw" name="priorEntry" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WSialTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WSiqlTEe-NBpoHimppkw" type="_UgsyoKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>/* create a new this and add priorEntry &#xD;
		 * and next as subObjects. The new name is &#xD;
		 * &quot;PriorName + NextName&quot;. &#xD;
		 */&#xD;
		super(priorEntry,next.getLastUpdateTime());&#xD;
		String combinedName = &#xD;
				priorEntry.getName() + &quot;+&quot; + next.getName();&#xD;
		/* initially, this will be a clone of priorEntry */;&#xD;
		/* now update its name and add relevant attributes from next */&#xD;
		this.setName(combinedName);&#xD;
		this.addSubObject(priorEntry);&#xD;
		this.addSubObject(next);&#xD;
		var endTime = Math.max(priorEntry.getEndTime(), next.getEndTime());&#xD;
		this.setEndTime(endTime);&#xD;
		var startTime = Math.min(priorEntry.getStartTime(), next.getStartTime());&#xD;
		this.setStartTime(startTime);&#xD;
		this.addEdges(next.getEdges());&#xD;
		this.addCoordinators(next.getCoordinators());&#xD;
		this.addConflicts(next.getConflicts());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2WSi6lTEe-NBpoHimppkw" name="canCombine" specification="_UxmVYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2WSjKlTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WSjalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = false;&#xD;
		/* make sure a2 is not null */&#xD;
		if (a2 != null) {&#xD;
			var newEntryCoordinator = a2.getCoordinators().get(0);&#xD;
			if (getCoordinators().contains(newEntryCoordinator)) {&#xD;
				/* The (first) coordinator of the newEntry&#xD;
				 * is in the list of coordinators of the prior entry.&#xD;
				 * Thus, these two can be combined for efficiency &#xD;
				 */&#xD;
&#xD;
				result = true;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UguAwKlTEe-NBpoHimppkw" name="CombinedActivation" visibility="package" method="_U2WSgKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UguAwqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UguAw6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UguAwalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UguAxKlTEe-NBpoHimppkw" type="_UgsyoKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UxlHQKlTEe-NBpoHimppkw" name="CombinedActivation" visibility="package" method="_U2WSg6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxlHQ6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxlHRKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxlHQalTEe-NBpoHimppkw" name="elem" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxlHQqlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UxlHRalTEe-NBpoHimppkw" type="_UgsyoKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UxlHRqlTEe-NBpoHimppkw" name="CombinedActivation" visibility="package" method="_U2WSh6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxlHSalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxlHSqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxlHR6lTEe-NBpoHimppkw" name="priorEntry" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxlHSKlTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxlHS6lTEe-NBpoHimppkw" type="_UgsyoKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UxmVYKlTEe-NBpoHimppkw" name="canCombine" method="_U2WSi6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxmVYalTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxmVYqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UgwdAKlTEe-NBpoHimppkw" name="CommunicationGraph">
              <ownedComment xmi:id="_U25sKalTEe-NBpoHimppkw">
                <body>@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UxoKkKlTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1NqEKlTEe-NBpoHimppkw" name="wfm" visibility="package" type="_UhHCUKlTEe-NBpoHimppkw" association="_U3gJEalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1ORIalTEe-NBpoHimppkw" name="graphFileName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1ORI6lTEe-NBpoHimppkw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1O4MalTEe-NBpoHimppkw" name="workLoad" visibility="package" type="_UlImsKlTEe-NBpoHimppkw" association="_U3gwIalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2WSjqlTEe-NBpoHimppkw" name="CommunicationGraph" specification="_Uxm8cKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2WSj6lTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WSkKlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WSkalTEe-NBpoHimppkw" type="_UgwdAKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2WSkqlTEe-NBpoHimppkw" name="CommunicationGraph" specification="_Uxnjg6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2WSk6lTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WSlKlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2WSlalTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2WSlqlTEe-NBpoHimppkw" type="_UgwdAKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>// constructor for GraphFile class&#xD;
		super(fm, workLoad, &quot;.wf&quot;);&#xD;
		this.wfm = fm;&#xD;
		this.workLoad = workLoad;&#xD;
		this.verbose = verbose; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2WSl6lTEe-NBpoHimppkw" name="createHeader" specification="_UgySMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2WSmKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		header.add(String.format(&quot;WARP_%s{\n&quot;,workLoad.getName()));&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5kKlTEe-NBpoHimppkw" name="createFooter" specification="_Ugy5Q6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5kalTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
		footer.add(&quot;}\n&quot;);&#xD;
		return footer;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5kqlTEe-NBpoHimppkw" name="visualization" specification="_UgzgU6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5k6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
     String line = String.format(&#xD;
     	&quot;// M = %s and End-to-End reliability = %s\n&quot;,&#xD;
     	String.valueOf(workLoad.getMinPacketReceptionRate()),&#xD;
     	String.valueOf(workLoad.getE2e()));&#xD;
     content.add(line);&#xD;
     var flowNames = workLoad.getFlowNames();&#xD;
     for (int flowIndex = 0; flowIndex &lt; flowNames.length; flowIndex++) {&#xD;
         var flowName = flowNames[flowIndex];&#xD;
         var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
         var nNodesInFlow = (nodesInFlow.length);&#xD;
         /* array of communications costs per link */&#xD;
         var linkCostArray = workLoad.getNumTxAttemptsPerLink(flowName); &#xD;
         var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
         var minCost = nNodesInFlow - 1 ;&#xD;
         /*&#xD;
          * nEdges in the flow is the minimum communication cost, &#xD;
          * i.e., min nTx to go E2E with no errors&#xD;
          */&#xD;
         line = String.format(&#xD;
         		&quot;// Flow %s has a minimum communication cost of %d &quot;&#xD;
         		+ &quot;and a worst-case communication cost of %d\n&quot;, &#xD;
         		flowName, minCost, totalCost);&#xD;
         content.add(line);&#xD;
         line = String.format(&#xD;
         		&quot; %s (%d,%d,%d,%d) : &quot;, flowName, &#xD;
         		workLoad.getFlowPriority(flowName), workLoad.getFlowPeriod(flowName), &#xD;
         		workLoad.getFlowDeadline(flowName), workLoad.getFlowPhase(flowName)); &#xD;
         String nodeName;&#xD;
         for (int i = 0; i &lt; nNodesInFlow-1; i++) {  &#xD;
             nodeName = nodesInFlow[i];&#xD;
             var nTx = linkCostArray[i];&#xD;
             line = String.format(line + &quot;%s -%d-> &quot;,nodeName,nTx); &#xD;
             /* This version of the file has nTx in the edges of the flow */&#xD;
         }&#xD;
         nodeName = nodesInFlow[nNodesInFlow-1];&#xD;
         line = String.format(line + &quot;%s\n&quot;,nodeName); // add last node on the flow&#xD;
         content.add(line);&#xD;
     }&#xD;
     return content;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5lKlTEe-NBpoHimppkw" name="createWarpFileContent" specification="_Ug0HY6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5lalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String wfFileContents = fileVisualization().toString();&#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;Warp File Contents:&quot;);&#xD;
     	System.out.println(wfFileContents);&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return wfFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UgySMKlTEe-NBpoHimppkw" name="createHeader" method="_U2WSl6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxnjiqlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ugy5Q6lTEe-NBpoHimppkw" name="createFooter" method="_U2W5kKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uxnji6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UgzgU6lTEe-NBpoHimppkw" name="visualization" method="_U2W5kqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxnjjKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ug0HY6lTEe-NBpoHimppkw" name="createWarpFileContent" method="_U2W5lKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ug0ucKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uxm8cKlTEe-NBpoHimppkw" name="CommunicationGraph" method="_U2WSjqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxnjgKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxnjgalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uxm8calTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uxm8cqlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxnjgqlTEe-NBpoHimppkw" type="_UgwdAKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uxnjg6lTEe-NBpoHimppkw" name="CommunicationGraph" method="_U2WSkqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uxnjh6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxnjiKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxnjhKlTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxnjhalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxnjhqlTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UxnjialTEe-NBpoHimppkw" type="_UgwdAKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ug3KsKlTEe-NBpoHimppkw" name="ConnectivityPoset">
              <ownedComment xmi:id="_U25sKqlTEe-NBpoHimppkw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
primary coordinator in the flow based on highest&#xD;
global connectivity.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_UxoxoKlTEe-NBpoHimppkw" general="_UiPqwKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5lqlTEe-NBpoHimppkw" name="ConnectivityPoset" specification="_UxoKkalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5l6lTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2W5mKlTEe-NBpoHimppkw" type="_Ug3KsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5malTEe-NBpoHimppkw" name="findCoordinator" specification="_Uz3mQalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5mqlTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2W5m6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var coordinatorIndex = 0;&#xD;
		var maxConnections = 0;&#xD;
		var size = nodesInFlow.size();&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			/* get the #connections for this node from the&#xD;
			 * connectivity Map and see if it is the max so far&#xD;
			 * if so, store its index in the flow&#xD;
			 */&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numConnections = nodeConnectivityMap.get(node.getName());&#xD;
			if (numConnections > maxConnections) {&#xD;
				maxConnections = numConnections;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}	&#xD;
		/* return the index with the largest connectivity */&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UxoKkalTEe-NBpoHimppkw" name="ConnectivityPoset" visibility="package" method="_U2W5lqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UxoKk6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxoKlKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxoKkqlTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxoKlalTEe-NBpoHimppkw" type="_Ug3KsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uz3mQalTEe-NBpoHimppkw" name="findCoordinator" visibility="protected" method="_U2W5malTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uz3mQqlTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uz4NUKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ug4_4KlTEe-NBpoHimppkw" name="DeadlineComparator">
              <interfaceRealization xmi:id="_Uz40YqlTEe-NBpoHimppkw" client="_Ug4_4KlTEe-NBpoHimppkw" supplier="_UxoxoalTEe-NBpoHimppkw" contract="_UxoxoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5nKlTEe-NBpoHimppkw" name="compare" specification="_Uz6CgalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5nalTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2W5nqlTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2W5n6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uz6CgalTEe-NBpoHimppkw" name="compare" method="_U2W5nKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uz6CgqlTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uz6Cg6lTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uz6ChKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ug61EKlTEe-NBpoHimppkw" name="Description">
              <ownedComment xmi:id="_U25sK6lTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Uz6pkqlTEe-NBpoHimppkw" general="_UxYS8KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1O4M6lTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1PfQKlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5oKlTEe-NBpoHimppkw" name="Description" specification="_Ug7cIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5oalTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2W5oqlTEe-NBpoHimppkw" name="Description" specification="_Ug8DMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2W5o6lTEe-NBpoHimppkw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2W5pKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		String[] lines = descriptionString.split(&quot;\\r?\\n&quot;);&#xD;
		for (String line : lines) {&#xD;
			this.add(line+&quot;\n&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2XgoKlTEe-NBpoHimppkw" name="toString" specification="_Ug8qQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2XgoalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>StringBuffer sb = new StringBuffer();&#xD;
		for (String row: this) { &#xD;
			sb.append(row);&#xD;
		}&#xD;
		return sb.toString();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ug7cIKlTEe-NBpoHimppkw" name="Description" method="_U2W5oKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Ug7cIalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ug7cIqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ug7cI6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ug8DMKlTEe-NBpoHimppkw" name="Description" method="_U2W5oqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Ug8DMqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ug8DM6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ug8DMalTEe-NBpoHimppkw" name="descriptionString">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ug8DNKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ug8qQKlTEe-NBpoHimppkw" name="toString" method="_U2XgoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ug8qQalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ug94YKlTEe-NBpoHimppkw" name="Edge">
              <generalization xmi:id="_Uxqm1alTEe-NBpoHimppkw" general="_Ult1gKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1PfQalTEe-NBpoHimppkw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1PfQqlTEe-NBpoHimppkw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1PfQ6lTEe-NBpoHimppkw" name="flow">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1PfRKlTEe-NBpoHimppkw" name="src">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1PfRalTEe-NBpoHimppkw" name="snk">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1QGUKlTEe-NBpoHimppkw" name="instance">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1QGUalTEe-NBpoHimppkw" name="coordinator">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1QGUqlTEe-NBpoHimppkw" name="state" type="_Ug_GgKlTEe-NBpoHimppkw" association="_U26TMKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1QGU6lTEe-NBpoHimppkw" name="numTx" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Uz7QoalTEe-NBpoHimppkw" client="_Ug94YKlTEe-NBpoHimppkw" supplier="_UztOMalTEe-NBpoHimppkw" contract="_UztOMalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2XgoqlTEe-NBpoHimppkw" name="Edge" specification="_UhAUoqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Xgo6lTEe-NBpoHimppkw" type="_Ug94YKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		this.flow = UNKNOWN;&#xD;
		this.src = UNKNOWN;&#xD;
		this.snk = UNKNOWN;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;&#xD;
		this.numTx = 0;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2XgpKlTEe-NBpoHimppkw" name="Edge" specification="_UhA7sKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2XgpalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2XgpqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Xgp6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2XgqKlTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2XgqalTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2XgqqlTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Xgq6lTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2XgrKlTEe-NBpoHimppkw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2XgralTEe-NBpoHimppkw" type="_Ug94YKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(priority, period, deadline, phase);&#xD;
		this.flow = flow;&#xD;
		this.src =src;&#xD;
		this.snk = snk;&#xD;
		this.instance = 0;&#xD;
		this.coordinator = UNKNOWN;&#xD;
		this.state = EdgeState.NOT_READY;	&#xD;
		this.numTx = numTx;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2XgrqlTEe-NBpoHimppkw" name="compareTo" specification="_Uxp_wKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Xgr6lTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2XgsKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return edge.getPriority() > this.getPriority() ? 1 : -1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2XgsalTEe-NBpoHimppkw" name="toString" specification="_UhCJ0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2XgsqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String result = String.format(&quot;%s:(%s,%s)&quot;, &#xD;
 			this.flow, this.src, this.snk);&#xD;
     return result;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Xgs6lTEe-NBpoHimppkw" name="print" specification="_UhCw4qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2XgtKlTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2XgtalTEe-NBpoHimppkw" name="print" specification="_UhD_AKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.printf(&quot;\tFlow:%s\n&quot;, this.flow);&#xD;
		System.out.printf(&quot;\tSrc:%s\n&quot;, this.src);&#xD;
		System.out.printf(&quot;\tSnk:%s\n&quot;, this.snk);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UhAUoqlTEe-NBpoHimppkw" name="Edge" visibility="package" method="_U2XgoqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UhAUo6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UhAUpKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UhAUpalTEe-NBpoHimppkw" type="_Ug94YKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhA7sKlTEe-NBpoHimppkw" name="Edge" visibility="package" method="_U2XgpKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UhBix6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UhBiyKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UhA7salTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBiwKlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBiwalTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBiwqlTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBiw6lTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBixKlTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBixalTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBixqlTEe-NBpoHimppkw" name="numTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhBiyalTEe-NBpoHimppkw" type="_Ug94YKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhCJ0KlTEe-NBpoHimppkw" name="toString" method="_U2XgsalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhCJ0alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhCw4qlTEe-NBpoHimppkw" name="print" method="_U2Xgs6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhCw46lTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhD_AKlTEe-NBpoHimppkw" name="print" method="_U2XgtalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Uxp_wKlTEe-NBpoHimppkw" name="compareTo" method="_U2XgrqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uxqm0KlTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uxqm0alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Ug_GgKlTEe-NBpoHimppkw" name="EdgeState" visibility="private">
                <ownedLiteral xmi:id="_Ug_tkalTEe-NBpoHimppkw" name="RELEASED"/>
                <ownedLiteral xmi:id="_UhAUoKlTEe-NBpoHimppkw" name="EXECUTING"/>
                <ownedLiteral xmi:id="_UhAUoalTEe-NBpoHimppkw" name="NOT_READY"/>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhHCUKlTEe-NBpoHimppkw" name="FileManager">
              <ownedComment xmi:id="_U26TMqlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1QtYKlTEe-NBpoHimppkw" name="baseDirectory">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1QtYalTEe-NBpoHimppkw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHsKlTEe-NBpoHimppkw" name="FileManager" specification="_UhIQcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHsalTEe-NBpoHimppkw" type="_UhHCUKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 verbose = false; // initialize verbose to false&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHsqlTEe-NBpoHimppkw" name="FileManager" specification="_UhI3g6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHs6lTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHtKlTEe-NBpoHimppkw" type="_UhHCUKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>baseDirectory = System.getProperty(&quot;user.dir&quot;); // Get current directory path and set to the&#xD;
                                                 // base directory&#xD;
 // constructor for this class&#xD;
 this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHtalTEe-NBpoHimppkw" name="getDocumentsDirectory" specification="_UhJekKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHtqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// return the 'Documents Directory' for the appropriate OS&#xD;
 String documentsDirectory;&#xD;
 if (OSValidator.isWindows()) {&#xD;
   documentsDirectory = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();&#xD;
 } else if (OSValidator.isMac()) {&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;) + File.separator + &quot;Documents&quot;;&#xD;
 } else { // for all other Unix systems&#xD;
   documentsDirectory = System.getProperty(&quot;user.home&quot;); // assume $HOME for Unix systems (not&#xD;
                                                         // MACOS)&#xD;
 }&#xD;
 return documentsDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHt6lTEe-NBpoHimppkw" name="getCurrentDirectory" specification="_UhJekqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHuKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return System.getProperty(&quot;user.dir&quot;);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHualTEe-NBpoHimppkw" name="createFile" specification="_UhKFoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHuqlTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHu6lTEe-NBpoHimppkw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHvKlTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHvalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * we don't actually create the file...it will be created when written to this routine really&#xD;
  * just creates the file name ;-)&#xD;
  */&#xD;
 Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex); // get the file string sans the suffix&#xD;
 }&#xD;
 /*&#xD;
  * fileString has no suffix at this point (removed if it existed) Now add file name extension&#xD;
  * and suffix&#xD;
  */&#xD;
 fileString = fileString + nameExtension + suffix;&#xD;
&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHvqlTEe-NBpoHimppkw" name="createFile" specification="_UhKssKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHv6lTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHwKlTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHwalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer suffixIndex = file.lastIndexOf('.');&#xD;
 String fileString = file;&#xD;
 if (suffixIndex > 0) { // if a suffix exists, index will be > 0&#xD;
   fileString = file.substring(0, suffixIndex - 1); // get the file string sans the suffix&#xD;
 }&#xD;
 // fileString has no suffix at this point (removed if it existed)&#xD;
 // Now add file name extension and suffix&#xD;
 fileString = fileString + suffix;&#xD;
 // we don't actually create the file...it will be created when written to&#xD;
 // this routine really just creates the file name ;-)&#xD;
 if (verbose) {&#xD;
   System.out.println(&quot;File &quot; + fileString + &quot; is created!&quot;);&#xD;
 }&#xD;
 return fileString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHwqlTEe-NBpoHimppkw" name="createDirectory" specification="_UhKstKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHw6lTEe-NBpoHimppkw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHxKlTEe-NBpoHimppkw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHxalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String newDirectory;&#xD;
 if (subDirectory.startsWith(&quot;/&quot;)) { // check if full path provided&#xD;
   newDirectory = subDirectory; // if subDirectory is a full path, use it.&#xD;
 } else { // subDirectory has relative path, so just append&#xD;
   newDirectory = directory + File.separator + subDirectory;&#xD;
 }&#xD;
 try {&#xD;
   Path path = Paths.get(newDirectory);&#xD;
   Files.createDirectories(path);&#xD;
   if (verbose) {&#xD;
     System.out.println(&quot;Directory &quot; + newDirectory + &quot; is created!&quot;);&#xD;
   }&#xD;
 } catch (IOException e) {&#xD;
   System.err.println(&quot;Failed to create directory!&quot; + e.getMessage());&#xD;
   newDirectory = directory; // in case of error, just use the initial directory&#xD;
 }&#xD;
 return newDirectory;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHxqlTEe-NBpoHimppkw" name="writeFile" specification="_UhLTwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHx6lTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHyKlTEe-NBpoHimppkw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Authentication tag = new Authentication(COURSE_TAG);&#xD;
 Path fileName = Path.of(file);&#xD;
 try {&#xD;
   // Files.writeString(fileName, tag.sign(fileContents)); // uncomment to tag course file&#xD;
   Files.writeString(fileName, fileContents); // comment out if tag is being used (line above)&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on writing file contents to file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YHyalTEe-NBpoHimppkw" name="readFile" specification="_UhLTw6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YHyqlTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YHy6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// String contents = null;&#xD;
 Path fileName = Path.of(file);&#xD;
 String contents = null;&#xD;
 try {&#xD;
   contents = Files.readString(fileName);&#xD;
 } catch (IOException e) {&#xD;
   // handle error&#xD;
   System.err.println(&quot;Error on reading file&quot; + file + &quot;: &quot; + e.getMessage());&#xD;
 } // the file will be closed automatically upon exit of this try block&#xD;
 return contents;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UhIQcKlTEe-NBpoHimppkw" name="FileManager" method="_U2YHsKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UhI3gKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UhI3galTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U26TM6lTEe-NBpoHimppkw">
                  <body>@param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhI3gqlTEe-NBpoHimppkw" type="_UhHCUKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhI3g6lTEe-NBpoHimppkw" name="FileManager" method="_U2YHsqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UhI3halTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UhI3hqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UhI3hKlTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhI3h6lTEe-NBpoHimppkw" type="_UhHCUKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhJekKlTEe-NBpoHimppkw" name="getDocumentsDirectory" method="_U2YHtalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhJekalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhJekqlTEe-NBpoHimppkw" name="getCurrentDirectory" method="_U2YHt6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhJek6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhKFoKlTEe-NBpoHimppkw" name="createFile" method="_U2YHualTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U26TNKlTEe-NBpoHimppkw">
                  <body>Build the name extension used for all files created by this tool. The nameExtension will be&#xD;
   * added to the base input file name so that all of the output files can be associated with the&#xD;
   * input file The file naming pattern is: baseFileNameFileType-NonDefaultParameterList where&#xD;
   * FileType is Schedule, SimInput, ReliabilityMatrix, or ReliabilityArray Default parameters are&#xD;
   * not identified in the NameExtension All parameters used to create the file, should be listed&#xD;
   * near the top of the file in the Parameter Section, followed by the file contents.&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhKFoalTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhKFoqlTEe-NBpoHimppkw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhKFo6lTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhKFpKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhKssKlTEe-NBpoHimppkw" name="createFile" method="_U2YHvqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhKssalTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhKssqlTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhKss6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhKstKlTEe-NBpoHimppkw" name="createDirectory" method="_U2YHwqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhKstalTEe-NBpoHimppkw" name="directory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhKstqlTEe-NBpoHimppkw" name="subDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhKst6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhLTwKlTEe-NBpoHimppkw" name="writeFile" method="_U2YHxqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhLTwalTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhLTwqlTEe-NBpoHimppkw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhLTw6lTEe-NBpoHimppkw" name="readFile" method="_U2YHyalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhLTxKlTEe-NBpoHimppkw" name="file">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhL60KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhMh4KlTEe-NBpoHimppkw" name="Flow">
              <ownedComment xmi:id="_U266QKlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
Allows for Schedulable Objects to be compared to flow charataristics and tracks faults  &#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UxwGZqlTEe-NBpoHimppkw" general="_Ult1gKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1RUcKlTEe-NBpoHimppkw" name="UNDEFINED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1RUcalTEe-NBpoHimppkw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1RUcqlTEe-NBpoHimppkw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1RUc6lTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1RUdKlTEe-NBpoHimppkw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1RUdalTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1RUdqlTEe-NBpoHimppkw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1RUd6lTEe-NBpoHimppkw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1R7gKlTEe-NBpoHimppkw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1R7galTEe-NBpoHimppkw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1R7gqlTEe-NBpoHimppkw" name="DEFAULT_PHASE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1R7g6lTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1R7hKlTEe-NBpoHimppkw" name="initialPriority" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1R7halTEe-NBpoHimppkw" value="UNDEFINED"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1R7h6lTEe-NBpoHimppkw" name="index" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1SikalTEe-NBpoHimppkw" name="numTxPerLink" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1Sik6lTEe-NBpoHimppkw" name="nodes" visibility="package" type="_UxYS8KlTEe-NBpoHimppkw" association="_U3hXMKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1TJoqlTEe-NBpoHimppkw" name="linkTxAndTotalCost" visibility="package" type="_UxYS8KlTEe-NBpoHimppkw" association="_U3hXM6lTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1TwsqlTEe-NBpoHimppkw" name="edges" visibility="package" type="_UxYS8KlTEe-NBpoHimppkw" association="_U3h-QalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1UXwqlTEe-NBpoHimppkw" name="nodePredecessor" visibility="package" type="_UiBBQKlTEe-NBpoHimppkw" association="_U3h-RKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1UXxKlTEe-NBpoHimppkw" name="edgePredecessor" visibility="package" type="_Ug94YKlTEe-NBpoHimppkw" association="_U3ilUalTEe-NBpoHimppkw"/>
              <interfaceRealization xmi:id="_Uz9F0KlTEe-NBpoHimppkw" client="_UhMh4KlTEe-NBpoHimppkw" supplier="_UztOMalTEe-NBpoHimppkw" contract="_UztOMalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YuwKlTEe-NBpoHimppkw" name="Flow" specification="_UhOXEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YuwalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YuwqlTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Yuw6lTEe-NBpoHimppkw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2YuxKlTEe-NBpoHimppkw" type="_UhMh4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(name, priority, DEFAULT_PERIOD, DEFAULT_DEADLINE, DEFAULT_PHASE);&#xD;
 	this.index = index;&#xD;
     /*&#xD;
      *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
      *  on flow updated based on flow length and reliability parameters&#xD;
      */&#xD;
     this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
     this.nodes = new ArrayList&lt;>();&#xD;
     this.edges  = new ArrayList&lt;>();&#xD;
     this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
     this.edges = new ArrayList&lt;>();	&#xD;
     this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YuxalTEe-NBpoHimppkw" name="Flow" specification="_UhO-I6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YuxqlTEe-NBpoHimppkw" type="_UhMh4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	this.index = DEFAULT_INDEX;&#xD;
 	/*&#xD;
 	 *  Default numTxPerLink is 1 transmission per link. Will be updated based&#xD;
 	 *  on flow updated based on flow length and reliability parameters&#xD;
 	 */&#xD;
 	this.numTxPerLink = DEFAULT_FAULTS_TOLERATED + 1; &#xD;
 	this.nodes = new ArrayList&lt;>();&#xD;
 	this.linkTxAndTotalCost = new ArrayList&lt;>();&#xD;
 	this.edges = new ArrayList&lt;>();&#xD;
 	this.nodePredecessor = null;&#xD;
     this.edgePredecessor = null;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Yux6lTEe-NBpoHimppkw" name="getInitialPriority" specification="_UhPlMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YuyKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YuyalTEe-NBpoHimppkw" name="getIndex" specification="_UhPlMqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YuyqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Yuy6lTEe-NBpoHimppkw" name="getNumTxPerLink" specification="_UhPlNKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YuzKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2YuzalTEe-NBpoHimppkw" name="getNodes" specification="_UhQMQalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2YuzqlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Yuz6lTEe-NBpoHimppkw" name="getEdges" specification="_UhQzUalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Yu0KlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return edges;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Yu0alTEe-NBpoHimppkw" name="addEdge" specification="_UxvfUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Yu0qlTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		edge.setPredecessor(edgePredecessor);&#xD;
		edges.add(edge);&#xD;
		/* update predecessor for next edge added */&#xD;
		edgePredecessor = edge;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Yu06lTEe-NBpoHimppkw" name="addNode" specification="_UxvfUqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Yu1KlTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>/* set predecessor and add edge to flow */&#xD;
		node.setPredecessor(nodePredecessor);&#xD;
		nodes.add(node);&#xD;
		/* update predecessor for next edge added */&#xD;
		nodePredecessor = node;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ZV0KlTEe-NBpoHimppkw" name="getLinkTxAndTotalCost" specification="_UhSBcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ZV0alTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ZV0qlTEe-NBpoHimppkw" name="setInitialPriority" specification="_UhTPkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ZV06lTEe-NBpoHimppkw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.initialPriority = initialPriority;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ZV1KlTEe-NBpoHimppkw" name="setIndex" specification="_UhTPkqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ZV1alTEe-NBpoHimppkw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.index = index;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ZV1qlTEe-NBpoHimppkw" name="setNumTxPerLink" specification="_UhT2oalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ZV16lTEe-NBpoHimppkw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.numTxPerLink = numTxPerLink;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Z84KlTEe-NBpoHimppkw" name="setNodes" specification="_Uz-7AqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Z84alTEe-NBpoHimppkw" name="nodes" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.nodes = nodes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Z84qlTEe-NBpoHimppkw" name="setLinkTxAndTotalCost" specification="_Uz_iEalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Z846lTEe-NBpoHimppkw" name="linkTxAndTotalCost" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Z85KlTEe-NBpoHimppkw" name="compareTo" specification="_UxwGYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Z85alTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2Z85qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return flow.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Z856lTEe-NBpoHimppkw" name="toString" specification="_UhUdsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Z86KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UhOXEKlTEe-NBpoHimppkw" name="Flow" visibility="package" method="_U2YuwKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UhO-IKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UhO-IalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U266QalTEe-NBpoHimppkw">
                  <body>Constructor that sets name, priority, and index</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhOXEalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhOXEqlTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhOXE6lTEe-NBpoHimppkw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhO-IqlTEe-NBpoHimppkw" type="_UhMh4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhO-I6lTEe-NBpoHimppkw" name="Flow" visibility="package" method="_U2YuxalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UhO-JKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UhO-JalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U266QqlTEe-NBpoHimppkw">
                  <body>Constructor</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhO-JqlTEe-NBpoHimppkw" type="_UhMh4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhPlMKlTEe-NBpoHimppkw" name="getInitialPriority" method="_U2Yux6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266Q6lTEe-NBpoHimppkw">
                  <body>@return the initialPriority</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhPlMalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhPlMqlTEe-NBpoHimppkw" name="getIndex" method="_U2YuyalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266RKlTEe-NBpoHimppkw">
                  <body>@return the index</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhPlM6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhPlNKlTEe-NBpoHimppkw" name="getNumTxPerLink" method="_U2Yuy6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266RalTEe-NBpoHimppkw">
                  <body>@return the numTxPerLink</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhQMQKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhQMQalTEe-NBpoHimppkw" name="getNodes" method="_U2YuzalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266RqlTEe-NBpoHimppkw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uz-T8KlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhQzUalTEe-NBpoHimppkw" name="getEdges" method="_U2Yuz6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266R6lTEe-NBpoHimppkw">
                  <body>@return the nodes</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uz-7AKlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhSBcKlTEe-NBpoHimppkw" name="getLinkTxAndTotalCost" method="_U2ZV0KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266SqlTEe-NBpoHimppkw">
                  <body>@return the linkTxAndTotalCost</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uz-7AalTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UhTPkKlTEe-NBpoHimppkw" name="setInitialPriority" method="_U2ZV0qlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266S6lTEe-NBpoHimppkw">
                  <body>@param initialPriority the initialPriority to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhTPkalTEe-NBpoHimppkw" name="initialPriority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhTPkqlTEe-NBpoHimppkw" name="setIndex" method="_U2ZV1KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266TKlTEe-NBpoHimppkw">
                  <body>@param index the index to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhT2oKlTEe-NBpoHimppkw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhT2oalTEe-NBpoHimppkw" name="setNumTxPerLink" method="_U2ZV1qlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266TalTEe-NBpoHimppkw">
                  <body>@param numTxPerLink the numTxPerLink to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhT2oqlTEe-NBpoHimppkw" name="numTxPerLink">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhUdsKlTEe-NBpoHimppkw" name="toString" method="_U2Z856lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhUdsalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UxvfUKlTEe-NBpoHimppkw" name="addEdge" method="_U2Yu0alTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266SKlTEe-NBpoHimppkw">
                  <body>@param takes in an edge &#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UxvfUalTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UxvfUqlTEe-NBpoHimppkw" name="addNode" method="_U2Yu06lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266SalTEe-NBpoHimppkw">
                  <body>@param takes in a node&#xD;
	 * Add and edge to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UxvfU6lTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UxwGYKlTEe-NBpoHimppkw" name="compareTo" method="_U2Z85KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UxwGYalTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxwGYqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uz-7AqlTEe-NBpoHimppkw" name="setNodes" method="_U2Z84KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266TqlTEe-NBpoHimppkw">
                  <body>@param nodes the nodes to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uz-7A6lTEe-NBpoHimppkw" name="nodes" type="_UxYS8KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uz_iEalTEe-NBpoHimppkw" name="setLinkTxAndTotalCost" method="_U2Z84qlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266T6lTEe-NBpoHimppkw">
                  <body>@param linkTxAndTotalCost the linkTxAndTotalCost to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uz_iEqlTEe-NBpoHimppkw" name="linkTxAndTotalCost" type="_UxYS8KlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhakUKlTEe-NBpoHimppkw" name="FlowMap">
              <ownedComment xmi:id="_U266UKlTEe-NBpoHimppkw">
                <body>FlowMap creates a mapping from flow name to &#xD;
flow object (&lt;name, Flow>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Uxx7kKlTEe-NBpoHimppkw" general="_UfzawKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1U-0alTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1U-0qlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhbLYKlTEe-NBpoHimppkw" name="FlowNodeToActivationMap">
              <ownedComment xmi:id="_U266UalTEe-NBpoHimppkw">
                <body>FlowNodeToActivationMap creates a mapping from flow node  &#xD;
to an activation (&lt;Node, Activation>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UxyioalTEe-NBpoHimppkw" general="_UfzawKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1Vl4KlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1Vl4alTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhcZgKlTEe-NBpoHimppkw" name="GraphViz">
              <ownedComment xmi:id="_U266UqlTEe-NBpoHimppkw">
                <body>@author sgoddard2&#xD;
Copyright © 2020 Steve Goddard. All rights reserved.&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_Ux0X2KlTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1Vl4qlTEe-NBpoHimppkw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1Vl46lTEe-NBpoHimppkw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1Vl5KlTEe-NBpoHimppkw" name="GRAPH_VIZ_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1Vl5alTEe-NBpoHimppkw" value="&quot;.gv&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1Vl5qlTEe-NBpoHimppkw" name="gvFileContents" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1WM8alTEe-NBpoHimppkw" name="gvTitleCaption" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1WM86lTEe-NBpoHimppkw" name="wfm" visibility="package" type="_UhHCUKlTEe-NBpoHimppkw" association="_U3jMYKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1WM9alTEe-NBpoHimppkw" name="graphFile" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1W0AalTEe-NBpoHimppkw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1W0A6lTEe-NBpoHimppkw" name="gv" visibility="package" type="_UhcZgKlTEe-NBpoHimppkw" association="_U3jMY6lTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Z86alTEe-NBpoHimppkw" name="GraphViz" specification="_UxzwwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Z86qlTEe-NBpoHimppkw" name="wfm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2Z866lTEe-NBpoHimppkw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Z87KlTEe-NBpoHimppkw" type="_UhcZgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     verbose = false;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Z87alTEe-NBpoHimppkw" name="GraphViz" specification="_Ux0X0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Z87qlTEe-NBpoHimppkw" name="wfm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2Z876lTEe-NBpoHimppkw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Z88KlTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2Z88alTEe-NBpoHimppkw" type="_UhcZgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(wfm, EMPTY, GRAPH_VIZ_SUFFIX); // VisualizationObject constructor&#xD;
     this.wfm = wfm; // used to access the basic WARP file management functions&#xD;
     this.graphFile = graphFile;&#xD;
     this.gv = this;&#xD;
     this.verbose = verbose;&#xD;
     createGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2Z88qlTEe-NBpoHimppkw" name="visualization" specification="_UhdnoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2Z886lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new Description(getGraphVizContent());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj8KlTEe-NBpoHimppkw" name="initializeGraphVizContent" specification="_Uhe1walTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2aj8alTEe-NBpoHimppkw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*start the gv file by adding the 1st line to the contents string */&#xD;
     gvFileContents = String.format(&quot;strict digraph %s {\n&quot;,graphName);&#xD;
     /* remove 'strict' if multiple edges in the same direction are to be shown */&#xD;
     gvTitleCaption = &quot;labelloc  =  \&quot;t\&quot; \n&quot;; // Place the rentered graph's title on top.&#xD;
     /* &#xD;
      * create a title caption for the rendered graph in the .gv file&#xD;
      * label string is in html format, so need an end delimeter after adding flows&#xD;
      */&#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;label = &lt;Graph %s &lt;br/>\n&quot;,graphName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj8qlTEe-NBpoHimppkw" name="finalizeGraphVizContent" specification="_Uhe1w6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>/* &#xD;
      * wrap up the gv file content by finalizing title caption&#xD;
      * then add it to the file contents and terminate the graph viz structure&#xD;
      */&#xD;
     gvTitleCaption += &quot;>\n&quot;;&#xD;
     /* &#xD;
      * end the gv file by adding the caption for rendering and the last line &#xD;
      * to the contents string&#xD;
      */&#xD;
     gvFileContents = gvFileContents + gvTitleCaption + &quot;} \n&quot;;  &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj86lTEe-NBpoHimppkw" name="getGraphVizContent" specification="_Uhfc0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2aj9KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return gvFileContents;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj9alTEe-NBpoHimppkw" name="createGraphVizContent" specification="_Uhfc0qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2aj9qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
 	 * GraphVizListener reads the graphFile string and calls the functions&#xD;
 	 * in this class, as it walks the input graphFile structure to build&#xD;
 	 * the GraphViz contents.&#xD;
 	 */&#xD;
     GraphVizListener.buildGraphViz(gv); &#xD;
     if (verbose) {&#xD;
     	System.out.println(&quot;************************************&quot;);&#xD;
     	System.out.println(&quot;GraphViz File Contents:&quot;);&#xD;
     	System.out.println(getGraphVizContent());&#xD;
     	System.out.println(&quot;************************************\n&quot;);&#xD;
     }&#xD;
     return getGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj96lTEe-NBpoHimppkw" name="addFlowToGraphViz" specification="_UhgD4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2aj-KlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add a 3 spaces before the start of the chain defining this flow to the gv contents string */&#xD;
     gvFileContents = gvFileContents + &quot;   &quot;;  &#xD;
     gvTitleCaption = String.format(gvTitleCaption + &quot;Flow %s: &quot;, flowName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj-alTEe-NBpoHimppkw" name="addSrcNodeToGraphViz" specification="_UhgD4qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2aj-qlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s  ->&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s -&amp;#62; &quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj-6lTEe-NBpoHimppkw" name="addSnkNodeToGraphViz" specification="_Uhgq8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2aj_KlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileContents = String.format(&quot; %s&quot;,nodeName);&#xD;
 	String titleCaption = String.format(&quot;%s&quot;,nodeName);&#xD;
 	addNodeName(fileContents,titleCaption);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj_alTEe-NBpoHimppkw" name="finalizeCurrentFlowInGraphViz" specification="_Uhgq8qlTEe-NBpoHimppkw">
                <language>java</language>
                <body>/* add the ';' and '\n' to end this line of the chain defined in this flow */&#xD;
     gvFileContents = gvFileContents + &quot;; \n&quot; ;&#xD;
     gvTitleCaption += &quot;&lt;br/>\n&quot;; // terminate this line of the rendered graph caption&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2aj_qlTEe-NBpoHimppkw" name="addNodeName" specification="_Uhgq86lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2aj_6lTEe-NBpoHimppkw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2akAKlTEe-NBpoHimppkw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* add the node name to the gv file contents string */&#xD;
     gvFileContents += fileContents;  &#xD;
     /* add the node name and edge to this line of the rendered graph caption */&#xD;
     gvTitleCaption += titleCaption;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UhdnoKlTEe-NBpoHimppkw" name="visualization" method="_U2Z88qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux0X16lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhe1walTEe-NBpoHimppkw" name="initializeGraphVizContent" method="_U2aj8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uhe1wqlTEe-NBpoHimppkw" name="graphName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhe1w6lTEe-NBpoHimppkw" name="finalizeGraphVizContent" method="_U2aj8qlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Uhfc0KlTEe-NBpoHimppkw" name="getGraphVizContent" method="_U2aj86lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U266U6lTEe-NBpoHimppkw">
                  <body>public function to return the string gvFileContents.&#xD;
     * designed to be called after finalizeGraphVizContent() is called by the listener&#xD;
     * but will return the current state of the contents string anytime it is called</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uhfc0alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhfc0qlTEe-NBpoHimppkw" name="createGraphVizContent" method="_U2aj9alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uhfc06lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhgD4KlTEe-NBpoHimppkw" name="addFlowToGraphViz" method="_U2aj96lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhgD4alTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhgD4qlTEe-NBpoHimppkw" name="addSrcNodeToGraphViz" method="_U2aj-alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhgD46lTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhgq8KlTEe-NBpoHimppkw" name="addSnkNodeToGraphViz" method="_U2aj-6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uhgq8alTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhgq8qlTEe-NBpoHimppkw" name="finalizeCurrentFlowInGraphViz" method="_U2aj_alTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Uhgq86lTEe-NBpoHimppkw" name="addNodeName" visibility="private" method="_U2aj_qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhhSAKlTEe-NBpoHimppkw" name="fileContents">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhhSAalTEe-NBpoHimppkw" name="titleCaption">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UxzwwKlTEe-NBpoHimppkw" name="GraphViz" visibility="package" method="_U2Z86alTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uxzww6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UxzwxKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UxzwwalTEe-NBpoHimppkw" name="wfm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UxzwwqlTEe-NBpoHimppkw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UxzwxalTEe-NBpoHimppkw" type="_UhcZgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux0X0KlTEe-NBpoHimppkw" name="GraphViz" visibility="package" method="_U2Z87alTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Ux0X1KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ux0X1alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ux0X0alTEe-NBpoHimppkw" name="wfm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Ux0X0qlTEe-NBpoHimppkw" name="graphFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ux0X06lTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ux0X1qlTEe-NBpoHimppkw" type="_UhcZgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uhk8YKlTEe-NBpoHimppkw" name="GraphVizListener" isLeaf="true">
              <ownedComment xmi:id="_U266VKlTEe-NBpoHimppkw">
                <body>Extend WARP Base Listener Class to extract info for Graph Viz file.&#xD;
GraphVizListener reads the graphFile string and calls the functions&#xD;
in this class, as it walks the input graphFile structure to build&#xD;
the GraphViz contents.</body>
              </ownedComment>
              <generalization xmi:id="_U0B-UKlTEe-NBpoHimppkw" general="_Ux3bIalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1XbEKlTEe-NBpoHimppkw" name="gv" visibility="package" type="_UhcZgKlTEe-NBpoHimppkw" association="_U3jzcalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2akAalTEe-NBpoHimppkw" name="GraphVizListener" specification="_Ux4pQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2akAqlTEe-NBpoHimppkw" name="gv" type="_UhcZgKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2akA6lTEe-NBpoHimppkw" type="_Uhk8YKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.gv = gv; // use GraphViz object passed to this object&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(gv.graphFile);&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the Graph Viz file content by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLAKlTEe-NBpoHimppkw" name="buildGraphViz" specification="_Ux4pRalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLAalTEe-NBpoHimppkw" name="gv" type="_UhcZgKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new GraphVizListener(gv); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLAqlTEe-NBpoHimppkw" name="enterWarpName" specification="_Ux5QUalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLA6lTEe-NBpoHimppkw" name="ctx" type="_Ux4pR6lTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var graphName = ctx.getText();  // get the name of the graph from name&#xD;
     gv.initializeGraphVizContent(graphName); // start creating the gv file content&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLBKlTEe-NBpoHimppkw" name="exitWarp" specification="_Ux53ZKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLBalTEe-NBpoHimppkw" name="ctx" type="_Ux53YqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>gv.finalizeGraphVizContent();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLBqlTEe-NBpoHimppkw" name="enterFlowName" specification="_Ux7FgalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLB6lTEe-NBpoHimppkw" name="ctx" type="_Ux6ec6lTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var currentFlow = ctx.getText();&#xD;
     gv.addFlowToGraphViz(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLCKlTEe-NBpoHimppkw" name="exitSrcNode" specification="_Ux7skalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLCalTEe-NBpoHimppkw" name="ctx" type="_Ux7FhqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     gv.addSrcNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLCqlTEe-NBpoHimppkw" name="exitSnkNode" specification="_Ux86sKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLC6lTEe-NBpoHimppkw" name="ctx" type="_Ux8ToqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     gv.addSnkNodeToGraphViz(nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLDKlTEe-NBpoHimppkw" name="exitFlow" specification="_Ux9hwalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLDalTEe-NBpoHimppkw" name="ctx" type="_Ux86talTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>gv.finalizeCurrentFlowInGraphViz();&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ux4pQKlTEe-NBpoHimppkw" name="GraphVizListener" visibility="private" method="_U2akAalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Ux4pQqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ux4pQ6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ux4pQalTEe-NBpoHimppkw" name="gv" type="_UhcZgKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Ux4pRKlTEe-NBpoHimppkw" type="_Uhk8YKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux4pRalTEe-NBpoHimppkw" name="buildGraphViz" isStatic="true" method="_U2bLAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux4pRqlTEe-NBpoHimppkw" name="gv" type="_UhcZgKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux5QUalTEe-NBpoHimppkw" name="enterWarpName" method="_U2bLAqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux5QUqlTEe-NBpoHimppkw" name="ctx" type="_Ux4pR6lTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux53ZKlTEe-NBpoHimppkw" name="exitWarp" method="_U2bLBKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux53ZalTEe-NBpoHimppkw" name="ctx" type="_Ux53YqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux7FgalTEe-NBpoHimppkw" name="enterFlowName" method="_U2bLBqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux7FgqlTEe-NBpoHimppkw" name="ctx" type="_Ux6ec6lTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux7skalTEe-NBpoHimppkw" name="exitSrcNode" method="_U2bLCKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux7skqlTEe-NBpoHimppkw" name="ctx" type="_Ux7FhqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux86sKlTEe-NBpoHimppkw" name="exitSnkNode" method="_U2bLCqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux86salTEe-NBpoHimppkw" name="ctx" type="_Ux8ToqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ux9hwalTEe-NBpoHimppkw" name="exitFlow" method="_U2bLDKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ux9hwqlTEe-NBpoHimppkw" name="ctx" type="_Ux86talTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhomwKlTEe-NBpoHimppkw" name="GuiVisualization">
              <ownedComment xmi:id="_U266ValTEe-NBpoHimppkw">
                <body>GuiVisualization Class to create a Java Swing window that displays a table of data with column&#xD;
headings.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1XbEqlTEe-NBpoHimppkw" name="frame" visibility="package" type="_Ux-v4alTEe-NBpoHimppkw" association="_U3kagalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1YCIalTEe-NBpoHimppkw" name="jtable" visibility="package" type="_Ux_W8alTEe-NBpoHimppkw" association="_U3kahKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2bLDqlTEe-NBpoHimppkw" name="GuiVisualization" specification="_UhpN0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2bLD6lTEe-NBpoHimppkw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2bLEKlTEe-NBpoHimppkw" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2bLEalTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2bLEqlTEe-NBpoHimppkw" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2bLE6lTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2bLFKlTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>// Frame initialization&#xD;
 frame = new JFrame();&#xD;
&#xD;
 // Frame Title&#xD;
 frame.setTitle(title);&#xD;
&#xD;
 // Initializing the JTable with input parameters&#xD;
 jtable = new JTable(table, columnNames);&#xD;
 jtable.setBounds(30, 40, 200, 300); // default size&#xD;
 // resizeColumnWidth(jtable); // uncomment to auto size column widths&#xD;
&#xD;
 // attached the table to a JScrollPane and then add both to the frame&#xD;
 JScrollPane sp = new JScrollPane(jtable); // gives table a vertical scrollbar&#xD;
 frame.add(sp);&#xD;
 // Frame Size&#xD;
 frame.setSize(500, 200);&#xD;
 jtable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF); // creates horizontal scrollbar&#xD;
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
 // Frame Visible = false&#xD;
 frame.setVisible(false);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byEKlTEe-NBpoHimppkw" name="setVisible" specification="_Uhqb8alTEe-NBpoHimppkw">
                <language>java</language>
                <body>frame.setVisible(true);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byEalTEe-NBpoHimppkw" name="resizeColumnWidth" specification="_U0ClYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byEqlTEe-NBpoHimppkw" name="table" type="_Ux_W8alTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>final TableColumnModel columnModel = table.getColumnModel();&#xD;
 for (int column = 0; column &lt; table.getColumnCount(); column++) {&#xD;
   int width = 70; // Min width&#xD;
   for (int row = 0; row &lt; table.getRowCount(); row++) {&#xD;
     TableCellRenderer renderer = table.getCellRenderer(row, column);&#xD;
     Component comp = table.prepareRenderer(renderer, row, column);&#xD;
     width = Math.max(comp.getPreferredSize().width + 5, width);&#xD;
   }&#xD;
   if (width > 300)&#xD;
     width = 300;&#xD;
   columnModel.getColumn(column).setPreferredWidth(width);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UhpN0KlTEe-NBpoHimppkw" name="GuiVisualization" method="_U2bLDqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uhp04qlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uhp046lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U27hUKlTEe-NBpoHimppkw">
                  <body>Constructor to create a Java Swing Window for a table of data with column headings. The window&#xD;
   * is initially not visible, and is made visible by a call to setVisible().&#xD;
   * &#xD;
   * @param title Window title&#xD;
   * @param columnNames Column heading names&#xD;
   * @param table table of strings representing the data</body>
                </ownedComment>
                <ownedParameter xmi:id="_UhpN0alTEe-NBpoHimppkw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uhp04KlTEe-NBpoHimppkw" name="columnNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Uhp05alTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uhp04alTEe-NBpoHimppkw" name="table">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Uhp05qlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uhp05KlTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhqb8alTEe-NBpoHimppkw" name="setVisible" method="_U2byEKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U27hUalTEe-NBpoHimppkw">
                  <body>Make the table visible.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_U0ClYKlTEe-NBpoHimppkw" name="resizeColumnWidth" visibility="private" method="_U2byEalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0ClYalTEe-NBpoHimppkw" name="table" type="_Ux_W8alTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhrqEKlTEe-NBpoHimppkw" name="InputGraphFile">
              <ownedComment xmi:id="_U27hUqlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1YCI6lTEe-NBpoHimppkw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1YCJKlTEe-NBpoHimppkw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1YCJalTEe-NBpoHimppkw" name="wfm" visibility="private" type="_UhHCUKlTEe-NBpoHimppkw" association="_U3lBkalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1YpMalTEe-NBpoHimppkw" name="graphFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1YpMqlTEe-NBpoHimppkw" name="verbose" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1YpNKlTEe-NBpoHimppkw" name="graphFileContents" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1YpNalTEe-NBpoHimppkw" value="UNKNOWN"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byE6lTEe-NBpoHimppkw" name="InputGraphFile" specification="_UyDBUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byFKlTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2byFalTEe-NBpoHimppkw" type="_UhrqEKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		verbose = false; // initialize verbose to false&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byFqlTEe-NBpoHimppkw" name="InputGraphFile" specification="_UyDBValTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byF6lTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2byGKlTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2byGalTEe-NBpoHimppkw" type="_UhrqEKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>wfm = fm;&#xD;
		graphFileName = wfm.getBaseDirectory();  // input graph file name, accessible only within this class&#xD;
		this.verbose = verbose; // initialize verbose as specified&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byGqlTEe-NBpoHimppkw" name="setGraphFileName" specification="_UhtfQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byG6lTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>graphFileName = inputFile;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byHKlTEe-NBpoHimppkw" name="verifyGraphFileName" specification="_UhuGUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byHalTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and handle all errors, returning its contents */&#xD;
		try {&#xD;
			getInputGraphFileName(inputFile);&#xD;
		} catch (Exception e) {&#xD;
			// e.printStackTrace();&#xD;
			System.err.println(&quot;Failed get an input file.&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byHqlTEe-NBpoHimppkw" name="readGraphFile" specification="_UhuGUqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byH6lTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2byIKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Read the graph input text file and return its contents */&#xD;
		verifyGraphFileName(inputFile); // catches exception if a valid file can't be found and exits&#xD;
		String inputFileName = getGraphFileName();&#xD;
		graphFileContents = readGraphFileContents(inputFileName);&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byIalTEe-NBpoHimppkw" name="getInputGraphFileName" specification="_UhutYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byIqlTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2byI6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String workingDirectory;&#xD;
		String fileName = UNKNOWN;&#xD;
		workingDirectory = wfm.getBaseDirectory();&#xD;
		if (inputFile == null) { // if fileName is nil, then prompt for input file&#xD;
			System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
			System.out.print(&quot;Enter input file: &quot;);&#xD;
			BufferedReader bufferRead = new BufferedReader(new InputStreamReader(System.in));&#xD;
			try {&#xD;
				fileName = bufferRead.readLine();&#xD;
			} catch (IOException e) {&#xD;
				// e.printStackTrace();&#xD;
				System.err.println(&quot;Failed to read input line from console&quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			fileName = inputFile;&#xD;
		}&#xD;
		setGraphFileName(fileName);&#xD;
		File tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
		if (tempFile.exists()) {  // see if the file exists&#xD;
			if (verbose) {&#xD;
				printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
			}&#xD;
		} else { // try the working directory&#xD;
			setGraphFileName(workingDirectory + File.separator + fileName);&#xD;
			tempFile = new File(getGraphFileName()); // create a temp File object with graphName&#xD;
			if (tempFile.exists()) {  // see if the file exists&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
			} else {&#xD;
				if (verbose) {&#xD;
					printVerboseMessage(workingDirectory, fileName, getGraphFileName());&#xD;
				}&#xD;
				System.err.printf(&quot;\n\tERROR: input file %s doesn't exist!!\n&quot;, fileName);&#xD;
				throw new RuntimeException();&#xD;
			}&#xD;
		}&#xD;
		return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2byJKlTEe-NBpoHimppkw" name="readGraphFileContents" specification="_UhvUcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2byJalTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2byJqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String graphFileContents = wfm.readFile(inputFile);&#xD;
		if (verbose) {&#xD;
			System.out.println(&quot;************************************&quot;);&#xD;
			System.out.println(&quot;Graph File Read:&quot;);&#xD;
			System.out.println(graphFileContents);&#xD;
			System.out.println(&quot;************************************\n&quot;);&#xD;
		}&#xD;
		return graphFileContents;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZIKlTEe-NBpoHimppkw" name="printVerboseMessage" specification="_Uhv7gKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZIalTEe-NBpoHimppkw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZIqlTEe-NBpoHimppkw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZI6lTEe-NBpoHimppkw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;Working directory is %s\n&quot;, workingDirectory);&#xD;
		System.out.printf(&quot;Input file name is %s\n&quot;, fileName);&#xD;
		System.out.printf(&quot;Graph file %s doesn't exist\n&quot;, graphFileName);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UhtfQKlTEe-NBpoHimppkw" name="setGraphFileName" visibility="private" method="_U2byGqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhtfQalTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhuGUKlTEe-NBpoHimppkw" name="verifyGraphFileName" visibility="private" method="_U2byHKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhuGUalTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhuGUqlTEe-NBpoHimppkw" name="readGraphFile" method="_U2byHqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhuGU6lTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhutYKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhutYalTEe-NBpoHimppkw" name="getInputGraphFileName" visibility="private" method="_U2byIalTEe-NBpoHimppkw" raisedException="_U0DMcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhutYqlTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhutY6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UhvUcKlTEe-NBpoHimppkw" name="readGraphFileContents" visibility="private" method="_U2byJKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UhvUcalTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UhvUcqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhv7gKlTEe-NBpoHimppkw" name="printVerboseMessage" visibility="private" method="_U2cZIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uhv7galTEe-NBpoHimppkw" name="workingDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uhv7gqlTEe-NBpoHimppkw" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uhv7g6lTEe-NBpoHimppkw" name="graphFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyDBUKlTEe-NBpoHimppkw" name="InputGraphFile" method="_U2byE6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyDBUqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyDBU6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyDBUalTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyDBVKlTEe-NBpoHimppkw" type="_UhrqEKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyDBValTEe-NBpoHimppkw" name="InputGraphFile" method="_U2byFqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyDBWKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyDBWalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyDBVqlTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyDBV6lTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyDBWqlTEe-NBpoHimppkw" type="_UhrqEKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UhyXwKlTEe-NBpoHimppkw" name="InstructionTimeSlot">
              <generalization xmi:id="_UyEPcKlTEe-NBpoHimppkw" general="_UjlHgKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1ZQQKlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1ZQQalTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZJKlTEe-NBpoHimppkw" name="InstructionTimeSlot" specification="_Uhy-0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZJalTEe-NBpoHimppkw" type="_UhyXwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZJqlTEe-NBpoHimppkw" name="InstructionTimeSlot" specification="_Uhzl4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZJ6lTEe-NBpoHimppkw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZKKlTEe-NBpoHimppkw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZKalTEe-NBpoHimppkw" type="_UhyXwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(numNodes, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZKqlTEe-NBpoHimppkw" name="InstructionTimeSlot" specification="_Uh0M8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZK6lTEe-NBpoHimppkw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2cZLKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZLalTEe-NBpoHimppkw" type="_UhyXwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uhy-0KlTEe-NBpoHimppkw" name="InstructionTimeSlot" method="_U2cZJKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uhy-0alTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uhy-0qlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uhy-06lTEe-NBpoHimppkw" type="_UhyXwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uhzl4KlTEe-NBpoHimppkw" name="InstructionTimeSlot" visibility="package" method="_U2cZJqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uhzl46lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uhzl5KlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uhzl4alTEe-NBpoHimppkw" name="numNodes">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uhzl4qlTEe-NBpoHimppkw" name="element">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uhzl5alTEe-NBpoHimppkw" type="_UhyXwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uh0M8KlTEe-NBpoHimppkw" name="InstructionTimeSlot" visibility="package" method="_U2cZKqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uh0M8qlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uh0M86lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uh0M8alTEe-NBpoHimppkw" name="rowArray">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Uh0M9alTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uh0M9KlTEe-NBpoHimppkw" type="_UhyXwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uh00AKlTEe-NBpoHimppkw" name="LatencyAnalysis">
              <ownedComment xmi:id="_U27hU6lTEe-NBpoHimppkw">
                <body>@author sgoddard2&#xD;
@version 1.3</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1ZQQqlTEe-NBpoHimppkw" name="DEADLINE_MISS" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1ZQQ6lTEe-NBpoHimppkw" value="&quot; => DEADLINE MISS&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1Z3UalTEe-NBpoHimppkw" name="FLOW_SEPARATOR" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1Z3U6lTEe-NBpoHimppkw" value="&quot;******************************\n&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1aeYKlTEe-NBpoHimppkw" name="latencyReport" visibility="private" type="_Ug61EKlTEe-NBpoHimppkw" association="_U3looKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1aeYqlTEe-NBpoHimppkw" name="program" visibility="private" type="_UijMwKlTEe-NBpoHimppkw" association="_U3loo6lTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1aeZKlTEe-NBpoHimppkw" name="workload" visibility="private" type="_UlImsKlTEe-NBpoHimppkw" association="_U3mPsalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1bFcalTEe-NBpoHimppkw" name="programTable" visibility="private" type="_Ui-qkKlTEe-NBpoHimppkw" association="_U3m2walTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1bFc6lTEe-NBpoHimppkw" name="nodeIndex" visibility="private" type="_UxXE0KlTEe-NBpoHimppkw" association="_U3m2xKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZLqlTEe-NBpoHimppkw" name="LatencyAnalysis" specification="_UyFdkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZL6lTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2cZMKlTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = warp.toProgram();&#xD;
 this.workload = warp.toWorkload();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZMalTEe-NBpoHimppkw" name="LatencyAnalysis" specification="_UyFdlalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZMqlTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2cZM6lTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.latencyReport = new Description();&#xD;
 this.program = program;&#xD;
 this.workload = program.toWorkLoad();&#xD;
 this.programTable = program.getSchedule();&#xD;
 this.nodeIndex = program.getNodeMapIndex();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZNKlTEe-NBpoHimppkw" name="latencyReport" specification="_Uh2pMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZNalTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>/*&#xD;
  * Build a latency report. Flows are output in priority order (based on the priority used to&#xD;
  * build the program. The latency for each instance of the flow is reported as follows&#xD;
  * &quot;Maximum latency for FlowName:Instance is Latency&quot;&#xD;
  * &#xD;
  * For flow instances that have latency > deadline, then the latency message is appended with&#xD;
  * the string &quot; => DEADLINE MISS&quot;&#xD;
  * &#xD;
  * A line of 30 '*' characters separates each group of flow instance reports.&#xD;
  * &#xD;
  * When there are not enough transmissions attempted between the release and the next release of&#xD;
  * an instance, then the latency is not computed (as we assume deadline &lt;= period. Thus, the&#xD;
  * report is: &quot;UNKNOWN latency for FlowName:Instance; Not enough transmissions attempted&quot;&#xD;
  * &#xD;
  */&#xD;
&#xD;
 var flows = workload.getFlowNamesInPriorityOrder();&#xD;
 for (String flowName : flows) {&#xD;
   var time = 0;&#xD;
&#xD;
   var nodes = workload.getNodesInFlow(flowName); // names of nodes in flow&#xD;
   var flowSnkIndex = nodes.length - 1;&#xD;
   /* get snk of last link in the flow, which is also the Flow snk node */&#xD;
   String snk = nodes[flowSnkIndex];&#xD;
   /* get the src of last link in the flow */&#xD;
   String src = nodes[flowSnkIndex - 1];&#xD;
   /* get (column) indexes into programTable of these nodes */&#xD;
   var snkIndex = nodeIndex.get(snk);&#xD;
   var srcIndex = nodeIndex.get(src);&#xD;
   /* get the array containing the number of transmissions required for each link in the flow */&#xD;
   var numTxAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
   /* get the number of transmission required for the last link in the flow */&#xD;
   var numTxRequired = numTxAttemptsPerLink[numTxAttemptsPerLink.length - 1];&#xD;
   var numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
   var instance = 0;&#xD;
   while (time &lt; workload.getHyperPeriod()) {&#xD;
     /* get next release time and absolute deadline of the flow */&#xD;
     var releaseTime = workload.nextReleaseTime(flowName, time);&#xD;
     var deadline = workload.nextAbsoluteDeadline(flowName, releaseTime);&#xD;
     var nextReleaseTime = workload.nextReleaseTime(flowName, deadline);&#xD;
     // var latency = 0;&#xD;
     time = releaseTime;&#xD;
     numTxProcessed = 0; // num of Tx seen in the program schedule so far&#xD;
     while (time &lt; nextReleaseTime) {&#xD;
       /* get instruction strings at these to locations */&#xD;
       String instr1 = programTable.get(time, srcIndex);&#xD;
       String instr2 = programTable.get(time, snkIndex);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr1);&#xD;
       numTxProcessed += numMatchingTx(flowName, src, snk, instr2);&#xD;
       if (numTxProcessed == numTxRequired) {&#xD;
         /*&#xD;
          * all required Tx attempts have been made compute and record latency&#xD;
          */&#xD;
         var latency = time - releaseTime + 1;&#xD;
         // report latency&#xD;
         String latencyMsg =&#xD;
             String.format(&quot;Maximum latency for %s:%d is %d&quot;, flowName, instance, latency);&#xD;
         if (latency > deadline) {&#xD;
           /* deadline missed, so color the text red */&#xD;
           latencyMsg += DEADLINE_MISS;&#xD;
         }&#xD;
         latencyMsg += &quot;\n&quot;;&#xD;
         latencyReport.add(latencyMsg);&#xD;
         time = nextReleaseTime;&#xD;
       } else {&#xD;
         time++;&#xD;
       }&#xD;
&#xD;
     }&#xD;
     if (numTxProcessed &lt; numTxRequired) {&#xD;
       /*&#xD;
        * This flow missed its deadline with required number of Tx!! This message should not be&#xD;
        * printed with the schedulers built&#xD;
        */&#xD;
       String latencyMsg =&#xD;
           String.format(&quot;UNKNOWN latency for %s:%d; Not enough transmissions attempted\n&quot;,&#xD;
               flowName, instance);&#xD;
       latencyReport.add(latencyMsg);&#xD;
     }&#xD;
     instance++;&#xD;
   }&#xD;
   String flowSeparator = FLOW_SEPARATOR;&#xD;
   latencyReport.add(flowSeparator);&#xD;
 }&#xD;
 return latencyReport;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2cZNqlTEe-NBpoHimppkw" name="numMatchingTx" specification="_Uh3QQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2cZN6lTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZOKlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZOalTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZOqlTEe-NBpoHimppkw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2cZO6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numTx = 0;&#xD;
&#xD;
 if (flow == null || src == null || snk == null || instr == null) {&#xD;
   /* make sure all parameters are valid */&#xD;
   return numTx;&#xD;
 }&#xD;
 /*&#xD;
  * get a Warp instruction parser object and then get the instruction parameters from the&#xD;
  * instruction string.&#xD;
  */&#xD;
 var dsl = new WarpDSL();&#xD;
 var instructionParametersArray = dsl.getInstructionParameters(instr);&#xD;
&#xD;
 for (InstructionParameters entry : instructionParametersArray) {&#xD;
   String flowName = entry.getFlow();&#xD;
   if (flowName.equals(flow)) {&#xD;
     /*&#xD;
      * This instruction is for the flow we want. (flow name is set for push/pull instructions,&#xD;
      * which are all we want. If not push/pull, then we skip this instruction.) If flow, src,&#xD;
      * and snk names in instruction match input parameters, then we have a Tx attempt.&#xD;
      */&#xD;
     if (src.equals(entry.getSrc()) &amp;&amp; snk.equals(entry.getSnk())) {&#xD;
       /* flow, src, and snk match, so increment Tx attempts */&#xD;
       numTx++;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return numTx;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uh2pMKlTEe-NBpoHimppkw" name="latencyReport" method="_U2cZNKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyGEo6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uh3QQKlTEe-NBpoHimppkw" name="numMatchingTx" method="_U2cZNqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uh3QQalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uh3QQqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uh3QQ6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uh3QRKlTEe-NBpoHimppkw" name="instr">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uh3QRalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyFdkKlTEe-NBpoHimppkw" name="LatencyAnalysis" visibility="package" method="_U2cZLqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyFdkqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyFdk6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyFdkalTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyFdlKlTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyFdlalTEe-NBpoHimppkw" name="LatencyAnalysis" visibility="package" method="_U2cZMalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyGEoKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyGEoalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyFdlqlTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyGEoqlTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uh6TkKlTEe-NBpoHimppkw" name="LatencyVisualization">
              <ownedComment xmi:id="_U27hVKlTEe-NBpoHimppkw">
                <body>LatencyVisualization creates the visualizations for the liability analysis of the WARP program.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Spring 2022 Project: Implement this class to create the file visualization that is&#xD;
requested in Warp.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.3&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UyGrtalTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1bsgalTEe-NBpoHimppkw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1bsgqlTEe-NBpoHimppkw" value="&quot;.la&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1bsg6lTEe-NBpoHimppkw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1cTkKlTEe-NBpoHimppkw" value="&quot;Latency Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1cTkalTEe-NBpoHimppkw" name="warp" visibility="private" type="_Ukr6wKlTEe-NBpoHimppkw" association="_U3nd0alTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1cTk6lTEe-NBpoHimppkw" name="la" visibility="private" type="_Uh00AKlTEe-NBpoHimppkw" association="_U3oE4alTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dAMKlTEe-NBpoHimppkw" name="LatencyVisualization" specification="_UyGrsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dAMalTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dAMqlTEe-NBpoHimppkw" type="_Uh6TkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.warp = warp;&#xD;
 this.la = warp.toLatencyAnalysis();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UyGrsKlTEe-NBpoHimppkw" name="LatencyVisualization" visibility="package" method="_U2dAMKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyGrsqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyGrs6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyGrsalTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyGrtKlTEe-NBpoHimppkw" type="_Uh6TkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uh8v0KlTEe-NBpoHimppkw" name="LatestReleaseTimeComparator">
              <interfaceRealization xmi:id="_U0LvUKlTEe-NBpoHimppkw" client="_Uh8v0KlTEe-NBpoHimppkw" supplier="_UxoxoalTEe-NBpoHimppkw" contract="_UxoxoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dAM6lTEe-NBpoHimppkw" name="compare" specification="_U0MWYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dANKlTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dANalTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dANqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.LatestReleaseTimeComparison(obj2);&#xD;
		return result; // 0 => tie on release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_U0MWYalTEe-NBpoHimppkw" name="compare" method="_U2dAM6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0M9cKlTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0M9calTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0M9cqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uh-lAKlTEe-NBpoHimppkw" name="MaxPhaseComparator">
              <interfaceRealization xmi:id="_U0NkgKlTEe-NBpoHimppkw" client="_Uh-lAKlTEe-NBpoHimppkw" supplier="_UxoxoalTEe-NBpoHimppkw" contract="_UxoxoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dAN6lTEe-NBpoHimppkw" name="compare" specification="_U0OyoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dAOKlTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dAOalTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dAOqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_U0OyoKlTEe-NBpoHimppkw" name="compare" method="_U2dAN6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0OyoalTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0OyoqlTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0Oyo6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UiBBQKlTEe-NBpoHimppkw" name="Node">
              <generalization xmi:id="_UyJH9KlTEe-NBpoHimppkw" general="_Ult1gKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1c6oKlTEe-NBpoHimppkw" name="DEFAULT_CHANNEL" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1c6oalTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1c6oqlTEe-NBpoHimppkw" name="channel">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1c6o6lTEe-NBpoHimppkw" name="index">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1dhsKlTEe-NBpoHimppkw" name="edges" type="_UxYS8KlTEe-NBpoHimppkw" isReadOnly="true" association="_U3or8KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1dhsqlTEe-NBpoHimppkw" name="conflicts" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U1eIwKlTEe-NBpoHimppkw" value="*"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_U0PZsKlTEe-NBpoHimppkw" client="_UiBBQKlTEe-NBpoHimppkw" supplier="_UztOMalTEe-NBpoHimppkw" contract="_UztOMalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dAO6lTEe-NBpoHimppkw" name="Node" specification="_UiCPYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dAPKlTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2dAPalTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2dAPqlTEe-NBpoHimppkw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2dAP6lTEe-NBpoHimppkw" type="_UiBBQKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
 	setName(name);&#xD;
 	setPriority(priority);&#xD;
 	this.index = index;&#xD;
 	this.channel = DEFAULT_CHANNEL;&#xD;
 	this.edges = new ArrayList&lt;Edge>();&#xD;
 	this.conflicts = new HashSet&lt;String>();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dAQKlTEe-NBpoHimppkw" name="compareTo" specification="_UyIg4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dAQalTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dAQqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return node.getPriority() > this.getPriority() ? -1 : 1;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dAQ6lTEe-NBpoHimppkw" name="toString" specification="_UiC2cKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dARKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return getName();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dARalTEe-NBpoHimppkw" name="addEdge" specification="_UyJH8qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dARqlTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>edges.add(edge);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dAR6lTEe-NBpoHimppkw" name="addConflict" specification="_UiEEkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dASKlTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>conflicts.add(name);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnQKlTEe-NBpoHimppkw" name="numEdges" specification="_UiEEkqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnQalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return edges.size();&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnQqlTEe-NBpoHimppkw" name="print" specification="_UiEroKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnQ6lTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		this.print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnRKlTEe-NBpoHimppkw" name="print" specification="_UiFSs6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>super.print();&#xD;
		System.out.print(&quot;Edge info for this partiion\n&quot;);&#xD;
		for (Edge edge: edges) {&#xD;
			edge.print();&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UiCPYKlTEe-NBpoHimppkw" name="Node" visibility="package" method="_U2dAO6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UiCPZKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UiCPZalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UiCPYalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiCPYqlTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiCPY6lTEe-NBpoHimppkw" name="index">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiCPZqlTEe-NBpoHimppkw" type="_UiBBQKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UiC2cKlTEe-NBpoHimppkw" name="toString" method="_U2dAQ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiC2calTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiEEkKlTEe-NBpoHimppkw" name="addConflict" method="_U2dAR6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiEEkalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiEEkqlTEe-NBpoHimppkw" name="numEdges" method="_U2dnQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiEEk6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiEroKlTEe-NBpoHimppkw" name="print" method="_U2dnQqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiEroalTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiFSs6lTEe-NBpoHimppkw" name="print" method="_U2dnRKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UyIg4KlTEe-NBpoHimppkw" name="compareTo" method="_U2dAQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyIg4alTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyIg4qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyJH8qlTEe-NBpoHimppkw" name="addEdge" method="_U2dARalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyJH86lTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UiIWAKlTEe-NBpoHimppkw" name="NodeMap">
              <ownedComment xmi:id="_U27hValTEe-NBpoHimppkw">
                <body>NodeMap creates a mapping from graph node name to &#xD;
node object (&lt;name, Node>).&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UyKWEKlTEe-NBpoHimppkw" general="_UfzawKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1eIwalTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1eIwqlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UiJkIKlTEe-NBpoHimppkw" name="NonPreemptiveSchedule">
              <ownedComment xmi:id="_U27hVqlTEe-NBpoHimppkw">
                <body>PreemptiveSchedule is an instance of the abstract class Schedule.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UyK9JqlTEe-NBpoHimppkw" general="_Uj868KlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnRalTEe-NBpoHimppkw" name="NonPreemptiveSchedule" specification="_UyK9IKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnRqlTEe-NBpoHimppkw" name="poset" type="_UiPqwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dnR6lTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2dnSKlTEe-NBpoHimppkw" type="_UiJkIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(poset, numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UyK9IKlTEe-NBpoHimppkw" name="NonPreemptiveSchedule" visibility="package" method="_U2dnRalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyK9I6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyK9JKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyK9IalTEe-NBpoHimppkw" name="poset" type="_UiPqwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyK9IqlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyK9JalTEe-NBpoHimppkw" type="_UiJkIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UiKyQKlTEe-NBpoHimppkw" name="NotImplentedVisualization">
              <generalization xmi:id="_UyLkMalTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1ev0KlTEe-NBpoHimppkw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1ev0alTEe-NBpoHimppkw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1ev0qlTEe-NBpoHimppkw" name="NAME_EXTENSTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1ev06lTEe-NBpoHimppkw" value="&quot;NotImplementedFeature&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1ev1KlTEe-NBpoHimppkw" name="CONTENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1ev1alTEe-NBpoHimppkw" value="&quot;Not Implemented&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnSalTEe-NBpoHimppkw" name="NotImplentedVisualization" specification="_UiLZUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnSqlTEe-NBpoHimppkw" type="_UiKyQKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), NAME_EXTENSTION, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnS6lTEe-NBpoHimppkw" name="NotImplentedVisualization" specification="_UiMAYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnTKlTEe-NBpoHimppkw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2dnTalTEe-NBpoHimppkw" type="_UiKyQKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), extension, SUFFIX);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnTqlTEe-NBpoHimppkw" name="visualization" specification="_UiMAZalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnT6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new Description(CONTENT);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UiLZUKlTEe-NBpoHimppkw" name="NotImplentedVisualization" visibility="package" method="_U2dnSalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UiLZUalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UiLZUqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UiLZU6lTEe-NBpoHimppkw" type="_UiKyQKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UiMAYKlTEe-NBpoHimppkw" name="NotImplentedVisualization" visibility="package" method="_U2dnS6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UiMAYqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UiMAY6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UiMAYalTEe-NBpoHimppkw" name="extension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiMAZKlTEe-NBpoHimppkw" type="_UiKyQKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UiMAZalTEe-NBpoHimppkw" name="visualization" method="_U2dnTqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyLkMKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UiN1kKlTEe-NBpoHimppkw" name="PeriodComparator">
              <interfaceRealization xmi:id="_U0Qn0KlTEe-NBpoHimppkw" client="_UiN1kKlTEe-NBpoHimppkw" supplier="_UxoxoalTEe-NBpoHimppkw" contract="_UxoxoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnUKlTEe-NBpoHimppkw" name="compare" specification="_U0RO4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnUalTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dnUqlTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dnU6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_U0RO4KlTEe-NBpoHimppkw" name="compare" method="_U2dnUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0RO4alTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0RO4qlTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0RO46lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UiPqwKlTEe-NBpoHimppkw" name="Poset" isAbstract="true">
              <ownedComment xmi:id="_U27hV6lTEe-NBpoHimppkw">
                <body>Poset is a partially ordered set of activations&#xD;
that are partitions of the workload to be scheduled.&#xD;
This version assumes each activation is a node&#xD;
and each node has a list of edges associated with it.&#xD;
Each node/activation in an edge is identified as either &#xD;
a transmitter or sender for that edge.&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1ev1qlTEe-NBpoHimppkw" name="activations" visibility="private" type="_UgO4kKlTEe-NBpoHimppkw" association="_U3or86lTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1fW4KlTEe-NBpoHimppkw" name="workload" visibility="private" type="_UlImsKlTEe-NBpoHimppkw" association="_U3pTAalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1fW4qlTEe-NBpoHimppkw" name="flows" visibility="protected" type="_UhMh4KlTEe-NBpoHimppkw" association="_U3pTBKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U1fW5KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U1fW5alTEe-NBpoHimppkw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U1fW46lTEe-NBpoHimppkw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1f98KlTEe-NBpoHimppkw" name="nodes" visibility="private" type="_UiBBQKlTEe-NBpoHimppkw" association="_U3p6EalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U1f98qlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U1f986lTEe-NBpoHimppkw" key="generic_container"/>
                </eAnnotations>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U1f98alTEe-NBpoHimppkw" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1f99alTEe-NBpoHimppkw" name="nodeMap" visibility="private" type="_UiIWAKlTEe-NBpoHimppkw" association="_U3qhIalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1f996lTEe-NBpoHimppkw" name="priorityQueue" visibility="private" type="_UjMtAqlTEe-NBpoHimppkw" association="_U3qhJKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1glAqlTEe-NBpoHimppkw" name="nodeConnectivityMap" visibility="protected" type="_UxXE0KlTEe-NBpoHimppkw" association="_U3rIMalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1hMEqlTEe-NBpoHimppkw" name="activationMap" visibility="package" type="_UhbLYKlTEe-NBpoHimppkw" association="_U3rvQalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2dnVKlTEe-NBpoHimppkw" name="Poset" specification="_UyNZYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2dnValTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2dnVqlTEe-NBpoHimppkw" type="_UiPqwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.workload = workload;&#xD;
		this.activations = new Activations();&#xD;
		this.activationMap = new FlowNodeToActivationMap();&#xD;
		/* init map to return a null activation if null key intered */&#xD;
		this.activationMap.put(null, null);&#xD;
		flows = workload.getFlows().values();&#xD;
		nodeMap = workload.getNodes();&#xD;
		nodes = nodeMap.values();&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>());&#xD;
		/* get global node connectivity */&#xD;
		nodeConnectivityMap = getNodeConnectivity();&#xD;
		buildPosetOfActivations();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOUKlTEe-NBpoHimppkw" name="getNodeConnectivity" specification="_UiQ44KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2eOUalTEe-NBpoHimppkw" type="_UxXE0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>HashMap&lt;String, Integer> map = new HashMap&lt;>();&#xD;
		&#xD;
		for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			var size = nodesInFlow.size();&#xD;
			for (Integer i =0 ; i &lt; size; i++) {&#xD;
				var nodeName = nodesInFlow.get(i).getName();&#xD;
				var connectivity = map.get(nodeName);&#xD;
				var connections = 2; // default # of connections&#xD;
				if (i == 0 || i == size-1) {&#xD;
					/* src or snk => connections = 1 */&#xD;
					connections = 1;&#xD;
				}&#xD;
				if (connectivity != null) {&#xD;
					connectivity += connections;&#xD;
					map.put(nodeName,connectivity);&#xD;
				} else {&#xD;
					map.put(nodeName,connections); // initial connection&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return map;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOUqlTEe-NBpoHimppkw" name="getNodeNames" specification="_UiRf8alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2eOU6lTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var keys = nodeMap.keySet();&#xD;
		var nodeNames = new ArrayList&lt;String>(keys.size());&#xD;
		nodeNames.addAll(keys);&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOVKlTEe-NBpoHimppkw" name="getNodesNamesOrderedAlphabetically" specification="_UiSHAalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2eOValTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2eOVqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodeNames = workload.getNodeNamesOrderedAlphabetically();&#xD;
		return nodeNames;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOV6lTEe-NBpoHimppkw" name="buildPosetOfActivations" specification="_UiSuEKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
&#xD;
		/*&#xD;
		 * (1) Create edges, setting priority and release time&#xD;
		 * 		add edges to node respective node lists as edge is created&#xD;
		 * (2) Create conflict set for each node (adjacent nodes)&#xD;
		 * (3) Create activations by selecting coordinators within &#xD;
		 * 		each flow and adding that coordinator's edges and&#xD;
		 * 		release times to an activation with the coordinator's name&#xD;
		 * 		(each activation will have one coordinator and the&#xD;
		 * 			number of activations &lt;= number nodes)&#xD;
		 * (4) Order the activations&#xD;
		 */&#xD;
&#xD;
		createEdgeLists(); // (1)&#xD;
		createConflictLists(); // (2)&#xD;
		createInitialActivations(); // (3)&#xD;
		orderActivations(); // (4)&#xD;
		/* At this point, each flow has been partitioned &#xD;
		 */&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOWKlTEe-NBpoHimppkw" name="createEdgeLists" specification="_UiSuEalTEe-NBpoHimppkw">
                <language>java</language>
                <body>/* assumes flow priorities have already been set */&#xD;
		var maxFlowLength = workload.maxFlowLength();&#xD;
		for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			var numTxArray = workload.getNumTxAttemptsPerLink(flow.getName());&#xD;
			var flowPhase = flow.getPhase();&#xD;
			var flowPriority = flow.getPriority();&#xD;
			var period = flow.getPeriod();&#xD;
			var deadline = flow.getDeadline();&#xD;
			Edge edge = null;&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				/* Create edges, setting priority and release time */&#xD;
				/* This version adds edges to the main node in NodeMap.&#xD;
				 * This allows creation of large partitions, with at most one per node.&#xD;
				 * An alternative, we can have a lot of small partitions that can be&#xD;
				 * combined later, which may create more parallelism.&#xD;
				 * So, both the global NodeMap nodes and the nodes in the&#xD;
				 * flows are updated with the same edge information. &#xD;
				 * This let's us play with partition creation options later.&#xD;
				 */&#xD;
				var srcNode = nodeMap.get(flowNodes.get(i).getName()); &#xD;
				var snkNode = nodeMap.get(flowNodes.get(i+1).getName());&#xD;
				var flowSrc = flowNodes.get(i);  // node in the flow&#xD;
				var flowSnk = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
&#xD;
				/*&#xD;
				 * Edge priority within a flow is based on position&#xD;
				 * in flow. Each Flow has its own priority. This &#xD;
				 * creates a 2-dimensional priority. Thus, we&#xD;
				 * can keep a total ordering of edges if we fold the&#xD;
				 * table into a single row where we assume each new flow&#xD;
				 * starts maxFlowSize away from the previous flow nodes:&#xD;
				 * edgePriority = flowPriority*maxFlowLength + edgePosition&#xD;
				 */&#xD;
				// var flowPriority = flow.getPriority();&#xD;
				var priority = (flowPriority * maxFlowLength) + i;&#xD;
				//var period = flow.getPeriod();&#xD;
				// var deadline = flow.getDeadline();&#xD;
				/* edge phase = flow phase + edge position in flow */&#xD;
				var phase = flowPhase + i; &#xD;
				var numTx = numTxArray[i];&#xD;
				edge = new Edge(flow.getName(),src,snk,priority, &#xD;
						period, deadline, phase, numTx);&#xD;
				/* Add edge to the nodes in the NodeMap */&#xD;
				srcNode.addEdge(edge);&#xD;
				snkNode.addEdge(edge);&#xD;
				/* Add edge to the nodes in the flow */&#xD;
				flowSrc.addEdge(edge);&#xD;
				flowSnk.addEdge(edge);&#xD;
				/* Add the edege to the flow */&#xD;
				flow.addEdge(edge);&#xD;
&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOWalTEe-NBpoHimppkw" name="createConflictLists" specification="_UiSuEqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>/* create conflict lists at global and&#xD;
		 * local levels (i.e., NodeMap and Flow)&#xD;
		 */&#xD;
		createGlobalConflictLists();&#xD;
		createLocalConflictLists();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOWqlTEe-NBpoHimppkw" name="createGlobalConflictLists" specification="_UiSuE6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>for (Node node: nodes) {&#xD;
			for (Edge edge: node.getEdges()) {&#xD;
				/* get src and snk nodes and names */&#xD;
				var src = edge.getSrc();&#xD;
				var snk = edge.getSnk();&#xD;
				var srcNode = nodeMap.get(src);&#xD;
				var snkNode = nodeMap.get(snk);&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOW6lTEe-NBpoHimppkw" name="createLocalConflictLists" specification="_UiTVIKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var flowNodes = flow.getNodes();&#xD;
			for (Integer i = 0; i &lt; flowNodes.size() -1 ; i++) {&#xD;
				var srcNode = flowNodes.get(i); &#xD;
				var snkNode = flowNodes.get(i+1);&#xD;
				var src = srcNode.getName();&#xD;
				var snk = snkNode.getName();&#xD;
				/* &#xD;
				 * conflict list is a set, so just add&#xD;
				 * don't need to worry about duplicates&#xD;
				 * as Set ensures that doesn't happen.&#xD;
				 */&#xD;
				srcNode.addConflict(snk);&#xD;
				snkNode.addConflict(src);&#xD;
			}&#xD;
		}&#xD;
&#xD;
&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOXKlTEe-NBpoHimppkw" name="findCoordinator" specification="_U0TEEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2eOXalTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2eOXqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var coordinatorIndex = 0;&#xD;
		var maxEdges = 0;&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			var numEdges = node.numEdges();&#xD;
			if (numEdges > maxEdges) {&#xD;
				maxEdges = numEdges;&#xD;
				coordinatorIndex = i;&#xD;
			}&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOX6lTEe-NBpoHimppkw" name="buildTxArray" specification="_U0TrIalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2eOYKlTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2eOYalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2eOYqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = nodesInFlow.size();&#xD;
		var txArray = new Integer[size];&#xD;
		for (Integer i = 0; i &lt; size; i++) {&#xD;
			var node = nodesInFlow.get(i);&#xD;
			txArray[i] = getMaxTx(node);&#xD;
		}&#xD;
		return txArray;&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOY6lTEe-NBpoHimppkw" name="createInitialActivations" specification="_UiTVIalTEe-NBpoHimppkw">
                <language>java</language>
                <body>for (Flow flow: flows) {&#xD;
			var nodesInFlow = flow.getNodes();&#xD;
			Integer coordinatorIndex = 0;&#xD;
			/* Find the node with max edges connected.&#xD;
			 * This will be the first coordinator selected&#xD;
			 * for this flow.&#xD;
			 */&#xD;
			coordinatorIndex = findCoordinator(nodesInFlow);&#xD;
			var txArray = buildTxArray(nodesInFlow);&#xD;
			/* if coordinatorIndex is odd, then other coordinators&#xD;
			 * are also odd numbers, even otherwise. &#xD;
			 * */&#xD;
			Integer startIndex = 0; // for even coordinatorIndex&#xD;
			if ((coordinatorIndex % 2) == 1) {&#xD;
				/* coordinatorIndex is odd, so start at 1 */&#xD;
				startIndex = 1;&#xD;
			}&#xD;
			if (startIndex >= nodesInFlow.size()) {&#xD;
				/* create a partition the single partition */&#xD;
			}&#xD;
			var activationPhaseOffset = 0;&#xD;
			for (Integer i = startIndex; i &lt; nodesInFlow.size(); i+=2) {&#xD;
				var node = nodesInFlow.get(i);&#xD;
				/* create a partition consisting of node i */&#xD;
				String name = flow.getName() + &quot;:&quot; + node.getName();&#xD;
				Activation partition = getActivation(name, node);&#xD;
				/* Update phase for each edge in new partition based on &#xD;
				 * the current offset, which increases after each&#xD;
				 * partition created.&#xD;
				 * */&#xD;
				partition.increaseEdgePhases(activationPhaseOffset);&#xD;
				activations.put(name,partition);&#xD;
				/* increase offset for next partition based on the &#xD;
				 * max numTx in this partition/node &#xD;
				 * But need to account for phase already assumes&#xD;
				 * 1 Tx already&#xD;
				 * */&#xD;
				activationPhaseOffset += txArray[i]-1;  // adjust by one&#xD;
			} &#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOZKlTEe-NBpoHimppkw" name="getMaxTx" specification="_UyOAcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2eOZalTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2eOZqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = 0;&#xD;
		for (Edge edge: node.getEdges()) {&#xD;
			result = Math.max(result, edge.getNumTx());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2eOZ6lTEe-NBpoHimppkw" name="getActivation" specification="_UyOAc6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2eOaKlTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2eOaalTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2eOaqlTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Activation newPartition = activations.get(name);&#xD;
		if (newPartition == null) {&#xD;
			// no partition by that name exists, so create one&#xD;
			newPartition = new Activation(name);&#xD;
			activationMap.put(node,newPartition);&#xD;
		}&#xD;
		/* add the node as the coordinator */&#xD;
		newPartition.addCoordinator(node.getName());&#xD;
		/* set the conflicts */&#xD;
		newPartition.setConflicts(node.getConflicts());&#xD;
		/* add the edges associated with this coordinator */&#xD;
		newPartition.addEdges(node.getEdges());&#xD;
		/* set the predecessor as the node's predecessor */&#xD;
		var nodePred = node.getPredecessor();&#xD;
		var pred = activationMap.get(nodePred);&#xD;
		if (nodePred != null &amp;&amp; pred == null) {&#xD;
			/* try next node up the flow */&#xD;
			nodePred = nodePred.getPredecessor();&#xD;
			pred = activationMap.get(nodePred);&#xD;
		}&#xD;
		newPartition.setPredecessor(pred);&#xD;
		return newPartition;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1YKlTEe-NBpoHimppkw" name="getHyperPeriod" specification="_UiT8MKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1YalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getHyperPeriod();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1YqlTEe-NBpoHimppkw" name="getMaxPhase" specification="_UiT8MqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1Y6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workload.getMaxPhase();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1ZKlTEe-NBpoHimppkw" name="orderActivations" specification="_UiUjQalTEe-NBpoHimppkw">
                <language>java</language>
                <body>var currentTime = 0; // set initial time for building queue&#xD;
		/* Update the release time and priority of each partition activation */&#xD;
		for (Activation activation: activations.values()) {&#xD;
			activation.updatePriorityAndRelease(currentTime);&#xD;
		}&#xD;
		/* create a queue sorted first by release times and then priorities */&#xD;
		priorityQueue = new &#xD;
				SchedulableObjectQueue&lt;Activation>(new &#xD;
						PriorityComparator&lt;Activation>(),activations.values());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1ZalTEe-NBpoHimppkw" name="getNextActivation" specification="_UiUjQqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1ZqlTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return priorityQueue.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1Z6lTEe-NBpoHimppkw" name="addActivation" specification="_UyOngalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1aKlTEe-NBpoHimppkw" name="activation" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>priorityQueue.add(activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1aalTEe-NBpoHimppkw" name="findBaseStation" specification="_UiVKUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1aqlTEe-NBpoHimppkw" type="_UiBBQKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Node baseStation = null;&#xD;
		Iterator&lt;Flow> iterator = flows.iterator();&#xD;
		Flow flow = iterator.next();&#xD;
		var nodes = flow.getNodes();&#xD;
		var srcBaseStation = nodes.get(0);&#xD;
		var srcBaseStationName = srcBaseStation.getName();&#xD;
		var snkBaseStation = nodes.get(nodes.size()-1);&#xD;
		var snkBaseStationName = snkBaseStation.getName(); &#xD;
		var found = false;&#xD;
 &#xD;
     while (!found &amp;&amp; iterator.hasNext()) {&#xD;
     	flow = iterator.next();&#xD;
 		nodes = flow.getNodes();&#xD;
     	var src = nodes.get(0);&#xD;
			var srcName = src.getName();&#xD;
			var snk = nodes.get(nodes.size()-1);&#xD;
			var snkName = snk.getName();&#xD;
			if (!srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(srcName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(snkName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			} else if (!srcBaseStationName.equals(snkName) &amp;&amp;&#xD;
					snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = snkBaseStation;&#xD;
				found = true;&#xD;
			} else if (srcBaseStationName.equals(snkName) &amp;&amp; &#xD;
					!snkBaseStationName.equals(srcName)) {&#xD;
				baseStation = srcBaseStation;&#xD;
				found = true;&#xD;
			}&#xD;
     }&#xD;
     if (!found) {&#xD;
     	/* initial snk and src tie for base station. That is&#xD;
     	 * each is always a flow src with the other a snk or&#xD;
     	 * vice versa. &#xD;
     	 * So pick initial snk as the base station */&#xD;
     	baseStation = snkBaseStation;&#xD;
     }&#xD;
		return baseStation;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UiQ44KlTEe-NBpoHimppkw" name="getNodeConnectivity" visibility="private" method="_U2eOUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0SdAKlTEe-NBpoHimppkw" type="_UxXE0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UiRf8alTEe-NBpoHimppkw" name="getNodeNames" method="_U2eOUqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0SdAalTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UiSHAalTEe-NBpoHimppkw" name="getNodesNamesOrderedAlphabetically" method="_U2eOVKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiSHAqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UiSHA6lTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiSuEKlTEe-NBpoHimppkw" name="buildPosetOfActivations" method="_U2eOV6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UiSuEalTEe-NBpoHimppkw" name="createEdgeLists" visibility="private" method="_U2eOWKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UiSuEqlTEe-NBpoHimppkw" name="createConflictLists" visibility="private" method="_U2eOWalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UiSuE6lTEe-NBpoHimppkw" name="createGlobalConflictLists" visibility="private" method="_U2eOWqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UiTVIKlTEe-NBpoHimppkw" name="createLocalConflictLists" visibility="private" method="_U2eOW6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UiTVIalTEe-NBpoHimppkw" name="createInitialActivations" visibility="private" method="_U2eOY6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UiT8MKlTEe-NBpoHimppkw" name="getHyperPeriod" method="_U2e1YKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiT8MalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiT8MqlTEe-NBpoHimppkw" name="getMaxPhase" method="_U2e1YqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiUjQKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiUjQalTEe-NBpoHimppkw" name="orderActivations" method="_U2e1ZKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UiUjQqlTEe-NBpoHimppkw" name="getNextActivation" method="_U2e1ZalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U27hWqlTEe-NBpoHimppkw">
                  <body>getNextActivation returns the highest priority&#xD;
	 * partition that has been released at or before input&#xD;
	 * parameter time.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @return</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyOngKlTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UiVKUKlTEe-NBpoHimppkw" name="findBaseStation" visibility="protected" method="_U2e1aalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U27hXKlTEe-NBpoHimppkw">
                  <body>findBaseStation is used by algorithms that generate the&#xD;
	 * partially ordered set of activations using a base station. &#xD;
	 * This method searches the set of flows to find the node that&#xD;
	 * is always one of the src or snk nodes. In the case of a tie&#xD;
	 * where there are two candidates the initial snk node is&#xD;
	 * returned. If there are multiple base stations, only the fist&#xD;
	 * one found is returned.&#xD;
	 * &#xD;
	 * @return baseStation for the workload</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyOng6lTEe-NBpoHimppkw" type="_UiBBQKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyNZYKlTEe-NBpoHimppkw" name="Poset" visibility="package" method="_U2dnVKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyNZYqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyNZY6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U27hWKlTEe-NBpoHimppkw">
                  <body>Partition types:&#xD;
	 *  &#xD;
	 *  by node--each node is a partition using only one channel&#xD;
	 *  by channel&#xD;
	 *  	by node then identify when a coordinator and when not&#xD;
	 *  	by flow and coordinator in that flow&#xD;
	 *  	many others...</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyNZYalTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyNZZKlTEe-NBpoHimppkw" type="_UiPqwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyOAcKlTEe-NBpoHimppkw" name="getMaxTx" visibility="private" method="_U2eOZKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyOAcalTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyOAcqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyOAc6lTEe-NBpoHimppkw" name="getActivation" visibility="private" method="_U2eOZ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyOAdKlTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyOAdalTEe-NBpoHimppkw" name="node" type="_UiBBQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyOAdqlTEe-NBpoHimppkw" type="_Uf3FIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyOngalTEe-NBpoHimppkw" name="addActivation" method="_U2e1Z6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U27hW6lTEe-NBpoHimppkw">
                  <body>addElemement adds the partitionElement to the priority queue&#xD;
	 * &#xD;
	 * @param activation</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyOngqlTEe-NBpoHimppkw" name="activation" type="_Uf3FIKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0TEEKlTEe-NBpoHimppkw" name="findCoordinator" visibility="protected" method="_U2eOXKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U27hWalTEe-NBpoHimppkw">
                  <body>*&#xD;
	 * @param nodesInFlow&#xD;
	 * @return the node in the flow with highest local connectivity.</body>
                </ownedComment>
                <ownedParameter xmi:id="_U0TEEalTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0TEEqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_U0TrIalTEe-NBpoHimppkw" name="buildTxArray" visibility="private" method="_U2eOX6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0TrIqlTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0TrI6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U0TrJKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uiap4KlTEe-NBpoHimppkw" name="PreemptiveSchedule">
              <ownedComment xmi:id="_U27hXalTEe-NBpoHimppkw">
                <body>PreemptiveSchedule extends Schedule to build a preemptive, &#xD;
priority schedule for the Poset using numChannels. &#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UyV8QalTEe-NBpoHimppkw" general="_Uj868KlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1a6lTEe-NBpoHimppkw" name="PreemptiveSchedule" specification="_UyRDwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1bKlTEe-NBpoHimppkw" name="poset" type="_UiPqwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2e1balTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2e1bqlTEe-NBpoHimppkw" type="_Uiap4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(poset,numChannels);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1b6lTEe-NBpoHimppkw" name="continueSearch" specification="_UyRq0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1cKlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2e1calTEe-NBpoHimppkw" name="activation" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2e1cqlTEe-NBpoHimppkw" type="_U0U5QKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return findPreeptiveChannelAndTime(time,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2e1c6lTEe-NBpoHimppkw" name="toProgram" specification="_Uib4AKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2e1dKlTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var program = new ProgramSchedule();	&#xD;
		&#xD;
//TODO write code to support preemption&#xD;
		&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2fccKlTEe-NBpoHimppkw" name="findPreeptiveChannelAndTime" specification="_UyRq16lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2fccalTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fccqlTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fcc6lTEe-NBpoHimppkw" type="_U0U5QKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels;&#xD;
		var time = startTime;&#xD;
		var result = findMaxTimeAvailable(time, schedulableObject);&#xD;
		var channelConsidered = result.channel;&#xD;
		var timeAvailable = result.time;&#xD;
		&#xD;
		&#xD;
		if (channelConsidered == numChannels) {&#xD;
			/* no available time slots near this time, even for preemption */&#xD;
			return findChannelAndTime(time+1,schedulableObject);&#xD;
		} else {&#xD;
			/* can use timeAvailable.time here on timeAvailable.channel&#xD;
			 * then must find additional time on same channel until &#xD;
			 * done&#xD;
			 */&#xD;
			// return findAdditionalTime(timeAvailable.channel,time+1,schedulableObject);&#xD;
			var duration = schedulableObject.getExecutionDuration();&#xD;
			var timeRemaining = duration-timeAvailable;&#xD;
			var additionalScheduleTimes = findAdditionalTime(channelConsidered,time+timeAvailable,schedulableObject,timeRemaining);&#xD;
			var numStartTimes = additionalScheduleTimes.size();&#xD;
			var lastStartTime = endScheduleTime; &#xD;
			if (numStartTimes > 0 ) {&#xD;
				lastStartTime = additionalScheduleTimes.get(numStartTimes-1).getStartTime();&#xD;
			}&#xD;
			if (lastStartTime &lt; endScheduleTime) {&#xD;
				// schedulableObject.addAdditionalStartTime(nextStartTime);&#xD;
				channel = channelConsidered;&#xD;
				schedulableObject.addScheduleTimes(additionalScheduleTimes);&#xD;
			} else {&#xD;
				time = lastStartTime;&#xD;
			}&#xD;
		}&#xD;
		return new ScheduleLocation(channel, time);	&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2fcdKlTEe-NBpoHimppkw" name="findAdditionalTime" specification="_UySR4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2fcdalTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fcdqlTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fcd6lTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fceKlTEe-NBpoHimppkw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fcealTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var time = startTime;&#xD;
		var results = new ArrayList&lt;ScheduleTime>();&#xD;
		&#xD;
		// if (timeRemaining &lt;= )&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(a1, time, timeRemaining )) {&#xD;
			time ++; &#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			results.add(new ScheduleTime(time,time));&#xD;
			return results;&#xD;
		} &#xD;
		&#xD;
		if (isAvailable(a1, channel, time, timeRemaining)) {&#xD;
			results.add(new ScheduleTime(time,time+timeRemaining-1));&#xD;
		} else {&#xD;
			var timeAvailable = availableTime(a1,  channel, time);&#xD;
			if (timeAvailable > 0) {&#xD;
				/* found at least one time slot available */&#xD;
//				a1.addAdditionalStartTime(time);&#xD;
				results.addAll(findAdditionalTime(channel,time+timeAvailable,a1,timeRemaining-timeAvailable));&#xD;
			} else {&#xD;
				/* look ahead in time by one unit */&#xD;
				results.addAll(findAdditionalTime(channel,time+1,a1,timeRemaining));&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		&#xD;
		return results;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2fceqlTEe-NBpoHimppkw" name="findMaxTimeAvailable" specification="_UyUHEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2fce6lTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fcfKlTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fcfalTEe-NBpoHimppkw" type="_U0U5QKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var maxTime = 0;&#xD;
		var bestChannel = numChannels;&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var timeAvailable = availableTime(schedulableObject,channel,time);&#xD;
			if (timeAvailable > maxTime) {&#xD;
				maxTime = timeAvailable;&#xD;
				bestChannel = channel;&#xD;
			}&#xD;
		}&#xD;
// TEMP&#xD;
		if (maxTime > 0) {&#xD;
			System.err.printf(&quot;\n\t\tMaxTime is %d and bestChannel is %d\n&quot;, maxTime, bestChannel);&#xD;
		}&#xD;
// TEMP&#xD;
		return new ScheduleLocation(bestChannel,maxTime);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2fcfqlTEe-NBpoHimppkw" name="availableTime" specification="_UyUuIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2fcf6lTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fcgKlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fcgalTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fcgqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer result = 0;&#xD;
		&#xD;
		while (isAvailable(a1,channel,start+result,1)) {&#xD;
			result++;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2fcg6lTEe-NBpoHimppkw" name="addToSchedule" specification="_UyUuJalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2fchKlTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fchalTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fchqlTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fch6lTEe-NBpoHimppkw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2fciKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var success = true;&#xD;
		var combineTime = endScheduleTime;&#xD;
		&#xD;
		var nextScheduleTime = next.getNextScheduleTime(startTime);&#xD;
		var nextStartTime = nextScheduleTime.getStartTime();&#xD;
		var nextEndTime = nextScheduleTime.getEndTime();&#xD;
		&#xD;
		if (startTime >= endScheduleTime || endTime >= endScheduleTime) {&#xD;
			/* can't schedule this activation */&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		if (nextStartTime &lt; Integer.MAX_VALUE &amp;&amp; nextEndTime &lt; Integer.MAX_VALUE) {&#xD;
			/* add the next slice of execution to the schedule */&#xD;
			success = addToSchedule(next,channel,nextStartTime, nextEndTime);&#xD;
		}&#xD;
		if (!success) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* Successful adding next to later points in the schedule.&#xD;
		 * So, now we see if this is the last&#xD;
		 * &#xD;
		 */&#xD;
		if (nextStartTime == Integer.MAX_VALUE &amp;&amp; nextEndTime == Integer.MAX_VALUE) {&#xD;
			/* this is the last slice of execution, so wrap things up */&#xD;
			next.setEndTime(endTime);&#xD;
			var responseTime = endTime - next.getReleaseTime();&#xD;
			if (responseTime > next.getDeadline()) {&#xD;
				return false; // unable to schedule this entry&#xD;
			}&#xD;
			/* Add the endTime to the elements endTimes Q&#xD;
			 * so that we can track predecessor endTimes&#xD;
			 * and make sure successors don't start before &#xD;
			 * predecessors&#xD;
			 */&#xD;
			next.addToEndTimes(endTime); &#xD;
			/* remove predecessor end time that matches this start time */&#xD;
			var pred = next.getPredecessor();&#xD;
			if (pred != null) {&#xD;
				pred.pollEndTimes(); &#xD;
			}&#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		/* Check to see we need to combine this activation with&#xD;
		 * an existing activation in any of the slots. If so,&#xD;
		 * save that time so we can update the actual start time&#xD;
		 */&#xD;
		Activation currentEntry = null;&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				combineTime = i;&#xD;
				// currentEntry = entry;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		entry.setStartTime(startTime); // set start time for this entry&#xD;
		entry.setEndTime(endTime); // set end time for this entry&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2fcialTEe-NBpoHimppkw" name="addToSchedule" specification="_UyVVMqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2fciqlTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fci6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		/* found a time and channel  that are valid */&#xD;
		var startTime = next.getStartTime(); // set by getChannelAndSetStartTime()&#xD;
		var success = false; &#xD;
		&#xD;
// PREEMPT&#xD;
		var timeAvailable = availableTime(next, channel, startTime);&#xD;
		var duration = next.getExecutionDuration();&#xD;
		&#xD;
		if (timeAvailable == 0 ) {&#xD;
			/* then currentEntry at this location in the schedule&#xD;
			 * is not null and we can combine, but best to check&#xD;
			 */&#xD;
			var currentEntry = schedule.get(channel,startTime);&#xD;
			if (currentEntry != null &amp;&amp; currentEntry.canCombine(next)) {&#xD;
				/* no conflict with this entry, and can&#xD;
				 * combine so check for combined entry time&#xD;
				 *  to see if we can combine activations&#xD;
				 */&#xD;
				var combinedDuration = currentEntry.getCombinedExecutionDuration(next);&#xD;
				var combinedEntry = new CombinedActivation(currentEntry,next);&#xD;
				var searchTime = currentEntry.getEndTime()+1;&#xD;
				var searchLength = combinedDuration - duration;&#xD;
				if (isAvailable(combinedEntry, channel, searchTime, searchLength)) {&#xD;
					timeAvailable = combinedDuration;&#xD;
					duration = combinedDuration;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
			if (duration &lt;= timeAvailable) {&#xD;
				/* can execute without preemption */&#xD;
				var endTime = startTime+duration-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			} else {&#xD;
				/* Recursively add 'slices' to the schedule.&#xD;
				 * success == true => all slices added successfully&#xD;
				 * otherwise, none of the slices were added&#xD;
				 */&#xD;
				var endTime = startTime + timeAvailable-1;&#xD;
				success = addToSchedule(next,channel,startTime,endTime);&#xD;
			}&#xD;
		return success;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uib4AKlTEe-NBpoHimppkw" name="toProgram" method="_U2e1c6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyRq1qlTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyRDwKlTEe-NBpoHimppkw" name="PreemptiveSchedule" visibility="package" method="_U2e1a6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyRDw6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyRDxKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyRDwalTEe-NBpoHimppkw" name="poset" type="_UiPqwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyRDwqlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyRDxalTEe-NBpoHimppkw" type="_Uiap4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyRq0KlTEe-NBpoHimppkw" name="continueSearch" visibility="protected" method="_U2e1b6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyRq0alTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyRq0qlTEe-NBpoHimppkw" name="activation" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0VgUalTEe-NBpoHimppkw" type="_U0U5QKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyRq16lTEe-NBpoHimppkw" name="findPreeptiveChannelAndTime" visibility="private" method="_U2fccKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyRq2KlTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyRq2alTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0VgUqlTEe-NBpoHimppkw" type="_U0U5QKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UySR4KlTEe-NBpoHimppkw" name="findAdditionalTime" visibility="private" method="_U2fcdKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UySR4alTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UySR4qlTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UySR46lTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UySR5KlTEe-NBpoHimppkw" name="timeRemaining">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0WHYKlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyUHEKlTEe-NBpoHimppkw" name="findMaxTimeAvailable" visibility="private" method="_U2fceqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyUHEalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyUHEqlTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0WHYalTEe-NBpoHimppkw" type="_U0U5QKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyUuIKlTEe-NBpoHimppkw" name="availableTime" visibility="private" method="_U2fcfqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyUuIalTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyUuIqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyUuI6lTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyUuJKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyUuJalTEe-NBpoHimppkw" name="addToSchedule" visibility="private" method="_U2fcg6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyUuJqlTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyUuJ6lTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyUuKKlTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyVVMKlTEe-NBpoHimppkw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyVVMalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyVVMqlTEe-NBpoHimppkw" name="addToSchedule" visibility="protected" method="_U2fcialTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyVVM6lTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyVVNKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UihXkKlTEe-NBpoHimppkw" name="PriorityComparator">
              <interfaceRealization xmi:id="_U0WHYqlTEe-NBpoHimppkw" client="_UihXkKlTEe-NBpoHimppkw" supplier="_UxoxoalTEe-NBpoHimppkw" contract="_UxoxoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2fcjKlTEe-NBpoHimppkw" name="compare" specification="_U0WucalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2fcjalTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fcjqlTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2fcj6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.priorityComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.releaseTimeComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_U0WucalTEe-NBpoHimppkw" name="compare" method="_U2fcjKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0WucqlTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0Wuc6lTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0XVgKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UijMwKlTEe-NBpoHimppkw" name="Program">
              <ownedComment xmi:id="_U28IYKlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1iaMKlTEe-NBpoHimppkw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1iaMalTEe-NBpoHimppkw" value="&quot;Unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1iaMqlTEe-NBpoHimppkw" name="SLEEP_INSTRUCTION" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1iaM6lTEe-NBpoHimppkw" value="&quot;sleep&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1iaNKlTEe-NBpoHimppkw" name="WAIT_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1iaNalTEe-NBpoHimppkw" value="&quot;wait(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1iaNqlTEe-NBpoHimppkw" name="ELSE_PULL_FRAGMENT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1jBQKlTEe-NBpoHimppkw" value="&quot;else pull(&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1jBQalTEe-NBpoHimppkw" name="workLoad" visibility="package" type="_UlImsKlTEe-NBpoHimppkw" association="_U3rvRKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1jBQ6lTEe-NBpoHimppkw" name="scheduleBuilt" visibility="package" type="_Ui-qkKlTEe-NBpoHimppkw" association="_U3sWUalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1joUalTEe-NBpoHimppkw" name="SchedulerSelected" visibility="package" type="_U0X8kKlTEe-NBpoHimppkw" association="_U3s9YalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1joU6lTEe-NBpoHimppkw" name="schChoice" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1kPYalTEe-NBpoHimppkw" name="schedulerName" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1kPY6lTEe-NBpoHimppkw" name="nTransmissions" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1k2calTEe-NBpoHimppkw" name="realTimeHARTflag" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1k2c6lTEe-NBpoHimppkw" name="optimizationRequested" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1ldgKlTEe-NBpoHimppkw" name="channelsAvailable" visibility="package" type="_UgXbcKlTEe-NBpoHimppkw" association="_U3tkcKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1ldgqlTEe-NBpoHimppkw" name="nChannels" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1ldhKlTEe-NBpoHimppkw" name="verbose" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1mEkalTEe-NBpoHimppkw" name="reportLatency" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1mroalTEe-NBpoHimppkw" name="deadlineMisses" visibility="private" type="_Ug61EKlTEe-NBpoHimppkw" association="_U3tkc6lTEe-NBpoHimppkw"/>
              <interfaceRealization xmi:id="_UyXxcKlTEe-NBpoHimppkw" client="_UijMwKlTEe-NBpoHimppkw" supplier="_UkPO0KlTEe-NBpoHimppkw" contract="_UkPO0KlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDgKlTEe-NBpoHimppkw" name="Program" specification="_U0YjoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDgalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gDgqlTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDg6lTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gDhKlTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDhalTEe-NBpoHimppkw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDhqlTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, verbose, reportLatency);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDh6lTEe-NBpoHimppkw" name="Program" specification="_U0ZKsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDiKlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gDialTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDiqlTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gDi6lTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters(workLoad, nChannels, false, false);&#xD;
 buildProgram(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDjKlTEe-NBpoHimppkw" name="setDefaultParameters" specification="_UyY_kKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDjalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gDjqlTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDj6lTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDkKlTEe-NBpoHimppkw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.workLoad = workLoad; // flows for which schedules will be built&#xD;
 this.scheduleBuilt = new ProgramSchedule();&#xD;
 this.SchedulerSelected = ScheduleChoices.PRIORITY; // set the type of scheduler selected&#xD;
 workLoad.setFlowsInPriorityOrder();&#xD;
 this.schedulerName = &quot;Priority&quot;;&#xD;
 this.schChoice = &quot;Priority&quot;;&#xD;
 this.nTransmissions = 0;&#xD;
 this.realTimeHARTflag = false;&#xD;
 this.optimizationRequested = true;&#xD;
 this.nChannels = nChannels;&#xD;
 this.verbose = verbose;&#xD;
 this.channelsAvailable = new Channels(nChannels, verbose);&#xD;
 this.reportLatency = reportLatency;&#xD;
 this.deadlineMisses = new Description();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDkalTEe-NBpoHimppkw" name="toWorkLoad" specification="_Uim3IKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDkqlTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDk6lTEe-NBpoHimppkw" name="buildProgram" specification="_U0ZKt6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDlKlTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>/*&#xD;
  * Switch on the scheduler choice. If it is POSET-based scheduler, create the POSET that matches&#xD;
  * the name and then use the newer schedule object to convert the POSET to a program. If it is&#xD;
  * an original scheduler choice, build set the scheduler type and build the schedule and WARP&#xD;
  * program by calling buildOriginalProgram();&#xD;
  */&#xD;
 switch (choice) { // select the requested scheduler&#xD;
   case WARP_POSET_PRIORITY: // fall through&#xD;
   case WARP_POSET_RM: // fall through&#xD;
   case WARP_POSET_DM: // fall through&#xD;
     setScheduleSelected(choice);&#xD;
     var poset1 = new WarpPoset(workLoad);&#xD;
     var schedule1 = new NonPreemptiveSchedule(poset1, this.nChannels);&#xD;
     var newProgram = schedule1.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY: // fall through&#xD;
   case CONNECTIVITY_POSET_RM: // fall through&#xD;
   case CONNECTIVITY_POSET_DM: // fall through&#xD;
   case POSET_PRIORITY: // fall through&#xD;
   case POSET_RM: // fall through&#xD;
   case POSET_DM:&#xD;
     setScheduleSelected(choice);&#xD;
     // var poset = new BasicPoset(workLoad);&#xD;
     var poset2 = new ConnectivityPoset(workLoad);&#xD;
     var schedule2 = new NonPreemptiveSchedule(poset2, this.nChannels);&#xD;
     newProgram = schedule2.toProgram();&#xD;
     setSchedule(newProgram); // store the schedule built&#xD;
     break;&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_PRIORITY: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_RM: // fall through&#xD;
   //// case CONNECTIVITY_POSET_PREEMPTIVE_DM: // fall through&#xD;
   // var poset3 = new ConnectivityPoset(workLoad);&#xD;
   // var schedule3 = new PreemptiveSchedule(poset3, this.nChannels);&#xD;
   // newProgram = schedule3.toProgram();&#xD;
   // setSchedule(newProgram); // store the schedule built&#xD;
   // break;&#xD;
   case PRIORITY:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RM:&#xD;
     selectRM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case DM:&#xD;
     selectDM();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   case RTHART:&#xD;
     selectRtHART();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break;&#xD;
   default:&#xD;
     selectPriority();&#xD;
     buildOriginalProgram(); // build the requested schedule&#xD;
     break; // break from switch&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDlalTEe-NBpoHimppkw" name="buildOriginalProgram" specification="_UineMKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>// builds a Priority schedule&#xD;
&#xD;
 if (verbose) {&#xD;
   var scheduleDetails =&#xD;
       String.format(&quot;\nSystem schedule for graph %s created with the following parameters:\n&quot;,&#xD;
           workLoad.getName());&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tScheduler Name:\t%s\n&quot;, getSchedulerName());&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tM:\t%s\n&quot;,&#xD;
       String.valueOf(workLoad.getMinPacketReceptionRate()));&#xD;
   scheduleDetails =&#xD;
       String.format(scheduleDetails + &quot;\tE2E:\t%s\n&quot;, String.valueOf(workLoad.getE2e()));&#xD;
   scheduleDetails = String.format(scheduleDetails + &quot;\tnChannels:\t%d\n&quot;, getNumChannels());&#xD;
   // The following parameters are only output when special schedules are requested&#xD;
   if (getNumTransmissions() > 0) { // only specify when NumTransmissions is fixed&#xD;
     scheduleDetails =&#xD;
         String.format(scheduleDetails + &quot;\tnTransmissions:\t%d\n&quot;, getNumTransmissions());&#xD;
   }&#xD;
   if (getOptimizationFlag()) { // only specify when optimization not requested&#xD;
     scheduleDetails += &quot;\tOptimization Requested:\tFalse\n&quot;;&#xD;
   }&#xD;
   System.out.println(scheduleDetails);&#xD;
 }&#xD;
 var nTx = 0;// support nTx per transmission, which is set based on input parameter if&#xD;
             // nTransmissions == n 0 else flow.nTXperLink&#xD;
 var nTransmissions = getNumTransmissions();&#xD;
 Boolean realtimeHART = getRealTimeHartFlag();&#xD;
 var optimizationRequested = getOptimizationFlag();&#xD;
 var schedule = new ProgramSchedule(); // create an empty schedule&#xD;
 var newInstruction = SLEEP_INSTRUCTION; // initialize the new Instruction with a sleep&#xD;
 var prioritizedFlows = workLoad.getFlowNamesInPriorityOrder();&#xD;
 // var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
 // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndex = getNodeMapIndex(); // get the mapping from node names to index in schedule&#xD;
 var nNodes = nodeIndex.size();&#xD;
 /*&#xD;
  * for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping var name =&#xD;
  * orderedNodes[index]; nodeIndex.put(name, index); // add name, index mapping to NodeIndex map&#xD;
  * }&#xD;
  */&#xD;
 var hyperPeriod = workLoad.getHyperPeriod();&#xD;
 for (int i = 0; i &lt; hyperPeriod; i++) { // This loop makes sure the schedule is full up to the&#xD;
                                         // period and the channels entries are all initialized&#xD;
   var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create a&#xD;
                                                                                    // time slot&#xD;
                                                                                    // for&#xD;
                                                                                    // nNodes,&#xD;
                                                                                    // each&#xD;
                                                                                    // initialized&#xD;
                                                                                    // with a&#xD;
                                                                                    // SLEEP_INSTRUCTION&#xD;
   schedule.add(newInstructionTimeSlot);&#xD;
   channelsAvailable.addNewChannelSet();// initially, all channels are available in each time&#xD;
                                        // slot&#xD;
 }&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
&#xD;
 for (String flowName : prioritizedFlows) { // loop through all of the nodes in priority order&#xD;
   var nodesInFlow = workLoad.getNodesInFlow(flowName);&#xD;
   var nNodesInFlow = nodesInFlow.length;&#xD;
   var e2eFlag = false; // default is to not use e2e to achieve E2E&#xD;
   if (nTransmissions == 0) { // use nTx from flow.nTXperLink for realtimeHart and the linkTX&#xD;
                              // array otherwise&#xD;
     e2eFlag = true; // need to meet e2e to hit E2E for flow&#xD;
     if (realtimeHART) {&#xD;
       nTx = workLoad.getFlowTxAttemptsPerLink(flowName);&#xD;
     } // else we will computer nTx from the linkTx array for the flow as we go&#xD;
&#xD;
   } else {&#xD;
     nTx = nTransmissions;&#xD;
   }&#xD;
   var snk = &quot;&quot;;&#xD;
   var linkTxCosts = workLoad.getNumTxAttemptsPerLink(flowName);&#xD;
   if (verbose) {&#xD;
     var totalCost = workLoad.getTotalTxAttemptsInFlow(flowName);&#xD;
     var minCost = nNodesInFlow - 1; // nEdges in the flow is the minimum communication cost,&#xD;
                                     // i.e., min nTx to go E2E with no errors&#xD;
     System.out.printf(&#xD;
         &quot;Flow %s has a minimum communication cost of %d and a worst-case communication cost of %d\n&quot;,&#xD;
         flowName, minCost, totalCost);&#xD;
   }&#xD;
   if (nTx == 0) { // this is true when !realtimeHART and nTransmssions wasn't specified => nTx&#xD;
                   // is dependent on reliability target&#xD;
     nTx = linkTxCosts[0]; // set nTx to the nTx for the first link in the flow&#xD;
   }&#xD;
   var previousNodeInstruction = new Integer[nTx]; // set instruction location in schedule for&#xD;
                                                   // previous slots to 0&#xD;
   Arrays.fill(previousNodeInstruction, 0); // initialize locations to 0&#xD;
   var flowPhase = workLoad.getFlowPhase(flowName); // used to compute latency after done&#xD;
                                                    // scheduling this flow&#xD;
   var flowLastInstruction = flowPhase; // used to compute latency after done scheduling this&#xD;
                                        // flow&#xD;
   var flowDeadline = workLoad.getFlowDeadline(flowName); // used to check schedulability for&#xD;
                                                          // this flow&#xD;
   var flowPeriod = workLoad.getFlowPeriod(flowName);&#xD;
   var FlowSrcInstructionTimeSlot = flowPhase; // initialize the time at which the flow's src&#xD;
                                               // node can first transmit&#xD;
   for (int instance = 0; instance &lt; hyperPeriod / flowPeriod; instance++) {&#xD;
     for (int flowNodeIndex = 0; flowNodeIndex &lt; nNodesInFlow - 1; flowNodeIndex++) { // don't&#xD;
                                                                                      // push for&#xD;
                                                                                      // last&#xD;
                                                                                      // node, so&#xD;
                                                                                      // stop at&#xD;
                                                                                      // node&#xD;
                                                                                      // n-1,&#xD;
                                                                                      // which is&#xD;
                                                                                      // 2 less&#xD;
                                                                                      // than&#xD;
                                                                                      // count&#xD;
       var currentNodeName = nodesInFlow[flowNodeIndex]; // get name of current node in the flow&#xD;
                                                         // (aka source of data)&#xD;
       if (e2eFlag) {&#xD;
         nTx = linkTxCosts[flowNodeIndex]; // set nTx for this link&#xD;
       }&#xD;
       var currentNodeInstruction = new Integer[nTx]; // store instruction location in schedule&#xD;
                                                      // for previous node&#xD;
       Arrays.fill(currentNodeInstruction, 0); // initialize the currentNondeInstruction&#xD;
       for (int index = 0; index &lt; nTx; index++) { // repeat instruction nTx times so that this&#xD;
                                                   // flow meets desired reliability&#xD;
         var instructionNodeName = currentNodeName; // name of node for which we write an&#xD;
                                                    // instruction in its program&#xD;
         var priorSrcInstruction = UNKNOWN; // variable used to store and possibly update the&#xD;
                                            // priorSrcInstruction during optimization&#xD;
         var priorSrcUpdated = false; // flag to indicate if priorSrcInstruction is updated or&#xD;
                                      // not&#xD;
         snk = nodesInFlow[flowNodeIndex + 1]; // should get a valid sink node, set name to&#xD;
                                               // UNKNOWN if we don't&#xD;
         // when not optimizing instructionNodeName is current node, but we might update a&#xD;
         // different node's instruction to optimize&#xD;
         var phase = instance * flowPeriod + flowPhase; // update phase for the instance of the&#xD;
                                                        // flow release, which happens once every&#xD;
                                                        // period in the hyperPeriod&#xD;
         var firstPossibleSlot = Math.max(phase, FlowSrcInstructionTimeSlot); // make sure&#xD;
                                                                              // precedence&#xD;
                                                                              // constraints on&#xD;
                                                                              // flow are&#xD;
                                                                              // preserved&#xD;
         Integer instructionIndex = findNextAvailableInstructionTimeSlot(schedule,&#xD;
             firstPossibleSlot, flowNodeIndex, index, nTx, previousNodeInstruction,&#xD;
             currentNodeInstruction, SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
             nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                    // schedule length. Increase schedule and&#xD;
                                                    // channelsAvailable tables&#xD;
           for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
             var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                              // a&#xD;
                                                                                              // time&#xD;
                                                                                              // slot&#xD;
                                                                                              // for&#xD;
                                                                                              // nNodes,&#xD;
                                                                                              // each&#xD;
                                                                                              // initialized&#xD;
                                                                                              // with&#xD;
                                                                                              // a&#xD;
                                                                                              // SLEEP_INSTRUCTION&#xD;
             schedule.add(newInstructionTimeSlot);&#xD;
             channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                   // for all slots. instructionIndex may be >&#xD;
                                                   // initialized size of array because of&#xD;
                                                   // phases...&#xD;
           }&#xD;
         }&#xD;
         String channel = findNextAvailableChannel(schedule, instructionNodeName,&#xD;
             instructionIndex, nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         // Now check if we have a valid channel. If not we need to find a new time slot further&#xD;
         // down the schedule.&#xD;
         // So, initialize the search to start at the current slot and then increase by one each&#xD;
         // time we loop if the current slot&#xD;
         while (channel.equals(UNKNOWN)) { // findNextAvailableChannel will return UNKNOWN if no&#xD;
                                           // channel was available. In that case, we need to&#xD;
                                           // find a new slot for this instruction after the last&#xD;
                                           // index found&#xD;
           var startSearchIndex = instructionIndex + 1;&#xD;
           instructionIndex = findNextAvailableInstructionTimeSlot(schedule, startSearchIndex,&#xD;
               flowNodeIndex, index, nTx, previousNodeInstruction, currentNodeInstruction,&#xD;
               SLEEP_INSTRUCTION, realtimeHART, optimizationRequested,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
           if (instructionIndex >= schedule.size()) { // instructionIndex is beyond current&#xD;
                                                      // schedule lenght. Increase schedule and&#xD;
                                                      // channelsAvailable tables&#xD;
             for (int i = schedule.size(); i &lt;= instructionIndex; i++) {&#xD;
               var newInstructionTimeSlot = new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION); // create&#xD;
                                                                                                // a&#xD;
                                                                                                // time&#xD;
                                                                                                // slot&#xD;
                                                                                                // for&#xD;
                                                                                                // nNodes,&#xD;
                                                                                                // each&#xD;
                                                                                                // initialized&#xD;
                                                                                                // with&#xD;
                                                                                                // a&#xD;
                                                                                                // SLEEP_INSTRUCTION&#xD;
               schedule.add(newInstructionTimeSlot);&#xD;
               channelsAvailable.addNewChannelSet(); // need make sure we have channels available&#xD;
                                                     // for all slots. instructionIndex may be >&#xD;
                                                     // initialized size of array because of&#xD;
                                                     // phases...&#xD;
             }&#xD;
           }&#xD;
           channel = findNextAvailableChannel(schedule, instructionNodeName, instructionIndex,&#xD;
               nodeIndex.get(currentNodeName), nodeIndex.get(snk));&#xD;
         }&#xD;
         workLoad.setNodeChannel(instructionNodeName, Integer.valueOf(channel));&#xD;
         if (realtimeHART) {&#xD;
           newInstruction = pushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         } else {&#xD;
           newInstruction = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
         }&#xD;
&#xD;
         // if optimization flag is set, look to see if any optimizations are possible&#xD;
         if (optimizationRequested &amp;&amp; instructionIndex > 0) {&#xD;
           var priorInstructionTimeSlotArrayList = schedule.get(instructionIndex - 1);&#xD;
           var priorInstructionTimeSlot = priorInstructionTimeSlotArrayList&#xD;
               .toArray(new String[priorInstructionTimeSlotArrayList.size()]);&#xD;
           var priorInstruction = priorInstructionTimeSlot[nodeIndex.get(snk)]; // get&#xD;
                                                                                // instruction&#xD;
                                                                                // scheduled for&#xD;
                                                                                // snk to execute&#xD;
                                                                                // in the prior&#xD;
                                                                                // time slot&#xD;
           if (index == (nTx - 1)) {&#xD;
             String hasSubstring = String.format(&quot;if has(%s&quot;, flowName);&#xD;
             String elseSubString = &quot;else pull(&quot;;&#xD;
             if (priorInstruction.contains(hasSubstring)&#xD;
                 &amp;&amp; !priorInstruction.contains(elseSubString) &amp;&amp; !realtimeHART) {&#xD;
               // The sink node is not waiting, so add this instruction as an else to it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smater way to do this later...&#xD;
               // The combined instructions both use channels for their respective time slots!&#xD;
               // The else is being added to the prior time slot, so we need to&#xD;
               // get a new channel for that time slot and put back the channel we extraced from&#xD;
               // this time slot. And of course, clean up if any errors occur&#xD;
               // in the process&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               workLoad.setNodeChannel(instructionNodeName,&#xD;
                   Integer.valueOf(priorInstructionChannel));&#xD;
               channelsAvailable.addChannel(instructionIndex, channel); // return channel for&#xD;
                                                                        // this slot&#xD;
               channel = priorInstructionChannel; // update this so that the corresponding wait&#xD;
                                                  // uses this channel&#xD;
               newInstruction = priorInstruction + String.format(&quot;else pull(%s: %s -> %s, #%s)&quot;,&#xD;
                   flowName, currentNodeName, snk, priorInstructionChannel); // was channel&#xD;
               instructionIndex -= 1; // set instructionIndex to the priorInstruction index so we&#xD;
                                      // replace that slot with the new, optimized instruction&#xD;
               instructionNodeName = snk; // change currntNodeName to the snk node, which is the&#xD;
                                          // node name of the prior instruction&#xD;
             }&#xD;
           } else if ((flowNodeIndex == 0 &amp;&amp; index == 0 &amp;&amp; e2eFlag)&#xD;
               &amp;&amp; !(priorInstruction.contains(SLEEP_INSTRUCTION)&#xD;
                   || priorInstruction.contains(WAIT_FRAGMENT))) {&#xD;
             // We hit this case when combining the last push of one flow with the first push of&#xD;
             // a new flow--making an if has (Fi) push(Fi) else pull pull(Fi+1)&#xD;
             // print (&quot;Skipping optimization of combining \(priorInstruction) with&#xD;
             // \(newInstruction)\n&quot;)&#xD;
             // May want to add code here to combine when e2eFlag is true but need to compute new&#xD;
             // reliability values given less than 1 probablity that&#xD;
             // this first push/now pull will happen&#xD;
             // System.err.printf(&quot;New instruction is: %s\nPrior instruction is %s\n&quot;,&#xD;
             // newInstruction, priorInstruction);&#xD;
           } else { // not sure when we hit this when combining a sleep or wait() from prior flow&#xD;
                    // with a new instruction&#xD;
             // Anywhere else? :-) Probably better figure it out!!&#xD;
             if (!priorInstruction.contains(ELSE_PULL_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(WAIT_FRAGMENT)&#xD;
                 &amp;&amp; !priorInstruction.contains(SLEEP_INSTRUCTION) &amp;&amp; !realtimeHART) { // The sink&#xD;
                                                                                      // node is&#xD;
                                                                                      // not&#xD;
                                                                                      // waiting,&#xD;
                                                                                      // so add&#xD;
                                                                                      // this&#xD;
                                                                                      // instruction&#xD;
                                                                                      // as an&#xD;
                                                                                      // else to&#xD;
                                                                                      // it&#xD;
               // Also need to make sure we haven't already combined a prior instruction by&#xD;
               // moving it to the else clause. May need a smarter way to do this later...&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(priorInstruction);&#xD;
               var priorInstructionChannel = UNKNOWN;&#xD;
               var priorInstructionSnk = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // parameters&#xD;
                 priorInstructionSnk = instructionParameters.getSnk();&#xD;
                 priorInstructionChannel = instructionParameters.getChannel();&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in prior instruction string: %s&quot;,&#xD;
                     priorInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               priorSrcInstruction = priorInstructionTimeSlot[nodeIndex.get(currentNodeName)]; // get&#xD;
                                                                                               // instruction&#xD;
                                                                                               // scheduled&#xD;
                                                                                               // for&#xD;
                                                                                               // snk/curentNodeName)&#xD;
                                                                                               // to&#xD;
                                                                                               // execute&#xD;
                                                                                               // in&#xD;
                                                                                               // the&#xD;
                                                                                               // prior&#xD;
                                                                                               // time&#xD;
               if (priorInstructionSnk.equals(currentNodeName)) { // will try to push and pull&#xD;
                                                                  // to/from the same node, so&#xD;
                                                                  // use the prior instruction&#xD;
                                                                  // channel&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel);&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               } else if (priorSrcInstruction.contains(SLEEP_INSTRUCTION)) { // was&#xD;
                                                                             // !priorSrcInstruction.contains(&quot;wait(&quot;);&#xD;
                                                                             // I think it needs&#xD;
                                                                             // to be a sleep and&#xD;
                                                                             // then we can add a&#xD;
                                                                             // wait there&#xD;
                 // Make sure the currentNodeName entry for this time slot has a sleep. If so,&#xD;
                 // then we combine instructions with new as an else push and add wait at&#xD;
                 // currentNodeName&#xD;
                 workLoad.setNodeChannel(instructionNodeName,&#xD;
                     Integer.valueOf(priorInstructionChannel));&#xD;
                 newInstruction = priorInstruction&#xD;
                     + elsePullClause(flowName, currentNodeName, snk, priorInstructionChannel); // was&#xD;
                                                                                                // channel&#xD;
                 // need to change priorSrcInstruction from sleep to wait on channel&#xD;
                 priorSrcInstruction = waitInstruction(priorInstructionChannel); // was channel&#xD;
                 priorSrcUpdated = true; // set flag so this instruction is updated when we&#xD;
                                         // insert currenInstruction into the&#xD;
                                         // currentInstructionTimeSlot&#xD;
                 instructionIndex -= 1; // set instructionIndex to the priorInstruction index so&#xD;
                                        // we replace that slot with the new, optimized&#xD;
                                        // instruction&#xD;
                 instructionNodeName = snk; // change currntNodeName to the snk node, which is&#xD;
                                            // the node name of the prior instruction&#xD;
               }&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         ArrayList&lt;String> currentInstructionTimeSlotArrayList; // =&#xD;
                                                                // schedule.get(instructionIndex);&#xD;
         String[] currentInstructionTimeSlot; // =&#xD;
                                              // currentInstructionTimeSlotArrayList.toArray(new&#xD;
                                              // String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         currentNodeInstruction[index] = instructionIndex; // store the slot index for this&#xD;
                                                           // instruction&#xD;
         if (instructionIndex &lt; schedule.size()) {&#xD;
           currentInstructionTimeSlotArrayList = schedule.get(instructionIndex); // load current&#xD;
                                                                                 // instruction,&#xD;
                                                                                 // in case&#xD;
                                                                                 // another&#xD;
                                                                                 // instruction&#xD;
                                                                                 // is in this&#xD;
                                                                                 // time slot for&#xD;
                                                                                 // another node&#xD;
                                                                                 // that doesn't&#xD;
                                                                                 // conflict&#xD;
                                                                                 // channels&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         } else {&#xD;
           currentInstructionTimeSlotArrayList =&#xD;
               new InstructionTimeSlot(nNodes, SLEEP_INSTRUCTION);&#xD;
           currentInstructionTimeSlot = currentInstructionTimeSlotArrayList&#xD;
               .toArray(new String[currentInstructionTimeSlotArrayList.size()]);&#xD;
         }&#xD;
         currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                          // error&#xD;
                                                                                          // finding&#xD;
                                                                                          // the&#xD;
                                                                                          // right&#xD;
                                                                                          // location&#xD;
                                                                                          // will&#xD;
                                                                                          // result&#xD;
                                                                                          // in&#xD;
                                                                                          // location&#xD;
                                                                                          // of&#xD;
                                                                                          // snk&#xD;
                                                                                          // or 0&#xD;
         if (priorSrcUpdated) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(currentNodeName)] = priorSrcInstruction; // an&#xD;
                                                                                             // error&#xD;
                                                                                             // finding&#xD;
                                                                                             // the&#xD;
                                                                                             // right&#xD;
                                                                                             // location&#xD;
                                                                                             // will&#xD;
                                                                                             // result&#xD;
                                                                                             // in&#xD;
                                                                                             // location&#xD;
                                                                                             // of&#xD;
                                                                                             // snk&#xD;
                                                                                             // or&#xD;
                                                                                             // 0&#xD;
         }&#xD;
         // If this is a basic push() then the snk node will have the initial wait instruction in&#xD;
         // its time slot. Thus, need to add the channel # to that wait&#xD;
         var snkInstruction = currentInstructionTimeSlot[nodeIndex.get(snk)]; // get instruction&#xD;
                                                                              // scheduled for&#xD;
                                                                              // snk to execute&#xD;
                                                                              // in the current&#xD;
                                                                              // time slot&#xD;
         if (snkInstruction.equals(SLEEP_INSTRUCTION)) {&#xD;
           currentInstructionTimeSlot[nodeIndex.get(snk)] = waitInstruction(channel);&#xD;
         }&#xD;
         if (flowNodeIndex > 0) {&#xD;
           var priorNodeName = nodesInFlow[flowNodeIndex - 1];// get name of prior node in the&#xD;
                                                              // flow (aka predecessor)&#xD;
           var possibleCombineInstruction =&#xD;
               String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #&quot;, flowName, priorNodeName,&#xD;
                   currentNodeName);&#xD;
           if (optimizationRequested &amp;&amp; !realtimeHART &amp;&amp; nTx > 1) { // One more optimization&#xD;
                                                                    // possible: combine two&#xD;
                                                                    // conditional pushes at the&#xD;
                                                                    // same slot involving a&#xD;
                                                                    // common node&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             var instr = hasPushInstruction(flowName, currentNodeName, snk, channel);&#xD;
             if (newInstruction.equals(instr)&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)&#xD;
                 &amp;&amp; !upstreamNodeInstruction.contains(&quot;else&quot;)) {&#xD;
               var instructionParametersArrayList =&#xD;
                   dsl.getInstructionParameters(upstreamNodeInstruction);&#xD;
               var upstreamNodeChannel = UNKNOWN;&#xD;
               if (instructionParametersArrayList.size() == 1) {&#xD;
                 var instructionParameters = instructionParametersArrayList.get(0); // get a copy&#xD;
                                                                                    // of the&#xD;
                                                                                    // paramaters&#xD;
                 upstreamNodeChannel = instructionParameters.getChannel();&#xD;
                 // return upstreamNodeChannel to the available channels for this time slot&#xD;
                 channelsAvailable.addChannel(instructionIndex, upstreamNodeChannel);&#xD;
               } else { // we just checked above that the prior instruction did not have an else&#xD;
                        // pull, wait, or sleep. So, there should be only one instruction here&#xD;
                 String msg = String.format(&#xD;
                     &quot;ERROR: More than one instruction in upstream node  instruction string: %s&quot;,&#xD;
                     upstreamNodeInstruction);&#xD;
                 System.err.println(msg);&#xD;
               }&#xD;
               // use the newInstruction channel in upstream instruction that is being combined&#xD;
               // and return the upstream channel to the available channel set&#xD;
               newInstruction = newInstruction&#xD;
                   + elsePullClause(flowName, priorNodeName, currentNodeName, channel); // was&#xD;
                                                                                        // upstreamNodeChannel&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel);; // an error finding the right location will result&#xD;
                                              // in location of snk or 0 // was&#xD;
                                              // upstreamNodeChannel&#xD;
             } else if (newInstruction&#xD;
                 .contains(elsePullClause(flowName, priorNodeName, currentNodeName, channel))&#xD;
                 &amp;&amp; currentInstructionTimeSlot[nodeIndex.get(priorNodeName)]&#xD;
                     .contains(possibleCombineInstruction)) {&#xD;
               currentInstructionTimeSlot[nodeIndex.get(priorNodeName)] =&#xD;
                   waitInstruction(channel); // Replace combined instruction in prior node&#xD;
                                             // program with wait()&#xD;
             }&#xD;
           }&#xD;
           if (!realtimeHART &amp;&amp; nTx > 1) { // WARP schedule with multiple tx per link requested,&#xD;
                                           // so add 'else wait()' for down upstream node when&#xD;
                                           // needed&#xD;
             var upstreamNodeInstruction =&#xD;
                 currentInstructionTimeSlot[nodeIndex.get(priorNodeName)];&#xD;
             if (newInstruction&#xD;
                 .equals(hasPushInstruction(flowName, currentNodeName, snk, channel))&#xD;
                 &amp;&amp; upstreamNodeInstruction.contains(possibleCombineInstruction)) {&#xD;
               String upstreamNodeChannel =&#xD;
                   getFirstChannelInInstruction(upstreamNodeInstruction);&#xD;
               newInstruction = newInstruction + elseWaitInstruction(upstreamNodeChannel); // this&#xD;
                                                                                           // node&#xD;
                                                                                           // needs&#xD;
                                                                                           // to&#xD;
                                                                                           // wait&#xD;
                                                                                           // for&#xD;
                                                                                           // upstream&#xD;
                                                                                           // node&#xD;
                                                                                           // if&#xD;
                                                                                           // message&#xD;
                                                                                           // hasn't&#xD;
                                                                                           // arrived&#xD;
               currentInstructionTimeSlot[nodeIndex.get(instructionNodeName)] = newInstruction; // an&#xD;
                                                                                                // error&#xD;
                                                                                                // finding&#xD;
                                                                                                // the&#xD;
                                                                                                // right&#xD;
                                                                                                // location&#xD;
                                                                                                // will&#xD;
                                                                                                // result&#xD;
                                                                                                // in&#xD;
                                                                                                // location&#xD;
                                                                                                // of&#xD;
                                                                                                // snk&#xD;
                                                                                                // or&#xD;
                                                                                                // 0&#xD;
               // Don't replace the push instruction in the upstream node in this case, because&#xD;
               // we added the else in this nodes time slot instead&#xD;
             }&#xD;
           }&#xD;
         }&#xD;
         var timeSlot = new InstructionTimeSlot(currentInstructionTimeSlot);&#xD;
         if (instructionIndex &lt; schedule.size()) { // This should always be the case, but check&#xD;
                                                   // anyway&#xD;
           schedule.set(instructionIndex, timeSlot);&#xD;
         } else {&#xD;
           schedule.add(timeSlot);&#xD;
           String msg = String.format(&#xD;
               &quot;ERROR: instructionIndex = %d > schedule length = %d. Appended instruction to avoid crash or throw...&quot;,&#xD;
               instructionIndex, schedule.size());&#xD;
           System.err.println(msg);&#xD;
           System.err.println(&#xD;
               &quot;\tProbably due to a flow having a phase > 0. Need to addjust schedule to have one hyperperiod as a startup period in this case&quot;);&#xD;
         }&#xD;
         flowLastInstruction = instructionIndex;&#xD;
         if (index == 0) {&#xD;
           FlowSrcInstructionTimeSlot = instructionIndex; // Store the time slot in which the&#xD;
                                                          // flow's src node first transmits&#xD;
         }&#xD;
       }&#xD;
       previousNodeInstruction = currentNodeInstruction; // copy current to previous node...don't&#xD;
                                                         // worry about clearing&#xD;
                                                         // currentNodeInstrucitons; will be set&#xD;
                                                         // in loop&#xD;
     }&#xD;
     Integer latency = flowLastInstruction - (flowPhase + (instance * flowPeriod)) + 1;&#xD;
     String latencyMsg =&#xD;
         String.format(&quot;Maximum latency for %s:%d is %d\n&quot;, flowName, instance, latency);&#xD;
     if (verbose) {&#xD;
       System.out.printf(latencyMsg);&#xD;
     }&#xD;
     if (latency > flowDeadline) {&#xD;
       String deadlineMsg = String.format(&#xD;
           &quot;WARNING: This workload is not schedulable: Flow %s:%d latency %d > deadline %d\n&quot;,&#xD;
           flowName, instance, latency, flowDeadline);&#xD;
       deadlineMisses.add(deadlineMsg);&#xD;
       // System.out.printf(deadlineMsg);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 setSchedule(schedule); // store the schedule built&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDlqlTEe-NBpoHimppkw" name="waitInstruction" specification="_UineMalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDl6lTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDmKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.out.println(&quot;channel length is &quot; + String.valueOf(size));&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
 }&#xD;
 return String.format(&quot;wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDmalTEe-NBpoHimppkw" name="elseWaitInstruction" specification="_UioFQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDmqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDm6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var size = channel.length();&#xD;
 if (!Utilities.isInteger(channel)) {&#xD;
   System.err.println(&quot;ERROR: channel is not an Integer: &quot; + channel);&#xD;
   System.err.println(&quot;\t channel size is not an Integer: &quot; + String.valueOf(size));&#xD;
 }&#xD;
 return String.format(&quot; else wait(#%s)&quot;, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gDnKlTEe-NBpoHimppkw" name="elsePullClause" specification="_UioFQ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gDnalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDnqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDn6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDoKlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gDoalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot; else pull(%s: %s -> %s, #%s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqkKlTEe-NBpoHimppkw" name="hasPushInstruction" specification="_UiosUqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gqkalTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqkqlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqk6lTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqlKlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqlalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;if has(%1$s) push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqlqlTEe-NBpoHimppkw" name="pushInstruction" specification="_UipTYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gql6lTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqmKlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqmalTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqmqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqm6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;push(%1$s: %2$s -> %3$s, #%4$s)&quot;, flow, src, snk, channel);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqnKlTEe-NBpoHimppkw" name="getFirstChannelInInstruction" specification="_Uip6calTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gqnalTEe-NBpoHimppkw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqnqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var beginIndex = Instruction.indexOf('#') + 1; // get index of the start of the channel #&#xD;
 var endIndex = Instruction.indexOf(')', beginIndex); // get index of the last character of the&#xD;
                                                      // channel #&#xD;
 var channel = Instruction.substring(beginIndex, endIndex); // this substring has the 1st channel&#xD;
 return channel;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqn6lTEe-NBpoHimppkw" name="findNextAvailableInstructionTimeSlot" specification="_UyZmoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gqoKlTEe-NBpoHimppkw" name="schedule" type="_Ui-qkKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gqoalTEe-NBpoHimppkw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqoqlTEe-NBpoHimppkw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqo6lTEe-NBpoHimppkw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqpKlTEe-NBpoHimppkw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqpalTEe-NBpoHimppkw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2gqpqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqp6lTEe-NBpoHimppkw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2gqqKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqqalTEe-NBpoHimppkw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqqqlTEe-NBpoHimppkw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqq6lTEe-NBpoHimppkw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqrKlTEe-NBpoHimppkw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqralTEe-NBpoHimppkw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqrqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var currentTime = startLocation; // Make sure we don't start looking before the starting&#xD;
                                  // location&#xD;
 if (transIndex > 0) {&#xD;
   currentTime = Math.max(startLocation, currentNodeInstruction[transIndex - 1]); // Make sure we&#xD;
                                                                                  // don't start&#xD;
                                                                                  // looking&#xD;
                                                                                  // before the&#xD;
                                                                                  // startLocation&#xD;
                                                                                  // AND the&#xD;
                                                                                  // previous&#xD;
                                                                                  // instruction&#xD;
                                                                                  // we inserted&#xD;
 }&#xD;
 var done = false; // Flag indicating time slot search is done&#xD;
 if (realtimeHART || (nTx == 1 || nodeInFlow == 0 || transIndex >= nTx - 1)) {&#xD;
   // do the same thing for all nodes when nTx == 1 as for first node of flow when nTx == 1 and&#xD;
   // for kth retry&#xD;
   while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
     var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
     if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) {&#xD;
       done = true;&#xD;
     } else {&#xD;
       currentTime += 1;&#xD;
     }&#xD;
   }&#xD;
 } else { // !reatimeHART and (nTx > 1 and nodeInFlow > 0)&#xD;
   Integer slotOffsetFromLastPreviousInstructionEntry;&#xD;
   if (transIndex >= (previousNodeInstruction.length - 1)) {&#xD;
     slotOffsetFromLastPreviousInstructionEntry =&#xD;
         transIndex - (previousNodeInstruction.length - 1) + 1;&#xD;
     var possibleInstructionTimeSlotIndex =&#xD;
         previousNodeInstruction[previousNodeInstruction.length - 1]&#xD;
             + slotOffsetFromLastPreviousInstructionEntry; // same as previous node's next retry&#xD;
                                                           // entry&#xD;
     // or continuous past it if more attempts for this instruction&#xD;
     if (startLocation &lt; possibleInstructionTimeSlotIndex) { // make sure this time isn't earlier&#xD;
                                                             // than the starting location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; // OK to update to this time slot index&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   } else {&#xD;
     var possibleInstructionTimeSlotIndex = previousNodeInstruction[transIndex + 1]; // same as&#xD;
                                                                                     // previous&#xD;
                                                                                     // node's&#xD;
                                                                                     // next&#xD;
                                                                                     // retry&#xD;
                                                                                     // entry&#xD;
     if (startLocation &lt;= possibleInstructionTimeSlotIndex) { // make sure this time isn't&#xD;
                                                              // earlier than the starting&#xD;
                                                              // location&#xD;
       // (which can also mean the start time for searching available slots due to channel&#xD;
       // unavailability)&#xD;
       currentTime = possibleInstructionTimeSlotIndex; //&#xD;
     }&#xD;
     done = false; // However, we need to check if the current slot is available, and if not keep&#xD;
                   // searching until we find one. This happens with preemptions&#xD;
     if (!optimizationRequested) {&#xD;
       while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
         var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
         if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                        // the&#xD;
                                                                                        // proposed&#xD;
                                                                                        // currentInstructionTimeSlot.&#xD;
                                                                                        // If&#xD;
                                                                                        // available,&#xD;
                                                                                        // done&#xD;
                                                                                        // is&#xD;
                                                                                        // true,&#xD;
                                                                                        // else&#xD;
                                                                                        // keep&#xD;
                                                                                        // checking&#xD;
                                                                                        // for a&#xD;
                                                                                        // time&#xD;
           done = true;&#xD;
         } else {&#xD;
           currentTime += 1;&#xD;
         }&#xD;
       }&#xD;
     } else {&#xD;
       // do something to support the optimization&#xD;
       if (currentTime &lt; schedule.size()) { // First make sure we haven't exceeded the current&#xD;
                                            // schedule table. If so, no need to optimize.&#xD;
         // Just return current time and let caller figure out what to do.&#xD;
         var tmpInstructionTimeSlot = schedule.get(currentTime);&#xD;
         var srcInstruction = tmpInstructionTimeSlot.get(srcNodeIndex);&#xD;
         var snkInstruction = tmpInstructionTimeSlot.get(snkNodeIndex);&#xD;
         if (!srcInstruction.contains(&quot;wait(&quot;) || !snkInstruction.contains(&quot;sleep&quot;)) { // instruction&#xD;
                                                                                       // should&#xD;
                                                                                       // contain&#xD;
                                                                                       // a wait,&#xD;
                                                                                       // so we&#xD;
                                                                                       // can use&#xD;
                                                                                       // it&#xD;
                                                                                       // during&#xD;
                                                                                       // optimization.&#xD;
                                                                                       // Only a&#xD;
                                                                                       // wait&#xD;
                                                                                       // for&#xD;
                                                                                       // this&#xD;
                                                                                       // time&#xD;
                                                                                       // slot is&#xD;
                                                                                       // expected&#xD;
                                                                                       // at this&#xD;
                                                                                       // point&#xD;
           // we also need to be sure the snk is sleeping&#xD;
           // If either condition is not true, then we need to find another time slot&#xD;
           while (currentTime &lt; schedule.size() &amp;&amp; !done) {&#xD;
             var currentInstructionTimeSlot = schedule.get(currentTime);&#xD;
             if (slotIsAvailable(currentInstructionTimeSlot, srcNodeIndex, snkNodeIndex)) { // get&#xD;
                                                                                            // the&#xD;
                                                                                            // proposed&#xD;
                                                                                            // currentInstructionTimeSlot.&#xD;
                                                                                            // If&#xD;
                                                                                            // available,&#xD;
                                                                                            // done&#xD;
                                                                                            // is&#xD;
                                                                                            // true,&#xD;
                                                                                            // else&#xD;
                                                                                            // keep&#xD;
                                                                                            // checking&#xD;
                                                                                            // for&#xD;
                                                                                            // a&#xD;
                                                                                            // time&#xD;
               done = true;&#xD;
             } else {&#xD;
               currentTime += 1;&#xD;
             }&#xD;
           }&#xD;
         } else if (srcInstruction.contains(&quot;else(&quot;)) { // This should never be the case, but not&#xD;
                                                        // sure if it is bad...print an error&#xD;
                                                        // indicating the issue&#xD;
           var errorString = String.format(&#xD;
               &quot;POSSIBLE ERROR, but not sure...   At time slot %d of the schedule, &quot;,&#xD;
               currentTime);&#xD;
           errorString +=&#xD;
               &quot;instruction for the src node contains\n   an unexpected 'else wait' instruction:&quot;;&#xD;
           errorString += srcInstruction;&#xD;
           System.err.println(errorString);&#xD;
         }&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return currentTime;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqr6lTEe-NBpoHimppkw" name="slotIsAvailable" specification="_UyaNsalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gqsKlTEe-NBpoHimppkw" name="currentInstructionTimeSlot" type="_UhyXwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gqsalTEe-NBpoHimppkw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqsqlTEe-NBpoHimppkw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqs6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var vacantSlot = false; // assume slot is not vacant ----// Flag indicating time slot search is&#xD;
                         // done&#xD;
 if (SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(srcNodeIndex))&#xD;
     &amp;&amp; SLEEP_INSTRUCTION.equals(currentInstructionTimeSlot.get(snkNodeIndex))) { // src and snk&#xD;
                                                                                  // are both&#xD;
                                                                                  // sleeping, so&#xD;
                                                                                  // slot is&#xD;
                                                                                  // available&#xD;
   vacantSlot = true;&#xD;
 }&#xD;
 return vacantSlot;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqtKlTEe-NBpoHimppkw" name="findNextAvailableChannel" specification="_UyaNtqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2gqtalTEe-NBpoHimppkw" name="schedule" type="_Ui-qkKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2gqtqlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqt6lTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gquKlTEe-NBpoHimppkw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gqualTEe-NBpoHimppkw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2gquqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var newChannel = UNKNOWN; // indicates no channel was available. The caller will need to check&#xD;
                           // this result&#xD;
&#xD;
 // create an instance of the Warp DSL class for parsing instructions&#xD;
 var dsl = new WarpDSL();&#xD;
 InstructionTimeSlot priorInstructionTimeSlot;&#xD;
&#xD;
 var channels = channelsAvailable.getChannelSet(currentTime);&#xD;
 if (currentTime > 0) { // get the prior schedule time slot to see what channels were used in&#xD;
                        // that slot, which have to be avoided here&#xD;
   Integer priorTime = currentTime - 1;&#xD;
   priorInstructionTimeSlot = schedule.get(priorTime); // get a copy of the prior time slot&#xD;
   var srcPriorInstruction = priorInstructionTimeSlot.get(srcNodeIndex);&#xD;
   var snkPriorInstruction = priorInstructionTimeSlot.get(snkNodeIndex);&#xD;
&#xD;
   // extract the channels used by the src and snk nodes in the prior time slot and store them in&#xD;
   // an array&#xD;
   var instructionParametersArrayList = dsl.getInstructionParameters(srcPriorInstruction); // get&#xD;
                                                                                           // the&#xD;
                                                                                           // parameters&#xD;
                                                                                           // from&#xD;
                                                                                           // the&#xD;
                                                                                           // instruction&#xD;
                                                                                           // in&#xD;
                                                                                           // the&#xD;
                                                                                           // src&#xD;
                                                                                           // node's&#xD;
                                                                                           // prior&#xD;
                                                                                           // time&#xD;
                                                                                           // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
   instructionParametersArrayList = dsl.getInstructionParameters(snkPriorInstruction); // get the&#xD;
                                                                                       // parameters&#xD;
                                                                                       // from&#xD;
                                                                                       // the&#xD;
                                                                                       // instruction&#xD;
                                                                                       // in the&#xD;
                                                                                       // snk&#xD;
                                                                                       // node's&#xD;
                                                                                       // prior&#xD;
                                                                                       // time&#xD;
                                                                                       // slot&#xD;
   for (int i = 0; i &lt; instructionParametersArrayList.size(); i++) {&#xD;
     var instructionParameters = instructionParametersArrayList.get(i); // get a copy of the&#xD;
                                                                        // paramaters&#xD;
     channels.remove(instructionParameters.getChannel());&#xD;
   }&#xD;
 }&#xD;
 Integer channel = workLoad.getNodeChannel(nodeName); // get the last used channel for the node&#xD;
 channel++; // increment the channel because we don't use the same channel in consecutive time&#xD;
            // slots for the same node&#xD;
 if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel hits&#xD;
                                    // max&#xD;
   channel = 0;&#xD;
 }&#xD;
 var channelFound = false;&#xD;
 while (!channelFound &amp;&amp; !channels.isEmpty()) { // loop until a channel is found or we run out of&#xD;
                                                // channels to assign&#xD;
   var channelString = String.valueOf(channel);&#xD;
   var channelRemoved = channels.remove(channelString);&#xD;
   if (channelRemoved) {&#xD;
     // newChannel has the channel&#xD;
     newChannel = channelString;&#xD;
     channelFound = true;&#xD;
   } else {&#xD;
     // try another channel&#xD;
     channel += 1;&#xD;
     if (channel >= getNumChannels()) { // valid range is 0..NumChannels-1. Reset when channel&#xD;
                                        // hits max&#xD;
       channel = 0;&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return newChannel; // returns UNKNOWN to indicate no channel found. This should never happen.&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqu6lTEe-NBpoHimppkw" name="selectPriority" specification="_UirvoKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.PRIORITY);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2gqvKlTEe-NBpoHimppkw" name="selectRM" specification="_UirvoalTEe-NBpoHimppkw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRoKlTEe-NBpoHimppkw" name="selectDM" specification="_UisWsKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.DM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRoalTEe-NBpoHimppkw" name="selectRtHART" specification="_UisWsalTEe-NBpoHimppkw">
                <language>java</language>
                <body>setScheduleSelected(ScheduleChoices.RTHART);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRoqlTEe-NBpoHimppkw" name="setScheduleSelected" specification="_U0ZxwalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRo6lTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>switch (choice) {&#xD;
   case PRIORITY:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case RM:&#xD;
     schedulerName = &quot;RateMonotonic&quot;;&#xD;
     schChoice = &quot;-RM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case DM:&#xD;
     schedulerName = &quot;DeadlineMonotonic&quot;;&#xD;
     schChoice = &quot;-DM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case RTHART:&#xD;
     schedulerName = &quot;RealtimeHART&quot;;&#xD;
     schChoice = &quot;-RealTimeHART&quot;;&#xD;
     workLoad.setFlowsInRealTimeHARTorder();&#xD;
     setRealTimeHartFlag(true);&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_DM:&#xD;
     schedulerName = &quot;ConnectivityPosetDM&quot;;&#xD;
     schChoice = &quot;-CPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_PRIORITY:&#xD;
     schedulerName = &quot;ConnectivityPoset&quot;;&#xD;
     schChoice = &quot;-CPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case CONNECTIVITY_POSET_RM:&#xD;
     schedulerName = &quot;ConnectivityPosetRM&quot;;&#xD;
     schChoice = &quot;-CPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case POSET_DM:&#xD;
     schedulerName = &quot;PosetDM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case POSET_PRIORITY:&#xD;
     schedulerName = &quot;Poset&quot;;&#xD;
     schChoice = &quot;-Poset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case POSET_RM:&#xD;
     schedulerName = &quot;PosetRM&quot;;&#xD;
     schChoice = &quot;-PosetDM&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   case WARP_POSET_DM:&#xD;
     schedulerName = &quot;WarpPosetDM&quot;;&#xD;
     schChoice = &quot;-WPdm&quot;;&#xD;
     workLoad.setFlowsInDMorder();&#xD;
     break;&#xD;
   case WARP_POSET_PRIORITY:&#xD;
     schedulerName = &quot;WarpPoset&quot;;&#xD;
     schChoice = &quot;-WarpPoset&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
   case WARP_POSET_RM:&#xD;
     schedulerName = &quot;WarpPosetRM&quot;;&#xD;
     schChoice = &quot;-WPrm&quot;;&#xD;
     workLoad.setFlowsInRMorder();&#xD;
     break;&#xD;
   default:&#xD;
     schedulerName = &quot;Priority&quot;;&#xD;
     schChoice = &quot;-Priority&quot;;&#xD;
     workLoad.setFlowsInPriorityOrder();&#xD;
     break;&#xD;
 }&#xD;
 SchedulerSelected = choice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRpKlTEe-NBpoHimppkw" name="setSchedule" specification="_Uya0xKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRpalTEe-NBpoHimppkw" name="schedule" type="_Ui-qkKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>scheduleBuilt = schedule;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRpqlTEe-NBpoHimppkw" name="getSchedule" specification="_UisWsqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRp6lTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return scheduleBuilt;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRqKlTEe-NBpoHimppkw" name="getSchedulerName" specification="_Uis9wKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRqalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schedulerName;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRqqlTEe-NBpoHimppkw" name="getSchChoice" specification="_UiuL4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRq6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return schChoice;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRrKlTEe-NBpoHimppkw" name="getNumChannels" specification="_UiuL4qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRralTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nChannels;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRrqlTEe-NBpoHimppkw" name="getNumTransmissions" specification="_Uiuy86lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRr6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return nTransmissions;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRsKlTEe-NBpoHimppkw" name="getRealTimeHartFlag" specification="_UiwBEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRsalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return realTimeHARTflag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRsqlTEe-NBpoHimppkw" name="setRealTimeHartFlag" specification="_UiwBEqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRs6lTEe-NBpoHimppkw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>realTimeHARTflag = flag;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRtKlTEe-NBpoHimppkw" name="getMinPacketReceptionRate" specification="_UiwoIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRtalTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2hRtqlTEe-NBpoHimppkw" name="getE2e" specification="_UixPMqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2hRt6lTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2h4sKlTEe-NBpoHimppkw" name="getName" specification="_Uix2QqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2h4salTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2h4sqlTEe-NBpoHimppkw" name="getOptimizationFlag" specification="_UiydU6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2h4s6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return optimizationRequested;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2h4tKlTEe-NBpoHimppkw" name="deadlineMisses" specification="_UizEZKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2h4talTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return deadlineMisses;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2h4tqlTEe-NBpoHimppkw" name="getNumFaults" specification="_UizrcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2h4t6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2h4uKlTEe-NBpoHimppkw" name="getNodeMapIndex" specification="_Ui0Sg6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2h4ualTEe-NBpoHimppkw" type="_UxXE0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var orderedNodes = workLoad.getNodeNamesOrderedAlphabetically(); // create an array of node&#xD;
                                                                  // names&#xD;
 // sorted alphabetically&#xD;
 var nodeIndexMap = new HashMap&lt;String, Integer>(); // create a new mapping from node names to&#xD;
                                                    // index in schedule&#xD;
 // table&#xD;
 var nNodes = orderedNodes.length;&#xD;
 for (int index = 0; index &lt; nNodes; index++) { // set up the node to index mapping&#xD;
   var name = orderedNodes[index];&#xD;
   nodeIndexMap.put(name, index); // add name, index mapping to NodeIndex map&#xD;
 }&#xD;
 return nodeIndexMap;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uim3IKlTEe-NBpoHimppkw" name="toWorkLoad" method="_U2gDkalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IYalTEe-NBpoHimppkw">
                  <body>Returns the work load &#xD;
   * @return workLoad</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyY_lalTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UineMKlTEe-NBpoHimppkw" name="buildOriginalProgram" method="_U2gDlalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UineMalTEe-NBpoHimppkw" name="waitInstruction" visibility="private" method="_U2gDlqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UineMqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UineM6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UioFQKlTEe-NBpoHimppkw" name="elseWaitInstruction" visibility="private" method="_U2gDmalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UioFQalTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UioFQqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UioFQ6lTEe-NBpoHimppkw" name="elsePullClause" visibility="private" method="_U2gDnKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UioFRKlTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UioFRalTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UioFRqlTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiosUKlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiosUalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiosUqlTEe-NBpoHimppkw" name="hasPushInstruction" visibility="private" method="_U2gqkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiosU6lTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiosVKlTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiosValTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UiosVqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UipTYKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UipTYalTEe-NBpoHimppkw" name="pushInstruction" visibility="private" method="_U2gqlqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UipTYqlTEe-NBpoHimppkw" name="flow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UipTY6lTEe-NBpoHimppkw" name="src">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UipTZKlTEe-NBpoHimppkw" name="snk">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UipTZalTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uip6cKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uip6calTEe-NBpoHimppkw" name="getFirstChannelInInstruction" visibility="private" method="_U2gqnKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uip6cqlTEe-NBpoHimppkw" name="Instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uip6c6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UirvoKlTEe-NBpoHimppkw" name="selectPriority" method="_U2gqu6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UirvoalTEe-NBpoHimppkw" name="selectRM" method="_U2gqvKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UisWsKlTEe-NBpoHimppkw" name="selectDM" method="_U2hRoKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UisWsalTEe-NBpoHimppkw" name="selectRtHART" method="_U2hRoalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UisWsqlTEe-NBpoHimppkw" name="getSchedule" method="_U2hRpqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IYqlTEe-NBpoHimppkw">
                  <body>Returns the built schulde&#xD;
   * @return scheduleBuilt</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uya0xqlTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uis9wKlTEe-NBpoHimppkw" name="getSchedulerName" method="_U2hRqKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uis9walTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiuL4KlTEe-NBpoHimppkw" name="getSchChoice" method="_U2hRqqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiuL4alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiuL4qlTEe-NBpoHimppkw" name="getNumChannels" method="_U2hRrKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiuL46lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uiuy86lTEe-NBpoHimppkw" name="getNumTransmissions" method="_U2hRrqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UivaAKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiwBEKlTEe-NBpoHimppkw" name="getRealTimeHartFlag" visibility="private" method="_U2hRsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiwBEalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiwBEqlTEe-NBpoHimppkw" name="setRealTimeHartFlag" visibility="private" method="_U2hRsqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UiwBE6lTEe-NBpoHimppkw" name="flag">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiwoIKlTEe-NBpoHimppkw" name="getMinPacketReceptionRate" method="_U2hRtKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0aY0qlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UixPMqlTEe-NBpoHimppkw" name="getE2e" method="_U2hRtqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0a_4KlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uix2QqlTEe-NBpoHimppkw" name="getName" method="_U2h4sKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uix2Q6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UiydU6lTEe-NBpoHimppkw" name="getOptimizationFlag" method="_U2h4sqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UizEYKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UizEZKlTEe-NBpoHimppkw" name="deadlineMisses" method="_U2h4tKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uya0x6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UizrcKlTEe-NBpoHimppkw" name="getNumFaults" method="_U2h4tqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UizrcalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui0Sg6lTEe-NBpoHimppkw" name="getNodeMapIndex" method="_U2h4uKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IY6lTEe-NBpoHimppkw">
                  <body>Retrieves a mapping of node names to their respective indices in the schedule table.&#xD;
   * @return nodeIndexMap</body>
                </ownedComment>
                <ownedParameter xmi:id="_U0a_4alTEe-NBpoHimppkw" type="_UxXE0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyY_kKlTEe-NBpoHimppkw" name="setDefaultParameters" visibility="private" method="_U2gDjKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyY_kalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyY_kqlTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyY_k6lTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyY_lKlTEe-NBpoHimppkw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyZmoKlTEe-NBpoHimppkw" name="findNextAvailableInstructionTimeSlot" visibility="private" method="_U2gqn6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyZmoalTEe-NBpoHimppkw" name="schedule" type="_Ui-qkKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyZmoqlTEe-NBpoHimppkw" name="startLocation">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmo6lTEe-NBpoHimppkw" name="nodeInFlow">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmpKlTEe-NBpoHimppkw" name="transIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmpalTEe-NBpoHimppkw" name="nTx">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmpqlTEe-NBpoHimppkw" name="previousNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UyZmrqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmp6lTEe-NBpoHimppkw" name="currentNodeInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UyaNsKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmqKlTEe-NBpoHimppkw" name="sleepInstruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmqalTEe-NBpoHimppkw" name="realtimeHART">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmqqlTEe-NBpoHimppkw" name="optimizationRequested">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmq6lTEe-NBpoHimppkw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmrKlTEe-NBpoHimppkw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyZmralTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyaNsalTEe-NBpoHimppkw" name="slotIsAvailable" visibility="private" method="_U2gqr6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyaNsqlTEe-NBpoHimppkw" name="currentInstructionTimeSlot" type="_UhyXwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyaNs6lTEe-NBpoHimppkw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyaNtKlTEe-NBpoHimppkw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyaNtalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyaNtqlTEe-NBpoHimppkw" name="findNextAvailableChannel" visibility="private" method="_U2gqtKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyaNt6lTEe-NBpoHimppkw" name="schedule" type="_Ui-qkKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyaNuKlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uya0wKlTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uya0walTEe-NBpoHimppkw" name="srcNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uya0wqlTEe-NBpoHimppkw" name="snkNodeIndex">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uya0w6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uya0xKlTEe-NBpoHimppkw" name="setSchedule" visibility="private" method="_U2hRpKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uya0xalTEe-NBpoHimppkw" name="schedule" type="_Ui-qkKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0YjoKlTEe-NBpoHimppkw" name="Program" visibility="package" method="_U2gDgKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0YjpqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0Yjp6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0YjoalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0YjoqlTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0Yjo6lTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0YjpKlTEe-NBpoHimppkw" name="verbose">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0YjpalTEe-NBpoHimppkw" name="reportLatency">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0YjqKlTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0ZKsKlTEe-NBpoHimppkw" name="Program" visibility="package" method="_U2gDh6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0ZKtKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0ZKtalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0ZKsalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0ZKsqlTEe-NBpoHimppkw" name="nChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0ZKs6lTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0ZKtqlTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0ZKt6lTEe-NBpoHimppkw" name="buildProgram" method="_U2gDk6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0ZxwKlTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0ZxwalTEe-NBpoHimppkw" name="setScheduleSelected" visibility="private" method="_U2hRoqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0ZxwqlTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ui-qkKlTEe-NBpoHimppkw" name="ProgramSchedule">
              <generalization xmi:id="_Uyd4EKlTEe-NBpoHimppkw" general="_UkUuYKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1n5wKlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1n5walTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2h4uqlTEe-NBpoHimppkw" name="ProgramSchedule" specification="_Ui_RoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2h4u6lTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2h4vKlTEe-NBpoHimppkw" name="ProgramSchedule" specification="_Ui_4sKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2h4valTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2h4vqlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2h4v6lTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ui_RoKlTEe-NBpoHimppkw" name="ProgramSchedule" method="_U2h4uqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Ui_RoalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ui_RoqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ui_Ro6lTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ui_4sKlTEe-NBpoHimppkw" name="ProgramSchedule" visibility="package" method="_U2h4vKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Ui_4s6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ui_4tKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ui_4salTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui_4sqlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ui_4talTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjAfwKlTEe-NBpoHimppkw" name="ProgramVisualization">
              <ownedComment xmi:id="_U28IZKlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@author jcbates&#xD;
@version 1.5&#xD;
ProgramVisualiztion builds graph based on data; checks if flows have passed their deadlines&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UyfGMqlTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1n5wqlTEe-NBpoHimppkw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1n5w6lTEe-NBpoHimppkw" value="&quot;.dsl&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1n5xKlTEe-NBpoHimppkw" name="sourceCode" visibility="private" type="_Ui-qkKlTEe-NBpoHimppkw" association="_U3uLgalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1og0alTEe-NBpoHimppkw" name="program" visibility="private" type="_UijMwKlTEe-NBpoHimppkw" association="_U3uykalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1og06lTEe-NBpoHimppkw" name="deadlinesMet" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ifwKlTEe-NBpoHimppkw" name="ProgramVisualization" specification="_UyefIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ifwalTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2ifwqlTEe-NBpoHimppkw" type="_UjAfwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
 this.program = warp.toProgram();&#xD;
 this.sourceCode = program.getSchedule();&#xD;
 this.deadlinesMet = warp.deadlinesMet();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ifw6lTEe-NBpoHimppkw" name="displayVisualization" specification="_UjBt4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ifxKlTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ifxalTEe-NBpoHimppkw" name="createHeader" specification="_UjCU86lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ifxqlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
&#xD;
 header.add(createTitle());&#xD;
 header.add(String.format(&quot;Scheduler Name: %s\n&quot;, program.getSchedulerName()));&#xD;
&#xD;
 /* The following parameters are output based on a special schedule or the fault model */&#xD;
 if (program.getNumFaults() > 0) { // only specify when deterministic fault model is assumed&#xD;
   header.add(String.format(&quot;numFaults: %d\n&quot;, program.getNumFaults()));&#xD;
 }&#xD;
 header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(program.getMinPacketReceptionRate())));&#xD;
 header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(program.getE2e())));&#xD;
 header.add(String.format(&quot;nChannels: %d\n&quot;, program.getNumChannels()));&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ifx6lTEe-NBpoHimppkw" name="createFooter" specification="_UjDjEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ifyKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 String deadlineMsg = null;&#xD;
&#xD;
 if (deadlinesMet) {&#xD;
   deadlineMsg = &quot;All flows meet their deadlines\n&quot;;&#xD;
 } else {&#xD;
   deadlineMsg = &quot;WARNING: NOT all flows meet their deadlines. See deadline analysis report.\n&quot;;&#xD;
 }&#xD;
 footer.add(String.format(&quot;// %s&quot;, deadlineMsg));&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ifyalTEe-NBpoHimppkw" name="createColumnHeader" specification="_UjEKIKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ifyqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2ify6lTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var orderedNodes = program.toWorkLoad().getNodeNamesOrderedAlphabetically();&#xD;
 String[] columnNames = new String[orderedNodes.length + 1];&#xD;
 columnNames[0] = &quot;Time Slot&quot;; // add the Time Slot column header first&#xD;
 /* loop through the node names, adding each to the header */&#xD;
 for (int i = 0; i &lt; orderedNodes.length; i++) {&#xD;
   columnNames[i + 1] = orderedNodes[i];&#xD;
 }&#xD;
 return columnNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ifzKlTEe-NBpoHimppkw" name="createVisualizationData" specification="_UjExMqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ifzalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2ifzqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
   int numRows = sourceCode.getNumRows();&#xD;
   int numColumns = sourceCode.getNumColumns();&#xD;
   visualizationData = new String[numRows][numColumns + 1];&#xD;
&#xD;
   for (int row = 0; row &lt; numRows; row++) {&#xD;
     visualizationData[row][0] = String.format(&quot;%s&quot;, row);&#xD;
     for (int column = 0; column &lt; numColumns; column++) {&#xD;
       visualizationData[row][column + 1] = sourceCode.get(row, column);&#xD;
     }&#xD;
   }&#xD;
 }&#xD;
 return visualizationData;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ifz6lTEe-NBpoHimppkw" name="createTitle" specification="_UjF_UKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2if0KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;WARP program for graph %s\n&quot;, program.getName());&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjBt4KlTEe-NBpoHimppkw" name="displayVisualization" method="_U2ifw6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyefJalTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjCU86lTEe-NBpoHimppkw" name="createHeader" visibility="protected" method="_U2ifxalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyfGMKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjDjEKlTEe-NBpoHimppkw" name="createFooter" visibility="protected" method="_U2ifx6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyfGMalTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjEKIKlTEe-NBpoHimppkw" name="createColumnHeader" visibility="protected" method="_U2ifyalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjEKIalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UjEKIqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjExMqlTEe-NBpoHimppkw" name="createVisualizationData" visibility="protected" method="_U2ifzKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjExM6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UjFYQKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjF_UKlTEe-NBpoHimppkw" name="createTitle" visibility="private" method="_U2ifz6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IZalTEe-NBpoHimppkw">
                  <body>Returns title&#xD;
   * @return returns the title of the graph</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjF_UalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyefIKlTEe-NBpoHimppkw" name="ProgramVisualization" visibility="package" method="_U2ifwKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyefIqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyefI6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyefIalTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyefJKlTEe-NBpoHimppkw" type="_UjAfwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjH0gKlTEe-NBpoHimppkw" name="ReleaseTimeComparator">
              <interfaceRealization xmi:id="_U0cOAKlTEe-NBpoHimppkw" client="_UjH0gKlTEe-NBpoHimppkw" supplier="_UxoxoalTEe-NBpoHimppkw" contract="_UxoxoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2if0alTEe-NBpoHimppkw" name="compare" specification="_U0c1EalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2if0qlTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2if06lTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2if1KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = obj1.releaseTimeComparison(obj2);&#xD;
		if (result == 0) {&#xD;
			// tied for priority, so break tie on release time&#xD;
			result = obj1.priorityComparison(obj2);&#xD;
		}&#xD;
		return result; // 0 => tie on priority and release time&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_U0c1EalTEe-NBpoHimppkw" name="compare" method="_U2if0alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0c1EqlTEe-NBpoHimppkw" name="obj1" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0c1E6lTEe-NBpoHimppkw" name="obj2" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0dcIKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjK30KlTEe-NBpoHimppkw" name="ReleaseTimeQueue">
              <generalization xmi:id="_UjN7IKlTEe-NBpoHimppkw" general="_UjMtAqlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1pH4KlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1pH4alTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2if1alTEe-NBpoHimppkw" name="ReleaseTimeQueue" specification="_UjMF8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2if1qlTEe-NBpoHimppkw" type="_UjK30KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(1, new ReleaseTimeComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2if16lTEe-NBpoHimppkw" name="ReleaseTimeQueue" specification="_UyftQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2if2KlTEe-NBpoHimppkw" name="schedulableObjects" type="_UyMLQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2if2alTEe-NBpoHimppkw" type="_UjK30KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new ReleaseTimeComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjMF8KlTEe-NBpoHimppkw" name="ReleaseTimeQueue" visibility="package" method="_U2if1alTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UjMF8alTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjMtAKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjMtAalTEe-NBpoHimppkw" type="_UjK30KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyftQKlTEe-NBpoHimppkw" name="ReleaseTimeQueue" visibility="package" method="_U2if16lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyftQqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyftQ6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyftQalTEe-NBpoHimppkw" name="schedulableObjects" type="_UyMLQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyftRKlTEe-NBpoHimppkw" type="_UjK30KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjOiMKlTEe-NBpoHimppkw" name="ReliabilityAnalysis">
              <ownedComment xmi:id="_U28IZqlTEe-NBpoHimppkw">
                <body>The {@code ReliabilityAnalysis} class provides methods to analyze and compute the end-to-end reliability&#xD;
of message transmissions in flows for the WARP system. It calculates the number of transmission attempts&#xD;
required per link in a flow to achieve a specified end-to-end reliability, given the minimum packet reception rate.&#xD;
 *&#xD;
&lt;p>&#xD;
The end-to-end reliability for each flow from source to sink is computed iteratively using the following process:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
  &lt;li>The source node of the flow has an initial message reception probability of 1.0 at time zero.&#xD;
      All other nodes have an initial probability of 0.0.&lt;/li>&#xD;
  &lt;li>For each time slot, and for each link (source node to sink node) in the flow, the probability that&#xD;
      the sink node has received the message is updated using:&#xD;
      &lt;br>{@code NewSinkNodeState = (1 - M) * PrevSinkNodeState + M * PrevSourceNodeState}&#xD;
      &lt;br>where {@code M} is the minimum packet reception rate on that link.&lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
This class provides methods to compute the number of transmission attempts required per link to meet the specified&#xD;
end-to-end reliability, either by specifying a desired end-to-end reliability and minimum packet reception rate,&#xD;
or by specifying a fixed number of faults per link.&#xD;
&lt;/p>&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.0</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1pH4qlTEe-NBpoHimppkw" name="e2e" visibility="private" type="_U0aY0KlTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1pH46lTEe-NBpoHimppkw" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1pH5alTEe-NBpoHimppkw" name="minPacketReceptionRate" visibility="private" type="_U0aY0KlTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1pu8KlTEe-NBpoHimppkw" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1pu8qlTEe-NBpoHimppkw" name="numFaults" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1qWAKlTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1qWAqlTEe-NBpoHimppkw" name="numFaultModel" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1qWA6lTEe-NBpoHimppkw" value="false"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jG0KlTEe-NBpoHimppkw" name="ReliabilityAnalysis" specification="_U0eDMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jG0alTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jG0qlTEe-NBpoHimppkw" name="minPacketReceptionRate" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jG06lTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
     this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jG1KlTEe-NBpoHimppkw" name="ReliabilityAnalysis" specification="_UjPwUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jG1alTEe-NBpoHimppkw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2jG1qlTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.numFaults = numFaults;&#xD;
     numFaultModel = true;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jG16lTEe-NBpoHimppkw" name="numTxPerLinkAndTotalTxCost" specification="_UyiJgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jG2KlTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jG2alTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return numFaultModel ? getFixedTxPerLinkAndTotalTxCost(flow) : numTxAttemptsPerLinkAndTotalTxAttempts(flow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jG2qlTEe-NBpoHimppkw" name="verifyReliabilities" specification="_UjQXZKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jG26lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO: Implement this method&#xD;
     return true;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jG3KlTEe-NBpoHimppkw" name="getReliabilities" specification="_UyiwkalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jG3alTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jG3qlTEe-NBpoHimppkw" type="_UjY6QKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>// Retrieve the minimum packet reception rate (M)&#xD;
     double M = minPacketReceptionRate;&#xD;
&#xD;
     // Initialize the ReliabilityTable to store the reliability values over time&#xD;
     ReliabilityTable table = new ReliabilityTable();&#xD;
&#xD;
     // Convert the program to a WorkLoad to get flows and nodes&#xD;
     WorkLoad workLoad = program.toWorkLoad();&#xD;
     ArrayList&lt;String> flowsInOrder = workLoad.getFlowNamesInPriorityOrder();&#xD;
&#xD;
     // Map to store nodes in each flow&#xD;
     Map&lt;String, List&lt;String>> nodesInFlows = new HashMap&lt;>();&#xD;
     for (String flow : flowsInOrder) {&#xD;
         nodesInFlows.put(flow, Arrays.asList(workLoad.getNodesInFlow(flow)));&#xD;
     }&#xD;
&#xD;
     // Initialize the defaultRow with initial reliability values&#xD;
     ReliabilityRow defaultRow = new ReliabilityRow();&#xD;
     // Map to store the starting index of each flow in the defaultRow&#xD;
     Map&lt;String, Integer> flowStartIndexes = new HashMap&lt;>();&#xD;
&#xD;
     // Build the defaultRow and flowStartIndexes&#xD;
     int overallIndex = 0;&#xD;
     for (Map.Entry&lt;String, List&lt;String>> entry : nodesInFlows.entrySet()) {&#xD;
         String flowName = entry.getKey();&#xD;
         List&lt;String> nodesInFlow = entry.getValue();&#xD;
&#xD;
         // The source node starts with reliability 1.0&#xD;
         defaultRow.add(1.0);&#xD;
         flowStartIndexes.put(flowName, overallIndex++);&#xD;
&#xD;
         // For the rest of the nodes in the flow, set initial reliability to 0.0&#xD;
         for (int i = 1; i &lt; nodesInFlow.size(); i++) {&#xD;
             defaultRow.add(0.0);&#xD;
             overallIndex++;&#xD;
         }&#xD;
     }&#xD;
&#xD;
     // Create an instance of WarpDSL to parse instruction parameters&#xD;
     WarpDSL dsl = new WarpDSL();&#xD;
     // Get the schedule from the program&#xD;
     ProgramSchedule schedule = program.getSchedule();&#xD;
&#xD;
     // Get the number of time slots and nodes&#xD;
     int numRows = schedule.getNumRows();&#xD;
     int numColumns = schedule.getNumColumns();&#xD;
&#xD;
     // Iterate over each time slot&#xD;
     for (int timeSlot = 0; timeSlot &lt; numRows; timeSlot++) {&#xD;
         // Get the previous reliability row or use defaultRow if first time slot&#xD;
         ReliabilityRow prevRow = (timeSlot > 0) ? table.get(timeSlot - 1) : defaultRow;&#xD;
         // Clone the previous row to update it for the current time slot&#xD;
         ReliabilityRow currRow = new ReliabilityRow(prevRow);&#xD;
&#xD;
         // Iterate over each node (column) in the schedule&#xD;
         for (int nodeColumn = 0; nodeColumn &lt; numColumns; nodeColumn++) {&#xD;
             // Get the instruction parameters for the instruction at this time slot and node&#xD;
             var parameters = dsl.getInstructionParameters(schedule.get(timeSlot, nodeColumn));&#xD;
&#xD;
             // Iterate over the parameters&#xD;
             for (var parameter : parameters) {&#xD;
                 String instructionName = parameter.getName(); // e.g., &quot;push&quot;, &quot;pull&quot;, &quot;wait&quot;, etc.&#xD;
                 if (instructionName.equals(&quot;push&quot;) || instructionName.equals(&quot;pull&quot;)) {&#xD;
                     String flowName = parameter.getFlow();&#xD;
                     if (!nodesInFlows.containsKey(flowName)) {&#xD;
                         continue; // Skip if the flow is not recognized&#xD;
                     }&#xD;
                     List&lt;String> nodesInFlow = nodesInFlows.get(flowName);&#xD;
&#xD;
                     int flowStartIndex = flowStartIndexes.get(flowName);&#xD;
                     int srcNodeFlowIndex = nodesInFlow.indexOf(parameter.getSrc());&#xD;
                     int snkNodeFlowIndex = nodesInFlow.indexOf(parameter.getSnk());&#xD;
                     if (srcNodeFlowIndex == -1 || snkNodeFlowIndex == -1) {&#xD;
                         continue; // Skip if source or sink node is not found&#xD;
                     }&#xD;
&#xD;
                     int srcNodeIndex = flowStartIndex + srcNodeFlowIndex;&#xD;
                     int snkNodeIndex = flowStartIndex + snkNodeFlowIndex;&#xD;
&#xD;
                     // Get the previous reliability values&#xD;
                     double prevSrcReliability = prevRow.get(srcNodeIndex);&#xD;
                     double prevSnkReliability = prevRow.get(snkNodeIndex);&#xD;
&#xD;
                     // Handle the case when a new packet is injected at the source node&#xD;
                     if (instructionName.equals(&quot;push&quot;) &amp;&amp; srcNodeFlowIndex == 0) {&#xD;
                         // Reset the source node's reliability to 1.0 (new packet injected)&#xD;
                         prevSrcReliability = 1.0;&#xD;
                         currRow.set(srcNodeIndex, 1.0);&#xD;
&#xD;
                         // Reset sink nodes' reliability to 0.0 for this flow (starting new transmission)&#xD;
                         for (int k = 1; k &lt; nodesInFlow.size(); k++) {&#xD;
                             int nodeIndexInRow = flowStartIndex + k;&#xD;
                             currRow.set(nodeIndexInRow, 0.0);&#xD;
                         }&#xD;
                         // Since sink node reliability is reset, set prevSnkReliability to 0.0&#xD;
                         prevSnkReliability = 0.0;&#xD;
                     }&#xD;
&#xD;
                     // Update the sink node's reliability using the formula&#xD;
                     double newSnkReliability = (1 - M) * prevSnkReliability + M * prevSrcReliability;&#xD;
                     currRow.set(snkNodeIndex, newSnkReliability);&#xD;
                 }&#xD;
             }&#xD;
         }&#xD;
         // Add the updated row to the table&#xD;
         table.add(currRow);&#xD;
     }&#xD;
&#xD;
     return table;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt4KlTEe-NBpoHimppkw" name="getFixedTxPerLinkAndTotalTxCost" specification="_UyjXoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt4alTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jt4qlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var nodesInFlow = flow.nodes;&#xD;
     var nNodesInFlow = nodesInFlow.size();&#xD;
     ArrayList&lt;Integer> txArrayList = new ArrayList&lt;>();&#xD;
&#xD;
     // Each node will have at most numFaults + 1 transmissions.&#xD;
     for (int i = 0; i &lt; nNodesInFlow; i++) {&#xD;
         txArrayList.add(numFaults + 1);&#xD;
     }&#xD;
&#xD;
     // Compute the maximum number of transmission attempts&#xD;
     var numEdgesInFlow = nNodesInFlow - 1;&#xD;
     var maxFaultsInFlow = numEdgesInFlow * numFaults;&#xD;
     txArrayList.add(numEdgesInFlow + maxFaultsInFlow);&#xD;
&#xD;
     return txArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt46lTEe-NBpoHimppkw" name="numTxAttemptsPerLinkAndTotalTxAttempts" specification="_Uyj-sKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt5KlTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jt5alTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>// Retrieve the list of nodes in the flow and the total number of nodes&#xD;
     var nodesInFlow = flow.nodes;&#xD;
     var nNodesInFlow = nodesInFlow.size();&#xD;
&#xD;
     // Initialize a list to track the number of transmission attempts (nPushes) for each link in the flow&#xD;
     // The last element will be used to store the total transmission cost&#xD;
     var nPushes = new ArrayList&lt;Integer>(Collections.nCopies(nNodesInFlow + 1, 0));&#xD;
&#xD;
     // Calculate the number of hops (links) in the flow&#xD;
     var nHops = nNodesInFlow - 1;&#xD;
&#xD;
     // Calculate the minimum reliability needed per link to meet the end-to-end reliability requirement&#xD;
     Double minLinkReliabilityNeeded = Math.max(e2e, Math.pow(e2e, (1.0 / (double) nHops)));&#xD;
     // Use Math.max to handle cases where e2e == 1.0, avoiding potential rounding errors&#xD;
&#xD;
     // Initialize the reliability window, which tracks the reliability state of each node over time&#xD;
     var reliabilityWindow = new ReliabilityTable();&#xD;
&#xD;
     // Initialize the first row of the reliability window with 0.0 for all nodes&#xD;
     var newReliabilityRow = new ReliabilityRow(nNodesInFlow, 0.0);&#xD;
     reliabilityWindow.add(newReliabilityRow);&#xD;
&#xD;
     // Set the initial reliability state: the source node has a probability of 1.0 at time zero&#xD;
     ReliabilityRow currentReliabilityRow = new ReliabilityRow(newReliabilityRow);&#xD;
     currentReliabilityRow.set(0, 1.0);  // P(packet at source node) = 1.0&#xD;
&#xD;
     // Initialize the end-to-end reliability state; initially, the sink node has not received the packet&#xD;
     Double e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
&#xD;
     // Iteratively compute the reliability state until the end-to-end reliability requirement is met&#xD;
     while (e2eReliabilityState &lt; e2e) {&#xD;
         // Clone the current reliability row to use as the previous state in this iteration&#xD;
         var prevReliabilityRow = new ReliabilityRow(currentReliabilityRow);&#xD;
&#xD;
         // For each link in the flow, update the reliability state of the sink node&#xD;
         for (int nodeIndex = 0; nodeIndex &lt; (nNodesInFlow - 1); nodeIndex++) {&#xD;
             var flowSrcNodeIndex = nodeIndex;&#xD;
             var flowSnkNodeIndex = nodeIndex + 1;&#xD;
&#xD;
             var prevSrcNodeState = prevReliabilityRow.get(flowSrcNodeIndex);&#xD;
             var prevSnkNodeState = prevReliabilityRow.get(flowSnkNodeIndex);&#xD;
             Double nextSnkState;&#xD;
&#xD;
             // Determine if a transmission (&quot;push&quot;) is needed on this link&#xD;
             // A push is needed if the sink node's reliability is below the minimum required,&#xD;
             // and the source node has a non-zero probability of having the packet&#xD;
             if ((prevSnkNodeState &lt; minLinkReliabilityNeeded) &amp;&amp; prevSrcNodeState > 0) {&#xD;
                 // Update the sink node's reliability state using the message success probability equation&#xD;
                 nextSnkState = ((1.0 - minPacketReceptionRate) * prevSnkNodeState) + (minPacketReceptionRate * prevSrcNodeState);&#xD;
                 // Increment the number of pushes (transmissions) for this link&#xD;
                 nPushes.set(nodeIndex, nPushes.get(nodeIndex) + 1);&#xD;
             } else {&#xD;
                 // If no push is needed, the sink node's reliability state remains the same&#xD;
                 nextSnkState = prevSnkNodeState;&#xD;
             }&#xD;
&#xD;
             // Update the current reliability row with the new sink node state&#xD;
             currentReliabilityRow.set(flowSnkNodeIndex, nextSnkState);&#xD;
&#xD;
             // Ensure the source node's reliability state is carried forward if it has increased&#xD;
             if (currentReliabilityRow.get(flowSrcNodeIndex) &lt; prevReliabilityRow.get(flowSrcNodeIndex)) {&#xD;
                 currentReliabilityRow.set(flowSrcNodeIndex, prevReliabilityRow.get(flowSrcNodeIndex));&#xD;
             }&#xD;
         }&#xD;
&#xD;
         // Update the end-to-end reliability state based on the sink node's reliability&#xD;
         e2eReliabilityState = currentReliabilityRow.get(nNodesInFlow - 1);&#xD;
&#xD;
         // Add the current reliability row to the reliability window&#xD;
         reliabilityWindow.add(new ReliabilityRow(currentReliabilityRow));&#xD;
     }&#xD;
&#xD;
     // The total transmission cost is the number of iterations (time slots) in the reliability window&#xD;
     nPushes.set(nNodesInFlow, reliabilityWindow.size());&#xD;
&#xD;
     return nPushes;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjPwUKlTEe-NBpoHimppkw" name="ReliabilityAnalysis" method="_U2jG1KlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UjQXYalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjQXYqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U28IaKlTEe-NBpoHimppkw">
                  <body>Constructs a {@code ReliabilityAnalysis} object with a specified fixed number of faults per link.&#xD;
     *&#xD;
     * @param numFaults the fixed number of faults allowed per link in the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjQXYKlTEe-NBpoHimppkw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjQXY6lTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjQXZKlTEe-NBpoHimppkw" name="verifyReliabilities" method="_U2jG2qlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IaqlTEe-NBpoHimppkw">
                  <body>Verifies whether the calculated reliabilities meet the specified end-to-end reliability requirements.&#xD;
     *&#xD;
     * @return {@code true} if the reliabilities meet the requirements; {@code false} otherwise</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjQ-cKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyiJgKlTEe-NBpoHimppkw" name="numTxPerLinkAndTotalTxCost" method="_U2jG16lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IaalTEe-NBpoHimppkw">
                  <body>Calculates the number of transmission attempts required per link in the given flow,&#xD;
     * as well as the total transmission cost to meet the specified end-to-end reliability.&#xD;
     * The calculation method depends on whether a fixed number of faults per link is specified.&#xD;
     *&#xD;
     * @param flow the {@code Flow} object representing the sequence of nodes&#xD;
     * @return an {@code ArrayList&lt;Integer>} where each element represents the number of transmission attempts for each link,&#xD;
     *         and the last element represents the total transmission cost for the flow</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyiJgalTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0eqQqlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyiwkalTEe-NBpoHimppkw" name="getReliabilities" method="_U2jG3KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28Ia6lTEe-NBpoHimppkw">
                  <body>Retrieves the reliability table containing the computed reliability values for each node in the flows over time.&#xD;
     *&#xD;
     * @param program the {@code Program} containing the nodes to calculate reliability values for&#xD;
     * @return a {@code ReliabilityTable} representing the reliability values</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyiwkqlTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyiwk6lTEe-NBpoHimppkw" type="_UjY6QKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyjXoKlTEe-NBpoHimppkw" name="getFixedTxPerLinkAndTotalTxCost" visibility="private" method="_U2jt4KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IbKlTEe-NBpoHimppkw">
                  <body>Calculates the number of transmission attempts per link and the total transmission cost for a flow,&#xD;
     * assuming a fixed number of faults per link.&#xD;
     *&#xD;
     * @param flow the {@code Flow} for which the transmission costs are calculated&#xD;
     * @return an {@code ArrayList&lt;Integer>} containing the number of transmission attempts per link,&#xD;
     *         and the total transmission cost as the last element</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyjXoalTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0eqQ6lTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uyj-sKlTEe-NBpoHimppkw" name="numTxAttemptsPerLinkAndTotalTxAttempts" visibility="private" method="_U2jt46lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28IbalTEe-NBpoHimppkw">
                  <body>Calculates the number of transmission attempts required per link in the given flow to meet the specified end-to-end reliability,&#xD;
     * based on the minimum packet reception rate. It uses an iterative process to simulate message propagation through the flow.&#xD;
     *&#xD;
     * @param flow the {@code Flow} being analyzed&#xD;
     * @return an {@code ArrayList&lt;Integer>} containing the number of transmission attempts per link,&#xD;
     *         and the total transmission cost as the last element</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uyj-salTEe-NBpoHimppkw" name="flow" type="_UhMh4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0fRUKlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0eDMKlTEe-NBpoHimppkw" name="ReliabilityAnalysis" method="_U2jG0KlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0eDM6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0eqQKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U28IZ6lTEe-NBpoHimppkw">
                  <body>Constructs a {@code ReliabilityAnalysis} object with the specified end-to-end reliability and minimum packet reception rate.&#xD;
     *&#xD;
     * @param e2e the desired end-to-end reliability (between 0.0 and 1.0)&#xD;
     * @param minPacketReceptionRate the minimum packet reception rate for each link (between 0.0 and 1.0)</body>
                </ownedComment>
                <ownedParameter xmi:id="_U0eDMalTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0eDMqlTEe-NBpoHimppkw" name="minPacketReceptionRate" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0eqQalTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_UjUBwKlTEe-NBpoHimppkw" name="ReliabilityParameters" visibility="package">
              <ownedComment xmi:id="_U28vcKlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_UjVP4KlTEe-NBpoHimppkw" name="minPacketReceptionRate" type="_U0aY0KlTEe-NBpoHimppkw" isReadOnly="true"/>
              <ownedAttribute xmi:id="_UjVP4alTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw" isReadOnly="true"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjV28KlTEe-NBpoHimppkw" name="ReliabilityRow">
              <generalization xmi:id="_Uylz4alTEe-NBpoHimppkw" general="_UjlHgKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1q9EalTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1q9EqlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt5qlTEe-NBpoHimppkw" name="ReliabilityRow" specification="_UjWeAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt56lTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt6KlTEe-NBpoHimppkw" name="ReliabilityRow" specification="_U0f4YKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt6alTEe-NBpoHimppkw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2jt6qlTEe-NBpoHimppkw" name="element" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jt66lTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(numColumns, element);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt7KlTEe-NBpoHimppkw" name="ReliabilityRow" specification="_U0f4ZqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt7alTEe-NBpoHimppkw" name="rowArray" type="_U0aY0KlTEe-NBpoHimppkw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2jt7qlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2jt76lTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(rowArray);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt8KlTEe-NBpoHimppkw" name="ReliabilityRow" specification="_UylM0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt8alTEe-NBpoHimppkw" name="other" type="_UjV28KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jt8qlTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(other.toArray(new Double[0]));&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjWeAKlTEe-NBpoHimppkw" name="ReliabilityRow" method="_U2jt5qlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UjWeAalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjWeAqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjWeA6lTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UylM0KlTEe-NBpoHimppkw" name="ReliabilityRow" visibility="package" method="_U2jt8KlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UylM0qlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UylM06lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UylM0alTEe-NBpoHimppkw" name="other" type="_UjV28KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uylz4KlTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0f4YKlTEe-NBpoHimppkw" name="ReliabilityRow" visibility="package" method="_U2jt6KlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0f4Y6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0f4ZKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0f4YalTEe-NBpoHimppkw" name="numColumns">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0f4YqlTEe-NBpoHimppkw" name="element" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0f4ZalTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0f4ZqlTEe-NBpoHimppkw" name="ReliabilityRow" visibility="package" method="_U2jt7KlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0gfcKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0gfcalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0f4Z6lTEe-NBpoHimppkw" name="rowArray" type="_U0aY0KlTEe-NBpoHimppkw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U0gfc6lTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0gfcqlTEe-NBpoHimppkw" type="_UjV28KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjY6QKlTEe-NBpoHimppkw" name="ReliabilityTable">
              <generalization xmi:id="_Uyma8KlTEe-NBpoHimppkw" general="_UkUuYKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1rkIKlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1rkIalTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt86lTEe-NBpoHimppkw" name="ReliabilityTable" specification="_UjZhUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt9KlTEe-NBpoHimppkw" type="_UjY6QKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt9alTEe-NBpoHimppkw" name="ReliabilityTable" specification="_UjZhVKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt9qlTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2jt96lTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2jt-KlTEe-NBpoHimppkw" type="_UjY6QKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ReliabilityRow emptyRow = new ReliabilityRow();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				emptyRow.add(0.0);&#xD;
			}&#xD;
			this.add(emptyRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjZhUKlTEe-NBpoHimppkw" name="ReliabilityTable" method="_U2jt86lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UjZhUalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjZhUqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjZhU6lTEe-NBpoHimppkw" type="_UjY6QKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjZhVKlTEe-NBpoHimppkw" name="ReliabilityTable" visibility="package" method="_U2jt9alTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UjaIYalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjaIYqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjZhValTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjaIYKlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjaIY6lTEe-NBpoHimppkw" type="_UjY6QKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjavcKlTEe-NBpoHimppkw" name="ReliabilityVisualization">
              <ownedComment xmi:id="_U28vcalTEe-NBpoHimppkw">
                <body>ReliabilityVisualization creates the visualizations for&#xD;
the reliability analysis of the WARP program. &lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to create&#xD;
the visualizations that are requested in Warp. Your solution&#xD;
should support both the file and Java Swing Window (gui) visualizations.&#xD;
 *&#xD;
I recommend using class ProgramVisualization as an example of how to implement&#xD;
this class. Your solution will likely be similar to the code in ProgramVisualization.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UypeQqlTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1rkIqlTEe-NBpoHimppkw" name="SOURCE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1rkI6lTEe-NBpoHimppkw" value="&quot;.ra&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1rkJKlTEe-NBpoHimppkw" name="OBJECT_NAME" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1rkJalTEe-NBpoHimppkw" value="&quot;Reliability Analysis&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1rkJqlTEe-NBpoHimppkw" name="warp" visibility="private" type="_Ukr6wKlTEe-NBpoHimppkw" association="_U3uylKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1sLMKlTEe-NBpoHimppkw" name="ra" visibility="private" type="_UjOiMKlTEe-NBpoHimppkw" association="_U3vZoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2jt-alTEe-NBpoHimppkw" name="ReliabilityVisualization" specification="_Uyo3MalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2jt-qlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2jt-6lTEe-NBpoHimppkw" type="_UjavcKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), warp, SOURCE_SUFFIX);&#xD;
		this.warp = warp;&#xD;
		this.ra = warp.toReliabilityAnalysis();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kU8KlTEe-NBpoHimppkw" name="displayVisualization" specification="_UjbWgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kU8alTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new GuiVisualization(createTitle(), createColumnHeader(), createVisualizationData());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kU8qlTEe-NBpoHimppkw" name="createHeader" specification="_UjckoqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kU86lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
		&#xD;
		header.add(createTitle());&#xD;
		header.add(String.format(&quot;Scheduler Name: %s\n&quot;, warp.getSchedulerName()));&#xD;
		&#xD;
		int numFaults = warp.getNumFaults();&#xD;
		if (numFaults > 0) {&#xD;
			header.add(String.format(&quot;numFaults: %d\n&quot;, numFaults));&#xD;
		}&#xD;
		&#xD;
		header.add(String.format(&quot;M: %s\n&quot;, String.valueOf(warp.getMinPacketReceptionRate())));&#xD;
		header.add(String.format(&quot;E2E: %s\n&quot;, String.valueOf(warp.getE2e())));&#xD;
		header.add(String.format(&quot;nChannels: %d\n&quot;, warp.getNumChannels()));&#xD;
		&#xD;
		return header;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kU9KlTEe-NBpoHimppkw" name="createColumnHeader" specification="_UjdLsqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kU9alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2kU9qlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>WorkLoad workLoad = warp.toWorkload();&#xD;
		ArrayList&lt;String> flowsInOrder = workLoad.getFlowNamesInPriorityOrder();&#xD;
		&#xD;
		ArrayList&lt;String> columnNames = new ArrayList&lt;>();&#xD;
		for (String flow : flowsInOrder) {&#xD;
			for (String node : workLoad.getNodesInFlow(flow)) {&#xD;
				columnNames.add(flow + &quot;:&quot; + node);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return columnNames.toArray(new String[0]);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kU96lTEe-NBpoHimppkw" name="createVisualizationData" specification="_Ujdyw6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kU-KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2kU-alTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>if (visualizationData == null) {&#xD;
			 ReliabilityTable reliabilityTable = ra.getReliabilities(warp.toProgram());&#xD;
			 &#xD;
			 int numRows = reliabilityTable.getNumRows();&#xD;
			 int numColumns = reliabilityTable.getNumColumns();&#xD;
			 visualizationData = new String[numRows][numColumns];&#xD;
			 &#xD;
			 for (int row = 0; row &lt; numRows; row++) {&#xD;
				 for (int column = 0; column &lt; numColumns; column++) {&#xD;
					 visualizationData[row][column] = String.valueOf(reliabilityTable.get(row, column));&#xD;
				 }&#xD;
			 }&#xD;
		}&#xD;
		return visualizationData;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kU-qlTEe-NBpoHimppkw" name="createTitle" specification="_UjfA46lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kU-6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return String.format(&quot;Reliability Analysis for graph %s\n&quot;, warp.getName());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjbWgKlTEe-NBpoHimppkw" name="displayVisualization" method="_U2kU8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UypeQKlTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjckoqlTEe-NBpoHimppkw" name="createHeader" visibility="protected" method="_U2kU8qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UypeQalTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjdLsqlTEe-NBpoHimppkw" name="createColumnHeader" visibility="protected" method="_U2kU9KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjdLs6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UjdLtKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ujdyw6lTEe-NBpoHimppkw" name="createVisualizationData" visibility="protected" method="_U2kU96lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjeZ0KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UjeZ0alTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjfA46lTEe-NBpoHimppkw" name="createTitle" visibility="package" method="_U2kU-qlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28vc6lTEe-NBpoHimppkw">
                  <body>Creates a title for the visualization, including the name of the graph &#xD;
     * being analyzed.&#xD;
     * &#xD;
     * @return A string representing the visualization title</body>
                </ownedComment>
                <ownedParameter xmi:id="_UjfA5KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uyo3MalTEe-NBpoHimppkw" name="ReliabilityVisualization" visibility="package" method="_U2jt-alTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uyo3M6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uyo3NKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U28vcqlTEe-NBpoHimppkw">
                  <body>Constructor for the ReliabilityVisualization class.&#xD;
     * Initializes the visualization with the given WARP interface and sets up &#xD;
     * the reliability analysis data source.&#xD;
     * &#xD;
     * @param warp The WARP interface providing access to program data</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uyo3MqlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyo3NalTEe-NBpoHimppkw" type="_UjavcKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjhdIKlTEe-NBpoHimppkw" name="ReportVisualization">
              <generalization xmi:id="_UyqFWalTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1sLMqlTEe-NBpoHimppkw" name="SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1sLM6lTEe-NBpoHimppkw" value="&quot;.txt&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1sLNKlTEe-NBpoHimppkw" name="content" visibility="private" type="_Ug61EKlTEe-NBpoHimppkw" association="_U3vZpKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1syQalTEe-NBpoHimppkw" name="title" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kU_KlTEe-NBpoHimppkw" name="ReportVisualization" specification="_UypeQ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kU_alTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2kU_qlTEe-NBpoHimppkw" name="warp" type="_UkPO0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2kU_6lTEe-NBpoHimppkw" name="content" type="_Ug61EKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2kVAKlTEe-NBpoHimppkw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2kVAalTEe-NBpoHimppkw" type="_UjhdIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(fm, warp, new String(title + &quot;Report&quot;), SUFFIX);&#xD;
		this.content = content;&#xD;
		this.title = title;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kVAqlTEe-NBpoHimppkw" name="visualization" specification="_UjiEMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kVA6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return createReport();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kVBKlTEe-NBpoHimppkw" name="createReport" specification="_UjirQ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kVBalTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description report;&#xD;
		if (content.size() > 0) {&#xD;
			report = new Description(new String (title + &quot; Report&quot;));&#xD;
			report.addAll(content);&#xD;
		} else {&#xD;
			report = new Description(new String (&quot;No &quot; + title + &quot; to report&quot;));&#xD;
		}&#xD;
		return report;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjiEMKlTEe-NBpoHimppkw" name="visualization" method="_U2kVAqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyqFV6lTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjirQ6lTEe-NBpoHimppkw" name="createReport" visibility="private" method="_U2kVBKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyqFWKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UypeQ6lTEe-NBpoHimppkw" name="ReportVisualization" visibility="package" method="_U2kU_KlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyqFVKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyqFValTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyqFUKlTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyqFUalTEe-NBpoHimppkw" name="warp" type="_UkPO0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyqFUqlTEe-NBpoHimppkw" name="content" type="_Ug61EKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyqFU6lTEe-NBpoHimppkw" name="title">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyqFVqlTEe-NBpoHimppkw" type="_UjhdIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjlHgKlTEe-NBpoHimppkw" name="Row">
              <generalization xmi:id="_U0htlqlTEe-NBpoHimppkw" general="_UxYS8KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1syQ6lTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1syRKlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2kVBqlTEe-NBpoHimppkw" name="Row" specification="_UjmVoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2kVB6lTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8AKlTEe-NBpoHimppkw" name="Row" specification="_U0hGgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8AalTEe-NBpoHimppkw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2k8AqlTEe-NBpoHimppkw" name="element" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2k8A6lTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; numElements; i++) {  &#xD;
			this.add(element); // create the the row initialized with element&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8BKlTEe-NBpoHimppkw" name="Row" specification="_U0htkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8BalTEe-NBpoHimppkw" name="rowArray" type="_Uz5bcalTEe-NBpoHimppkw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2k8BqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2k8B6lTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		for (int i=0; i &lt; rowArray.length; i++) {  &#xD;
			this.add(rowArray[i]); // create the the row initialized with rowArray&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8CKlTEe-NBpoHimppkw" name="Row" specification="_UjnjwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8CalTEe-NBpoHimppkw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2k8CqlTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(numElements);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjmVoKlTEe-NBpoHimppkw" name="Row" method="_U2kVBqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UjmVoalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UjmVoqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjmVo6lTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjnjwKlTEe-NBpoHimppkw" name="Row" visibility="package" method="_U2k8CKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UjnjwqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ujnjw6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UjnjwalTEe-NBpoHimppkw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UjnjxKlTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0hGgKlTEe-NBpoHimppkw" name="Row" visibility="package" method="_U2k8AKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0hGg6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0hGhKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0hGgalTEe-NBpoHimppkw" name="numElements">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0hGgqlTEe-NBpoHimppkw" name="element" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0hGhalTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0htkKlTEe-NBpoHimppkw" name="Row" visibility="package" method="_U2k8BKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0htkqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0htk6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0htkalTEe-NBpoHimppkw" name="rowArray" type="_Uz5bcalTEe-NBpoHimppkw">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U0htlalTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0htlKlTEe-NBpoHimppkw" type="_UjlHgKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UjpY8KlTEe-NBpoHimppkw" name="MockWarpInterface">
              <eAnnotations xmi:id="_UjpY8alTEe-NBpoHimppkw" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_UjqAAKlTEe-NBpoHimppkw" source="codegen">
                  <details xmi:id="_UjqAAalTEe-NBpoHimppkw" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <interfaceRealization xmi:id="_UyqsYKlTEe-NBpoHimppkw" client="_UjpY8KlTEe-NBpoHimppkw" supplier="_Ukr6wKlTEe-NBpoHimppkw" contract="_Ukr6wKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8C6lTEe-NBpoHimppkw" name="getNumChannels" specification="_UjqAAqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8DKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8DalTEe-NBpoHimppkw" name="getNumFaults" specification="_UjqnE6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8DqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8D6lTEe-NBpoHimppkw" name="getName" specification="_UjrOJKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8EKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8EalTEe-NBpoHimppkw" name="getSchedulerName" specification="_Ujr1NKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8EqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8E6lTEe-NBpoHimppkw" name="getNumTransmissions" specification="_UjtDUqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8FKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8FalTEe-NBpoHimppkw" name="getOptimizationFlag" specification="_UjtqY6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8FqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8F6lTEe-NBpoHimppkw" name="getMinPacketReceptionRate" specification="_UjuRc6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8GKlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2k8GalTEe-NBpoHimppkw" name="getE2e" specification="_Uju4gqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2k8GqlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljEKlTEe-NBpoHimppkw" name="toWorkload" specification="_UjwGoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljEalTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljEqlTEe-NBpoHimppkw" name="toProgram" specification="_UjwtsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljE6lTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljFKlTEe-NBpoHimppkw" name="toReliabilityAnalysis" specification="_UjxUwalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljFalTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljFqlTEe-NBpoHimppkw" name="toSimulator" specification="_Ujx70KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljF6lTEe-NBpoHimppkw" type="_UkMykKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljGKlTEe-NBpoHimppkw" name="toLatencyAnalysis" specification="_Ujyi4qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljGalTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljGqlTEe-NBpoHimppkw" name="toChannelAnalysis" specification="_UjzxAqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljG6lTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljHKlTEe-NBpoHimppkw" name="reliabilitiesMet" specification="_Uj1mMqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljHalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljHqlTEe-NBpoHimppkw" name="deadlinesMet" specification="_Uj2NQ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljH6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UjqAAqlTEe-NBpoHimppkw" name="getNumChannels" method="_U2k8C6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjqAA6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjqnE6lTEe-NBpoHimppkw" name="getNumFaults" method="_U2k8DalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjrOIKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjrOJKlTEe-NBpoHimppkw" name="getName" method="_U2k8D6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ujr1MKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ujr1NKlTEe-NBpoHimppkw" name="getSchedulerName" method="_U2k8EalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjscQKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjtDUqlTEe-NBpoHimppkw" name="getNumTransmissions" method="_U2k8E6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjtDU6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjtqY6lTEe-NBpoHimppkw" name="getOptimizationFlag" method="_U2k8FalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UjtqZKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UjuRc6lTEe-NBpoHimppkw" name="getMinPacketReceptionRate" method="_U2k8F6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0iUoalTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uju4gqlTEe-NBpoHimppkw" name="getE2e" method="_U2k8GalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0i7sKlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjwGoKlTEe-NBpoHimppkw" name="toWorkload" method="_U2ljEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyrTcKlTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjwtsKlTEe-NBpoHimppkw" name="toProgram" method="_U2ljEqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyrTcalTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjxUwalTEe-NBpoHimppkw" name="toReliabilityAnalysis" method="_U2ljFKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyrTcqlTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ujx70KlTEe-NBpoHimppkw" name="toSimulator" method="_U2ljFqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyrTc6lTEe-NBpoHimppkw" type="_UkMykKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ujyi4qlTEe-NBpoHimppkw" name="toLatencyAnalysis" method="_U2ljGKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyrTdKlTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UjzxAqlTEe-NBpoHimppkw" name="toChannelAnalysis" method="_U2ljGqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyrTdalTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uj0_IKlTEe-NBpoHimppkw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_Uj1mMqlTEe-NBpoHimppkw" name="reliabilitiesMet" method="_U2ljHKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uj1mM6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uj2NQ6lTEe-NBpoHimppkw" name="deadlinesMet" method="_U2ljHqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uj20UKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uj5QkKlTEe-NBpoHimppkw" name="SchedulableObjectQueue">
              <generalization xmi:id="_Uj7s0KlTEe-NBpoHimppkw" general="_UjMtAqlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1syRalTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1tZUKlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljIKlTEe-NBpoHimppkw" name="SchedulableObjectQueue" specification="_U0jiwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljIalTEe-NBpoHimppkw" name="comparitor" type="_UxoxoalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2ljIqlTEe-NBpoHimppkw" type="_Uj5QkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(1, comparitor);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2ljI6lTEe-NBpoHimppkw" name="SchedulableObjectQueue" specification="_U0kJ0alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2ljJKlTEe-NBpoHimppkw" name="comparitor" type="_UxoxoalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2ljJalTEe-NBpoHimppkw" name="schedulableObjects" type="_UyMLQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2ljJqlTEe-NBpoHimppkw" type="_Uj5QkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(comparitor);&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_U0jiwKlTEe-NBpoHimppkw" name="SchedulableObjectQueue" visibility="package" method="_U2ljIKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0jiwqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0jiw6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0jiwalTEe-NBpoHimppkw" name="comparitor" type="_UxoxoalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0jixKlTEe-NBpoHimppkw" type="_Uj5QkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0kJ0alTEe-NBpoHimppkw" name="SchedulableObjectQueue" visibility="package" method="_U2ljI6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0kJ1KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0kJ1alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0kJ0qlTEe-NBpoHimppkw" name="comparitor" type="_UxoxoalTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0kJ06lTEe-NBpoHimppkw" name="schedulableObjects" type="_UyMLQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0kw4KlTEe-NBpoHimppkw" type="_Uj5QkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uj868KlTEe-NBpoHimppkw" name="Schedule" isAbstract="true">
              <ownedComment xmi:id="_U28vdKlTEe-NBpoHimppkw">
                <body>Schedule builds a non-preemptive, priority schedule &#xD;
for the Partially Ordered Set (Poset) using numChannels. &#xD;
It ensures, precedence constraints are preserved, and &#xD;
reports deadline misses.&#xD;
&#xD;
@author sgoddard2&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1tZUalTEe-NBpoHimppkw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1tZUqlTEe-NBpoHimppkw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1tZU6lTEe-NBpoHimppkw" name="schedulable" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1tZValTEe-NBpoHimppkw" name="numChannels" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1uAYKlTEe-NBpoHimppkw" name="fakeTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1uAYalTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1uAY6lTEe-NBpoHimppkw" name="endScheduleTime" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1uAZalTEe-NBpoHimppkw" name="schedule" visibility="protected" type="_UkJIMKlTEe-NBpoHimppkw" association="_U3wAsalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1uncKlTEe-NBpoHimppkw" name="poset" visibility="protected" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3wAtKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKIKlTEe-NBpoHimppkw" name="Schedule" specification="_UyshkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mKIalTEe-NBpoHimppkw" name="poset" type="_UiPqwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mKIqlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mKI6lTEe-NBpoHimppkw" type="_Uj868KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.poset = poset;&#xD;
		this.numChannels = numChannels;&#xD;
		var maxPhase = poset.getMaxPhase();&#xD;
		endScheduleTime = poset.getHyperPeriod();&#xD;
		if (maxPhase > 0) {&#xD;
			/* need to schedule longer to cover start-up period */&#xD;
			endScheduleTime = maxPhase + 2*endScheduleTime ;&#xD;
		}&#xD;
		schedule = new ScheduleTable(numChannels+1,endScheduleTime);&#xD;
		schedulable = true;&#xD;
		buildSchedule();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKLqlTEe-NBpoHimppkw" name="getSchedule" specification="_UkBMYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mKL6lTEe-NBpoHimppkw" type="_UkJIMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return schedule;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKMKlTEe-NBpoHimppkw" name="buildSchedule" specification="_UkBMYalTEe-NBpoHimppkw">
                <language>java</language>
                <body>var next = poset.getNextActivation();&#xD;
		while (next != null) {&#xD;
			/* Add next to the schedule if max of its release time &#xD;
			 * and end time is less than the endScheduleTime.&#xD;
			 * Otherwise, its releaseTime is >= endScheduleTime&#xD;
			 * or endTime >= currentTime, which means can't&#xD;
			 * schedule at this time.&#xD;
			 */&#xD;
			if (!addToSchedule(next)) {&#xD;
				schedulable = false;&#xD;
				reportNotSchedulable(next);&#xD;
				/* Record unschedulable element */&#xD;
				fakeSchedulingToTestRest(next);&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
			} else {&#xD;
				/* update the next release time and add it back into&#xD;
				 * the priority queue&#xD;
				 */&#xD;
				next.setNextReleaseTime(next.getEndTime());&#xD;
				if (next.getReleaseTime() &lt; endScheduleTime) {&#xD;
					poset.addActivation(next);&#xD;
				}&#xD;
&#xD;
			}&#xD;
			next = poset.getNextActivation();&#xD;
		}&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKMalTEe-NBpoHimppkw" name="toProgram" specification="_UkBMYqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mKMqlTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var nodeNames = poset.getNodesNamesOrderedAlphabetically();&#xD;
		var numNodes = nodeNames.length;&#xD;
		var program = new ProgramSchedule(endScheduleTime,numNodes);&#xD;
		CodeFragment codeFragment = null;&#xD;
		var duration = 0; // default duration for SLEEP;&#xD;
		String name = null;&#xD;
		var startTime = 0;&#xD;
		var endTime = 0;&#xD;
		HashMap&lt;String, Integer> nodeIndexMap = new HashMap&lt;>();&#xD;
		&#xD;
		if (!schedulable) {&#xD;
			/* not Schedulable, so we will not create code */&#xD;
			return program; // return empty program&#xD;
		}&#xD;
		&#xD;
		/* build the nodeIndexMap by putting nodes in alphabetic&#xD;
		 * order and then hashing its name to its rank&#xD;
		 */&#xD;
		for (int i = 0; i &lt; numNodes; i++) {&#xD;
			nodeIndexMap.put(nodeNames[i], i);&#xD;
		}&#xD;
		&#xD;
		for (int channel = 0; channel &lt; numChannels; channel++) {&#xD;
			for (int time = 0; time &lt; endScheduleTime; time++) {&#xD;
				var entry = schedule.get(channel,time);&#xD;
				if (entry == null) {&#xD;
					/* no entry here, so instruction will be SLEEP instruction */&#xD;
					codeFragment = new CodeFragment();&#xD;
					startTime = time;&#xD;
					endTime = time;&#xD;
					name = &quot;Empty&quot;;&#xD;
				} else {&#xD;
					/* create the codeFragment for this activation entry */&#xD;
					codeFragment = new CodeFragment(entry.getDelta(),entry.getEdges(),&#xD;
							entry.getCoordinators(),channel);&#xD;
					startTime = entry.getStartTime();&#xD;
					endTime = entry.getEndTime();&#xD;
					name = entry.getName();&#xD;
					duration =  endTime - startTime + 1;&#xD;
					if (duration > codeFragment.size()) {&#xD;
						/* for combination fragments, we can sometimes generate&#xD;
						 * more efficient code than originally thought. So,&#xD;
						 * update schedule by replacing the entry with null&#xD;
						 * and update the activation with the the new end time.&#xD;
						 */&#xD;
						for (int k = 0; k &lt; (duration - codeFragment.size()); k++) {&#xD;
							schedule.set(channel,endTime-k,null);&#xD;
						}&#xD;
						endTime = codeFragment.size() + startTime - 1;&#xD;
						entry.setEndTime(endTime);&#xD;
						&#xD;
					}&#xD;
				}&#xD;
				duration =  endTime - startTime + 1;&#xD;
				/* duration can be &lt; fragment size  when two activations &#xD;
				 * were combined but they had different delta values. &#xD;
				 * The larger was used, but we should make sure duration isn't&#xD;
				 * > size, else we may overwrite something. Just report for now.&#xD;
				 */&#xD;
				if (duration > codeFragment.size()) {&#xD;
					System.err.printf(&quot;activation %s: duration = %d, codeSize = %d&quot;, &#xD;
							name,duration, codeFragment.size());&#xD;
				} else if (time != startTime ){&#xD;
					System.err.printf(&quot;activation %s: time = %d, startTime = %d&quot;, &#xD;
							name, time, startTime);&#xD;
&#xD;
				} else {&#xD;
					var instructions = codeFragment.instructions();&#xD;
					var coordinator = codeFragment.getCoordinator();&#xD;
&#xD;
					if (coordinator != null) {&#xD;
						/* coordinator is null the entry is sleep,&#xD;
						 * which happens when the schedule entry was null.&#xD;
						 * We skip this entry and then replace nulls in the&#xD;
						 * program with sleep instructions at the end&#xD;
						 */&#xD;
						for (int i = 0; i &lt; duration; i++) {&#xD;
							var instr = instructions.get(i);&#xD;
							/* enter the instruciton in the program */&#xD;
							var row = time+i;&#xD;
							var column = nodeIndexMap.get(coordinator);		&#xD;
							program.set(row,column,instr);&#xD;
&#xD;
							/* get the listeners from the instruction &#xD;
							 * and insert the wait() instructions into&#xD;
							 * the program for each listener&#xD;
							 * */&#xD;
							var dsl = new WarpDSL();&#xD;
							var instructionParametersArray = dsl.getInstructionParameters(instr); &#xD;
							for (InstructionParameters fragment: instructionParametersArray) {&#xD;
								String listener = fragment.getListener();&#xD;
								if(!listener.equals(UNKNOWN)) {&#xD;
									/* need to add a wait instruction for node listener&#xD;
									 * wait(#channel)&#xD;
									 * at time,listener location of program table&#xD;
									 */&#xD;
									program.set(time+i,nodeIndexMap.get(listener),codeFragment.wait(channel));&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					time += duration-1;&#xD;
				}&#xD;
&#xD;
			}&#xD;
		}&#xD;
		replaceNullWithSleep(program);&#xD;
		return program;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKM6lTEe-NBpoHimppkw" name="replaceNullWithSleep" specification="_UytIpalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mKNKlTEe-NBpoHimppkw" name="program" type="_Ui-qkKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var rows = program.getNumRows();&#xD;
		var columns = program.getNumColumns();&#xD;
&#xD;
		for (int i = 0; i &lt; rows; i++) {&#xD;
			for (int j = 0; j &lt; columns; j++) {&#xD;
				var entry = program.get(i,j);&#xD;
				if (entry == null) {&#xD;
					program.set(i, j, CodeFragment.sleep());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKNalTEe-NBpoHimppkw" name="fakeSchedulingToTestRest" specification="_UytvsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mKNqlTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var pred = next.getPredecessor();&#xD;
		var startTime = fakeTime;&#xD;
		var channel = numChannels; // use last channel&#xD;
		if (pred != null) {&#xD;
			/* remove pred end time */&#xD;
			pred.pollEndTimes(); &#xD;
		} &#xD;
		next.setStartTime(next.getReleaseTime());&#xD;
		var duration = next.getExecutionDuration();&#xD;
		fakeTime = startTime + duration - 1;&#xD;
		if (fakeTime >= endScheduleTime) {&#xD;
			System.err.print(&quot;NOT SCHEDULABLE: CAN'T STORE ANY MORE FAKE ENTRIES&quot;);&#xD;
			print();&#xD;
		}&#xD;
		next.setEndTime(next.getReleaseTime()+next.getDeadline()-next.getPhase());&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endScheduleTime); &#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		for (int i = startTime; i &lt;= fakeTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		fakeTime++;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKN6lTEe-NBpoHimppkw" name="getChannelAndSetStartTime" specification="_UytvsqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mKOKlTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mKOalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var time = schedulableObject.getReleaseTime();&#xD;
		var channel = numChannels; // default is no channel available&#xD;
		var endTime = endScheduleTime; // duration of the schedule&#xD;
		schedulableObject.setStartTime(endTime);&#xD;
		schedulableObject.setEndTime(endTime);&#xD;
		/* Create a flag indicating it might be possible to combine&#xD;
		 * to partitions. This flag will be used to create a channel&#xD;
		 * affinity, in case scheduler wants to combine to partitions.&#xD;
		 */&#xD;
		var pred = schedulableObject.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			/* peek at the head of the endTimes for pred */&#xD;
			var predEndTime = pred.peekEndTimes();&#xD;
			if (predEndTime == null) {&#xD;
				return numChannels; // return indicates no channel/time&#xD;
			} else if (predEndTime >= time) {&#xD;
				/* can't schedule here; need to look later */&#xD;
				time = predEndTime+1;&#xD;
			} &#xD;
		}&#xD;
		var scheduleLocation = findChannelAndTime(time,schedulableObject );&#xD;
		channel = scheduleLocation.getChannel();&#xD;
		time = scheduleLocation.getTime();&#xD;
&#xD;
		if (channel != numChannels &amp;&amp; time &lt; endScheduleTime) {&#xD;
			/* Found a channel with no conflicts.&#xD;
			 * Set the object's start time to the that&#xD;
			 * time.&#xD;
			 */&#xD;
			schedulableObject.setStartTime(time);&#xD;
&#xD;
		}&#xD;
		return channel;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxMKlTEe-NBpoHimppkw" name="findChannelAndTime" specification="_UytvtalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxMalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxMqlTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxM6lTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var channel = numChannels; // default is no channel available &#xD;
		var duration = schedulableObject.getExecutionDuration();&#xD;
		&#xD;
		while (time &lt; endScheduleTime &amp;&amp; conflictsExist(schedulableObject, time, duration )) {&#xD;
			time ++; //+= duration+1;&#xD;
		}&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* no conflict time available */&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		} &#xD;
		&#xD;
		/* can schedule at current value of time, so find the best channel.&#xD;
		 * Bias toward and empty channel at near lowest end of spectrum */&#xD;
		for (int i = numChannels-1; i >= 0 ; i--) {&#xD;
			/* Start at numChannels and work down to 0&#xD;
			 * checking for conflicts and finding an&#xD;
			 * empty slot at the same time. This will&#xD;
			 * result in the lowest possible channel&#xD;
			 * being used if their are no conflicts&#xD;
			 * with any channel entries.&#xD;
			 * &#xD;
			 * This version combines entries as soon as.&#xD;
			 * possible, without looking for other, low-channel&#xD;
			 * combinations.&#xD;
			 */&#xD;
			// var entry = schedule.get(i,time);&#xD;
			if (time > 0 &amp;&amp; schedulableObject.getReleaseTime() &lt; time) {&#xD;
				var priorEntry = schedule.get(i, time-1);&#xD;
				if (priorEntry != null) {&#xD;
					var combinedDuration = priorEntry.getCombinedExecutionDuration(schedulableObject);&#xD;
					if (priorEntry.canCombine(schedulableObject) &amp;&amp; &#xD;
							noOtherChannelConflicts(i,schedulableObject, time-1) &amp;&amp;&#xD;
							isAvailable(schedulableObject,i,priorEntry.getStartTime(),combinedDuration)) {&#xD;
						channel = i;&#xD;
						time = priorEntry.getStartTime();&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			if (isAvailable(schedulableObject, i, time, duration)) {&#xD;
				channel = i;&#xD;
			}&#xD;
&#xD;
		}&#xD;
		/* no time and channel found in interval [time, time+duration]&#xD;
		 * so, advance time and check again&#xD;
		 */&#xD;
		if (channel == numChannels) {&#xD;
			return continueSearch(time,schedulableObject);&#xD;
		} else {&#xD;
			return new ScheduleLocation(channel, time);	&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxNKlTEe-NBpoHimppkw" name="continueSearch" specification="_UyuWwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxNalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxNqlTEe-NBpoHimppkw" name="activation" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxN6lTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return findChannelAndTime(time+1,activation);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxOKlTEe-NBpoHimppkw" name="noOtherChannelConflicts" specification="_UyuWxKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxOalTEe-NBpoHimppkw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxOqlTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxO6lTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxPKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
			var entry = schedule.get(channel,time);&#xD;
&#xD;
			if (entry != null &amp;&amp; schedulableObject != null &amp;&amp; channel != exceptedChannel) {&#xD;
				if (entry.conflictExists(schedulableObject)) {&#xD;
					result = false;&#xD;
					return result;&#xD;
				}&#xD;
			} &#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxPalTEe-NBpoHimppkw" name="conflictsExist" specification="_UyuWyalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxPqlTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxP6lTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxQKlTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxQalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
&#xD;
		if (time+duration >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = true;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,i);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.conflictExists(obj)) {&#xD;
							result = true;&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxQqlTEe-NBpoHimppkw" name="freeOfCoordinatorConflicts" specification="_Uyu90qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxQ6lTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxRKlTEe-NBpoHimppkw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxRalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxRqlTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxR6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = true;&#xD;
&#xD;
		if (time+(duration-1) >= endScheduleTime) {&#xD;
			/* not enough time left in the schedule,&#xD;
			 * so return false &#xD;
			 */&#xD;
			return false;&#xD;
		}&#xD;
		if (duration &lt;= 0) {&#xD;
			result  = false;&#xD;
		} else {&#xD;
			for (Integer i = time; i &lt; time+duration; i++ ) {&#xD;
				for (Integer channel = 0; channel &lt; numChannels ; channel++) {&#xD;
					var entry = schedule.get(channel,time);&#xD;
					if (entry != null &amp;&amp; obj != null) {&#xD;
						if (entry.canCombine(obj) &amp;&amp; channel != requestedChannel) {&#xD;
							result = false; // same coordinator is scheduled&#xD;
							return result;&#xD;
						}&#xD;
					} &#xD;
				}&#xD;
			}	&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxSKlTEe-NBpoHimppkw" name="isAvailable" specification="_Uyu92KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxSalTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxSqlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxS6lTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxTKlTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxTalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = true;&#xD;
		&#xD;
		if (conflictsExist(a1,start,duration)) {&#xD;
			return false;&#xD;
		}&#xD;
		for (Integer j = start; j &lt; start+duration; j++ ) {&#xD;
			var currentEntry = schedule.get(channel,j);&#xD;
			if (currentEntry != null) {&#xD;
				if (currentEntry.canCombine(a1)) {&#xD;
					/* no conflict with this entry, and can&#xD;
					 * combine so check for combined entry time&#xD;
					 *  to see if we can combine activations&#xD;
					 */&#xD;
					var combinedDuration = currentEntry.getCombinedExecutionDuration(a1);&#xD;
					var combinedEntry = new CombinedActivation(currentEntry,a1);&#xD;
					var searchTime = currentEntry.getEndTime()+1;&#xD;
					var searchLength = combinedDuration - (duration-(j-start));&#xD;
					return isAvailable(combinedEntry, channel, searchTime, searchLength);&#xD;
				} else {&#xD;
					available = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (available) {&#xD;
			available = freeOfCoordinatorConflicts(a1, channel, start, duration);&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxTqlTEe-NBpoHimppkw" name="isAvailable" specification="_Uyvk4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxT6lTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxUKlTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxUalTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxUqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var available = false;&#xD;
		&#xD;
		for (Integer channel = 0; channel &lt; numChannels; channel++) {&#xD;
			if (isAvailable(a1,channel,start,duration)) {&#xD;
			available = true;&#xD;
			break;&#xD;
			}&#xD;
		}&#xD;
		return available;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxU6lTEe-NBpoHimppkw" name="timeRemaining" specification="_UkDBkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxVKlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxValTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxVqlTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2mxV6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = duration;&#xD;
&#xD;
		var row = schedule.get(channel);&#xD;
		for (Integer i = start; i &lt; start+duration; i++, result-- ) {&#xD;
			if (row.get(i) != null) {&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mxWKlTEe-NBpoHimppkw" name="canCombineEntriesInPlace" specification="_Uyvk5alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2mxWalTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxWqlTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2mxW6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (a1 == null || a2 == null) {&#xD;
			return false;&#xD;
		}&#xD;
		var minStartTime = Math.min(a1.getStartTime(), a2.getStartTime()); &#xD;
		var maxEndTime = Math.max(a1.getEndTime(), a2.getEndTime()); &#xD;
		&#xD;
		if (a2.canCombine(a1)) {&#xD;
			 var combinedDuration = a2.getCombinedExecutionDuration(a1);&#xD;
			 var newEndTime = minStartTime + combinedDuration - 1;&#xD;
			 if (newEndTime &lt;= maxEndTime) {&#xD;
				result = true;&#xD;
			 }&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYQKlTEe-NBpoHimppkw" name="combinedEntriesInPlace" specification="_Uyvk6alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2nYQalTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2nYQqlTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2nYQ6lTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2nYRKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var result = false;&#xD;
		if (canCombineEntriesInPlace(a1,a2)) {&#xD;
			var entry = new CombinedActivation(a1, a2);&#xD;
			var startTime = entry.getStartTime();&#xD;
			var endTime = entry.getEndTime();&#xD;
			for (int i = startTime; i &lt;= endTime; i++) {&#xD;
				/* Add this object to the schedule for the&#xD;
				 * from startTime to endTime.&#xD;
				 */&#xD;
				schedule.set(channel, i, entry);&#xD;
			}&#xD;
			result = true;&#xD;
		}&#xD;
		return result;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYRalTEe-NBpoHimppkw" name="addToSchedule" specification="_UywL86lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2nYRqlTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2nYR6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>var channel = getChannelAndSetStartTime(next);&#xD;
		if (channel == numChannels) {&#xD;
			return false;&#xD;
		}&#xD;
		/* found a time and channel  that are valid */&#xD;
		Activation currentEntry = null;	&#xD;
		var combineTime = endScheduleTime;&#xD;
		var startTime = next.getStartTime(); // set by getChannel()&#xD;
		var duration = next.getExecutionDuration();	&#xD;
		var endTime = startTime + duration - 1;&#xD;
		/* Check the schedule to see if we need to &#xD;
		 * combine next with a higher priority entry &#xD;
		 * in the schedule during its execution&#xD;
		 */&#xD;
		for (int i = startTime; i &lt; startTime + duration; i++) {&#xD;
			currentEntry = schedule.get(channel,i);&#xD;
			if (currentEntry != null &amp;&amp; next.canCombine(currentEntry)) {&#xD;
				/* found an entry to combine, record the time,&#xD;
				 * update the combined duration and new&#xD;
				 * endTime, then exit the loop&#xD;
				 */&#xD;
				/* need to check if combined time is available or&#xD;
				 * if we have to combine yet another entry &#xD;
				 */&#xD;
				 var endCurrentEntry = currentEntry.getEndTime();&#xD;
				 var combinedDuration = next.getCombinedExecutionDuration(currentEntry);&#xD;
				 var newEndTime = startTime + combinedDuration - 1;&#xD;
				 /* need to check to make sure there are no conflicts on other &#xD;
				  * channels for this new interval&#xD;
				  */&#xD;
				 var available = isAvailable(next, channel, startTime, combinedDuration);&#xD;
				 if (available) {	 &#xD;
					 var additionalTimeNeeded = newEndTime - endCurrentEntry;&#xD;
					 if (additionalTimeNeeded > 0) {&#xD;
						 /* see if we can combine the two existing adjacent entries&#xD;
						  * in place. If so, then try to recursively schedule next&#xD;
						  */&#xD;
						 var additionalCombine = schedule.get(channel,endCurrentEntry+1);&#xD;
						 if (additionalCombine != null) {&#xD;
							 if (!combinedEntriesInPlace(currentEntry,additionalCombine,channel)) {&#xD;
								 return false;&#xD;
							 }&#xD;
							 addToSchedule(next);&#xD;
							 return true;&#xD;
						 }&#xD;
					 }&#xD;
					 combineTime = i;&#xD;
					 duration = next.getCombinedExecutionDuration(currentEntry);&#xD;
					 endTime = startTime + duration - 1;&#xD;
					 break;&#xD;
				 }&#xD;
			}&#xD;
		}&#xD;
		next.setEndTime(endTime);&#xD;
		var responseTime = endTime - next.getReleaseTime();&#xD;
		if (responseTime > next.getDeadline()) {&#xD;
			return false; // unable to schedule this entry&#xD;
		}&#xD;
		/* Add the endTime to the elements endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		next.addToEndTimes(endTime); &#xD;
		/* remove predecessor end time that matches this start time */&#xD;
		var pred = next.getPredecessor();&#xD;
		if (pred != null) {&#xD;
			pred.pollEndTimes(); &#xD;
		}&#xD;
		/* Create a new entry, based on next, to be entered&#xD;
		 * into the scheduling tale&#xD;
		 */&#xD;
		var entry = new Activation(next, startTime);&#xD;
		if (combineTime &lt; endScheduleTime) {&#xD;
			/* change entry to point to combinedActivation&#xD;
			 * and set startTime to the beginning of the &#xD;
			 * combined entries */&#xD;
			var combinedActivation = new CombinedActivation(currentEntry, entry);&#xD;
			entry = combinedActivation;&#xD;
			startTime = entry.getStartTime();&#xD;
			duration = entry.getExecutionDuration();&#xD;
			endTime = startTime + duration - 1;&#xD;
			entry.setEndTime(endTime);&#xD;
			next.setEndTime(endTime);&#xD;
		}&#xD;
		for (int i = startTime; i &lt;= endTime; i++) {&#xD;
			/* Add this object to the schedule for the&#xD;
			 * from startTime to endTime.&#xD;
			 */&#xD;
			schedule.set(channel, i, entry);&#xD;
		}&#xD;
		return true;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYSKlTEe-NBpoHimppkw" name="reportNotSchedulable" specification="_UywL9qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2nYSalTEe-NBpoHimppkw" name="object" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>object.print(&quot;This entry is not Schedulable:&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYSqlTEe-NBpoHimppkw" name="printVerbose" specification="_UkDooKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>System.out.println(&quot;\nSchedule:&quot;);&#xD;
		var endSchedule = schedule.get(0).size();&#xD;
		for (int i = 0; i &lt; numChannels; i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d&quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			for (int j = 0; j &lt; endSchedule; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName)) {&#xD;
						name = entryName;&#xD;
						entry.print(&quot;Time &quot; + j +&quot;:&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYS6lTEe-NBpoHimppkw" name="print" specification="_UkDooalTEe-NBpoHimppkw">
                <language>java</language>
                <body>System.out.printf(&quot;\nSchedule (length is %d):\n&quot;, endScheduleTime);&#xD;
		for (int i = 0; i &lt; schedule.size(); i++) {&#xD;
			System.out.printf(&quot;\nChannel: %d: &quot;,i);&#xD;
			var name = UNKNOWN;&#xD;
			var startTime = -1;&#xD;
			for (int j = 0; j &lt; endScheduleTime; j++) {&#xD;
				var entry = schedule.get(i,j);&#xD;
				if (entry != null) {&#xD;
					var entryName = entry.getName();&#xD;
					if (!name.equals(entryName) || startTime != entry.getStartTime()) {&#xD;
						/* only print out unique entries (not duplicates in the interval */&#xD;
						name = entryName;&#xD;
						startTime = entry.getStartTime();&#xD;
						System.out.printf(&quot;%s[%d,%d] &quot;, &#xD;
								name, entry.getStartTime(),entry.getEndTime());&#xD;
					} &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		/* report the number of Activations not schedulable, if any */&#xD;
		ArrayList&lt;Activation> notSchedulable = schedule.get(numChannels);&#xD;
		var numNotSchedulable = 0; 	&#xD;
		var name = UNKNOWN;&#xD;
		var lastStartTime = -1;&#xD;
		for (int i = 0; i &lt; endScheduleTime; i++) {&#xD;
			var entry = notSchedulable.get(i);&#xD;
			if (entry != null) {&#xD;
				var entryName = entry.getName();&#xD;
				if (!name.equals(entryName) || (name.equals(entryName) &amp;&amp; lastStartTime != entry.getStartTime())) {&#xD;
					name = entryName;&#xD;
					lastStartTime = entry.getStartTime();&#xD;
					numNotSchedulable++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		if (numNotSchedulable > 0 ) {&#xD;
			System.out.printf(&quot;\n%d Activations were not schedulable\n&quot;, numNotSchedulable);&#xD;
		}&#xD;
		System.out.println();&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkBMYKlTEe-NBpoHimppkw" name="getSchedule" method="_U2mKLqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28vd6lTEe-NBpoHimppkw">
                  <body>@return the schedule</body>
                </ownedComment>
                <ownedParameter xmi:id="_UytIo6lTEe-NBpoHimppkw" type="_UkJIMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkBMYalTEe-NBpoHimppkw" name="buildSchedule" visibility="private" method="_U2mKMKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UkBMYqlTEe-NBpoHimppkw" name="toProgram" method="_U2mKMalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UytIpKlTEe-NBpoHimppkw" type="_Ui-qkKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkDBkKlTEe-NBpoHimppkw" name="timeRemaining" visibility="protected" method="_U2mxU6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28vfalTEe-NBpoHimppkw">
                  <body>timeRemaining returns duration minus the number of vacant slots found. &#xD;
	 * &#xD;
	 * @return duration-vacantSlots</body>
                </ownedComment>
                <ownedParameter xmi:id="_UkDBkalTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkDBkqlTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkDBk6lTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkDBlKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkDooKlTEe-NBpoHimppkw" name="printVerbose" method="_U2nYSqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UkDooalTEe-NBpoHimppkw" name="print" method="_U2nYS6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UyshkKlTEe-NBpoHimppkw" name="Schedule" visibility="package" method="_U2mKIKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UytIoKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UytIoalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyshkalTEe-NBpoHimppkw" name="poset" type="_UiPqwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyshkqlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UytIoqlTEe-NBpoHimppkw" type="_Uj868KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UytIpalTEe-NBpoHimppkw" name="replaceNullWithSleep" visibility="private" method="_U2mKM6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28veKlTEe-NBpoHimppkw">
                  <body>Replace all null entries in program with sleep instructions&#xD;
	 * &#xD;
	 * @param program</body>
                </ownedComment>
                <ownedParameter xmi:id="_UytIpqlTEe-NBpoHimppkw" name="program" type="_Ui-qkKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UytvsKlTEe-NBpoHimppkw" name="fakeSchedulingToTestRest" visibility="private" method="_U2mKNalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UytvsalTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UytvsqlTEe-NBpoHimppkw" name="getChannelAndSetStartTime" visibility="protected" method="_U2mKN6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28vealTEe-NBpoHimppkw">
                  <body>getChannel checks for conflicts and if none, returns a free&#xD;
	 * channel. &lt;br>&#xD;
	 * If return value == numChannels, then no channel can be assigned&#xD;
	 * due to either conflicts or no availability.&#xD;
	 * @param schedulableObject&#xD;
	 * &#xD;
	 * @return available channel or numChannels when none available</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uytvs6lTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UytvtKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UytvtalTEe-NBpoHimppkw" name="findChannelAndTime" visibility="protected" method="_U2mxMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UytvtqlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uytvt6lTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UytvuKlTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyuWwKlTEe-NBpoHimppkw" name="continueSearch" visibility="protected" method="_U2mxNKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28veqlTEe-NBpoHimppkw">
                  <body>continueSearch continues the search for a channel time.&lt;br>&#xD;
	 * The default implementation continues at time+1 by calling&#xD;
	 * findChannelAndTime(time+1,schedulableObject). This method&#xD;
	 * can be overridden to provide preemptive searches or any&#xD;
	 * other method of continuing the search.&#xD;
	 * &#xD;
	 * @param time&#xD;
	 * @param activation&#xD;
	 * @return ScheduleLocation</body>
                </ownedComment>
                <ownedParameter xmi:id="_UyuWwalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyuWwqlTEe-NBpoHimppkw" name="activation" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyuWw6lTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyuWxKlTEe-NBpoHimppkw" name="noOtherChannelConflicts" visibility="protected" method="_U2mxOKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyuWxalTEe-NBpoHimppkw" name="exceptedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyuWxqlTEe-NBpoHimppkw" name="schedulableObject" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyuWx6lTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UyuWyKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UyuWyalTEe-NBpoHimppkw" name="conflictsExist" visibility="protected" method="_U2mxPalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UyuWyqlTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyuWy6lTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu90KlTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu90alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uyu90qlTEe-NBpoHimppkw" name="freeOfCoordinatorConflicts" visibility="protected" method="_U2mxQqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uyu906lTEe-NBpoHimppkw" name="obj" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyu91KlTEe-NBpoHimppkw" name="requestedChannel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu91alTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu91qlTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu916lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uyu92KlTEe-NBpoHimppkw" name="isAvailable" visibility="protected" method="_U2mxSKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28ve6lTEe-NBpoHimppkw">
                  <body>isAvailable returns true if the schedule for the channel is available in the &#xD;
	 * interval [start, start+duration-1]</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uyu92alTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyu92qlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu926lTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu93KlTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyu93alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uyvk4KlTEe-NBpoHimppkw" name="isAvailable" visibility="protected" method="_U2mxTqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U28vfKlTEe-NBpoHimppkw">
                  <body>isAvailable returns true if the schedule is available in the &#xD;
	 * interval [start, start+duration-1] in any channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uyvk4alTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyvk4qlTEe-NBpoHimppkw" name="start">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyvk46lTEe-NBpoHimppkw" name="duration">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyvk5KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uyvk5alTEe-NBpoHimppkw" name="canCombineEntriesInPlace" visibility="private" method="_U2mxWKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uyvk5qlTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyvk56lTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyvk6KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uyvk6alTEe-NBpoHimppkw" name="combinedEntriesInPlace" visibility="private" method="_U2nYQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uyvk6qlTEe-NBpoHimppkw" name="a1" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UywL8KlTEe-NBpoHimppkw" name="a2" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UywL8alTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UywL8qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UywL86lTEe-NBpoHimppkw" name="addToSchedule" visibility="protected" method="_U2nYRalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UywL9KlTEe-NBpoHimppkw" name="next" type="_Uf3FIKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UywL9alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UywL9qlTEe-NBpoHimppkw" name="reportNotSchedulable" visibility="private" method="_U2nYSKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UywL96lTEe-NBpoHimppkw" name="object" type="_Uf3FIKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_Uj-wIKlTEe-NBpoHimppkw" name="ScheduleLocation" visibility="protected">
                <ownedAttribute xmi:id="_U1uncqlTEe-NBpoHimppkw" name="channel" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U1undKlTEe-NBpoHimppkw" name="time" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKJKlTEe-NBpoHimppkw" name="ScheduleLocation" specification="_Uj_XMKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2mKJalTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = 0;&#xD;
			this.time = 0;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKJqlTEe-NBpoHimppkw" name="ScheduleLocation" specification="_Uj_-QKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2mKJ6lTEe-NBpoHimppkw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_U2mKKKlTEe-NBpoHimppkw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_U2mKKalTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
			this.time = time;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKKqlTEe-NBpoHimppkw" name="getChannel" specification="_UkAlUKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2mKK6lTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return channel;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2mKLKlTEe-NBpoHimppkw" name="getTime" specification="_UkAlUqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2mKLalTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return time;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_Uj_XMKlTEe-NBpoHimppkw" name="ScheduleLocation" visibility="package" method="_U2mKJKlTEe-NBpoHimppkw">
                  <eAnnotations xmi:id="_Uj_XMalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Uj_XMqlTEe-NBpoHimppkw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Uj_XM6lTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_Uj_-QKlTEe-NBpoHimppkw" name="ScheduleLocation" visibility="package" method="_U2mKJqlTEe-NBpoHimppkw">
                  <eAnnotations xmi:id="_Uj_-Q6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_Uj_-RKlTEe-NBpoHimppkw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_Uj_-QalTEe-NBpoHimppkw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Uj_-QqlTEe-NBpoHimppkw" name="time">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                  <ownedParameter xmi:id="_Uj_-RalTEe-NBpoHimppkw" type="_Uj-wIKlTEe-NBpoHimppkw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UkAlUKlTEe-NBpoHimppkw" name="getChannel" visibility="protected" method="_U2mKKqlTEe-NBpoHimppkw">
                  <ownedComment xmi:id="_U28vdalTEe-NBpoHimppkw">
                    <body>@return the channel</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_UkAlUalTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_UkAlUqlTEe-NBpoHimppkw" name="getTime" visibility="protected" method="_U2mKLKlTEe-NBpoHimppkw">
                  <ownedComment xmi:id="_U28vdqlTEe-NBpoHimppkw">
                    <body>@return the time</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_UkAlU6lTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkJIMKlTEe-NBpoHimppkw" name="ScheduleTable">
              <generalization xmi:id="_UyxaEKlTEe-NBpoHimppkw" general="_UkUuYKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1vOgKlTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1vOgalTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYTKlTEe-NBpoHimppkw" name="ScheduleTable" specification="_UkJvQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2nYTalTEe-NBpoHimppkw" type="_UkJIMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYTqlTEe-NBpoHimppkw" name="ScheduleTable" specification="_UkKWUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2nYT6lTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2nYUKlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2nYUalTEe-NBpoHimppkw" type="_UkJIMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(row,column);&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkJvQKlTEe-NBpoHimppkw" name="ScheduleTable" visibility="package" method="_U2nYTKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UkJvQalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UkJvQqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UkJvQ6lTEe-NBpoHimppkw" type="_UkJIMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkKWUKlTEe-NBpoHimppkw" name="ScheduleTable" visibility="package" method="_U2nYTqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UkKWU6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UkKWVKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UkKWUalTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkKWUqlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkKWValTEe-NBpoHimppkw" type="_UkJIMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkK9YKlTEe-NBpoHimppkw" name="ScheduleTime">
              <ownedAttribute xmi:id="_U1vOgqlTEe-NBpoHimppkw" name="startTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1v1kKlTEe-NBpoHimppkw" name="endTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYUqlTEe-NBpoHimppkw" name="ScheduleTime" specification="_UkLkcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2nYU6lTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2nYVKlTEe-NBpoHimppkw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2nYValTEe-NBpoHimppkw" type="_UkK9YKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
		this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkLkcKlTEe-NBpoHimppkw" name="ScheduleTime" visibility="package" method="_U2nYUqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UkMLgKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UkMLgalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UkLkcalTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkLkcqlTEe-NBpoHimppkw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkMLgqlTEe-NBpoHimppkw" type="_UkK9YKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkMykKlTEe-NBpoHimppkw" name="SimulatorInput">
              <ownedComment xmi:id="_U28vfqlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkMykalTEe-NBpoHimppkw" name="SortedPeriodQueue">
              <generalization xmi:id="_UkOnwKlTEe-NBpoHimppkw" general="_UjMtAqlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1v1kalTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1v1kqlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2nYVqlTEe-NBpoHimppkw" name="SortedPeriodQueue" specification="_UkOAsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2nYV6lTEe-NBpoHimppkw" type="_UkMykalTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(1, new PeriodComparator&lt;T>());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_UKlTEe-NBpoHimppkw" name="SortedPeriodQueue" specification="_UyyBIalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_UalTEe-NBpoHimppkw" name="schedulableObjects" type="_UyMLQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2n_UqlTEe-NBpoHimppkw" type="_UkMykalTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new PeriodComparator&lt;T>());&#xD;
		this.addAll(schedulableObjects);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkOAsKlTEe-NBpoHimppkw" name="SortedPeriodQueue" visibility="package" method="_U2nYVqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UkOAsalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UkOAsqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UkOAs6lTEe-NBpoHimppkw" type="_UkMykalTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UyyBIalTEe-NBpoHimppkw" name="SortedPeriodQueue" visibility="package" method="_U2n_UKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UyyBI6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UyyBJKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UyyBIqlTEe-NBpoHimppkw" name="schedulableObjects" type="_UyMLQKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UyyoMKlTEe-NBpoHimppkw" type="_UkMykalTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_UkPO0KlTEe-NBpoHimppkw" name="SystemAttributes" visibility="package">
              <generalization xmi:id="_UyyoMqlTEe-NBpoHimppkw" general="_UjUBwKlTEe-NBpoHimppkw"/>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_UkP14KlTEe-NBpoHimppkw" name="ScheduleChoices">
                <ownedLiteral xmi:id="_UkP14qlTEe-NBpoHimppkw" name="PRIORITY"/>
                <ownedLiteral xmi:id="_UkQc8KlTEe-NBpoHimppkw" name="RM"/>
                <ownedLiteral xmi:id="_UkQc8alTEe-NBpoHimppkw" name="DM"/>
                <ownedLiteral xmi:id="_UkQc8qlTEe-NBpoHimppkw" name="RTHART"/>
                <ownedLiteral xmi:id="_UkQc86lTEe-NBpoHimppkw" name="POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_UkQc9KlTEe-NBpoHimppkw" name="POSET_RM"/>
                <ownedLiteral xmi:id="_UkQc9alTEe-NBpoHimppkw" name="POSET_DM"/>
                <ownedLiteral xmi:id="_UkQc9qlTEe-NBpoHimppkw" name="WARP_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_UkQc96lTEe-NBpoHimppkw" name="WARP_POSET_RM"/>
                <ownedLiteral xmi:id="_UkREAKlTEe-NBpoHimppkw" name="WARP_POSET_DM"/>
                <ownedLiteral xmi:id="_UkREAalTEe-NBpoHimppkw" name="CONNECTIVITY_POSET_PRIORITY"/>
                <ownedLiteral xmi:id="_UkREAqlTEe-NBpoHimppkw" name="CONNECTIVITY_POSET_RM"/>
                <ownedLiteral xmi:id="_UkREA6lTEe-NBpoHimppkw" name="CONNECTIVITY_POSET_DM"/>
              </nestedClassifier>
              <ownedAttribute xmi:id="_UkRrEKlTEe-NBpoHimppkw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UkRrEalTEe-NBpoHimppkw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UkSSIKlTEe-NBpoHimppkw" name="name" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UkSSIalTEe-NBpoHimppkw" name="schedulerName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UkSSIqlTEe-NBpoHimppkw" name="numTransmissions" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_UkS5MKlTEe-NBpoHimppkw" name="optimizationFlag" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkS5MalTEe-NBpoHimppkw" name="SystemFactory">
              <ownedComment xmi:id="_U29WgKlTEe-NBpoHimppkw">
                <body>Factory Class to create a schedule instance.&#xD;
This factory can be used to create different&#xD;
types of schedules.&#xD;
@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_U6lTEe-NBpoHimppkw" name="create" specification="_Uyz2UKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_VKlTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2n_ValTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_VqlTEe-NBpoHimppkw" name="choice" type="_UkP14KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2n_V6lTEe-NBpoHimppkw" type="_Ukr6wKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new WarpSystem(workload,numChannels, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uyz2UKlTEe-NBpoHimppkw" name="create" isStatic="true" method="_U2n_U6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uyz2UalTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyz2UqlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uyz2U6lTEe-NBpoHimppkw" name="choice" type="_UkP14KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uyz2VKlTEe-NBpoHimppkw" type="_Ukr6wKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkUuYKlTEe-NBpoHimppkw" name="Table">
              <generalization xmi:id="_U0mmE6lTEe-NBpoHimppkw" general="_UxYS8KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1v1k6lTEe-NBpoHimppkw" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1v1lKlTEe-NBpoHimppkw" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_WKlTEe-NBpoHimppkw" name="Table" specification="_UkVVcalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_WalTEe-NBpoHimppkw" type="_UkUuYKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_WqlTEe-NBpoHimppkw" name="Table" specification="_UkV8gqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_W6lTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_XKlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_XalTEe-NBpoHimppkw" type="_UkUuYKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super();&#xD;
		&#xD;
		for(int i=0; i &lt; row; i++) {&#xD;
			ArrayList&lt;E> nullRow = new ArrayList&lt;E>();&#xD;
			for(int j=0; j &lt; column; j++) {&#xD;
				nullRow.add(null);&#xD;
			}&#xD;
			this.add((E) nullRow);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_XqlTEe-NBpoHimppkw" name="getNumRows" specification="_UkWjkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_X6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return this.size();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_YKlTEe-NBpoHimppkw" name="getNumColumns" specification="_UkWjkqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_YalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var numColumns = 0;&#xD;
		var numRows = this.size();&#xD;
		if (numRows > 0) {&#xD;
			var lastRow = this.get(numRows-1);&#xD;
			numColumns = lastRow.size();&#xD;
		}&#xD;
		return numColumns;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_YqlTEe-NBpoHimppkw" name="set" specification="_U0l_AKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_Y6lTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_ZKlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_ZalTEe-NBpoHimppkw" name="element" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				fullRow.set(column, element);&#xD;
			}&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_ZqlTEe-NBpoHimppkw" name="get" specification="_UkXKoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_Z6lTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_aKlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_aalTEe-NBpoHimppkw" type="_Uz5bcalTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>T element = null;&#xD;
		E fullRow;&#xD;
		if (row &lt; this.size()) {&#xD;
			fullRow = this.get(row);&#xD;
			if (column &lt; fullRow.size()) {&#xD;
				element = fullRow.get(column);&#xD;
			}&#xD;
		}&#xD;
		return element;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkVVcalTEe-NBpoHimppkw" name="Table" method="_U2n_WKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UkVVcqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UkV8gKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UkV8galTEe-NBpoHimppkw" type="_UkUuYKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkV8gqlTEe-NBpoHimppkw" name="Table" method="_U2n_WqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UkV8halTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UkV8hqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UkV8g6lTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkV8hKlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkV8h6lTEe-NBpoHimppkw" type="_UkUuYKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkWjkKlTEe-NBpoHimppkw" name="getNumRows" method="_U2n_XqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UkWjkalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkWjkqlTEe-NBpoHimppkw" name="getNumColumns" method="_U2n_YKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UkWjk6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkXKoKlTEe-NBpoHimppkw" name="get" method="_U2n_ZqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UkXKoalTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkXKoqlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0mmEqlTEe-NBpoHimppkw" type="_Uz5bcalTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0l_AKlTEe-NBpoHimppkw" name="set" method="_U2n_YqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0l_AalTEe-NBpoHimppkw" name="row">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0mmEKlTEe-NBpoHimppkw" name="column">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0mmEalTEe-NBpoHimppkw" name="element" type="_Uz5bcalTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_UkXxsKlTEe-NBpoHimppkw" name="Visualization">
              <ownedComment xmi:id="_U29WgalTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_UkYYwKlTEe-NBpoHimppkw" name="SystemChoices">
                <ownedLiteral xmi:id="_UkYYwqlTEe-NBpoHimppkw" name="SOURCE"/>
                <ownedLiteral xmi:id="_UkY_0KlTEe-NBpoHimppkw" name="RELIABILITIES"/>
                <ownedLiteral xmi:id="_UkY_0alTEe-NBpoHimppkw" name="SIMULATOR_INPUT"/>
                <ownedLiteral xmi:id="_UkY_0qlTEe-NBpoHimppkw" name="LATENCY"/>
                <ownedLiteral xmi:id="_UkY_06lTEe-NBpoHimppkw" name="LATENCY_REPORT"/>
                <ownedLiteral xmi:id="_UkY_1KlTEe-NBpoHimppkw" name="DEADLINE_REPORT"/>
                <ownedLiteral xmi:id="_UkY_1alTEe-NBpoHimppkw" name="CHANNEL"/>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_UkZm4KlTEe-NBpoHimppkw" name="WorkLoadChoices">
                <ownedLiteral xmi:id="_UkZm4qlTEe-NBpoHimppkw" name="INPUT_GRAPH"/>
                <ownedLiteral xmi:id="_UkZm46lTEe-NBpoHimppkw" name="COMUNICATION_GRAPH"/>
                <ownedLiteral xmi:id="_UkZm5KlTEe-NBpoHimppkw" name="GRAPHVIZ"/>
              </nestedClassifier>
              <ownedOperation xmi:id="_UkaN8KlTEe-NBpoHimppkw" name="toDisplay"/>
              <ownedOperation xmi:id="_UkaN8alTEe-NBpoHimppkw" name="toFile"/>
              <ownedOperation xmi:id="_UkaN8qlTEe-NBpoHimppkw" name="toString">
                <ownedParameter xmi:id="_UkaN86lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uka1AKlTEe-NBpoHimppkw" name="VisualizationFactory">
              <ownedComment xmi:id="_U29WgqlTEe-NBpoHimppkw">
                <body>Factory Class to create a visualization instance.&#xD;
This factory can be used to create different&#xD;
types of visualizations.&#xD;
 *&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2n_aqlTEe-NBpoHimppkw" name="createVisualization" specification="_Uy1rgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2n_a6lTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2n_bKlTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2n_balTEe-NBpoHimppkw" name="choice" type="_UkYYwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2n_bqlTEe-NBpoHimppkw" type="_UkXxsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(warp, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omYKlTEe-NBpoHimppkw" name="createVisualization" specification="_Uy1rhalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2omYalTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2omYqlTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2omY6lTEe-NBpoHimppkw" name="choice" type="_UkZm4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2omZKlTEe-NBpoHimppkw" type="_UkXxsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return new VisualizationImplementation(workload, outputDirectory, choice);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uy1rgKlTEe-NBpoHimppkw" name="createVisualization" isStatic="true" method="_U2n_aqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy1rgalTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy1rgqlTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy1rg6lTEe-NBpoHimppkw" name="choice" type="_UkYYwKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy1rhKlTEe-NBpoHimppkw" type="_UkXxsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy1rhalTEe-NBpoHimppkw" name="createVisualization" isStatic="true" method="_U2omYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy1rhqlTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy1rh6lTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy1riKlTEe-NBpoHimppkw" name="choice" type="_UkZm4KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy2SkKlTEe-NBpoHimppkw" type="_UkXxsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkcDIKlTEe-NBpoHimppkw" name="VisualizationImplementation">
              <ownedComment xmi:id="_U29Wg6lTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.5</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1v1lalTEe-NBpoHimppkw" name="visualization" visibility="private" type="_Ug61EKlTEe-NBpoHimppkw" association="_U3wnwalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1wcoalTEe-NBpoHimppkw" name="fileContent" visibility="private" type="_Ug61EKlTEe-NBpoHimppkw" association="_U3wnxKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1wco6lTEe-NBpoHimppkw" name="window" visibility="private" type="_UhomwKlTEe-NBpoHimppkw" association="_U3xO0alTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1wcpalTEe-NBpoHimppkw" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1xDsalTEe-NBpoHimppkw" name="inputFileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1xDs6lTEe-NBpoHimppkw" name="fileNameTemplate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1xDtalTEe-NBpoHimppkw" name="fm" visibility="private" type="_UhHCUKlTEe-NBpoHimppkw" association="_U3xO1KlTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1xDtqlTEe-NBpoHimppkw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1xqwKlTEe-NBpoHimppkw" name="warp" visibility="private" type="_Ukr6wKlTEe-NBpoHimppkw" association="_U3x14alTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1xqwalTEe-NBpoHimppkw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1xqw6lTEe-NBpoHimppkw" name="workLoad" visibility="private" type="_UlImsKlTEe-NBpoHimppkw" association="_U3yc8KlTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1xqxKlTEe-NBpoHimppkw" value="null"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1xqxqlTEe-NBpoHimppkw" name="visualizationObject" visibility="private" type="_UkjX4KlTEe-NBpoHimppkw" association="_U3yc86lTEe-NBpoHimppkw"/>
              <interfaceRealization xmi:id="_Uy2SkalTEe-NBpoHimppkw" client="_UkcDIKlTEe-NBpoHimppkw" supplier="_UkXxsKlTEe-NBpoHimppkw" contract="_UkXxsKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omZalTEe-NBpoHimppkw" name="VisualizationImplementation" specification="_U0obQalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2omZqlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2omZ6lTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2omaKlTEe-NBpoHimppkw" name="choice" type="_U0n0MKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2omaalTEe-NBpoHimppkw" type="_UkcDIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.warp = warp;&#xD;
 inputFileName = warp.toWorkload().getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omaqlTEe-NBpoHimppkw" name="VisualizationImplementation" specification="_U0ppYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2oma6lTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2ombKlTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2ombalTEe-NBpoHimppkw" name="choice" type="_U0pCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2ombqlTEe-NBpoHimppkw" type="_UkcDIKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.fm = new FileManager();&#xD;
 this.workLoad = workLoad;&#xD;
 inputFileName = workLoad.getInputFileName();&#xD;
 this.fileNameTemplate = createFileNameTemplate(outputDirectory);&#xD;
 visualizationObject = null;&#xD;
 createVisualization(choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omb6lTEe-NBpoHimppkw" name="toDisplay" specification="_UkdRQKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>window = visualizationObject.displayVisualization();&#xD;
 if (window != null) {&#xD;
   window.setVisible();&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omcKlTEe-NBpoHimppkw" name="toFile" specification="_Ukd4U6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>fm.writeFile(fileName, fileContent.toString());&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omcalTEe-NBpoHimppkw" name="toString" specification="_UkefYqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2omcqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualization.toString();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omc6lTEe-NBpoHimppkw" name="createVisualization" specification="_U0qQcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2omdKlTEe-NBpoHimppkw" name="choice" type="_U0n0MKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case SOURCE:&#xD;
     createVisualization(new ProgramVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case RELIABILITIES:&#xD;
     // TODO Implement Reliability Analysis Visualization&#xD;
     createVisualization(new ReliabilityVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case SIMULATOR_INPUT:&#xD;
     // TODO Implement Simulator Input Visualization&#xD;
     createVisualization(new NotImplentedVisualization(&quot;SimInputNotImplemented&quot;));&#xD;
     break;&#xD;
&#xD;
   case LATENCY:&#xD;
     // TODO Implement Latency Analysis Visualization&#xD;
     createVisualization(new LatencyVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case CHANNEL:&#xD;
     // TODO Implement Channel Analysis Visualization&#xD;
     createVisualization(new ChannelVisualization(warp));&#xD;
     break;&#xD;
&#xD;
   case LATENCY_REPORT:&#xD;
     createVisualization(new ReportVisualization(fm, warp,&#xD;
         new LatencyAnalysis(warp).latencyReport(), &quot;Latency&quot;));&#xD;
     break;&#xD;
&#xD;
   case DEADLINE_REPORT:&#xD;
     createVisualization(&#xD;
         new ReportVisualization(fm, warp, warp.toProgram().deadlineMisses(), &quot;DeadlineMisses&quot;));&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omdalTEe-NBpoHimppkw" name="createVisualization" specification="_U0qQcqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2omdqlTEe-NBpoHimppkw" name="choice" type="_U0pCUKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>switch (choice) { // select the requested visualization&#xD;
   case COMUNICATION_GRAPH:&#xD;
     // createWarpVisualization();&#xD;
     createVisualization(new CommunicationGraph(fm, workLoad));&#xD;
     break;&#xD;
&#xD;
   case GRAPHVIZ:&#xD;
     createVisualization(new GraphViz(fm, workLoad.toString()));&#xD;
     break;&#xD;
&#xD;
   case INPUT_GRAPH:&#xD;
     createVisualization(workLoad);&#xD;
     break;&#xD;
&#xD;
   default:&#xD;
     createVisualization(new NotImplentedVisualization(&quot;UnexpectedChoice&quot;));&#xD;
     break;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omd6lTEe-NBpoHimppkw" name="createVisualization" specification="_U0q3galTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2omeKlTEe-NBpoHimppkw" name="obj" type="_Uz5bcalTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>visualization = obj.visualization();&#xD;
 fileContent = obj.fileVisualization();&#xD;
 /* display is file content printed to console */&#xD;
 fileName = obj.createFile(fileNameTemplate); // in output directory&#xD;
 visualizationObject = obj;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2omealTEe-NBpoHimppkw" name="createFileNameTemplate" specification="_UkfGcqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2omeqlTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2ome6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String fileNameTemplate;&#xD;
 var workingDirectory = fm.getBaseDirectory();&#xD;
 var newDirectory = fm.createDirectory(workingDirectory, outputDirectory);&#xD;
 // Now create the fileNameTemplate using full output path and input filename&#xD;
 if (inputFileName.contains(&quot;/&quot;)) {&#xD;
   var index = inputFileName.lastIndexOf(&quot;/&quot;) + 1;&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName.substring(index);&#xD;
 } else {&#xD;
   fileNameTemplate = newDirectory + File.separator + inputFileName;&#xD;
 }&#xD;
 return fileNameTemplate;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkdRQKlTEe-NBpoHimppkw" name="toDisplay" method="_U2omb6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Ukd4U6lTEe-NBpoHimppkw" name="toFile" method="_U2omcKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UkefYqlTEe-NBpoHimppkw" name="toString" method="_U2omcalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UkefY6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkfGcqlTEe-NBpoHimppkw" name="createFileNameTemplate" visibility="private" method="_U2omealTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UkfGc6lTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkfGdKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_U0obQalTEe-NBpoHimppkw" name="VisualizationImplementation" method="_U2omZalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0obRalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0obRqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0obQqlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0obQ6lTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0obRKlTEe-NBpoHimppkw" name="choice" type="_U0n0MKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0obR6lTEe-NBpoHimppkw" type="_UkcDIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0ppYalTEe-NBpoHimppkw" name="VisualizationImplementation" method="_U2omaqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0ppZalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0ppZqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0ppYqlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0ppY6lTEe-NBpoHimppkw" name="outputDirectory">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0ppZKlTEe-NBpoHimppkw" name="choice" type="_U0pCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0ppZ6lTEe-NBpoHimppkw" type="_UkcDIKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0qQcKlTEe-NBpoHimppkw" name="createVisualization" visibility="private" method="_U2omc6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0qQcalTEe-NBpoHimppkw" name="choice" type="_U0n0MKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0qQcqlTEe-NBpoHimppkw" name="createVisualization" visibility="private" method="_U2omdalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0q3gKlTEe-NBpoHimppkw" name="choice" type="_U0pCUKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0q3galTEe-NBpoHimppkw" name="createVisualization" visibility="private" method="_U2omd6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0q3gqlTEe-NBpoHimppkw" name="obj" type="_Uz5bcalTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkjX4KlTEe-NBpoHimppkw" name="VisualizationObject" visibility="package" isAbstract="true">
              <ownedComment xmi:id="_U29WhKlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.5&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U1yR0KlTEe-NBpoHimppkw" name="fm" visibility="private" type="_UhHCUKlTEe-NBpoHimppkw" association="_U3zEAKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U1yR0qlTEe-NBpoHimppkw" name="suffix" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1y44KlTEe-NBpoHimppkw" name="nameExtension" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1y44qlTEe-NBpoHimppkw" name="NOT_IMPLEMENTED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1y446lTEe-NBpoHimppkw" value="&quot;This visualization has not been implemented.&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U1y45KlTEe-NBpoHimppkw" name="visualizationData" visibility="protected">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U1y45alTEe-NBpoHimppkw" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNcKlTEe-NBpoHimppkw" name="VisualizationObject" specification="_Uy4HwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNcalTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNcqlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNc6lTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNdKlTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = String.format(&quot;-%sM-%sE2E&quot;,&#xD;
     String.valueOf(workLoad.getMinPacketReceptionRate()), String.valueOf(workLoad.getE2e()));&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNdalTEe-NBpoHimppkw" name="VisualizationObject" specification="_Uy4u0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNdqlTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNd6lTEe-NBpoHimppkw" name="warp" type="_UkPO0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNeKlTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNealTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension = nameExtension(warp.getSchedulerName(), warp.getNumFaults());&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e());&#xD;
 }&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNeqlTEe-NBpoHimppkw" name="VisualizationObject" specification="_Uy4u16lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNe6lTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNfKlTEe-NBpoHimppkw" name="warp" type="_UkPO0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNfalTEe-NBpoHimppkw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNfqlTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNf6lTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 if (warp.getNumFaults() > 0) {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getNumFaults()) + nameExtension;&#xD;
 } else {&#xD;
   this.nameExtension =&#xD;
       nameExtension(warp.getSchedulerName(), warp.getMinPacketReceptionRate(), warp.getE2e())&#xD;
           + nameExtension;&#xD;
 }&#xD;
&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNgKlTEe-NBpoHimppkw" name="VisualizationObject" specification="_Uy5V4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNgalTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNgqlTEe-NBpoHimppkw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNg6lTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNhKlTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.fm = fm;&#xD;
 this.nameExtension = nameExtension;&#xD;
 this.suffix = suffix;&#xD;
 visualizationData = null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNhalTEe-NBpoHimppkw" name="nameExtension" specification="_U0sFoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNhqlTEe-NBpoHimppkw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNh6lTEe-NBpoHimppkw" name="m" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2pNiKlTEe-NBpoHimppkw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNialTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension =&#xD;
     String.format(&quot;%s-%sM-%sE2E&quot;, schName, String.valueOf(m), String.valueOf(e2e));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNiqlTEe-NBpoHimppkw" name="nameExtension" specification="_UklNEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNi6lTEe-NBpoHimppkw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNjKlTEe-NBpoHimppkw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2pNjalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String extension = String.format(&quot;%s-%sFaults&quot;, schName, String.valueOf(numFaults));&#xD;
 return extension;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNjqlTEe-NBpoHimppkw" name="getFileManager" specification="_Ukl0I6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNj6lTEe-NBpoHimppkw" type="_UhHCUKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return fm;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2pNkKlTEe-NBpoHimppkw" name="visualization" specification="_UkmbMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2pNkalTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description content = new Description();&#xD;
 var data = createVisualizationData();&#xD;
&#xD;
 if (data != null) {&#xD;
   String nodeString = String.join(&quot;\t&quot;, createColumnHeader()) + &quot;\n&quot;;&#xD;
   content.add(nodeString);&#xD;
&#xD;
   for (int rowIndex = 0; rowIndex &lt; data.length; rowIndex++) {&#xD;
     var row = data[rowIndex];&#xD;
     String rowString = String.join(&quot;\t&quot;, row) + &quot;\n&quot;;&#xD;
     content.add(rowString);&#xD;
   }&#xD;
 } else {&#xD;
   content.add(NOT_IMPLEMENTED);&#xD;
 }&#xD;
 return content;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0gKlTEe-NBpoHimppkw" name="createFile" specification="_UkmbMalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0galTEe-NBpoHimppkw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2p0gqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fm.createFile(fileNameTemplate, nameExtension, suffix);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0g6lTEe-NBpoHimppkw" name="fileVisualization" specification="_UkmbNKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0hKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description fileContent = createHeader();&#xD;
 fileContent.addAll(visualization());&#xD;
 fileContent.addAll(createFooter());&#xD;
 return fileContent;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0halTEe-NBpoHimppkw" name="displayVisualization" specification="_UknCQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0hqlTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null; // not implemented&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0h6lTEe-NBpoHimppkw" name="createHeader" specification="_UknCQalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0iKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description header = new Description();&#xD;
 return header;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0ialTEe-NBpoHimppkw" name="createFooter" specification="_UknCQqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0iqlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>Description footer = new Description();&#xD;
 return footer;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0i6lTEe-NBpoHimppkw" name="createColumnHeader" specification="_UknCQ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0jKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2p0jalTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return new String[] {NOT_IMPLEMENTED};&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0jqlTEe-NBpoHimppkw" name="createVisualizationData" specification="_UknpU6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0j6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2p0kKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return visualizationData; // not implemented--returns null&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UklNEKlTEe-NBpoHimppkw" name="nameExtension" visibility="private" method="_U2pNiqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ukl0IKlTEe-NBpoHimppkw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ukl0IalTEe-NBpoHimppkw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ukl0IqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ukl0I6lTEe-NBpoHimppkw" name="getFileManager" method="_U2pNjqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U299kKlTEe-NBpoHimppkw">
                  <body>@return the fm</body>
                </ownedComment>
                <ownedParameter xmi:id="_Uy5V56lTEe-NBpoHimppkw" type="_UhHCUKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkmbMKlTEe-NBpoHimppkw" name="visualization" method="_U2pNkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy5V6KlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkmbMalTEe-NBpoHimppkw" name="createFile" method="_U2p0gKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UkmbMqlTEe-NBpoHimppkw" name="fileNameTemplate">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UkmbM6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkmbNKlTEe-NBpoHimppkw" name="fileVisualization" method="_U2p0g6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy5V6alTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UknCQKlTEe-NBpoHimppkw" name="displayVisualization" method="_U2p0halTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy5V6qlTEe-NBpoHimppkw" type="_UhomwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UknCQalTEe-NBpoHimppkw" name="createHeader" visibility="protected" method="_U2p0h6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy588KlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UknCQqlTEe-NBpoHimppkw" name="createFooter" visibility="protected" method="_U2p0ialTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy588alTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UknCQ6lTEe-NBpoHimppkw" name="createColumnHeader" visibility="protected" method="_U2p0i6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UknpUKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UknpUalTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UknpU6lTEe-NBpoHimppkw" name="createVisualizationData" visibility="protected" method="_U2p0jqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UknpVKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UknpValTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy4HwKlTEe-NBpoHimppkw" name="VisualizationObject" visibility="package" method="_U2pNcKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uy4HxKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uy4HxalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uy4HwalTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy4HwqlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy4Hw6lTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy4HxqlTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy4u0KlTEe-NBpoHimppkw" name="VisualizationObject" visibility="package" method="_U2pNdalTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uy4u1KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uy4u1alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uy4u0alTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy4u0qlTEe-NBpoHimppkw" name="warp" type="_UkPO0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy4u06lTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy4u1qlTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy4u16lTEe-NBpoHimppkw" name="VisualizationObject" visibility="package" method="_U2pNeqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uy4u3KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uy4u3alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uy4u2KlTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy4u2alTEe-NBpoHimppkw" name="warp" type="_UkPO0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy4u2qlTEe-NBpoHimppkw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy4u26lTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy4u3qlTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy5V4KlTEe-NBpoHimppkw" name="VisualizationObject" visibility="package" method="_U2pNgKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uy5V5KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uy5V5alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uy5V4alTEe-NBpoHimppkw" name="fm" type="_UhHCUKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy5V4qlTEe-NBpoHimppkw" name="nameExtension">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy5V46lTEe-NBpoHimppkw" name="suffix">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Uy5V5qlTEe-NBpoHimppkw" type="_UkjX4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0sFoKlTEe-NBpoHimppkw" name="nameExtension" visibility="private" method="_U2pNhalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0sFoalTEe-NBpoHimppkw" name="schName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0sFoqlTEe-NBpoHimppkw" name="m" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0sFo6lTEe-NBpoHimppkw" name="e2e">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0sFpKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkqsoKlTEe-NBpoHimppkw" name="get">
              <ownedComment xmi:id="_U299kalTEe-NBpoHimppkw">
                <body>ReliabilityAnalysis analyzes the end-to-end reliability of messages transmitted in flows for the&#xD;
WARP system.&#xD;
&lt;p>&#xD;
&#xD;
Let M represent the Minimum Packet Reception Rate on an edge in a flow. The end-to-end&#xD;
reliability for each flow, flow:src->sink, is computed iteratively as follows:&lt;br>&#xD;
(1)The flow:src node has an initial probability of 1.0 when it is released. All other initial&#xD;
probabilities are 0.0. (That is, the reset of the nodes in the flow have an initial probability&#xD;
value of 0.0.) &lt;br>&#xD;
(2) each src->sink pair probability is computed as NewSinkNodeState = (1-M)*PrevSnkNodeState +&#xD;
M*PrevSrcNodeState &lt;br>&#xD;
This value represents the probability that the message as been received by the node SinkNode.&#xD;
Thus, the NewSinkNodeState probability will increase each time a push or pull is executed with&#xD;
SinkNode as a listener.&#xD;
&lt;p>&#xD;
&#xD;
The last probability state value for any node is the reliability of the message reaching that&#xD;
node, and the end-to-end reliability of a flow is the value of the last Flow:SinkNode&#xD;
probability.&#xD;
&lt;p>&#xD;
&#xD;
CS2820 Fall 2024 Project: Implement this class to compute the probabilities that comprise the&#xD;
ReliablityMatrix, which is the core of the reliability visualization that is requested in Warp.&#xD;
&lt;p>&#xD;
&#xD;
To do this, you will need to retrieve the program source, parse the instructions for each node,&#xD;
in each time slot, to extract the src and snk nodes in the instruction and then apply the message&#xD;
success probability equation defined in the project assignment.&#xD;
&lt;p>&#xD;
&#xD;
I recommend using the getInstructionParameters method of the WarpDSL class to extract the src and&#xD;
snk nodes from the instruction string in a program schedule time slot.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024&#xD;
 *</body>
              </ownedComment>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0kalTEe-NBpoHimppkw" name="verifyReliabilities" specification="_UkrTsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0kqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// TODO Auto-generated method stub&#xD;
       return true;&#xD;
        </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2p0k6lTEe-NBpoHimppkw" name="ReliabilityAnalysis" specification="_Uy588qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2p0lKlTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>// TODO Auto-generated constructor stub&#xD;
        </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkrTsKlTEe-NBpoHimppkw" name="verifyReliabilities" method="_U2p0kalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UkrTsalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UkrTsqlTEe-NBpoHimppkw" name="getReliabilities">
                <ownedParameter xmi:id="_Uy6kAKlTEe-NBpoHimppkw" type="_UjY6QKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy588qlTEe-NBpoHimppkw" name="ReliabilityAnalysis" method="_U2p0k6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy5886lTEe-NBpoHimppkw" name="program" type="_UijMwKlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Ukr6wKlTEe-NBpoHimppkw" name="WarpInterface">
              <ownedComment xmi:id="_U299kqlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <generalization xmi:id="_Uy6kAalTEe-NBpoHimppkw" general="_UkPO0KlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Uksh0KlTEe-NBpoHimppkw" name="toWorkload">
                <ownedParameter xmi:id="_Uy6kAqlTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uksh0alTEe-NBpoHimppkw" name="toProgram">
                <ownedParameter xmi:id="_Uy6kA6lTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uksh0qlTEe-NBpoHimppkw" name="toReliabilityAnalysis">
                <ownedParameter xmi:id="_Uy7LEKlTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uksh06lTEe-NBpoHimppkw" name="toSimulator">
                <ownedParameter xmi:id="_Uy7LEalTEe-NBpoHimppkw" type="_UkMykKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UktI4KlTEe-NBpoHimppkw" name="toLatencyAnalysis">
                <ownedParameter xmi:id="_Uy7LEqlTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UktI4alTEe-NBpoHimppkw" name="toChannelAnalysis">
                <ownedParameter xmi:id="_Uy7LE6lTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UktI4qlTEe-NBpoHimppkw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_UktI46lTEe-NBpoHimppkw" name="reliabilitiesMet">
                <ownedParameter xmi:id="_UktI5KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uktv8KlTEe-NBpoHimppkw" name="deadlinesMet">
                <ownedParameter xmi:id="_Uktv8alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uku-EKlTEe-NBpoHimppkw" name="WarpPoset">
              <ownedComment xmi:id="_U299k6lTEe-NBpoHimppkw">
                <body>ConnectivityPoset extends Poset by selecting&#xD;
the base station in the flow as the primary &#xD;
coordinator&#xD;
&#xD;
@author sgoddard</body>
              </ownedComment>
              <generalization xmi:id="_Uy7yI6lTEe-NBpoHimppkw" general="_UiPqwKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2qbkKlTEe-NBpoHimppkw" name="WarpPoset" specification="_Uy7LFKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2qbkalTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2qbkqlTEe-NBpoHimppkw" type="_Uku-EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(workload);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2qbk6lTEe-NBpoHimppkw" name="findCoordinator" specification="_U0sssKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2qblKlTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2qblalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var baseStation = findBaseStation();&#xD;
		var baseName = baseStation.getName();&#xD;
		var size = nodesInFlow.size();&#xD;
		/* assume flow sink is the coordinator */&#xD;
		Integer coordinatorIndex = size-1;&#xD;
&#xD;
		if (baseName.equals(nodesInFlow.get(0).getName())) {&#xD;
			/* flow src is coordinator, so update index */&#xD;
			coordinatorIndex = 0;&#xD;
		}&#xD;
		return coordinatorIndex;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Uy7LFKlTEe-NBpoHimppkw" name="WarpPoset" visibility="package" method="_U2qbkKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uy7yIKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uy7yIalTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uy7LFalTEe-NBpoHimppkw" name="workload" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy7yIqlTEe-NBpoHimppkw" type="_Uku-EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0sssKlTEe-NBpoHimppkw" name="findCoordinator" visibility="protected" method="_U2qbk6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0tTwKlTEe-NBpoHimppkw" name="nodesInFlow" type="_UxYS8KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0tTwalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UkwMMKlTEe-NBpoHimppkw" name="WarpSystem">
              <ownedComment xmi:id="_U299lKlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
@version 1.4</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U10HAKlTEe-NBpoHimppkw" name="program" visibility="private" type="_UijMwKlTEe-NBpoHimppkw" association="_U3zEA6lTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U10HAqlTEe-NBpoHimppkw" name="workLoad" visibility="private" type="_UlImsKlTEe-NBpoHimppkw" association="_U3zrEalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U10HBKlTEe-NBpoHimppkw" name="ra" visibility="private" type="_UjOiMKlTEe-NBpoHimppkw" association="_U3zrFKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U10uEKlTEe-NBpoHimppkw" name="la" visibility="private" type="_Uh00AKlTEe-NBpoHimppkw" association="_U30SIalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U10uEqlTEe-NBpoHimppkw" name="ca" visibility="private" type="_UgRU0KlTEe-NBpoHimppkw" association="_U30SJKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U10uFKlTEe-NBpoHimppkw" name="numChannels" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U11VJKlTEe-NBpoHimppkw" name="verboseMode" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U11VJalTEe-NBpoHimppkw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U118MalTEe-NBpoHimppkw" name="latencyRequested" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U118MqlTEe-NBpoHimppkw" value="false"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_Uy7yJKlTEe-NBpoHimppkw" client="_UkwMMKlTEe-NBpoHimppkw" supplier="_Ukr6wKlTEe-NBpoHimppkw" contract="_Ukr6wKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2qbmKlTEe-NBpoHimppkw" name="WarpSystem" specification="_U0uh4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2qbmalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2qbmqlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2qbm6lTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2qbnKlTEe-NBpoHimppkw" type="_UkwMMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad;&#xD;
 this.numChannels = numChannels;&#xD;
 createProgram(workLoad, numChannels, choice);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2qbnalTEe-NBpoHimppkw" name="toWorkload" specification="_UkxaUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2qbnqlTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return workLoad;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2qbn6lTEe-NBpoHimppkw" name="toProgram" specification="_UkyocKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2qboKlTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return program;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2qboalTEe-NBpoHimppkw" name="toReliabilityAnalysis" specification="_UkzPgalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2qboqlTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>ra = new ReliabilityAnalysis(workLoad.getE2e(), workLoad.getMinPacketReceptionRate());&#xD;
   return ra;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2qbo6lTEe-NBpoHimppkw" name="toSimulator" specification="_Ukz2kqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2qbpKlTEe-NBpoHimppkw" type="_UkMykKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return null;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCoKlTEe-NBpoHimppkw" name="toLatencyAnalysis" specification="_Uk0doqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCoalTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>la = new LatencyAnalysis(this);&#xD;
 return la;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCoqlTEe-NBpoHimppkw" name="toChannelAnalysis" specification="_Uk1Es6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCo6lTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>ca = new ChannelAnalysis(this);&#xD;
 return ca;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCpKlTEe-NBpoHimppkw" name="reliabilitiesMet" specification="_Uk1rw6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCpalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>if (ra == null) {&#xD;
       ra = new ReliabilityAnalysis(workLoad.getE2e(), workLoad.getMinPacketReceptionRate());&#xD;
   }&#xD;
   return ra.verifyReliabilities();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCpqlTEe-NBpoHimppkw" name="deadlinesMet" specification="_Uk254qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCp6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Boolean result = true;&#xD;
 if (program.deadlineMisses().size() > 0) {&#xD;
   result = false;&#xD;
 }&#xD;
 return result;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCqKlTEe-NBpoHimppkw" name="createProgram" specification="_U0vI8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCqalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2rCqqlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2rCq6lTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>program = new Program(workLoad, numChannels, choice, verboseMode, latencyRequested);&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCrKlTEe-NBpoHimppkw" name="getNumFaults" specification="_Uk4IAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCralTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumFaults();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCrqlTEe-NBpoHimppkw" name="getMinPacketReceptionRate" specification="_Uk4vEqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCr6lTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getMinPacketReceptionRate();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCsKlTEe-NBpoHimppkw" name="getE2e" specification="_Uk5WIqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCsalTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return workLoad.getE2e();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCsqlTEe-NBpoHimppkw" name="getName" specification="_Uk59M6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCs6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return workLoad.getName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCtKlTEe-NBpoHimppkw" name="getSchedulerName" specification="_Uk7LUqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCtalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getSchedulerName();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCtqlTEe-NBpoHimppkw" name="getNumTransmissions" specification="_Uk7yY6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCt6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getNumTransmissions();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rCuKlTEe-NBpoHimppkw" name="getOptimizationFlag" specification="_Uk8Zc6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rCualTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return program.getOptimizationFlag();&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UkxaUKlTEe-NBpoHimppkw" name="toWorkload" method="_U2qbnalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy8ZMKlTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkyocKlTEe-NBpoHimppkw" name="toProgram" method="_U2qbn6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy8ZMalTEe-NBpoHimppkw" type="_UijMwKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UkzPgalTEe-NBpoHimppkw" name="toReliabilityAnalysis" method="_U2qboalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy8ZMqlTEe-NBpoHimppkw" type="_UjOiMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ukz2kqlTEe-NBpoHimppkw" name="toSimulator" method="_U2qbo6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy9AQKlTEe-NBpoHimppkw" type="_UkMykKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk0doqlTEe-NBpoHimppkw" name="toLatencyAnalysis" method="_U2rCoKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy9AQalTEe-NBpoHimppkw" type="_Uh00AKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk1Es6lTEe-NBpoHimppkw" name="toChannelAnalysis" method="_U2rCoqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy9AQqlTEe-NBpoHimppkw" type="_UgRU0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk1rw6lTEe-NBpoHimppkw" name="reliabilitiesMet" method="_U2rCpKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uk2S0KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk254qlTEe-NBpoHimppkw" name="deadlinesMet" method="_U2rCpqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uk3g8KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk4IAKlTEe-NBpoHimppkw" name="getNumFaults" method="_U2rCrKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uk4IAalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk4vEqlTEe-NBpoHimppkw" name="getMinPacketReceptionRate" method="_U2rCrqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0wXEKlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk5WIqlTEe-NBpoHimppkw" name="getE2e" method="_U2rCsKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0wXEalTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk59M6lTEe-NBpoHimppkw" name="getName" method="_U2rCsqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uk6kQKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk7LUqlTEe-NBpoHimppkw" name="getSchedulerName" method="_U2rCtKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uk7LU6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk7yY6lTEe-NBpoHimppkw" name="getNumTransmissions" method="_U2rCtqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uk7yZKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk8Zc6lTEe-NBpoHimppkw" name="getOptimizationFlag" method="_U2rCuKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uk8ZdKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uk9Ag6lTEe-NBpoHimppkw" name="toSensorNetwork"/>
              <ownedOperation xmi:id="_U0uh4KlTEe-NBpoHimppkw" name="WarpSystem" method="_U2qbmKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0uh5KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0uh5alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_U0uh4alTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0uh4qlTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0uh46lTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0uh5qlTEe-NBpoHimppkw" type="_UkwMMKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0vI8KlTEe-NBpoHimppkw" name="createProgram" visibility="private" method="_U2rCqKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U0vwAKlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0vwAalTEe-NBpoHimppkw" name="numChannels">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0vwAqlTEe-NBpoHimppkw" name="choice" type="_U0X8kKlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UlBR8KlTEe-NBpoHimppkw" name="WorkLoadListener" visibility="package" isLeaf="true">
              <ownedComment xmi:id="_U2-koKlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_U0xlMKlTEe-NBpoHimppkw" general="_Ux3bIalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U118NKlTEe-NBpoHimppkw" name="workLoad" visibility="package" type="_UlImsKlTEe-NBpoHimppkw" association="_U305MalTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U12jQalTEe-NBpoHimppkw" name="currentFlow" visibility="package">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpsKlTEe-NBpoHimppkw" name="WorkLoadListener" specification="_Uy-OYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpsalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2rpsqlTEe-NBpoHimppkw" type="_UlBR8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.workLoad = workLoad; // used to populate the workLoad as the input file is read&#xD;
     this.currentFlow = new String();&#xD;
  // Read input file and build AST of graphFile&#xD;
     try {&#xD;
     	CharStream inputGraph = CharStreams.fromString(workLoad.toString());&#xD;
     	var lexer = new WARPLexer(inputGraph);&#xD;
     	var tokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPParser(tokens);&#xD;
     	ParseTree warpTree = parser.warp(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	 // Now populate build the workLoad by walking the input Graph tokens&#xD;
     	warp.walk(this, warpTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;ERROR: Unable to parse graphFile&quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rps6lTEe-NBpoHimppkw" name="buildNodesAndFlows" specification="_Uy-1cKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rptKlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>/*&#xD;
 	 * Create the listener object, which will read the workLoad &#xD;
 	 * description and then buid the node and flow objects that&#xD;
 	 * instantiates the workLoad. This object is not needed&#xD;
 	 * after that.&#xD;
 	 */&#xD;
 	new WorkLoadListener(workLoad); &#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rptalTEe-NBpoHimppkw" name="testPrintStdOut" specification="_UlB5AKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rptqlTEe-NBpoHimppkw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n In WARPworkLoad Listener!!\n&quot;);&#xD;
 	System.out.printf(msg);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpt6lTEe-NBpoHimppkw" name="enterWarpName" specification="_Uy-1cqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpuKlTEe-NBpoHimppkw" name="ctx" type="_Ux4pR6lTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var name = ctx.getText();  // get the name of the graph &#xD;
     workLoad.setName(name); // store the  name for later reference&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpualTEe-NBpoHimppkw" name="enterFlowName" specification="_Uy_cgalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpuqlTEe-NBpoHimppkw" name="ctx" type="_Ux6ec6lTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>currentFlow = ctx.getText();&#xD;
     workLoad.addFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpu6lTEe-NBpoHimppkw" name="exitPriority" specification="_UzADkalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpvKlTEe-NBpoHimppkw" name="ctx" type="_Uy_chqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var priority = Integer.parseInt(ctx.getText());  // get priority from the AST&#xD;
     workLoad.setFlowPriority(currentFlow, priority);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpvalTEe-NBpoHimppkw" name="exitPeriod" specification="_UzAqpKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpvqlTEe-NBpoHimppkw" name="ctx" type="_UzAqoqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var period = Integer.parseInt(ctx.getText());// get period from the AST&#xD;
     workLoad.setFlowPeriod(currentFlow, period);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpv6lTEe-NBpoHimppkw" name="exitDeadline" specification="_UzB4walTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpwKlTEe-NBpoHimppkw" name="ctx" type="_UzBRs6lTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var deadline = Integer.parseInt(ctx.getText());// get deadline from the AST&#xD;
     workLoad.setFlowDeadline(currentFlow, deadline);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpwalTEe-NBpoHimppkw" name="exitPhase" specification="_UzCf0alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpwqlTEe-NBpoHimppkw" name="ctx" type="_UzB4xqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var phase = Integer.parseInt(ctx.getText());// get phase from the AST&#xD;
     workLoad.setFlowPhase(currentFlow, phase);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2rpw6lTEe-NBpoHimppkw" name="exitSrcNode" specification="_UzDG4alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2rpxKlTEe-NBpoHimppkw" name="ctx" type="_Ux7FhqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the src node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQwKlTEe-NBpoHimppkw" name="exitSnkNode" specification="_UzDG5qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQwalTEe-NBpoHimppkw" name="ctx" type="_Ux8ToqlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var nodeName = ctx.getText(); // get the snk node name&#xD;
     workLoad.addNodeToFlow(currentFlow, nodeName);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQwqlTEe-NBpoHimppkw" name="exitFlow" specification="_UzDt86lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQw6lTEe-NBpoHimppkw" name="ctx" type="_Ux86talTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>workLoad.finalizeCurrentFlow(currentFlow);&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UlB5AKlTEe-NBpoHimppkw" name="testPrintStdOut" method="_U2rptalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlB5AalTEe-NBpoHimppkw" name="msg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy-OYKlTEe-NBpoHimppkw" name="WorkLoadListener" visibility="private" method="_U2rpsKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Uy-OYqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Uy-OY6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Uy-OYalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uy-OZKlTEe-NBpoHimppkw" type="_UlBR8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy-1cKlTEe-NBpoHimppkw" name="buildNodesAndFlows" isStatic="true" method="_U2rps6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy-1calTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy-1cqlTEe-NBpoHimppkw" name="enterWarpName" method="_U2rpt6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy-1c6lTEe-NBpoHimppkw" name="ctx" type="_Ux4pR6lTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Uy_cgalTEe-NBpoHimppkw" name="enterFlowName" method="_U2rpualTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uy_cgqlTEe-NBpoHimppkw" name="ctx" type="_Ux6ec6lTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzADkalTEe-NBpoHimppkw" name="exitPriority" method="_U2rpu6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzADkqlTEe-NBpoHimppkw" name="ctx" type="_Uy_chqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzAqpKlTEe-NBpoHimppkw" name="exitPeriod" method="_U2rpvalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzAqpalTEe-NBpoHimppkw" name="ctx" type="_UzAqoqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzB4walTEe-NBpoHimppkw" name="exitDeadline" method="_U2rpv6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzB4wqlTEe-NBpoHimppkw" name="ctx" type="_UzBRs6lTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzCf0alTEe-NBpoHimppkw" name="exitPhase" method="_U2rpwalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzCf0qlTEe-NBpoHimppkw" name="ctx" type="_UzB4xqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzDG4alTEe-NBpoHimppkw" name="exitSrcNode" method="_U2rpw6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzDG4qlTEe-NBpoHimppkw" name="ctx" type="_Ux7FhqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzDG5qlTEe-NBpoHimppkw" name="exitSnkNode" method="_U2sQwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzDG56lTEe-NBpoHimppkw" name="ctx" type="_Ux8ToqlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzDt86lTEe-NBpoHimppkw" name="exitFlow" method="_U2sQwqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzDt9KlTEe-NBpoHimppkw" name="ctx" type="_Ux86talTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UlEVQKlTEe-NBpoHimppkw" name="WorkLoadDescription">
              <ownedComment xmi:id="_U2-koalTEe-NBpoHimppkw">
                <body>Reads the input file, whose name is passed as input parameter to the constructor, and builds a&#xD;
Description object based on the contents. Each line of the file is an entry (string) in the&#xD;
Description object.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <generalization xmi:id="_UzGKMalTEe-NBpoHimppkw" general="_UkjX4KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U13KUKlTEe-NBpoHimppkw" name="EMPTY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U13KUalTEe-NBpoHimppkw" value="&quot;&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U13KUqlTEe-NBpoHimppkw" name="INPUT_FILE_SUFFIX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U13KU6lTEe-NBpoHimppkw" value="&quot;.wld&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U13KVKlTEe-NBpoHimppkw" name="description" visibility="private" type="_Ug61EKlTEe-NBpoHimppkw" association="_U31gQKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U13xYKlTEe-NBpoHimppkw" name="inputGraphString" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U13xYqlTEe-NBpoHimppkw" name="fm" visibility="private" type="_UhHCUKlTEe-NBpoHimppkw" association="_U31gQ6lTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U13xZKlTEe-NBpoHimppkw" name="inputFileName" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQxKlTEe-NBpoHimppkw" name="WorkLoadDescription" specification="_UlE8UKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQxalTEe-NBpoHimppkw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2sQxqlTEe-NBpoHimppkw" type="_UlEVQKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(new FileManager(), EMPTY, INPUT_FILE_SUFFIX); // VisualizationObject constructor&#xD;
 this.fm = this.getFileManager();&#xD;
 initialize(inputFileName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQx6lTEe-NBpoHimppkw" name="visualization" specification="_UlFjYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQyKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQyalTEe-NBpoHimppkw" name="fileVisualization" specification="_UlGKcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQyqlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return description;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQy6lTEe-NBpoHimppkw" name="toString" specification="_UlGxgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQzKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return inputGraphString;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQzalTEe-NBpoHimppkw" name="initialize" specification="_UlHYkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQzqlTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>// Get the input graph file name and read its contents&#xD;
 InputGraphFile gf = new InputGraphFile(fm);&#xD;
 inputGraphString = gf.readGraphFile(inputFile);&#xD;
 this.inputFileName = gf.getGraphFileName();&#xD;
 description = new Description(inputGraphString);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UlE8UKlTEe-NBpoHimppkw" name="WorkLoadDescription" visibility="package" method="_U2sQxKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UlE8UqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UlE8U6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UlE8UalTEe-NBpoHimppkw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlE8VKlTEe-NBpoHimppkw" type="_UlEVQKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlFjYKlTEe-NBpoHimppkw" name="visualization" method="_U2sQx6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzFjIKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlGKcKlTEe-NBpoHimppkw" name="fileVisualization" method="_U2sQyalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzGKMKlTEe-NBpoHimppkw" type="_Ug61EKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlGxgKlTEe-NBpoHimppkw" name="toString" method="_U2sQy6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlGxgalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlHYkKlTEe-NBpoHimppkw" name="initialize" visibility="private" method="_U2sQzalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlHYkalTEe-NBpoHimppkw" name="inputFile">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UlImsKlTEe-NBpoHimppkw" name="WorkLoad">
              <ownedComment xmi:id="_U2-koqlTEe-NBpoHimppkw">
                <body>Build the nodes and flows for the workload described in the workload description file, whose name&#xD;
is passed into the Constructor via the parameter inputFileName. Good default values for the&#xD;
constructors are m = 0.9, e2e = 0.99, and numFaults = 1 when the second constructor is used.&#xD;
&#xD;
@author sgoddard&#xD;
@version 1.4&#xD;
 *</body>
              </ownedComment>
              <generalization xmi:id="_UzImc6lTEe-NBpoHimppkw" general="_UlEVQKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U14YcKlTEe-NBpoHimppkw" name="DEFAULT_PRIORITY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14YcalTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14YcqlTEe-NBpoHimppkw" name="DEFAULT_INDEX" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14Yc6lTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14YdKlTEe-NBpoHimppkw" name="DEFAULT_TX_NUM" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14YdalTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14YdqlTEe-NBpoHimppkw" name="FLOW_WARNING" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14Yd6lTEe-NBpoHimppkw" value="&quot;\n\tWarning! Bad situation: &quot; + &quot;Flow %s doesn't exist but trying to &quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14YeKlTEe-NBpoHimppkw" name="numFaults" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14YealTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14_gKlTEe-NBpoHimppkw" name="minPacketReceptionRate" type="_U0aY0KlTEe-NBpoHimppkw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14_galTEe-NBpoHimppkw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14_gqlTEe-NBpoHimppkw" name="e2e" visibility="private" type="_U0aY0KlTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14_g6lTEe-NBpoHimppkw" value="0.0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14_halTEe-NBpoHimppkw" name="intForNodeNames">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14_hqlTEe-NBpoHimppkw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U14_h6lTEe-NBpoHimppkw" name="intForFlowNames" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U14_iKlTEe-NBpoHimppkw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U15mkalTEe-NBpoHimppkw" name="flows" type="_UhakUKlTEe-NBpoHimppkw" association="_U2_LsKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U15mkqlTEe-NBpoHimppkw" name="nodes" type="_UiIWAKlTEe-NBpoHimppkw" association="_U2_LsqlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U15mk6lTEe-NBpoHimppkw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U15mlalTEe-NBpoHimppkw" name="flowNamesInOriginalOrder" type="_UxYS8KlTEe-NBpoHimppkw" association="_U32HUalTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U16NoalTEe-NBpoHimppkw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U160sKlTEe-NBpoHimppkw" name="flowNamesInPriorityOrder" type="_UxYS8KlTEe-NBpoHimppkw" association="_U32uYKlTEe-NBpoHimppkw">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U17bwalTEe-NBpoHimppkw" value="new ArrayList&lt;>()"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U17bwqlTEe-NBpoHimppkw" name="numFaultModel" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_UzHYUalTEe-NBpoHimppkw" client="_UlImsKlTEe-NBpoHimppkw" supplier="_UjUBwKlTEe-NBpoHimppkw" contract="_UjUBwKlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2sQz6lTEe-NBpoHimppkw" name="WorkLoad" specification="_U0yzUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2sQ0KlTEe-NBpoHimppkw" name="m" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2sQ0alTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2sQ0qlTEe-NBpoHimppkw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2sQ06lTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s30KlTEe-NBpoHimppkw" name="WorkLoad" specification="_U0zaYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s30alTEe-NBpoHimppkw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2s30qlTEe-NBpoHimppkw" name="m" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2s306lTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2s31KlTEe-NBpoHimppkw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2s31alTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>super(inputFileName);&#xD;
 setDefaultParameters();&#xD;
 this.numFaults = numFaults;&#xD;
 if (numFaults > 0) {&#xD;
   numFaultModel = true;&#xD;
 }&#xD;
 minPacketReceptionRate = m; // use file manager passed to this object&#xD;
 this.e2e = e2e; // use populate this flows object as the input file is read&#xD;
 /*&#xD;
  * Read input file, build the AST of graph and the listener will build the node and flow data&#xD;
  * objects&#xD;
  */&#xD;
 WorkLoadListener.buildNodesAndFlows(this);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s31qlTEe-NBpoHimppkw" name="setDefaultParameters" specification="_UlLC8KlTEe-NBpoHimppkw">
                <language>java</language>
                <body>intForNodeNames = true; // default is that node names are all alpha names&#xD;
 intForFlowNames = true; // default is that node names are all alpha names&#xD;
 flows = new FlowMap(); // map of all flow nodes in the WARP graph (&lt;name, Flow>)&#xD;
 nodes = new NodeMap(); // map of all graph nodes in the WARP graph (&lt;name, Node>)&#xD;
 flowNamesInOriginalOrder = new ArrayList&lt;>(); // array to hold names of flows to preserve their&#xD;
                                               // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 numFaults = DEFAULT_TX_NUM;&#xD;
 numFaultModel = false;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s316lTEe-NBpoHimppkw" name="getE2e" specification="_UlLC8alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s32KlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s32alTEe-NBpoHimppkw" name="getIntForFlowNames" specification="_UlLC8qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s32qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s326lTEe-NBpoHimppkw" name="getName" specification="_UlLqAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s33KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s33alTEe-NBpoHimppkw" name="setMinPacketReceptionRate" specification="_U00BcalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s33qlTEe-NBpoHimppkw" name="minPacketReceptionRate" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.minPacketReceptionRate = minPacketReceptionRate;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s336lTEe-NBpoHimppkw" name="getMaxPhase" specification="_UlLqAqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s34KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new MaxPhaseComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s34alTEe-NBpoHimppkw" name="getMinPeriod" specification="_UlMREalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s34qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var queue = new SchedulableObjectQueue&lt;Flow>(new PeriodComparator&lt;Flow>(), flows.values());&#xD;
 return queue.poll().getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2s346lTEe-NBpoHimppkw" name="setE2e" specification="_U00Bc6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2s35KlTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>this.e2e = e2e;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te4KlTEe-NBpoHimppkw" name="setIntForFlowNames" specification="_UlMRE6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te4alTEe-NBpoHimppkw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.intForFlowNames = intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te4qlTEe-NBpoHimppkw" name="setName" specification="_UlM4IKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te46lTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te5KlTEe-NBpoHimppkw" name="setNodeChannel" specification="_UlM4IqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te5alTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2te5qlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 node.setChannel(channel);&#xD;
 nodes.put(name, node); // update the nodes map with the updated object&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te56lTEe-NBpoHimppkw" name="getNodeChannel" specification="_UlM4JalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te6KlTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2te6alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var node = nodes.get(name); // get the node object&#xD;
 return node.getChannel();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te6qlTEe-NBpoHimppkw" name="addFlow" specification="_UlNfMalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te66lTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>/*&#xD;
  * add a new flow node to the Flows dictionary. Only name, priority, and index are changed from&#xD;
  * default values priority is set to the number of flows already added (index), 0 for first flow&#xD;
  * This will create a default priority equal to the order listed in the input graph file. We&#xD;
  * also set index to the same value so we can preserve that order as a secondary sort key. The&#xD;
  * initalPriority field is probably not needed, but it might be useful in the future?? If the&#xD;
  * optional flow parameters (priority, period, ...) is set, then this default priority will be&#xD;
  * over written&#xD;
  */&#xD;
 if (flows.containsKey(flowName)) {&#xD;
   System.out.printf(&quot;\n\tWarning! A flow with name %s already exists. &quot;&#xD;
       + &quot;It has been replaced with a new flow\n.&quot;);&#xD;
 }&#xD;
 var index = flows.size();&#xD;
 var flowNode = new Flow(flowName, index, index);&#xD;
 flows.put(flowName, flowNode);&#xD;
 if (!Utilities.isInteger(flowName) &amp;&amp; intForFlowNames) {&#xD;
   intForFlowNames = false; // set false because name not is a number; &amp;&amp; above makes sure we&#xD;
                            // only set it once&#xD;
 }&#xD;
 flowNamesInOriginalOrder.add(flowName);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te7KlTEe-NBpoHimppkw" name="isIntForNodeNames" specification="_UlNfM6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te7alTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all node names are ints&#xD;
 return intForNodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te7qlTEe-NBpoHimppkw" name="isIntForFlowNames" specification="_UlNfNalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te76lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// returns true if all flow names are an ints&#xD;
 return intForFlowNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te8KlTEe-NBpoHimppkw" name="addNodeToFlow" specification="_UlOGQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te8alTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2te8qlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (!Utilities.isInteger(nodeName) &amp;&amp; intForNodeNames) {&#xD;
   /* set false because name not is a number; &amp;&amp; above makes sure we only set it once */&#xD;
   intForNodeNames = false;&#xD;
 }&#xD;
 if (!nodes.containsKey(nodeName)) { // create the node and add it to nodes if map doesn't have&#xD;
                                     // this node already.&#xD;
   /* If the node already exists, just need to add to the flow */&#xD;
   var index = nodes.size(); // nodeIndex will be the order added&#xD;
   var graphNode = new Node(nodeName, DEFAULT_PRIORITY, index); // create a new graph node&#xD;
   nodes.put(nodeName, graphNode); // add it to the map of nodes&#xD;
 }&#xD;
 /*&#xD;
  * Node is now created and in the nodes map Next we need to get the current flow and add this&#xD;
  * node to that flow by appending it to the node array for that flow&#xD;
  */&#xD;
 var flowNode = getFlow(flowName);&#xD;
 var graphNode = new Node(nodeName, flowNode.nodes.size(), DEFAULT_INDEX);&#xD;
 /* the priority is the node's index in the flow, which is the current array size */&#xD;
 flowNode.addNode(graphNode);&#xD;
 flowNode.linkTxAndTotalCost.add(DEFAULT_TX_NUM);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te86lTEe-NBpoHimppkw" name="getFlowPriority" specification="_UlOGQ6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te9KlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2te9alTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2te9qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var priority = 0;&#xD;
 var flow = getFlow(flowName);&#xD;
 Iterator&lt;Node> nodes = flow.nodes.iterator();&#xD;
 while (nodes.hasNext()) {&#xD;
   var node = nodes.next();&#xD;
   if (node.getName() == nodeName) {&#xD;
     priority = node.getPriority(); // found the src node, set its index&#xD;
     break;&#xD;
   }&#xD;
 }&#xD;
 return priority;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te96lTEe-NBpoHimppkw" name="setFlowPriority" specification="_UlOtU6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te-KlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2te-alTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPriority(priority);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2te-qlTEe-NBpoHimppkw" name="setFlowPeriod" specification="_UlOtVqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2te-6lTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2te_KlTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPeriod(period);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uF8KlTEe-NBpoHimppkw" name="setFlowDeadline" specification="_UlPUYqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uF8alTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uF8qlTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setDeadline(deadline);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uF86lTEe-NBpoHimppkw" name="setFlowPhase" specification="_UlPUZalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uF9KlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uF9alTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 flowNode.setPhase(phase);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uF9qlTEe-NBpoHimppkw" name="getFlowIndex" specification="_UlP7cKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uF96lTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uF-KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uF-alTEe-NBpoHimppkw" name="getFlowPriority" specification="_UlP7c6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uF-qlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uF-6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPriority();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uF_KlTEe-NBpoHimppkw" name="getFlowPeriod" specification="_UlQigalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uF_alTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uF_qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPeriod();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uF_6lTEe-NBpoHimppkw" name="getFlowDeadline" specification="_UlQihKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uGAKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uGAalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getDeadline();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uGAqlTEe-NBpoHimppkw" name="getFlowPhase" specification="_UlRJkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uGA6lTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uGBKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.getPhase();&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uGBalTEe-NBpoHimppkw" name="getFlowTxAttemptsPerLink" specification="_UlRJk6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uGBqlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2uGB6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = getFlow(flowName);&#xD;
 return flowNode.numTxPerLink;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uGCKlTEe-NBpoHimppkw" name="setFlowsInPriorityOrder" specification="_UlRJlqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is index in this case&#xD;
 List&lt;Flow> sortedByIndex = unsortedFlows.stream().sorted(Comparator.comparing(Flow::getIndex))&#xD;
     .collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is priority in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByIndex.stream().sorted(Comparator.comparing(Flow::getPriority))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uGCalTEe-NBpoHimppkw" name="setFlowsInDMorder" specification="_UlRwoKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>/* create a list of Flow objects from the FlowMap using the stream interface. */&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 /* Now sort by a secondary key, which is priority in this case */&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 /* Now sort by primary key, which is deadline in this case */&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getDeadline)).collect(Collectors.toList());&#xD;
 /*&#xD;
  * Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
  * order&#xD;
  */&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uGCqlTEe-NBpoHimppkw" name="setFlowsInRMorder" specification="_UlRwoalTEe-NBpoHimppkw">
                <language>java</language>
                <body>// create a list of Flow objects from the FlowMap using the stream interface.&#xD;
 List&lt;Flow> unsortedFlows = flows.values().stream().collect(Collectors.toList());&#xD;
 // Now sort by a secondary key, which is priority in this case&#xD;
 List&lt;Flow> sortedByPriority = unsortedFlows.stream()&#xD;
     .sorted(Comparator.comparing(Flow::getPriority)).collect(Collectors.toList());&#xD;
 // Now sort by primary key, which is period in this case&#xD;
 List&lt;Flow> sortedFlows = sortedByPriority.stream().sorted(Comparator.comparing(Flow::getPeriod))&#xD;
     .collect(Collectors.toList());&#xD;
 // Finally, create a new flowNamesInPriorityOrder that contains the flow names in the requested&#xD;
 // order&#xD;
 flowNamesInPriorityOrder = new ArrayList&lt;>();&#xD;
 sortedFlows.forEach((node) -> flowNamesInPriorityOrder.add(node.getName()));&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uGC6lTEe-NBpoHimppkw" name="setFlowsInRealTimeHARTorder" specification="_UlRwoqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>setFlowsInPriorityOrder(); // use Priority order for RealTimeHART&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2uGDKlTEe-NBpoHimppkw" name="finalizeCurrentFlow" specification="_UlRwo6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2uGDalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>if (numFaultModel) {&#xD;
   finalizeFlowWithFixedFaultTolerance(flowName);&#xD;
 } else {&#xD;
   finalizeFlowWithE2eParameters(flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utAKlTEe-NBpoHimppkw" name="nextReleaseTime" specification="_UlRwpalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utAalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2utAqlTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2utA6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime(); // next release Time at or after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utBKlTEe-NBpoHimppkw" name="nextAbsoluteDeadline" specification="_UlSXs6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utBalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2utBqlTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2utB6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 flow.setLastUpdateTime(currentTime);&#xD;
 flow.setNextReleaseTime(currentTime);&#xD;
 return flow.getReleaseTime() + flow.getDeadline(); // next deadline after currentTime&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utCKlTEe-NBpoHimppkw" name="finalizeFlowWithE2eParameters" specification="_UlSXt6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utCalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 var m = minPacketReceptionRate; // shorten the name :-)&#xD;
 if (flowNode != null) {&#xD;
   var nodes = flowNode.nodes;&#xD;
   int nHops = nodes.size();&#xD;
   if (nHops &lt; 1) {&#xD;
     /*&#xD;
      * number of hops in flow, but make sure it will be at least 1, else it isn't a flow! || was&#xD;
      * -1 at end&#xD;
      */&#xD;
     nHops = 2;&#xD;
   }&#xD;
   Double nTx = 1.0; // set nTx to 1 by default (1 transmission per link required at a minimum&#xD;
                     // and when m == 1.0&#xD;
   if (m &lt; 1.0) {&#xD;
     /*&#xD;
      * now compute nTXper link based on Ryan's formula: log(1 - e2e^(1/hops)) / log(1 - M) = #&#xD;
      * txs per hop&#xD;
      */&#xD;
     nTx = Math.log((1.0 - Math.pow(e2e, (1.0 / (double) nHops)))) / Math.log(1.0 - m);&#xD;
   }&#xD;
   /* set numTxPerLink based on M, E2E, and flow length */&#xD;
   flowNode.numTxPerLink = (int) Math.ceil(nTx);&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   var ra = new ReliabilityAnalysis(e2e, m);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = ra.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utCqlTEe-NBpoHimppkw" name="finalizeFlowWithFixedFaultTolerance" specification="_UlS-wKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utC6lTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>var flowNode = flows.get(flowName);&#xD;
 if (flowNode != null) {&#xD;
   /* set numTxPerLink based on numFaults */&#xD;
   flowNode.numTxPerLink = numFaults + 1;&#xD;
   /* Now compute nTx per link to reach E2E requirement. */&#xD;
   var ra = new ReliabilityAnalysis(numFaults);&#xD;
   ArrayList&lt;Integer> linkTxAndTotalCost = ra.numTxPerLinkAndTotalTxCost(flowNode);&#xD;
   flowNode.linkTxAndTotalCost = linkTxAndTotalCost;&#xD;
   flows.put(flowName, flowNode); // update flow node in Flows array&#xD;
 } else { // should never happen...&#xD;
   System.out.printf(&quot;\n\tWarning! Bad situation: Flow %s doesn't exist but &quot;&#xD;
       + &quot;trying to get its numTxPerLink property\n.&quot;, flowName);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utDKlTEe-NBpoHimppkw" name="getNodeNamesOrderedAlphabetically" specification="_UlS-wqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utDalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2utDqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var nodes = getNodes();&#xD;
 Set&lt;String> keys = nodes.keySet(); // get the names from the node map&#xD;
 String[] nodeNames = keys.toArray(new String[keys.size()]);&#xD;
 Arrays.sort(nodeNames); // NodeNames are now sorted&#xD;
 // However, if names are actually strings of integers, then the sort doesn't come out&#xD;
 // the way we would like. So, handle that case&#xD;
 var nodeNamesAsInts = new Integer[nodeNames.length];&#xD;
 var allIntNames = true; // flag to see if all names are Ints or not&#xD;
 for (int i = 0; i &lt; nodeNames.length; i++) {&#xD;
   var nodeName = nodeNames[i];&#xD;
   if (Utilities.isInteger(nodeName) &amp;&amp; allIntNames) {&#xD;
     // nodeName is an alpha representation of an integer&#xD;
     nodeNamesAsInts[i] = Integer.parseInt(nodeName);&#xD;
   } else {&#xD;
     // nodeName is an alpha name and not an integer, so set flag and terminate loop&#xD;
     allIntNames = false; // set false because name not is a number; &amp;&amp; above makes sure we only&#xD;
                          // set it once&#xD;
     break; // can stop the loop once we know not all of the names are ints&#xD;
   }&#xD;
 }&#xD;
 if (allIntNames) {&#xD;
   // If all names are ints, then we need to sort them accordingly&#xD;
   // Otherwise, we get names in what appears to not be in order because&#xD;
   Arrays.sort(nodeNamesAsInts); // sort the ints in assending order&#xD;
   for (int i = 0; i &lt; nodeNamesAsInts.length; i++) {&#xD;
     nodeNames[i] = Integer.toString(nodeNamesAsInts[i]); // convert int to string&#xD;
   }&#xD;
 }&#xD;
 return nodeNames;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utD6lTEe-NBpoHimppkw" name="getFlow" specification="_UlTl0KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utEKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2utEalTEe-NBpoHimppkw" type="_UhMh4KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>var flow = flows.get(flowName); // get the requested flow node&#xD;
 if (flow == null) {// return empty node if not found&#xD;
   flow = new Flow();&#xD;
   System.out.printf(FLOW_WARNING + &quot;retrieve it\n.&quot;, flowName);&#xD;
 }&#xD;
 return flow;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utEqlTEe-NBpoHimppkw" name="getFlowNames" specification="_UlTl0qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utE6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2utFKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return flowNamesInOriginalOrder.toArray(new String[0]);&#xD;
 // could use new String[list.size()], but due to JVM optimizations new (new String[0] is better&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utFalTEe-NBpoHimppkw" name="getNodeIndex" specification="_UlUM4qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utFqlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2utF6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var index = 0;&#xD;
 var node = nodes.get(nodeName); // could throw an exception if null, but just return 0 for now&#xD;
 if (node != null) {&#xD;
   index = node.getIndex();&#xD;
 }&#xD;
 return index;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utGKlTEe-NBpoHimppkw" name="getNodesInFlow" specification="_UlUz8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utGalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2utGqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2utG6lTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// get the flow node for requested Flow and then loop through the&#xD;
 // nodes in the flow to create an array of the node names in&#xD;
 // the same order as they exist in the flow specification (i.e., Graph file)&#xD;
 var flow = flows.get(flowName);&#xD;
 String[] nodes;&#xD;
 if (flow != null) {&#xD;
   nodes = new String[flow.nodes.size()];&#xD;
   for (int i = 0; i &lt; nodes.length; i++) {&#xD;
     var node = flow.nodes.get(i); // get the node from the arrayList&#xD;
     nodes[i] = node.getName(); // get the name and store it in the array&#xD;
   }&#xD;
&#xD;
 } else {&#xD;
   nodes = new String[0]; // return empty array&#xD;
   System.out.printf(&quot;\n\t Warning! No Flow with name %s.\n&quot;, flowName);&#xD;
 }&#xD;
 return nodes;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2utHKlTEe-NBpoHimppkw" name="getHyperPeriod" specification="_UlUz9alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2utHalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var hyperPeriod = 1; // hyperPeriod is LCM of all periods. Initialize to 1&#xD;
 for (String flowName : getFlowNames()) {&#xD;
   // var dm = new Utlitities();&#xD;
   hyperPeriod = Utilities.lcm(hyperPeriod, getFlowPeriod(flowName)); // Find LCM of hyperPeriod&#xD;
                                                                      // so far and the current&#xD;
                                                                      // period, then update the&#xD;
                                                                      // hyperPeriod with that&#xD;
                                                                      // value&#xD;
 }&#xD;
 return hyperPeriod;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2vUEKlTEe-NBpoHimppkw" name="getTotalTxAttemptsInFlow" specification="_UlVbAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2vUEalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2vUEqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = flow.getLinkTxAndTotalCost();&#xD;
 var totalCostIndex = linkTxAndTotalCost.size() - 1;&#xD;
 var totalCost = linkTxAndTotalCost.get(totalCostIndex);&#xD;
 return totalCost;&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2vUE6lTEe-NBpoHimppkw" name="getNumTxAttemptsPerLink" specification="_UlVbA6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2vUFKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2vUFalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2vUFqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>var flow = getFlow(flowName);&#xD;
 var linkTxAndTotalCost = new ArrayList&lt;Integer>(flow.getLinkTxAndTotalCost());&#xD;
 var lastElement = linkTxAndTotalCost.size() - 1;&#xD;
 linkTxAndTotalCost.remove(lastElement); // remove the last element, because that is the sum of&#xD;
                                         // others&#xD;
 return linkTxAndTotalCost.toArray(new Integer[0]);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2vUF6lTEe-NBpoHimppkw" name="addEdge" specification="_UzImcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2vUGKlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2vUGalTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var node = nodes.get(nodeName); // get the node object&#xD;
 node.addEdge(edge);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2vUGqlTEe-NBpoHimppkw" name="maxFlowLength" specification="_UlWCEalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2vUG6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>Integer maxLength = 0;&#xD;
 for (Flow flow : flows.values()) {&#xD;
   maxLength = Math.max(maxLength, flow.nodes.size());&#xD;
 }&#xD;
 return maxLength;&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UlLC8KlTEe-NBpoHimppkw" name="setDefaultParameters" visibility="private" method="_U2s31qlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UlLC8alTEe-NBpoHimppkw" name="getE2e" method="_U2s316lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_LtqlTEe-NBpoHimppkw">
                  <body>Get the target end-to-end reliability for flow transmissions.&#xD;
   * &#xD;
   * @return the e2e reliability, in the range [0.5,1.0].</body>
                </ownedComment>
                <ownedParameter xmi:id="_U00BcKlTEe-NBpoHimppkw" type="_U0aY0KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlLC8qlTEe-NBpoHimppkw" name="getIntForFlowNames" method="_U2s32alTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_Lt6lTEe-NBpoHimppkw">
                  <body>True if all of the flow names are integer values.&#xD;
   * &#xD;
   * @return the intForFlowNames</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlLC86lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlLqAKlTEe-NBpoHimppkw" name="getName" method="_U2s326lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_LuKlTEe-NBpoHimppkw">
                  <body>Get the WorkLoad name, which is should be the name of the graph specified in the graph input&#xD;
   * file.&#xD;
   * &#xD;
   * @return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlLqAalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlLqAqlTEe-NBpoHimppkw" name="getMaxPhase" method="_U2s336lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_LuqlTEe-NBpoHimppkw">
                  <body>@return the maximum phase of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlMREKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlMREalTEe-NBpoHimppkw" name="getMinPeriod" method="_U2s34alTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_ywKlTEe-NBpoHimppkw">
                  <body>@return the minimum period of all flows</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlMREqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlMRE6lTEe-NBpoHimppkw" name="setIntForFlowNames" method="_U2te4KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_ywqlTEe-NBpoHimppkw">
                  <body>@param intForFlowNames the intForFlowNames to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlMRFKlTEe-NBpoHimppkw" name="intForFlowNames">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlM4IKlTEe-NBpoHimppkw" name="setName" method="_U2te4qlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yw6lTEe-NBpoHimppkw">
                  <body>Set the WorkLoad name, which is the name of the graph specified in the graph input file.&#xD;
   * &#xD;
   * @param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlM4IalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlM4IqlTEe-NBpoHimppkw" name="setNodeChannel" method="_U2te5KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yxKlTEe-NBpoHimppkw">
                  <body>@param name the node whose channel is to be set&#xD;
   * @param channel the channel the node will use for transmission</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlM4I6lTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlM4JKlTEe-NBpoHimppkw" name="channel">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlM4JalTEe-NBpoHimppkw" name="getNodeChannel" method="_U2te56lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yxalTEe-NBpoHimppkw">
                  <body>@return the node channel</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlM4JqlTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlNfMKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlNfMalTEe-NBpoHimppkw" name="addFlow" method="_U2te6qlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yxqlTEe-NBpoHimppkw">
                  <body>Add a flow to the flow map.&#xD;
   * &#xD;
   * @param flowName name of the flow to be added to the flow map.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlNfMqlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlNfM6lTEe-NBpoHimppkw" name="isIntForNodeNames" method="_U2te7KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlNfNKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlNfNalTEe-NBpoHimppkw" name="isIntForFlowNames" method="_U2te7qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlNfNqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlOGQKlTEe-NBpoHimppkw" name="addNodeToFlow" method="_U2te8KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yx6lTEe-NBpoHimppkw">
                  <body>Add a node to a flow, creating the node if it doesn't already exist.&#xD;
   * &#xD;
   * @param flowName the flow to which the node is being added.&#xD;
   * @param nodeName the node to be added to the flow.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlOGQalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlOGQqlTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlOGQ6lTEe-NBpoHimppkw" name="getFlowPriority" method="_U2te86lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yyKlTEe-NBpoHimppkw">
                  <body>Get the priority of the specified node in the specified flow.&#xD;
   * &#xD;
   * @param flowName that contains the target node&#xD;
   * @param nodeName node whose priority is be returned&#xD;
   * @return the priority of node nodeName in flow flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlOtUKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlOtUalTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlOtUqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlOtU6lTEe-NBpoHimppkw" name="setFlowPriority" method="_U2te96lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yyalTEe-NBpoHimppkw">
                  <body>Set the priority of the specified flow.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @param priority value to be stored</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlOtVKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlOtValTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlOtVqlTEe-NBpoHimppkw" name="setFlowPeriod" method="_U2te-qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlPUYKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlPUYalTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlPUYqlTEe-NBpoHimppkw" name="setFlowDeadline" method="_U2uF8KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlPUY6lTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlPUZKlTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlPUZalTEe-NBpoHimppkw" name="setFlowPhase" method="_U2uF86lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlPUZqlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlPUZ6lTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlP7cKlTEe-NBpoHimppkw" name="getFlowIndex" method="_U2uF9qlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlP7calTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlP7cqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlP7c6lTEe-NBpoHimppkw" name="getFlowPriority" method="_U2uF-alTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yyqlTEe-NBpoHimppkw">
                  <body>Get the priority of the specified specified flow.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return the priority of flow flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlP7dKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlQigKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlQigalTEe-NBpoHimppkw" name="getFlowPeriod" method="_U2uF_KlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yy6lTEe-NBpoHimppkw">
                  <body>Get the period of the specified flow.&#xD;
   * &#xD;
   * @param flowName name of the flow&#xD;
   * @return the flow's period</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlQigqlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlQig6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlQihKlTEe-NBpoHimppkw" name="getFlowDeadline" method="_U2uF_6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yzKlTEe-NBpoHimppkw">
                  <body>Get the deadline of the specified specified flow.&#xD;
   * &#xD;
   * @param flowName name of the flow&#xD;
   * @return the deadline of flow flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlQihalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlQihqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlRJkKlTEe-NBpoHimppkw" name="getFlowPhase" method="_U2uGAqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yzalTEe-NBpoHimppkw">
                  <body>Get the phase of the specified specified flow.&#xD;
   * &#xD;
   * @param flowName name of the flow&#xD;
   * @return the phase of flow flowName</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlRJkalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlRJkqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlRJk6lTEe-NBpoHimppkw" name="getFlowTxAttemptsPerLink" method="_U2uGBalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yzqlTEe-NBpoHimppkw">
                  <body>Get the number of transmissions required for each edge/link (used when a fixed number of&#xD;
   * transmissions is assumed, e.g., for the f-fault model).&#xD;
   * &#xD;
   * @param flowName name of the specified flow.&#xD;
   * @return number of transmissions required per edge (link)</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlRJlKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlRJlalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlRJlqlTEe-NBpoHimppkw" name="setFlowsInPriorityOrder" method="_U2uGCKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_yz6lTEe-NBpoHimppkw">
                  <body>Order nodes by their priority attribute, with smallest priority value having the highest&#xD;
   * priority (i.e., first in the list).</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_UlRwoKlTEe-NBpoHimppkw" name="setFlowsInDMorder" method="_U2uGCalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_y0KlTEe-NBpoHimppkw">
                  <body>Order nodes by their relative deadline parameters, with smallest deadlines having the highest&#xD;
   * priority (i.e., first in the list).</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_UlRwoalTEe-NBpoHimppkw" name="setFlowsInRMorder" method="_U2uGCqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_y0alTEe-NBpoHimppkw">
                  <body>Order nodes by their relative period parameters, with smallest period having the highest&#xD;
   * priority (i.e., first in the list).</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_UlRwoqlTEe-NBpoHimppkw" name="setFlowsInRealTimeHARTorder" method="_U2uGC6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UlRwo6lTEe-NBpoHimppkw" name="finalizeCurrentFlow" method="_U2uGDKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlRwpKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlRwpalTEe-NBpoHimppkw" name="nextReleaseTime" method="_U2utAKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlSXsKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlSXsalTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlSXsqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlSXs6lTEe-NBpoHimppkw" name="nextAbsoluteDeadline" method="_U2utBKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlSXtKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlSXtalTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlSXtqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlSXt6lTEe-NBpoHimppkw" name="finalizeFlowWithE2eParameters" visibility="private" method="_U2utCKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlSXuKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlS-wKlTEe-NBpoHimppkw" name="finalizeFlowWithFixedFaultTolerance" visibility="private" method="_U2utCqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlS-walTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlS-wqlTEe-NBpoHimppkw" name="getNodeNamesOrderedAlphabetically" method="_U2utDKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_y0qlTEe-NBpoHimppkw">
                  <body>Get the names of all nodes in the graph, listed in alphabetical order.&#xD;
   * &#xD;
   * @return an array of all node names listed in alphabetical order.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlS-w6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlS-xKlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlTl0KlTEe-NBpoHimppkw" name="getFlow" visibility="private" method="_U2utD6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlTl0alTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UzH_YKlTEe-NBpoHimppkw" type="_UhMh4KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlTl0qlTEe-NBpoHimppkw" name="getFlowNames" method="_U2utEqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_y06lTEe-NBpoHimppkw">
                  <body>Get the names of all flows in the work load, in their original order.&#xD;
   * &#xD;
   * @return an array of flow names in the order they were read from the graph file</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlTl06lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlUM4KlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlUM4qlTEe-NBpoHimppkw" name="getNodeIndex" method="_U2utFalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_y1KlTEe-NBpoHimppkw">
                  <body>Get the index of the node from the NodeMap.&#xD;
   * &#xD;
   * @param nameName name of the node whose index is requested&#xD;
   * @return the index matching the node name in the NodeMap.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlUM46lTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlUM5KlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlUz8KlTEe-NBpoHimppkw" name="getNodesInFlow" method="_U2utGKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_y1alTEe-NBpoHimppkw">
                  <body>Get an names of the nodes for the specified flow in the order in which they were specified in&#xD;
   * the input graph file.&#xD;
   * &#xD;
   * @param flowName&#xD;
   * @return an array of node names from a flow in their flow order</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlUz8alTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlUz8qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlUz86lTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlUz9alTEe-NBpoHimppkw" name="getHyperPeriod" method="_U2utHKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_y1qlTEe-NBpoHimppkw">
                  <body>Get the least-common-multiple (LCM) of all flow periods in the work load, which is called the&#xD;
   * hyperperiod.&#xD;
   * &#xD;
   * @return the LCM of the flow periods.</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlUz9qlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlVbAKlTEe-NBpoHimppkw" name="getTotalTxAttemptsInFlow" method="_U2vUEKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3AZ0KlTEe-NBpoHimppkw">
                  <body>Get the maximum number of transmission attempts a flow will make in sending a message from its&#xD;
   * source to its sink.&#xD;
   * &#xD;
   * @param flowName name of the flow&#xD;
   * @return the maximum number of transmission attempts</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlVbAalTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlVbAqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlVbA6lTEe-NBpoHimppkw" name="getNumTxAttemptsPerLink" method="_U2vUE6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3AZ0alTEe-NBpoHimppkw">
                  <body>Get the number of transmission attempts needed for each edge/link in the flow to meet its&#xD;
   * end-to-end target reliability.&#xD;
   * &#xD;
   * @param flowName name of the flow&#xD;
   * @return an array of the maximum number transmissions required per link in the flow&#xD;
   *</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlVbBKlTEe-NBpoHimppkw" name="flowName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlVbBalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_UlVbBqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlWCEalTEe-NBpoHimppkw" name="maxFlowLength" method="_U2vUGqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3AZ06lTEe-NBpoHimppkw">
                  <body>Get the maximum number of nodes in a flow, over all flows in the work load.&#xD;
   * &#xD;
   * @return the maximum flow length in the work load</body>
                </ownedComment>
                <ownedParameter xmi:id="_UlWCEqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzImcKlTEe-NBpoHimppkw" name="addEdge" method="_U2vUF6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3AZ0qlTEe-NBpoHimppkw">
                  <body>Add and edge to the specified node.&#xD;
   * &#xD;
   * @param nodeName name of the node&#xD;
   * @param edge the edge to be added to the node</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzImcalTEe-NBpoHimppkw" name="nodeName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UzImcqlTEe-NBpoHimppkw" name="edge" type="_Ug94YKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0yzUKlTEe-NBpoHimppkw" name="WorkLoad" visibility="package" method="_U2sQz6lTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0yzVKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0yzValTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U2_LtKlTEe-NBpoHimppkw">
                  <body>Constructor with parameters for the reliability fault model.&#xD;
   * &#xD;
   * @param m minimum link quality&#xD;
   * @param e2e end-to-end reliability&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_U0yzUalTEe-NBpoHimppkw" name="m" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0yzUqlTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0yzU6lTEe-NBpoHimppkw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0zaYKlTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U0zaYalTEe-NBpoHimppkw" name="WorkLoad" visibility="package" method="_U2s30KlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_U0zaZqlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_U0zaZ6lTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U2_LtalTEe-NBpoHimppkw">
                  <body>Constructor with parameters for the f-fault model.&#xD;
   * &#xD;
   * @param numFaults the number of faults to be tolerated by push/pull attempts&#xD;
   * @param m minimum link quality&#xD;
   * @param e2e end-to-end reliability&#xD;
   * @param inputFileName</body>
                </ownedComment>
                <ownedParameter xmi:id="_U0zaYqlTEe-NBpoHimppkw" name="numFaults">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0zaY6lTEe-NBpoHimppkw" name="m" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0zaZKlTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U0zaZalTEe-NBpoHimppkw" name="inputFileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U0zaaKlTEe-NBpoHimppkw" type="_UlImsKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U00BcalTEe-NBpoHimppkw" name="setMinPacketReceptionRate" method="_U2s33alTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_LualTEe-NBpoHimppkw">
                  <body>@param minPacketReceptionRate the minPacketReceptionRate to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_U00BcqlTEe-NBpoHimppkw" name="minPacketReceptionRate" type="_U0aY0KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_U00Bc6lTEe-NBpoHimppkw" name="setE2e" method="_U2s346lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U2_ywalTEe-NBpoHimppkw">
                  <body>@param e2e the e2e to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_U00BdKlTEe-NBpoHimppkw" name="e2e" type="_U0aY0KlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UlcIsKlTEe-NBpoHimppkw" name="WarpDSL">
              <ownedComment xmi:id="_U3AZ1KlTEe-NBpoHimppkw">
                <body>@author sgoddard&#xD;
 *</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U18p4KlTEe-NBpoHimppkw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U19Q8KlTEe-NBpoHimppkw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U19Q8alTEe-NBpoHimppkw" name="UNUSED" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U19Q8qlTEe-NBpoHimppkw" value="&quot;unused&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U194AKlTEe-NBpoHimppkw" name="PUSH" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U194AalTEe-NBpoHimppkw" value="&quot;push&quot;"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7LqlTEe-NBpoHimppkw" name="getInstructionParameters" specification="_UlfzEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2v7L6lTEe-NBpoHimppkw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2v7MKlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>ArrayList&lt;InstructionParameters> instructionParametersArrayList;&#xD;
 	var dsl = new ListenerDsl();&#xD;
     // Read input file and build AST of graph&#xD;
     try {&#xD;
     	CharStream inputInstruction = CharStreams.fromString(instruction);&#xD;
     	var lexer = new WARPdslLexer(inputInstruction);&#xD;
     	var instructionTokens = new CommonTokenStream(lexer);&#xD;
     	var parser = new WARPdslParser(instructionTokens);&#xD;
     	ParseTree instructionTree = parser.instruction(); // begin parsing at rule 'warp'&#xD;
     	var warp = new ParseTreeWalker();&#xD;
     	warp.walk(dsl, instructionTree);&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     	System.err.println(&quot;Unable to parse instruction instruction from the schedule entry:&quot; + e.getMessage());&#xD;
     }&#xD;
     instructionParametersArrayList = dsl.getInstructionParameters();&#xD;
     return instructionParametersArrayList;&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UlfzEKlTEe-NBpoHimppkw" name="getInstructionParameters" method="_U2v7LqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlfzEalTEe-NBpoHimppkw" name="instruction">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U012oKlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_UlcvwKlTEe-NBpoHimppkw" name="InstructionParameters">
                <ownedAttribute xmi:id="_U194AqlTEe-NBpoHimppkw" name="name" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U194A6lTEe-NBpoHimppkw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U194BKlTEe-NBpoHimppkw" name="flow" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U194BalTEe-NBpoHimppkw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U194BqlTEe-NBpoHimppkw" name="src" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1-fEKlTEe-NBpoHimppkw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U1-fEalTEe-NBpoHimppkw" name="snk" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1-fEqlTEe-NBpoHimppkw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U1-fE6lTEe-NBpoHimppkw" name="channel" isReadOnly="true">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1-fFKlTEe-NBpoHimppkw" value="UNUSED"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U1-fFalTEe-NBpoHimppkw" name="coordinator" visibility="private">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1-fFqlTEe-NBpoHimppkw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U1_GIKlTEe-NBpoHimppkw" name="listener">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <defaultValue xmi:type="uml:LiteralString" xmi:id="_U1_GIalTEe-NBpoHimppkw" value="UNKNOWN"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2vUHKlTEe-NBpoHimppkw" name="getCoordinator" specification="_UldW0KlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2vUHalTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7IKlTEe-NBpoHimppkw" name="setCoordinator" specification="_Uld94alTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7IalTEe-NBpoHimppkw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.coordinator = coordinator;&#xD;
		</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7IqlTEe-NBpoHimppkw" name="setName" specification="_Uld946lTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7I6lTEe-NBpoHimppkw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.name = name;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7JKlTEe-NBpoHimppkw" name="setFlow" specification="_Ulek8KlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7JalTEe-NBpoHimppkw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.flow = flow;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7JqlTEe-NBpoHimppkw" name="setSrc" specification="_Ulek8qlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7J6lTEe-NBpoHimppkw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.src = src;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7KKlTEe-NBpoHimppkw" name="setSnk" specification="_Ulek9KlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7KalTEe-NBpoHimppkw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.snk = snk;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7KqlTEe-NBpoHimppkw" name="setChannel" specification="_UlfMAKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7K6lTEe-NBpoHimppkw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>this.channel = channel;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7LKlTEe-NBpoHimppkw" name="unused" specification="_UlfMAqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7LalTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>return UNUSED;&#xD;
		</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_UldW0KlTEe-NBpoHimppkw" name="getCoordinator" method="_U2vUHKlTEe-NBpoHimppkw">
                  <ownedComment xmi:id="_U3AZ1alTEe-NBpoHimppkw">
                    <body>@return the coordinator</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Uld94KlTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Uld94alTEe-NBpoHimppkw" name="setCoordinator" method="_U2v7IKlTEe-NBpoHimppkw">
                  <ownedComment xmi:id="_U3AZ1qlTEe-NBpoHimppkw">
                    <body>@param coordinator the coordinator to set</body>
                  </ownedComment>
                  <ownedParameter xmi:id="_Uld94qlTEe-NBpoHimppkw" name="coordinator">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Uld946lTEe-NBpoHimppkw" name="setName" visibility="private" method="_U2v7IqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_Uld95KlTEe-NBpoHimppkw" name="name">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Ulek8KlTEe-NBpoHimppkw" name="setFlow" visibility="private" method="_U2v7JKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_Ulek8alTEe-NBpoHimppkw" name="flow">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Ulek8qlTEe-NBpoHimppkw" name="setSrc" visibility="private" method="_U2v7JqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_Ulek86lTEe-NBpoHimppkw" name="src">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_Ulek9KlTEe-NBpoHimppkw" name="setSnk" visibility="private" method="_U2v7KKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_Ulek9alTEe-NBpoHimppkw" name="snk">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_UlfMAKlTEe-NBpoHimppkw" name="setChannel" visibility="private" method="_U2v7KqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UlfMAalTEe-NBpoHimppkw" name="channel">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:id="_UlfMAqlTEe-NBpoHimppkw" name="unused" method="_U2v7LKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UlfMA6lTEe-NBpoHimppkw" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedParameter>
                </ownedOperation>
              </nestedClassifier>
              <nestedClassifier xmi:type="uml:Class" xmi:id="_UlhBMKlTEe-NBpoHimppkw" name="ListenerDsl" visibility="private" isLeaf="true">
                <generalization xmi:id="_U03EwalTEe-NBpoHimppkw" general="_U02dsKlTEe-NBpoHimppkw"/>
                <ownedAttribute xmi:id="_U1_GIqlTEe-NBpoHimppkw" name="inAction" visibility="package">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                </ownedAttribute>
                <ownedAttribute xmi:id="_U1_tMalTEe-NBpoHimppkw" name="instructionParametersArrayList" visibility="package" type="_UxYS8KlTEe-NBpoHimppkw" association="_U32uY6lTEe-NBpoHimppkw"/>
                <ownedAttribute xmi:id="_U2AUQqlTEe-NBpoHimppkw" name="instructionParameters" visibility="package" type="_UlcvwKlTEe-NBpoHimppkw" association="_U33VcalTEe-NBpoHimppkw"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7MalTEe-NBpoHimppkw" name="ListenerDsl" specification="_UlhoQKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7MqlTEe-NBpoHimppkw" type="_UlhBMKlTEe-NBpoHimppkw" direction="return"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList = new ArrayList&lt;InstructionParameters>();&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7M6lTEe-NBpoHimppkw" name="getInstructionParameters" specification="_UlhoRKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7NKlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                  <language>java</language>
                  <body>return instructionParametersArrayList;&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2v7NalTEe-NBpoHimppkw" name="enterAction" specification="_UzMQ0qlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2v7NqlTEe-NBpoHimppkw" name="ctx" type="_UzMQ0KlTEe-NBpoHimppkw"/>
                  <language>java</language>
                  <body>inAction = true;&#xD;
         instructionParameters = new InstructionParameters();  // create a new instance of the parameter structure with default initialization&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2wiMKlTEe-NBpoHimppkw" name="exitAction" specification="_UzM346lTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2wiMalTEe-NBpoHimppkw" name="ctx" type="_UzMQ0KlTEe-NBpoHimppkw"/>
                  <language>java</language>
                  <body>inAction = false;&#xD;
         instructionParametersArrayList.add(instructionParameters);  // this action is done, so add the parameters to the list&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2wiMqlTEe-NBpoHimppkw" name="exitFlowName" specification="_UzOGAKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2wiM6lTEe-NBpoHimppkw" name="ctx" type="_UzNe8qlTEe-NBpoHimppkw"/>
                  <language>java</language>
                  <body>if (inAction) {&#xD;
             String flowName = ctx.getText(); // get the flow name&#xD;
             instructionParameters.setFlow(flowName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2wiNKlTEe-NBpoHimppkw" name="exitCmd" specification="_UzOtEalTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2wiNalTEe-NBpoHimppkw" name="ctx" type="_UzOGBalTEe-NBpoHimppkw"/>
                  <language>java</language>
                  <body>String command = ctx.getText(); // get the command/instruction name&#xD;
         instructionParameters.setName(command);&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2wiNqlTEe-NBpoHimppkw" name="exitSrcNode" specification="_UzPUJKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2wiN6lTEe-NBpoHimppkw" name="ctx" type="_UzPUIqlTEe-NBpoHimppkw"/>
                  <language>java</language>
                  <body>String srcName = ctx.getText(); // get the src node name&#xD;
         instructionParameters.setSrc(srcName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then coordinator is src &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(srcName);&#xD;
         }else {&#xD;
         	/* otherwise listener is src */&#xD;
         	instructionParameters.setListener(srcName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2wiOKlTEe-NBpoHimppkw" name="exitSnkNode" specification="_UzQiQalTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2wiOalTEe-NBpoHimppkw" name="ctx" type="_UzP7M6lTEe-NBpoHimppkw"/>
                  <language>java</language>
                  <body>String snkName = ctx.getText(); // get the snk node name&#xD;
         instructionParameters.setSnk(snkName);&#xD;
         var command = instructionParameters.getName();&#xD;
         if (command.equals(PUSH)) {&#xD;
         	/* if push then listener is snk */&#xD;
         	instructionParameters.setListener(snkName);&#xD;
         }else {&#xD;
         	/* otherwise coordinator is snk &#xD;
         	 */&#xD;
         	instructionParameters.setCoordinator(snkName);&#xD;
         }&#xD;
     </body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2wiOqlTEe-NBpoHimppkw" name="exitChannel" specification="_UzRJUqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U2wiO6lTEe-NBpoHimppkw" name="ctx" type="_UzRJUKlTEe-NBpoHimppkw"/>
                  <language>java</language>
                  <body>String channelString = ctx.getText(); // get the snk node name&#xD;
     	String channel; // resulting channel that will be extracted from the channel string&#xD;
     	Integer index = channelString.indexOf('#');&#xD;
     	if (index >= 0 &amp;&amp; index &lt; channelString.length()) {&#xD;
     		channel = channelString.substring(index+1); // get string starting at first channel number&#xD;
     	} else {&#xD;
     		channel = UNKNOWN; // no valid channel in the channelString, so set to UNKNOWN&#xD;
     	}	&#xD;
         instructionParameters.setChannel(channel); &#xD;
     </body>
                </ownedBehavior>
                <ownedOperation xmi:id="_UlhoQKlTEe-NBpoHimppkw" name="ListenerDsl" visibility="package" method="_U2v7MalTEe-NBpoHimppkw">
                  <eAnnotations xmi:id="_UlhoQalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                    <details xmi:id="_UlhoQqlTEe-NBpoHimppkw" key="create"/>
                  </eAnnotations>
                  <ownedParameter xmi:id="_UlhoQ6lTEe-NBpoHimppkw" type="_UlhBMKlTEe-NBpoHimppkw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UlhoRKlTEe-NBpoHimppkw" name="getInstructionParameters" method="_U2v7M6lTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_U03EwKlTEe-NBpoHimppkw" type="_UxYS8KlTEe-NBpoHimppkw" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UzMQ0qlTEe-NBpoHimppkw" name="enterAction" method="_U2v7NalTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UzMQ06lTEe-NBpoHimppkw" name="ctx" type="_UzMQ0KlTEe-NBpoHimppkw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UzM346lTEe-NBpoHimppkw" name="exitAction" method="_U2wiMKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UzM35KlTEe-NBpoHimppkw" name="ctx" type="_UzMQ0KlTEe-NBpoHimppkw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UzOGAKlTEe-NBpoHimppkw" name="exitFlowName" method="_U2wiMqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UzOGAalTEe-NBpoHimppkw" name="ctx" type="_UzNe8qlTEe-NBpoHimppkw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UzOtEalTEe-NBpoHimppkw" name="exitCmd" method="_U2wiNKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UzOtEqlTEe-NBpoHimppkw" name="ctx" type="_UzOGBalTEe-NBpoHimppkw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UzPUJKlTEe-NBpoHimppkw" name="exitSrcNode" method="_U2wiNqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UzPUJalTEe-NBpoHimppkw" name="ctx" type="_UzPUIqlTEe-NBpoHimppkw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UzQiQalTEe-NBpoHimppkw" name="exitSnkNode" method="_U2wiOKlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UzQiQqlTEe-NBpoHimppkw" name="ctx" type="_UzP7M6lTEe-NBpoHimppkw"/>
                </ownedOperation>
                <ownedOperation xmi:id="_UzRJUqlTEe-NBpoHimppkw" name="exitChannel" method="_U2wiOqlTEe-NBpoHimppkw">
                  <ownedParameter xmi:id="_UzRJU6lTEe-NBpoHimppkw" name="ctx" type="_UzRJUKlTEe-NBpoHimppkw"/>
                </ownedOperation>
              </nestedClassifier>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ull5sKlTEe-NBpoHimppkw" name="Warp">
              <ownedComment xmi:id="_U3BA4KlTEe-NBpoHimppkw">
                <body>The Warp class sets default values of constants and also sets the warp parameters for the&#xD;
given input. It creates and visualizes any requested output files and runs verification&#xD;
checks to make sure deadlines and reliability targets are met, and that there are no &#xD;
channel conflicts. Runs additional tests to make sure everything will run smoothly. This&#xD;
class also prints out all warp parameters along with Boolean expressions for if any flags&#xD;
are requested. &#xD;
@author sgoddard&#xD;
@version 1.8 Fall 2024</body>
              </ownedComment>
              <ownedAttribute xmi:id="_U2A7UKlTEe-NBpoHimppkw" name="NUM_CHANNELS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2A7UalTEe-NBpoHimppkw" value="16"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2A7UqlTEe-NBpoHimppkw" name="MIN_LQ" visibility="private" isLeaf="true" isStatic="true" type="_U0aY0KlTEe-NBpoHimppkw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2BiYKlTEe-NBpoHimppkw" value="0.9"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2BiYalTEe-NBpoHimppkw" name="E2E" visibility="private" isLeaf="true" isStatic="true" type="_U0aY0KlTEe-NBpoHimppkw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2BiYqlTEe-NBpoHimppkw" value="0.99"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2BiY6lTEe-NBpoHimppkw" name="DEFAULT_OUTPUT_SUB_DIRECTORY" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2CJcKlTEe-NBpoHimppkw" value="&quot;OutputFiles/&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2CJcalTEe-NBpoHimppkw" name="DEFAULT_SCHEDULER" visibility="private" isLeaf="true" isStatic="true" type="_UkP14KlTEe-NBpoHimppkw" isReadOnly="true">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2CJcqlTEe-NBpoHimppkw" value="ScheduleChoices.PRIORITY"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2CJc6lTEe-NBpoHimppkw" name="DEFAULT_FAULTS_TOLERATED" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2CJdKlTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2CwgKlTEe-NBpoHimppkw" name="nChannels" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2DXkKlTEe-NBpoHimppkw" name="numFaults" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2DXkqlTEe-NBpoHimppkw" name="minLQ" visibility="private" isStatic="true" type="_U0aY0KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U2D-oalTEe-NBpoHimppkw" name="e2e" visibility="private" isStatic="true" type="_U0aY0KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U2D-o6lTEe-NBpoHimppkw" name="outputSubDirectory" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2D-palTEe-NBpoHimppkw" name="guiRequested" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2ElsalTEe-NBpoHimppkw" name="gvRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2Els6lTEe-NBpoHimppkw" name="wfRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2FMwKlTEe-NBpoHimppkw" name="raRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2FMwqlTEe-NBpoHimppkw" name="laRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2FMxKlTEe-NBpoHimppkw" name="caRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2Fz0alTEe-NBpoHimppkw" name="simRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2Fz06lTEe-NBpoHimppkw" name="allRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2Ga4KlTEe-NBpoHimppkw" name="latencyRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2Ga4qlTEe-NBpoHimppkw" name="schedulerRequested" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2Ga46lTEe-NBpoHimppkw" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2Ga5alTEe-NBpoHimppkw" name="verboseMode" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2HpAKlTEe-NBpoHimppkw" name="inputFile" visibility="private" isStatic="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2HpAqlTEe-NBpoHimppkw" name="schedulerSelected" visibility="private" isStatic="true" type="_UkP14KlTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJQKlTEe-NBpoHimppkw" name="main" specification="_Ulnu4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJQalTEe-NBpoHimppkw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2xJQqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// parse command-line options and set WARP system parameters&#xD;
 setWarpParameters(args);&#xD;
&#xD;
 // and print out the values if in verbose mode&#xD;
 if (verboseMode) {&#xD;
   printWarpParameters();&#xD;
 }&#xD;
&#xD;
 // Create and visualize the workload&#xD;
 // inputFile string, which may be null,&#xD;
 WorkLoad workLoad = new WorkLoad(numFaults, minLQ, e2e, inputFile);&#xD;
 if (allRequested) {&#xD;
   for (WorkLoadChoices choice : WorkLoadChoices.values()) {&#xD;
     visualize(workLoad, choice); // visualize all Program choices&#xD;
   }&#xD;
   // Create and visualize the Warp System&#xD;
   if (schedulerRequested) {&#xD;
     WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
     verifyPerformanceRequirements(warp);&#xD;
     for (SystemChoices choice : SystemChoices.values()) {&#xD;
       visualize(warp, choice); // visualize all System choices&#xD;
     }&#xD;
   } else { // create a system for all scheduler choices&#xD;
     for (ScheduleChoices sch : ScheduleChoices.values()) {&#xD;
       schedulerSelected = sch;&#xD;
       WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
       verifyPerformanceRequirements(warp);&#xD;
       for (SystemChoices choice : SystemChoices.values()) {&#xD;
         visualize(warp, choice); // visualize all System choices&#xD;
       }&#xD;
     }&#xD;
   }&#xD;
 } else { // visualize warp workload, source program and other requested items&#xD;
   visualize(workLoad, WorkLoadChoices.INPUT_GRAPH);&#xD;
   if (wfRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.COMUNICATION_GRAPH);&#xD;
   }&#xD;
   if (gvRequested) {&#xD;
     visualize(workLoad, WorkLoadChoices.GRAPHVIZ);&#xD;
   }&#xD;
   WarpInterface warp = SystemFactory.create(workLoad, nChannels, schedulerSelected);&#xD;
   verifyPerformanceRequirements(warp);&#xD;
   visualize(warp, SystemChoices.SOURCE);&#xD;
   if (caRequested) {&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
   if (laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY);&#xD;
   }&#xD;
   if (latencyRequested || laRequested) {&#xD;
     visualize(warp, SystemChoices.LATENCY_REPORT);&#xD;
   }&#xD;
   if (raRequested) {&#xD;
     visualize(warp, SystemChoices.RELIABILITIES);&#xD;
   }&#xD;
 }&#xD;
&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJQ6lTEe-NBpoHimppkw" name="visualize" specification="_UzVawKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJRKlTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2xJRalTEe-NBpoHimppkw" name="choice" type="_UkZm4KlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var viz =&#xD;
     VisualizationFactory.createVisualization(workLoad, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   if (verboseMode) {&#xD;
     System.out.println(viz.toString());&#xD;
   }&#xD;
   viz.toFile();&#xD;
   if (guiRequested) {&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJRqlTEe-NBpoHimppkw" name="visualize" specification="_UzVaw6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJR6lTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2xJSKlTEe-NBpoHimppkw" name="choice" type="_UkYYwKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>var viz = VisualizationFactory.createVisualization(warp, outputSubDirectory, choice);&#xD;
 if (viz != null) {&#xD;
   viz.toFile();&#xD;
   if (guiRequested &amp;&amp; schedulerRequested) {&#xD;
     /* Only display window when a specific scheduler has been requested */&#xD;
     viz.toDisplay();&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJSalTEe-NBpoHimppkw" name="verifyPerformanceRequirements" specification="_UzVaxqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJSqlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>verifyDeadlines(warp);&#xD;
 verifyReliabilities(warp);&#xD;
 verifyNoChannelConflicts(warp);&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJS6lTEe-NBpoHimppkw" name="verifyReliabilities" specification="_UzWB0alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJTKlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>if (schedulerSelected != ScheduleChoices.RTHART) {&#xD;
   /* RealTime HART doesn't adhere to reliability targets */&#xD;
   if (!warp.reliabilitiesMet()) {&#xD;
     System.err.printf(&#xD;
         &quot;\n\tERROR: Not all flows meet the end-to-end &quot;&#xD;
             + &quot;reliability of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   } else if (verboseMode) {&#xD;
     System.out.printf(&#xD;
         &quot;\n\tAll flows meet the end-to-end reliability &quot; + &quot;of %s under %s scheduling.\n&quot;,&#xD;
         String.valueOf(e2e), schedulerSelected.toString());&#xD;
   }&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJTalTEe-NBpoHimppkw" name="verifyDeadlines" specification="_UzWB06lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJTqlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>if (!warp.deadlinesMet()) {&#xD;
   System.err.printf(&quot;\n\tERROR: Not all flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
   visualize(warp, SystemChoices.DEADLINE_REPORT);&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tAll flows meet their deadlines under %s scheduling.\n&quot;,&#xD;
       schedulerSelected.toString());&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJT6lTEe-NBpoHimppkw" name="verifyNoChannelConflicts" specification="_UzWB1alTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJUKlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>if (warp.toChannelAnalysis().isChannelConflict()) {&#xD;
   System.err&#xD;
       .printf(&quot;\n\tERROR: Channel conficts exists. See Channel Visualization for details.\n&quot;);&#xD;
   if (!caRequested) { // only need to create the visualization if not already requested&#xD;
     visualize(warp, SystemChoices.CHANNEL);&#xD;
   }&#xD;
 } else if (verboseMode) {&#xD;
   System.out.printf(&quot;\n\tNo channel conflicts detected.\n&quot;);&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJUalTEe-NBpoHimppkw" name="setWarpParameters" specification="_Ulo9AKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xJUqlTEe-NBpoHimppkw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_U2xJU6lTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>// move command line parsing into this&#xD;
                                                      // function--need to set up globals?&#xD;
&#xD;
 // create holder objects for storing results ...&#xD;
 // BooleanHolder debug = new BooleanHolder();&#xD;
 StringHolder schedulerSelected = new StringHolder();&#xD;
 IntHolder channels = new IntHolder();&#xD;
 IntHolder faults = new IntHolder();&#xD;
 DoubleHolder m = new DoubleHolder();&#xD;
 DoubleHolder end2end = new DoubleHolder();&#xD;
 BooleanHolder gui = new BooleanHolder();&#xD;
 BooleanHolder gv = new BooleanHolder();&#xD;
 BooleanHolder wf = new BooleanHolder();&#xD;
 BooleanHolder ra = new BooleanHolder();&#xD;
 BooleanHolder la = new BooleanHolder();&#xD;
 BooleanHolder ca = new BooleanHolder();&#xD;
 BooleanHolder s = new BooleanHolder();&#xD;
 BooleanHolder all = new BooleanHolder();&#xD;
 BooleanHolder latency = new BooleanHolder();&#xD;
 BooleanHolder verbose = new BooleanHolder();&#xD;
 StringHolder input = new StringHolder();&#xD;
 StringHolder output = new StringHolder();&#xD;
&#xD;
 // create the parser and specify the allowed options ...&#xD;
 ArgParser parser = new ArgParser(&quot;java -jar warp.jar&quot;);&#xD;
 parser.addOption(&quot;-sch, --schedule %s {priority,rm,dm,rtHart,poset} #scheduler options&quot;,&#xD;
     schedulerSelected);&#xD;
 parser.addOption(&quot;-c, --channels %d {[1,16]} #number of wireless channels&quot;, channels);&#xD;
 parser.addOption(&quot;-m %f {[0.5,1.0]} #minimum link quality in the system&quot;, m);&#xD;
 parser.addOption(&#xD;
     &quot;-e, --e2e %f {[0.5,1.0]} #global end-to-end communcation reliability for all flows&quot;,&#xD;
     end2end);&#xD;
 parser.addOption(&quot;-f, --faults %d {[1,10]} #number of faults per edge in a flow (per period)&quot;,&#xD;
     faults);&#xD;
 parser.addOption(&quot;-gui %v #create a gui visualizations&quot;, gui);&#xD;
 parser.addOption(&quot;-gv %v #create a graph visualization (.gv) file for GraphViz&quot;, gv);&#xD;
 parser.addOption(&#xD;
     &quot;-wf  %v #create a WARP (.wf) file that shows the maximum number of transmissions on each segment of the flow needed to meet the end-to-end reliability&quot;,&#xD;
     wf);&#xD;
 parser.addOption(&#xD;
     &quot;-ra  %v #create a reliability analysis file (tab delimited .csv) for the warp program&quot;,&#xD;
     ra);&#xD;
 parser.addOption(&#xD;
     &quot;-la  %v #create a latency analysis file (tab delimited .csv) for the warp program&quot;, la);&#xD;
 parser.addOption(&#xD;
     &quot;-ca  %v #create a channel analysis file (tab delimited .csv) for the warp program&quot;, ca);&#xD;
 parser.addOption(&quot;-s  %v #create a simulator input file (.txt) for the warp program&quot;, s);&#xD;
 parser.addOption(&quot;-a, --all  %v #create all output files (activates -gv, -wf, -ra, -s)&quot;, all);&#xD;
 parser.addOption(&quot;-l, --latency  %v #generates end-to-end latency report file (.txt)&quot;, latency);&#xD;
 parser.addOption(&quot;-i, --input %s #&lt;InputFile> of graph flows (workload)&quot;, input);&#xD;
 parser.addOption(&quot;-o, --output %s #&lt;OutputDIRECTORY> where output files will be placed&quot;,&#xD;
     output);&#xD;
 parser.addOption(&#xD;
     &quot;-v, --verbose %v #Echo input file name and parsed contents. Then for each flow instance: show maximum E2E latency and min/max communication cost for that instance of the flow&quot;,&#xD;
     verbose);&#xD;
 // parser.addOption (&quot;-d, -debug, --debug %v #Debug mode: base directory =&#xD;
 // $HOME/Documents/WARP/&quot;, debug);&#xD;
&#xD;
&#xD;
 // match the arguments ...&#xD;
 parser.matchAllArgs(args);&#xD;
&#xD;
 // Set WARP system configuration options&#xD;
 if (channels.value > 0) {&#xD;
   nChannels = channels.value; // set option specified&#xD;
 } else {&#xD;
   nChannels = NUM_CHANNELS; // set to default&#xD;
 }&#xD;
 if (faults.value > 0) { // global variable for # of Faults tolerated per edge&#xD;
   numFaults = faults.value; // set option specified&#xD;
 } else {&#xD;
   numFaults = DEFAULT_FAULTS_TOLERATED; // set to default&#xD;
 }&#xD;
 if (m.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   minLQ = m.value; // set option specified&#xD;
 } else {&#xD;
   minLQ = MIN_LQ; // set to default&#xD;
 }&#xD;
 if (end2end.value > 0.0) { // global variable for minimum Link Quality in system&#xD;
   e2e = end2end.value; // set option specified&#xD;
 } else {&#xD;
   e2e = E2E; // set to default&#xD;
 }&#xD;
 if (output.value != null) { // default output subdirectory (from working directory)&#xD;
   outputSubDirectory = output.value; // set option specified&#xD;
 } else {&#xD;
   outputSubDirectory = DEFAULT_OUTPUT_SUB_DIRECTORY; // set to default&#xD;
 }&#xD;
&#xD;
 guiRequested = gui.value; // GraphVis file requested flag&#xD;
 gvRequested = gv.value; // GraphVis file requested flag&#xD;
 wfRequested = wf.value; // WARP file requested flag&#xD;
 raRequested = ra.value; // Reliability Analysis file requested flag&#xD;
 laRequested = la.value; // Latency Analysis file requested flag&#xD;
 caRequested = ca.value; // Latency Analysis file requested flag&#xD;
 simRequested = s.value; // Simulation file requested flag&#xD;
 allRequested = all.value; // all out files requested flag&#xD;
 latencyRequested = latency.value; // latency report requested flag&#xD;
 verboseMode = verbose.value; // verbose mode flag (mainly for running in IDE)&#xD;
 // debugMode = debug.value; // debug mode flag (mainly for running in IDE)&#xD;
 inputFile = input.value; // input file specified&#xD;
 if (schedulerSelected.value != null) { // can't switch on a null value so check then switch&#xD;
   schedulerRequested = true;&#xD;
   switch (schedulerSelected.value) {&#xD;
     case &quot;priority&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
&#xD;
     case &quot;rm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RM;&#xD;
       break;&#xD;
&#xD;
     case &quot;dm&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.DM;&#xD;
       break;&#xD;
&#xD;
     case &quot;rtHart&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.RTHART;&#xD;
       break;&#xD;
&#xD;
     case &quot;poset&quot;:&#xD;
       Warp.schedulerSelected = ScheduleChoices.POSET_PRIORITY;&#xD;
       break;&#xD;
&#xD;
     default:&#xD;
       Warp.schedulerSelected = ScheduleChoices.PRIORITY;&#xD;
       break;&#xD;
   }&#xD;
 } else { // null value when no scheduler specified; so use default&#xD;
   Warp.schedulerSelected = DEFAULT_SCHEDULER;&#xD;
 }&#xD;
  </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xJVKlTEe-NBpoHimppkw" name="printWarpParameters" specification="_Ulo9BKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>// print all system configuration parameters&#xD;
 // Print out each of the system configuration values&#xD;
 System.out.println(&quot;WARP system configuration values:&quot;);&#xD;
 System.out.println(&quot;\tScheduler=&quot; + schedulerSelected);&#xD;
 System.out.println(&quot;\tnChanels=&quot; + nChannels);&#xD;
 System.out.println(&quot;\tnumFaults=&quot; + numFaults);&#xD;
 System.out.println(&quot;\tminLQ=&quot; + minLQ);&#xD;
 System.out.println(&quot;\tE2E=&quot; + e2e);&#xD;
 System.out.println(&quot;\tguiRequest flag=&quot; + guiRequested);&#xD;
 System.out.println(&quot;\tgvRequest flag=&quot; + gvRequested);&#xD;
 System.out.println(&quot;\twfRequest flag=&quot; + wfRequested);&#xD;
 System.out.println(&quot;\traRequest flag=&quot; + raRequested);&#xD;
 System.out.println(&quot;\tlaRequest flag=&quot; + laRequested);&#xD;
 System.out.println(&quot;\tcaRequest flag=&quot; + caRequested);&#xD;
 System.out.println(&quot;\tsimRequest flag=&quot; + simRequested);&#xD;
 System.out.println(&quot;\tallOutFilesRequest flag=&quot; + allRequested);&#xD;
 System.out.println(&quot;\tlatency flag=&quot; + latencyRequested);&#xD;
 if (inputFile != null) {&#xD;
   System.out.println(&quot;\tinput file=&quot; + inputFile);&#xD;
 } else {&#xD;
   System.out.println(&quot;\tNo input file specified; will be requested when needed.&quot;);&#xD;
 }&#xD;
 System.out.println(&quot;\toutputSubDirectory=&quot; + outputSubDirectory);&#xD;
 System.out.println(&quot;\tverbose flag=&quot; + verboseMode);&#xD;
 // System.out.println (&quot;\tdebug flag=&quot; + debugMode);&#xD;
  </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_Ulnu4KlTEe-NBpoHimppkw" name="main" isStatic="true" method="_U2xJQKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA4alTEe-NBpoHimppkw">
                  <body>Main method sets warp parameters with given input arguments and prints out the parameters&#xD;
   * if in verbose mode. It creates and visualizes the new workload. If the all output files &#xD;
   * flag is requested, it visualizes all workLoad Program choices and creates and visualizes&#xD;
   * the Warp System with all warp System choices. If not all output files are requested, it&#xD;
   * still visualizes the ones asked for of warp workload, source program, and other requested&#xD;
   * output items.&#xD;
   * @param args Command-line arguments passed to the application.</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ulnu4alTEe-NBpoHimppkw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ulnu4qlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ulo9AKlTEe-NBpoHimppkw" name="setWarpParameters" visibility="private" isStatic="true" method="_U2xJUalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA6KlTEe-NBpoHimppkw">
                  <body>Creates holder objects to store results and creates the parser to process and comprehend &#xD;
   * the input data. Also checks that all arguments are valid and sets values for parser. It &#xD;
   * checks which flags are present and stores this as a Boolean value. Additionally, checks &#xD;
   * if schedulerSelected value is null and cannot run is null. Then checks value of &#xD;
   * schedulerSelected to see what the value wants to do and runs method before it breaks.&#xD;
   * @param args</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ulo9AalTEe-NBpoHimppkw" name="args">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ulo9AqlTEe-NBpoHimppkw" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ulo9BKlTEe-NBpoHimppkw" name="printWarpParameters" visibility="private" isStatic="true" method="_U2xJVKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA6alTEe-NBpoHimppkw">
                  <body>Prints out all system configuration parameters including the scheduler, channels,&#xD;
   * number of faults, minimum Link Quality, end-to-end reliability, and if any flags&#xD;
   * are requested. Prints out the input file if given and if there is not one, it &#xD;
   * alerts that one will be needed.</body>
                </ownedComment>
              </ownedOperation>
              <ownedOperation xmi:id="_UzVawKlTEe-NBpoHimppkw" name="visualize" visibility="private" isStatic="true" method="_U2xJQ6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA4qlTEe-NBpoHimppkw">
                  <body>Creates a visualization instance of input WorkLoad workLoad and WorkLoadChoices&#xD;
   * choice. If the visualization is null and if verboseMode holds True, prints out&#xD;
   * viz as a String, otherwise, convert viz to a file and if gui flag is requested,&#xD;
   * convert viz to a display.&#xD;
   * @param workLoad&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzVawalTEe-NBpoHimppkw" name="workLoad" type="_UlImsKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzVawqlTEe-NBpoHimppkw" name="choice" type="_UkZm4KlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzVaw6lTEe-NBpoHimppkw" name="visualize" visibility="private" isStatic="true" method="_U2xJRqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA46lTEe-NBpoHimppkw">
                  <body>Creates a visualization instance of input WarpInterface warp with SystemChoices &#xD;
   * choice. If visualization is null, turns viz to a file, and if gui and schedule &#xD;
   * flags are requested, turn viz into a display.&#xD;
   * @param warp&#xD;
   * @param choice</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzVaxKlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzVaxalTEe-NBpoHimppkw" name="choice" type="_UkYYwKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzVaxqlTEe-NBpoHimppkw" name="verifyPerformanceRequirements" visibility="private" isStatic="true" method="_U2xJSalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA5KlTEe-NBpoHimppkw">
                  <body>Runs verification checks over if deadlines are met, if reliability targets&#xD;
   * are met, and if there are channel conflicts for the input WarpInterface warp.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzWB0KlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzWB0alTEe-NBpoHimppkw" name="verifyReliabilities" visibility="private" isStatic="true" method="_U2xJS6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA5alTEe-NBpoHimppkw">
                  <body>Checks that the reliability targets are met in input warp. If reliability&#xD;
   * is not met, prints an error statement. If verboseMode is True with the input, &#xD;
   * prints out statement that flows meet reliability in this instance.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzWB0qlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzWB06lTEe-NBpoHimppkw" name="verifyDeadlines" visibility="private" isStatic="true" method="_U2xJTalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA5qlTEe-NBpoHimppkw">
                  <body>Checks if the deadlines are met in input warp. If deadlines are not met, prints&#xD;
   * out an error message and visualizes a Deadline Report. If verboseMode is true for&#xD;
   * input, prints out a message telling the deadlines are all met.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzWB1KlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzWB1alTEe-NBpoHimppkw" name="verifyNoChannelConflicts" visibility="private" isStatic="true" method="_U2xJT6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3BA56lTEe-NBpoHimppkw">
                  <body>Determines if there is a channel conflict in the WarpInterface warp given &#xD;
   * as input. Creates a Channel Analysis visualization if not already requested.&#xD;
   * @param warp</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzWB1qlTEe-NBpoHimppkw" name="warp" type="_Ukr6wKlTEe-NBpoHimppkw"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ult1gKlTEe-NBpoHimppkw" name="SchedulableObject" isAbstract="true">
              <ownedAttribute xmi:id="_U2I3IKlTEe-NBpoHimppkw" name="DEFAULT" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2I3IalTEe-NBpoHimppkw" value="0"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2I3IqlTEe-NBpoHimppkw" name="DEFAULT_PERIOD" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2I3I6lTEe-NBpoHimppkw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2I3JKlTEe-NBpoHimppkw" name="DEFAULT_DEADLINE" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2I3JalTEe-NBpoHimppkw" value="100"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2I3JqlTEe-NBpoHimppkw" name="UNKNOWN" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2I3J6lTEe-NBpoHimppkw" value="&quot;unknown&quot;"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2I3KKlTEe-NBpoHimppkw" name="BEFORE_START" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2I3KalTEe-NBpoHimppkw" value="-1"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2JeMKlTEe-NBpoHimppkw" name="name" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2JeMqlTEe-NBpoHimppkw" name="priority">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2JeM6lTEe-NBpoHimppkw" name="period" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2JeNKlTEe-NBpoHimppkw" name="deadline">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2JeNalTEe-NBpoHimppkw" name="phase" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2KFQalTEe-NBpoHimppkw" name="releaseTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2KFQ6lTEe-NBpoHimppkw" name="startTime" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2KFRalTEe-NBpoHimppkw" name="endTime" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2KFRqlTEe-NBpoHimppkw" name="lastUpdateTime">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_U2KFR6lTEe-NBpoHimppkw" value="BEFORE_START"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_U2KsUKlTEe-NBpoHimppkw" name="predecessor" type="_Ult1gKlTEe-NBpoHimppkw" association="_U3Bn8KlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U2KsUalTEe-NBpoHimppkw" name="endTimes" visibility="private" type="_UjMtAqlTEe-NBpoHimppkw" association="_U33VdKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U2LTYKlTEe-NBpoHimppkw" name="subObjects" type="_UzYeEqlTEe-NBpoHimppkw" isReadOnly="true" association="_U338galTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xwUKlTEe-NBpoHimppkw" name="SchedulableObject" specification="_UlwRwKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xwUalTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = -1; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xwUqlTEe-NBpoHimppkw" name="SchedulableObject" specification="_UzZsMKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xwU6lTEe-NBpoHimppkw" name="obj" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2xwVKlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwValTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>this.name = obj.getName();&#xD;
		this.priority = obj.getPriority();&#xD;
		this.period = obj.getPeriod();&#xD;
		this.deadline = obj.getDeadline();&#xD;
		this.phase = obj.getPhase();&#xD;
		this.startTime = obj.getStartTime();&#xD;
		this.endTime = obj.getEndTime();&#xD;
		this.releaseTime = obj.getReleaseTime(); // initialize parameters&#xD;
		this.lastUpdateTime = time; // reset lastUpdate &#xD;
		this.predecessor = obj.getPredecessor();&#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.endTimes.addAll(obj.getAllEndTimes());&#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
		this.subObjects.addAll(obj.getSubObjects());&#xD;
		&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xwVqlTEe-NBpoHimppkw" name="SchedulableObject" specification="_Ulw40KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xwV6lTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwWKlTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwWalTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwWqlTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwW6lTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xwXKlTEe-NBpoHimppkw" name="SchedulableObject" specification="_Ulxf4KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xwXalTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwXqlTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwX6lTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwYKlTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwYalTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2xwYqlTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>setDefaultParameters();&#xD;
		this.name = name;&#xD;
		this.priority = priority;&#xD;
		this.period = period;&#xD;
		this.deadline = deadline;&#xD;
		this.phase = phase;&#xD;
		setNextReleaseTime(0); // initialize parameters&#xD;
		this.lastUpdateTime = BEFORE_START; // reset lastUpdate &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xwY6lTEe-NBpoHimppkw" name="setDefaultParameters" specification="_UlyG86lTEe-NBpoHimppkw">
                <language>java</language>
                <body>this.name = UNKNOWN;&#xD;
		this.priority = DEFAULT;&#xD;
		this.period = DEFAULT_PERIOD;&#xD;
		this.deadline = DEFAULT_DEADLINE;&#xD;
		this.phase = DEFAULT;&#xD;
		this.startTime = BEFORE_START;&#xD;
		this.endTime = BEFORE_START;&#xD;
		this.predecessor = null; &#xD;
		this.endTimes = new PriorityQueue&lt;Integer>(); &#xD;
		this.subObjects = new LinkedList&lt;SchedulableObject>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2xwZKlTEe-NBpoHimppkw" name="getAllEndTimes" specification="_UlyG9KlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2xwZalTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
                <language>java</language>
                <body>return endTimes;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXYKlTEe-NBpoHimppkw" name="addToEndTimes" specification="_UlzVEKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXYalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>/* Add the endTime to the endTimes Q&#xD;
		 * so that we can track predecessor endTimes&#xD;
		 * and make sure successors don't start before &#xD;
		 * predecessors&#xD;
		 */&#xD;
		endTimes.add(time);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXYqlTEe-NBpoHimppkw" name="peekEndTimes" specification="_UlzVEqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXY6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return endTimes.peek();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXZKlTEe-NBpoHimppkw" name="pollEndTimes" specification="_UlzVFKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>endTimes.poll();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXZalTEe-NBpoHimppkw" name="addSubObject" specification="_UzaTQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXZqlTEe-NBpoHimppkw" name="obj" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <language>java</language>
                <body>subObjects.add(obj);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXZ6lTEe-NBpoHimppkw" name="getName" specification="_Ulz8IKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXaKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXaalTEe-NBpoHimppkw" name="setName" specification="_Ulz8IqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXaqlTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.name = name;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXa6lTEe-NBpoHimppkw" name="getReleaseTime" specification="_Ulz8JKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXbKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXbalTEe-NBpoHimppkw" name="getPhase" specification="_Ulz8JqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXbqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXb6lTEe-NBpoHimppkw" name="getStartTime" specification="_Ul0jMalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXcKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>return startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXcalTEe-NBpoHimppkw" name="setEndTime" specification="_Ul0jM6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXcqlTEe-NBpoHimppkw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.endTime = endTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXc6lTEe-NBpoHimppkw" name="setStartTime" specification="_Ul1KQKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXdKlTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.startTime = startTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2yXdalTEe-NBpoHimppkw" name="setReleaseTime" specification="_Ul1KQqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2yXdqlTEe-NBpoHimppkw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.releaseTime = releaseTime;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-cKlTEe-NBpoHimppkw" name="setPeriod" specification="_Ul1xUKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-calTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.period = period;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-cqlTEe-NBpoHimppkw" name="setPhase" specification="_Ul1xUqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-c6lTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>this.phase = phase;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-dKlTEe-NBpoHimppkw" name="setNextReleaseTime" specification="_Ul1xVKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-dalTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <language>java</language>
                <body>if (currentTime >= lastUpdateTime) {&#xD;
			// released every (j*period)+phase, for all j >=0&#xD;
			Integer j = 0;&#xD;
			if (period > 0) {&#xD;
				j = (int) Math.ceil((double)currentTime/(double)period); // gives floor&#xD;
			} &#xD;
			Integer nextRelease = (j*period)+phase ;&#xD;
			releaseTime = nextRelease;&#xD;
			lastUpdateTime = currentTime;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-dqlTEe-NBpoHimppkw" name="maxPhaseComparison" specification="_UzaTQqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-d6lTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-eKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareDescendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-ealTEe-NBpoHimppkw" name="maxPhaseComparison" specification="_UzaTRalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-eqlTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-e6lTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-fKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.maxPhaseComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-falTEe-NBpoHimppkw" name="deadlineComparison" specification="_Uza6UKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-fqlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-f6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getDeadline(), obj2.getDeadline());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-gKlTEe-NBpoHimppkw" name="deadlineComparison" specification="_Uza6U6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-galTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-gqlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-g6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.deadlineComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-hKlTEe-NBpoHimppkw" name="periodComparison" specification="_Uza6V6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-halTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-hqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPeriod(), obj2.getPeriod());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-h6lTEe-NBpoHimppkw" name="periodComparison" specification="_UzbhYalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-iKlTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-ialTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-iqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.periodComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-i6lTEe-NBpoHimppkw" name="priorityComparison" specification="_UzbhZalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-jKlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-jalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of priority&#xD;
		return compareAscendingOrder(this.getPriority(), obj2.getPriority());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2y-jqlTEe-NBpoHimppkw" name="priorityComparison" specification="_UzbhaKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2y-j6lTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-kKlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2y-kalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.priorityComparison(obj2);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zlgKlTEe-NBpoHimppkw" name="releaseTimeComparison" specification="_UzcIcKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2zlgalTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2zlgqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareAscendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zlg6lTEe-NBpoHimppkw" name="releaseTimeComparison" specification="_UzcIc6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2zlhKlTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2zlhalTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2zlhqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zlh6lTEe-NBpoHimppkw" name="LatestReleaseTimeComparison" specification="_UzcId6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2zliKlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2zlialTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>// for ascending order of release time&#xD;
		return compareDescendingOrder(this.getReleaseTime(), obj2.getReleaseTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zliqlTEe-NBpoHimppkw" name="LatestReleaseTimeComparison" specification="_UzcvgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2zli6lTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2zljKlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_U2zljalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>return obj1.releaseTimeComparison(obj2); &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zljqlTEe-NBpoHimppkw" name="compareAscendingOrder" specification="_Ul3mgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2zlj6lTEe-NBpoHimppkw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2zlkKlTEe-NBpoHimppkw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2zlkalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return -1; &#xD;
		else if (v1 > v2)&#xD;
			return 1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zlkqlTEe-NBpoHimppkw" name="compareDescendingOrder" specification="_Ul4NkKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2zlk6lTEe-NBpoHimppkw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2zllKlTEe-NBpoHimppkw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_U2zllalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>if (v1 &lt; v2)&#xD;
			return 1; &#xD;
		else if (v1 > v2)&#xD;
			return -1; &#xD;
		return 0; // tied: values are the same &#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zllqlTEe-NBpoHimppkw" name="print" specification="_Ul4NlKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_U2zll6lTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>System.out.printf(&quot;\n%s&quot;,headerMsg);&#xD;
		print();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U2zlmKlTEe-NBpoHimppkw" name="print" specification="_Ul40oKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>System.out.printf(&quot;\nName: %s\n&quot;,getName());&#xD;
		System.out.printf(&quot;\tPriority: %d\n&quot;,getPriority());&#xD;
		System.out.printf(&quot;\tPeriod: %d\n&quot;,getPeriod());&#xD;
		System.out.printf(&quot;\tDeadline: %d\n&quot;,getDeadline());&#xD;
		System.out.printf(&quot;\tPhase: %d\n&quot;, getPhase());&#xD;
		System.out.printf(&quot;\tReleaseTime: %d\n&quot;,getReleaseTime());&#xD;
		System.out.printf(&quot;\tStartTime: %d\n&quot;,getStartTime());&#xD;
		System.out.printf(&quot;\tEndTime: %d\n&quot;,getEndTime());&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UlwRwKlTEe-NBpoHimppkw" name="SchedulableObject" visibility="package" method="_U2xwUKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UlwRwalTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UlwRwqlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_UlwRw6lTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ulw40KlTEe-NBpoHimppkw" name="SchedulableObject" visibility="package" method="_U2xwVqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_Ulw41alTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_Ulw41qlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ulw40alTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulw40qlTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulw406lTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulw41KlTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulw416lTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_Ulxf4KlTEe-NBpoHimppkw" name="SchedulableObject" visibility="package" method="_U2xwXKlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UlyG8KlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UlyG8alTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_Ulxf4alTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulxf4qlTEe-NBpoHimppkw" name="priority">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulxf46lTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulxf5KlTEe-NBpoHimppkw" name="deadline">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ulxf5alTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UlyG8qlTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlyG86lTEe-NBpoHimppkw" name="setDefaultParameters" visibility="private" method="_U2xwY6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UlyG9KlTEe-NBpoHimppkw" name="getAllEndTimes" method="_U2xwZKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn86lTEe-NBpoHimppkw">
                  <body>@return the endTimes queue</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzZsNqlTEe-NBpoHimppkw" type="_UjMtAqlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UlzVEKlTEe-NBpoHimppkw" name="addToEndTimes" method="_U2yXYKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlzVEalTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlzVEqlTEe-NBpoHimppkw" name="peekEndTimes" method="_U2yXYqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UlzVE6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UlzVFKlTEe-NBpoHimppkw" name="pollEndTimes" method="_U2yXZKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Ulz8IKlTEe-NBpoHimppkw" name="getName" method="_U2yXZ6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn9KlTEe-NBpoHimppkw">
                  <body>@return the name</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ulz8IalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ulz8IqlTEe-NBpoHimppkw" name="setName" method="_U2yXaalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn9alTEe-NBpoHimppkw">
                  <body>@param name the name to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ulz8I6lTEe-NBpoHimppkw" name="name">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ulz8JKlTEe-NBpoHimppkw" name="getReleaseTime" method="_U2yXa6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn9qlTEe-NBpoHimppkw">
                  <body>@return the releaseTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ulz8JalTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ulz8JqlTEe-NBpoHimppkw" name="getPhase" method="_U2yXbalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn96lTEe-NBpoHimppkw">
                  <body>@return the phase</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul0jMKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul0jMalTEe-NBpoHimppkw" name="getStartTime" method="_U2yXb6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn-KlTEe-NBpoHimppkw">
                  <body>@return the startTime</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul0jMqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul0jM6lTEe-NBpoHimppkw" name="setEndTime" method="_U2yXcalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn-alTEe-NBpoHimppkw">
                  <body>@param endTime the endTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul0jNKlTEe-NBpoHimppkw" name="endTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul1KQKlTEe-NBpoHimppkw" name="setStartTime" method="_U2yXc6lTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn-qlTEe-NBpoHimppkw">
                  <body>@param startTime the startTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul1KQalTEe-NBpoHimppkw" name="startTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul1KQqlTEe-NBpoHimppkw" name="setReleaseTime" method="_U2yXdalTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn-6lTEe-NBpoHimppkw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul1KQ6lTEe-NBpoHimppkw" name="releaseTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul1xUKlTEe-NBpoHimppkw" name="setPeriod" method="_U2y-cKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn_KlTEe-NBpoHimppkw">
                  <body>@param period the period to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul1xUalTEe-NBpoHimppkw" name="period">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul1xUqlTEe-NBpoHimppkw" name="setPhase" method="_U2y-cqlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3Bn_alTEe-NBpoHimppkw">
                  <body>@param phase the phase to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul1xU6lTEe-NBpoHimppkw" name="phase">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul1xVKlTEe-NBpoHimppkw" name="setNextReleaseTime" method="_U2y-dKlTEe-NBpoHimppkw">
                <ownedComment xmi:id="_U3CPAKlTEe-NBpoHimppkw">
                  <body>@param releaseTime the releaseTime to set</body>
                </ownedComment>
                <ownedParameter xmi:id="_Ul1xValTEe-NBpoHimppkw" name="currentTime">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul3mgKlTEe-NBpoHimppkw" name="compareAscendingOrder" method="_U2zljqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ul3mgalTEe-NBpoHimppkw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ul3mgqlTEe-NBpoHimppkw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ul3mg6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul4NkKlTEe-NBpoHimppkw" name="compareDescendingOrder" method="_U2zlkqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ul4NkalTEe-NBpoHimppkw" name="v1">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ul4NkqlTEe-NBpoHimppkw" name="v2">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_Ul4Nk6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul4NlKlTEe-NBpoHimppkw" name="print" method="_U2zllqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Ul4NlalTEe-NBpoHimppkw" name="headerMsg">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Ul40oKlTEe-NBpoHimppkw" name="print" method="_U2zlmKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UzZsMKlTEe-NBpoHimppkw" name="SchedulableObject" visibility="package" method="_U2xwUqlTEe-NBpoHimppkw">
                <eAnnotations xmi:id="_UzZsM6lTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_UzZsNKlTEe-NBpoHimppkw" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_U3Bn8qlTEe-NBpoHimppkw">
                  <body>Constructor that creates a copy of schedulable &#xD;
	 * parameters of the input obj, but setting its&#xD;
	 * lastUpdateTime to input time.&#xD;
	 * &#xD;
	 * @param obj&#xD;
	 * @param time</body>
                </ownedComment>
                <ownedParameter xmi:id="_UzZsMalTEe-NBpoHimppkw" name="obj" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzZsMqlTEe-NBpoHimppkw" name="time">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
                </ownedParameter>
                <ownedParameter xmi:id="_UzZsNalTEe-NBpoHimppkw" type="_Ult1gKlTEe-NBpoHimppkw" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzaTQKlTEe-NBpoHimppkw" name="addSubObject" method="_U2yXZalTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzaTQalTEe-NBpoHimppkw" name="obj" type="_Ult1gKlTEe-NBpoHimppkw"/>
              </ownedOperation>
              <ownedOperation xmi:id="_UzaTQqlTEe-NBpoHimppkw" name="maxPhaseComparison" method="_U2y-dqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzaTQ6lTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzaTRKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzaTRalTEe-NBpoHimppkw" name="maxPhaseComparison" method="_U2y-ealTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzaTRqlTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzaTR6lTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzaTSKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uza6UKlTEe-NBpoHimppkw" name="deadlineComparison" method="_U2y-falTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uza6UalTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uza6UqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uza6U6lTEe-NBpoHimppkw" name="deadlineComparison" method="_U2y-gKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uza6VKlTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uza6ValTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uza6VqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_Uza6V6lTEe-NBpoHimppkw" name="periodComparison" method="_U2y-hKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_Uza6WKlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzbhYKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzbhYalTEe-NBpoHimppkw" name="periodComparison" method="_U2y-h6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzbhYqlTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzbhY6lTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzbhZKlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzbhZalTEe-NBpoHimppkw" name="priorityComparison" method="_U2y-i6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzbhZqlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzbhZ6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzbhaKlTEe-NBpoHimppkw" name="priorityComparison" method="_U2y-jqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzbhaalTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzbhaqlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uzbha6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzcIcKlTEe-NBpoHimppkw" name="releaseTimeComparison" method="_U2zlgKlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzcIcalTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzcIcqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzcIc6lTEe-NBpoHimppkw" name="releaseTimeComparison" method="_U2zlg6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzcIdKlTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzcIdalTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzcIdqlTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzcId6lTEe-NBpoHimppkw" name="LatestReleaseTimeComparison" method="_U2zlh6lTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzcIeKlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzcIealTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_UzcvgKlTEe-NBpoHimppkw" name="LatestReleaseTimeComparison" method="_U2zliqlTEe-NBpoHimppkw">
                <ownedParameter xmi:id="_UzcvgalTEe-NBpoHimppkw" name="obj1" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_UzcvgqlTEe-NBpoHimppkw" name="obj2" type="_Ult1gKlTEe-NBpoHimppkw"/>
                <ownedParameter xmi:id="_Uzcvg6lTEe-NBpoHimppkw" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ul_iUKlTEe-NBpoHimppkw" name="ReliabilityVisualizationTest" visibility="package">
              <eAnnotations xmi:id="_Ul_iUalTEe-NBpoHimppkw" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_Ul_iUqlTEe-NBpoHimppkw" source="codegen">
                  <details xmi:id="_Ul_iU6lTEe-NBpoHimppkw" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_U2L6cKlTEe-NBpoHimppkw" name="mockWarp" visibility="private" type="_Ukr6wKlTEe-NBpoHimppkw" association="_U338hKlTEe-NBpoHimppkw"/>
              <ownedAttribute xmi:id="_U2MhgalTEe-NBpoHimppkw" name="reliabilityVisualization" visibility="private" type="_UjavcKlTEe-NBpoHimppkw" association="_U34jkalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MkKlTEe-NBpoHimppkw" name="setUp" specification="_UmAJYKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>mockWarp = new MockWarpInterface();&#xD;
     &#xD;
     //Initialize ReliabilityVisualization with the mock&#xD;
     reliabilityVisualization = new ReliabilityVisualization(mockWarp);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MkalTEe-NBpoHimppkw" name="testConstructor" specification="_UmAwcqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>assertNotNull(reliabilityVisualization);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MkqlTEe-NBpoHimppkw" name="testCreateTitle" specification="_UmBXgqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>String expectedTitle = &quot;Reliability Analysis for graph TestGraph\n&quot;;&#xD;
     String actualTitle = reliabilityVisualization.createTitle();&#xD;
     &#xD;
     assertEquals(expectedTitle, actualTitle);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20Mk6lTEe-NBpoHimppkw" name="testCreateHeader" specification="_UmB-kKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Description header = reliabilityVisualization.createHeader();&#xD;
     &#xD;
     assertTrue(header.toString().contains(&quot;Scheduler Name: Priority&quot;));&#xD;
     assertTrue(header.toString().contains(&quot;M: 0.9&quot;));&#xD;
     assertTrue(header.toString().contains(&quot;E2E: 0.99&quot;));&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MlKlTEe-NBpoHimppkw" name="testCreateColumnHeader" specification="_UmClo6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[] expectedColumnHeaders = {&quot;F0:A&quot;, &quot;F0:B&quot;, &quot;F0:C&quot;, &quot;F1:C&quot;, &quot;F1:B&quot;, &quot;F1:A&quot;};&#xD;
     String[] actualColumnHeaders = reliabilityVisualization.createColumnHeader();&#xD;
     &#xD;
     assertArrayEquals(expectedColumnHeaders, actualColumnHeaders);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MlalTEe-NBpoHimppkw" name="testCreateVisualizationData" specification="_UmDMsqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[][] visualizationData = reliabilityVisualization.createVisualizationData();&#xD;
     &#xD;
     //Check if the data is a 2D array with expected size&#xD;
     assertNotNull(visualizationData);&#xD;
     assertTrue(visualizationData.length > 0);&#xD;
     assertTrue(visualizationData[0].length > 0);&#xD;
     &#xD;
     //Check a specific value in the matrix&#xD;
     assertEquals(&quot;1.0&quot;, visualizationData[0][0]);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MlqlTEe-NBpoHimppkw" name="testDisplayVisualization" specification="_UmDzwqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>GuiVisualization guiVisualization = reliabilityVisualization.displayVisualization();&#xD;
     &#xD;
     assertNotNull(guiVisualization);&#xD;
     </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20Ml6lTEe-NBpoHimppkw" name="testEmptyVisualizationData" specification="_UmDzxqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>mockWarp = new MockWarpInterfaceWithNoData();&#xD;
     reliabilityVisualization = new ReliabilityVisualization(mockWarp);&#xD;
&#xD;
     String[][] visualizationData = reliabilityVisualization.createVisualizationData();&#xD;
&#xD;
     assertNotNull(visualizationData);&#xD;
     assertEquals(0, visualizationData.length);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MmKlTEe-NBpoHimppkw" name="testColumnHeaderCount" specification="_UmEa06lTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[] columnHeaders = reliabilityVisualization.createColumnHeader();&#xD;
     int expectedColumnCount = 6; &#xD;
     assertEquals(expectedColumnCount, columnHeaders.length);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MmalTEe-NBpoHimppkw" name="testNumFaultsReturnValue" specification="_UmFB4qlTEe-NBpoHimppkw">
                <language>java</language>
                <body>mockWarp = new MockWarpInterfaceWithFaults(5);&#xD;
     reliabilityVisualization = new ReliabilityVisualization(mockWarp);&#xD;
     &#xD;
     //Check if number of faults returned is correct&#xD;
     assertEquals(5, reliabilityVisualization.getNumFaults());&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20MmqlTEe-NBpoHimppkw" name="testErrorHandlingInVisualization" specification="_UmFB5qlTEe-NBpoHimppkw">
                <language>java</language>
                <body>try {&#xD;
         mockWarp = new MockWarpInterfaceWithError();&#xD;
         reliabilityVisualization = new ReliabilityVisualization(mockWarp);&#xD;
         reliabilityVisualization.createVisualizationData();&#xD;
         fail(&quot;Expected exception not thrown&quot;);&#xD;
     } catch (Exception e) {&#xD;
         assertTrue(e instanceof RuntimeException); &#xD;
     }&#xD;
 </body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UmAJYKlTEe-NBpoHimppkw" name="setUp" visibility="package" method="_U20MkKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmAwcqlTEe-NBpoHimppkw" name="testConstructor" visibility="package" method="_U20MkalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmBXgqlTEe-NBpoHimppkw" name="testCreateTitle" visibility="package" method="_U20MkqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmB-kKlTEe-NBpoHimppkw" name="testCreateHeader" visibility="package" method="_U20Mk6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmClo6lTEe-NBpoHimppkw" name="testCreateColumnHeader" visibility="package" method="_U20MlKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmDMsqlTEe-NBpoHimppkw" name="testCreateVisualizationData" visibility="package" method="_U20MlalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmDzwqlTEe-NBpoHimppkw" name="testDisplayVisualization" visibility="package" method="_U20MlqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmDzxqlTEe-NBpoHimppkw" name="testEmptyVisualizationData" visibility="package" method="_U20Ml6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmEa06lTEe-NBpoHimppkw" name="testColumnHeaderCount" visibility="package" method="_U20MmKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmFB4qlTEe-NBpoHimppkw" name="testNumFaultsReturnValue" visibility="package" method="_U20MmalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmFB5qlTEe-NBpoHimppkw" name="testErrorHandlingInVisualization" visibility="package" method="_U20MmqlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_UmG3EKlTEe-NBpoHimppkw" name="WorkLoadTest">
              <eAnnotations xmi:id="_UmG3EalTEe-NBpoHimppkw" source="http://ns.yatta.de/umllab">
                <contents xmi:type="ecore:EAnnotation" xmi:id="_UmG3EqlTEe-NBpoHimppkw" source="codegen">
                  <details xmi:id="_UmG3E6lTEe-NBpoHimppkw" key="codegenDirectory" value="/cs2820-fall24/test"/>
                </contents>
              </eAnnotations>
              <ownedAttribute xmi:id="_U2NIkKlTEe-NBpoHimppkw" name="workload" visibility="private" type="_UlImsKlTEe-NBpoHimppkw" association="_U35KoalTEe-NBpoHimppkw"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zoKlTEe-NBpoHimppkw" name="setUp" specification="_UmHeIKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;StressTest4.txt&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zoalTEe-NBpoHimppkw" name="addFlowAddTest" specification="_UmIsQqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// ArrayList of actual flow names in original order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		// new ArrayList of expected flows in expected order of &quot;StressTest4.txt&quot;&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected flow names with an additional flow are in the same order as &#xD;
		 * the actual flow names in the original order &#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add a flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zoqlTEe-NBpoHimppkw" name="addFlowOverridingTest" specification="_UmJTUqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addFlow(&quot;F9&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F9&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList of flows with a repeated flow are in the same order&#xD;
		 * as the actual flow names with the repeated flow&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not override new flow correctly&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zo6lTEe-NBpoHimppkw" name="addFlowMultipleAddsTest" specification="_UmJTVqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds second new flow &#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds third new flow &#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// adds fourth new flow&#xD;
		workload.addFlow(&quot;F14&quot;);&#xD;
		ArrayList&lt;String> actual = workload.getFlowNamesInOriginalOrder();&#xD;
		ArrayList&lt;String> exp = new ArrayList&lt;> (Arrays.asList(&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;,&#xD;
				&quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;, &quot;F14&quot;));&#xD;
		/*&#xD;
		 * Tests that the expected ArrayList with an addition of multiple flows is equal&#xD;
		 * to the actual ArrayList with the new flows&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Did not correctly add multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zpKlTEe-NBpoHimppkw" name="addNodeToFlowExistsTest" specification="_UmJ6Y6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;E&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node to &quot;F1&quot; but that already exists within &quot;StressTest4.txt&quot; is equal to the &#xD;
		 * corresponding elements in the actual &quot;F1&quot; array when calling getNodesInFlow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted existing node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zpalTEe-NBpoHimppkw" name="addNodeToFlowDoesntExistTest" specification="_UmKhc6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addNodeToFlow(&quot;F1&quot;, &quot;newNode&quot;);&#xD;
		String[] actual = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		String[] exp = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;newNode&quot;};&#xD;
		/*&#xD;
		 * Tests that each element of the expected array of &quot;F1&quot; with the addition of a new &#xD;
		 * node new to the file is equal to the actual array elements when calling getNodesInFLow()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly inserted new node into existing flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zpqlTEe-NBpoHimppkw" name="getTotalTxAttemptsInFlowOneFlowTest" specification="_UmOL0KlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer actual = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		Integer exp = 4;&#xD;
		/*&#xD;
		 * Tests that the expected totalCost of &quot;F1&quot; is equal to the actual cost as found with&#xD;
		 * getTotalTxAttemptsInFlow()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Produces the incorrect total cost&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zp6lTEe-NBpoHimppkw" name="getTotalTxAttemptsInFlowMultiFlowsTest" specification="_UmQBAKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer flowOneCost = workload.getTotalTxAttemptsInFlow(&quot;F1&quot;);&#xD;
		// finds number of transmission attempts for &quot;F2&quot; and returns as totalCost&#xD;
		Integer flowTwoCost = workload.getTotalTxAttemptsInFlow(&quot;F2&quot;);&#xD;
		// finds number of transmission attempts for &quot;F3&quot; and returns as totalCost&#xD;
		Integer flowThreeCost = workload.getTotalTxAttemptsInFlow(&quot;F3&quot;);&#xD;
		// sum of &quot;F1&quot;, &quot;F2&quot;, and &quot;F3&quot; total cost&#xD;
		Integer actual = flowOneCost + flowTwoCost + flowThreeCost;&#xD;
		Integer exp = 21;&#xD;
		/* &#xD;
		 * Tests that the expected sum of multiple flows' costs is equal to the actual sum as&#xD;
		 * found with getTotalTxAttemptsInFlow() to conclude that the method can accurately find&#xD;
		 * multiple flows' costs&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Incorrectly adds total cost of multiple flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zqKlTEe-NBpoHimppkw" name="getFlowPriorityTest" specification="_UmQoEKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>var actual = workload.getFlowPriority(&quot;F1&quot;, &quot;C&quot;);&#xD;
		var exp = 0;&#xD;
		/*&#xD;
		 * Tests that the expected priority of node &quot;C&quot; in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as found with getFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority for src node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zqalTEe-NBpoHimppkw" name="setFlowPriorityTest" specification="_UmQoFKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.setFlowPriority(&quot;F1&quot;, 5);&#xD;
		Integer actual = workload.getFlowPriority(&quot;F1&quot;);&#xD;
		Integer exp = 5;&#xD;
		/*&#xD;
		 * Tests that the expected priority of flow node in &quot;F1&quot; is equal to the actual&#xD;
		 * priority as set with setFlowPriority()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Does not set current flow priority&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zqqlTEe-NBpoHimppkw" name="getFlowTxAttemptsPerLinkTest" specification="_UmRPIqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(&quot;F1&quot;);&#xD;
		Integer exp = 3;&#xD;
		/* &#xD;
		 * Tests that the expected priority of flow &quot;F1&quot; is equal to the actual priority&#xD;
		 * found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect priority of specified flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zq6lTEe-NBpoHimppkw" name="getFlowTxAttemptsPerLinkEmptyTest" specification="_UmRPJqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer actual = workload.getFlowTxAttemptsPerLink(null);&#xD;
		Integer exp = 1;&#xD;
		/*&#xD;
		 * Tests that the expected priority of a null input, an empty list, is equal to &#xD;
		 * the actual priority of an empty list found with getFlowTxAttemptsPerLink()&#xD;
		 */&#xD;
		assertEquals(exp, actual, &quot;Returns incorrect default priority of flow&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zrKlTEe-NBpoHimppkw" name="setFlowsInRMorderCorrectOrderTest" specification="_UmR2M6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flow names in &quot;StressTest4.txt&quot; is &#xD;
		 * equal to the actual order of flow names in this file as found with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zralTEe-NBpoHimppkw" name="setFlowsInRMorderAddFlowsTest" specification="_UmSdQ6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// orders flow names with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of ordered flows of &quot;StressTest4.txt&quot; with three new flows&#xD;
		 * is equivalent to the actual ordered array with getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(actual, exp, &quot;Does not correctly order flows with new additional flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zrqlTEe-NBpoHimppkw" name="getNodeNamesOrderedAlphabeticallyTest" specification="_UmTrYKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected array of alphabetically ordered flows is equivalent to the &#xD;
		 * actual array order using getFlowNames() to find actual order&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zr6lTEe-NBpoHimppkw" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" specification="_UmTrZKlTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addFlow(&quot;F11&quot;);&#xD;
		// adds new flow &quot;F12&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F12&quot;);&#xD;
		// adds new flow &quot;F13&quot; to &quot;StressTest4.txt&quot;&#xD;
		workload.addFlow(&quot;F13&quot;);&#xD;
		// alphabetically ordered array of flow names in &quot;StressTest4.txt&quot; with three new flows&#xD;
		String[] actual = workload.getFlowNames();&#xD;
		String[] exp = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;F11&quot;, &quot;F12&quot;, &quot;F13&quot;};&#xD;
		/*&#xD;
		 * Tests that the expected alphabetically ordered array of flows in &quot;StressTest4.txt&quot; with &#xD;
		 * three new flows is equal to the actual alphabetical order of flows using getFlowNames()&#xD;
		 */&#xD;
		assertArrayEquals(exp, actual, &quot;Incorrectly orders flows alphabetically with new flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U20zsKlTEe-NBpoHimppkw" name="testGetFlowNames" specification="_UmU5galTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload.addFlow(&quot;Flow1&quot;);&#xD;
		workload.addFlow(&quot;Flow2&quot;);&#xD;
		workload.addFlow(&quot;Flow3&quot;);&#xD;
		// Expected array after adding new flows&#xD;
		String[] expectedFlowNames = {&quot;F1&quot;, &quot;F5&quot;, &quot;F2&quot;, &quot;F4&quot;, &quot;F3&quot;, &quot;F6&quot;, &quot;F7&quot;, &quot;F8&quot;, &quot;F9&quot;, &quot;F10&quot;, &quot;Flow1&quot;, &quot;Flow2&quot;, &quot;Flow3&quot;};&#xD;
		// Get actual flow names from workload&#xD;
		String[] actualFlowNames = workload.getFlowNames();&#xD;
		// Assert actual flow names match expected names&#xD;
		assertArrayEquals(expectedFlowNames, actualFlowNames, &quot;FlowNames are incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21asKlTEe-NBpoHimppkw" name="testGetFlowNamesEmpty" specification="_UmVgkqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Get flow names from the empty workload&#xD;
		String[] actualFlowNames = emptyWorkload.getFlowNames();&#xD;
		// Assert the array of flow names is empty&#xD;
		assertEquals(0, actualFlowNames.length, &quot;Array is not empty!&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21asalTEe-NBpoHimppkw" name="testGetNodeIndexNonExistentNode" specification="_UmVglqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer expectedIndex = 0;&#xD;
		// Get the actual index of a non-existent node &quot;Z&quot;&#xD;
		Integer actualIndex = workload.getNodeIndex(&quot;Z&quot;);&#xD;
		// Assert that the actual index matches the expected index&#xD;
		assertEquals(expectedIndex, actualIndex, &quot;The method should return 0 for a non-existent node&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21asqlTEe-NBpoHimppkw" name="testGetNodeIndexExistingNode" specification="_UmWHoqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer actualIndex = workload.getNodeIndex(&quot;C&quot;);&#xD;
		// Assert that the actual index of node &quot;C&quot; is correct&#xD;
		assertEquals(1, actualIndex, &quot;The index for node C is incorrect&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21as6lTEe-NBpoHimppkw" name="testGetNodesInFlowValidFlowF1" specification="_UmWHpqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[] expectedNodes = {&quot;B&quot;, &quot;C&quot;, &quot;D&quot;};&#xD;
		// Getting the actual nodes in the flow &quot;F1&quot;&#xD;
		String[] actualNodes = workload.getNodesInFlow(&quot;F1&quot;);&#xD;
		// Assert that the actual nodes match the expected nodes&#xD;
		assertArrayEquals(expectedNodes, actualNodes, &quot;Incorrect nodes for flow F1&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21atKlTEe-NBpoHimppkw" name="testGetNodesInFlowNonExistentFlow" specification="_UmX80qlTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];  &#xD;
		// Getting the actual nodes in the non-existent flow &quot;F99&quot;&#xD;
     String[] actualNodes = workload.getNodesInFlow(&quot;F99&quot;);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for non-existent flow F99&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21atalTEe-NBpoHimppkw" name="testGetNodesInFlowNullFlow" specification="_UmYj46lTEe-NBpoHimppkw">
                <language>java</language>
                <body>String[] expectedNodes = new String[0];&#xD;
     // Getting the actual nodes in a null flow&#xD;
     String[] actualNodes = workload.getNodesInFlow(null);&#xD;
     // Asserting that the actual nodes match the expected empty array&#xD;
     assertArrayEquals(expectedNodes, actualNodes, &quot;Expected empty array for null flow name&quot;);&#xD;
 </body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21atqlTEe-NBpoHimppkw" name="testGetHyperPeriodValidFlows" specification="_UmZK8qlTEe-NBpoHimppkw">
                <language>java</language>
                <body>int expectedHyperPeriod = 300;&#xD;
		// Getting the actual hyper period from the workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod calculation is incorrect for valid flows&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21at6lTEe-NBpoHimppkw" name="testGetHyperPeriodEmptyFlow" specification="_UmZK9qlTEe-NBpoHimppkw">
                <language>java</language>
                <body>workload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);  &#xD;
     // Expected hyper period when no flows exist&#xD;
     int expectedHyperPeriod = 1;&#xD;
     // Getting the actual hyper period from the empty workload&#xD;
     int actualHyperPeriod = workload.getHyperPeriod();&#xD;
     // Asserting that the actual hyper period matches the expected value&#xD;
     assertEquals(expectedHyperPeriod, actualHyperPeriod, &quot;HyperPeriod should be 1 when no flows exist&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21auKlTEe-NBpoHimppkw" name="testMaxFlowLengthStressTest4" specification="_UmlYMqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer expectedMaxFlowLength = 8;&#xD;
		// Getting the actual max flow length from the workload&#xD;
		Integer actualMaxFlowLength = workload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length is incorrect for StressTest4.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21aualTEe-NBpoHimppkw" name="testMaxFlowLengthNoFlows" specification="_UmmmUqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>WorkLoad emptyWorkload = new WorkLoad(0.9, 0.99, &quot;Test1.txt&quot;);&#xD;
		// Expected max flow length when there are no flows&#xD;
		Integer expectedMaxFlowLength = 0;&#xD;
		// Getting the actual max flow length from the empty workload&#xD;
		Integer actualMaxFlowLength = emptyWorkload.maxFlowLength();&#xD;
		// Asserting that the actual max flow length matches the expected value&#xD;
		assertEquals(expectedMaxFlowLength, actualMaxFlowLength, &quot;Max flow length should be 0 for no flows.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21auqlTEe-NBpoHimppkw" name="testGetFlowDeadlineValidFlow" specification="_UmnNYqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer expectedDeadline = 20;&#xD;
     // Getting the actual deadline for the flow &quot;F1&quot;&#xD;
     Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
     // Asserting that the actual deadline matches the expected value&#xD;
     assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for flow F1 should be 20.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21au6lTEe-NBpoHimppkw" name="testGetFlowDeadlineInvalidFlow" specification="_UmobgqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer actualDeadline = workload.getFlowDeadline(&quot;InvalidFlow&quot;);&#xD;
		// Expected deadline for a non-existent flow&#xD;
		Integer expectedDeadline = 100;&#xD;
		// Asserting that the actual deadline matches the expected value&#xD;
		assertEquals(expectedDeadline, actualDeadline, &quot;The deadline for a non-existent flow should be 100.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21avKlTEe-NBpoHimppkw" name="testSetFlowDeadlineValidFlow" specification="_UmpCkqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer newDeadline = 50;&#xD;
		// Setting the new deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, newDeadline);&#xD;
		// Getting the actual deadline after setting the new value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the new deadline&#xD;
		assertEquals(newDeadline, actualDeadline, &quot;The deadline for flow F1 should be set to 50.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21avalTEe-NBpoHimppkw" name="testSetFlowDeadlineUpdateExistingFlow" specification="_UmppoqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>Integer initialDeadline = 30;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, initialDeadline);&#xD;
		// Updated deadline to set for the flow &quot;F1&quot;&#xD;
		Integer updatedDeadline = 75;&#xD;
		// Setting the updated deadline for the flow &quot;F1&quot;&#xD;
		workload.setFlowDeadline(&quot;F1&quot;, updatedDeadline);&#xD;
		// Getting the actual deadline after updating the value&#xD;
		Integer actualDeadline = workload.getFlowDeadline(&quot;F1&quot;);&#xD;
		// Asserting that the actual deadline matches the updated deadline&#xD;
		assertEquals(updatedDeadline, actualDeadline, &quot;The deadline for flow F1 should be updated to 75.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21avqlTEe-NBpoHimppkw" name="testGetNumTxAttemptsPerLink_ExistingFlow" specification="_UmqQsqlTEe-NBpoHimppkw">
                <language>java</language>
                <body>String flowName = &quot;F1&quot;;&#xD;
		// Getting the transmission attempts per link for the existing flow&#xD;
		Integer[] txAttemptsPerLink = workload.getNumTxAttemptsPerLink(flowName);&#xD;
		// Asserting that the array is not null for an existing flow&#xD;
		assertNotNull(txAttemptsPerLink, &quot;The Tx attempts per link array should not be null for an existing flow.&quot;);&#xD;
		// Asserting that the array size is as expected&#xD;
		assertEquals(3, txAttemptsPerLink.length, &quot;The array size should be equal to the number of links in the flow minus the total cost.&quot;);&#xD;
		// Asserting that the Tx attempts per link match expected values&#xD;
		assertArrayEquals(new Integer[]{3, 3, 0}, txAttemptsPerLink, &quot;The Tx attempts per link should match expected values.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_U21av6lTEe-NBpoHimppkw" name="testGetNumTxAttemptsPerLink_MultipleFlows" specification="_Umq3w6lTEe-NBpoHimppkw">
                <language>java</language>
                <body>String flowName1 = &quot;F1&quot;;  &#xD;
		String flowName2 = &quot;F5&quot;;&#xD;
		// Getting the transmission attempts per link for both flows&#xD;
		Integer[] txAttemptsFlow1 = workload.getNumTxAttemptsPerLink(flowName1);&#xD;
		Integer[] txAttemptsFlow2 = workload.getNumTxAttemptsPerLink(flowName2);&#xD;
		// Asserting that the arrays are not null&#xD;
		assertNotNull(txAttemptsFlow1, &quot;The Tx attempts per link for F1 should not be null.&quot;);&#xD;
		assertNotNull(txAttemptsFlow2, &quot;The Tx attempts per link for F5 should not be null.&quot;);&#xD;
		// Asserting that the array sizes are as expected&#xD;
		assertEquals(3, txAttemptsFlow1.length, &quot;The array size for F1 should match the number of links minus the total cost.&quot;);&#xD;
		assertEquals(5, txAttemptsFlow2.length, &quot;The array size for F5 should match the number of links minus the total cost.&quot;);&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_UmHeIKlTEe-NBpoHimppkw" name="setUp" visibility="package" method="_U20zoKlTEe-NBpoHimppkw" raisedException="_U07WMKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmIFMqlTEe-NBpoHimppkw" name="tearDown" visibility="package" raisedException="_U07WMKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmIsQqlTEe-NBpoHimppkw" name="addFlowAddTest" visibility="package" method="_U20zoalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmJTUqlTEe-NBpoHimppkw" name="addFlowOverridingTest" visibility="package" method="_U20zoqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmJTVqlTEe-NBpoHimppkw" name="addFlowMultipleAddsTest" visibility="package" method="_U20zo6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmJ6Y6lTEe-NBpoHimppkw" name="addNodeToFlowExistsTest" visibility="package" method="_U20zpKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmKhc6lTEe-NBpoHimppkw" name="addNodeToFlowDoesntExistTest" visibility="package" method="_U20zpalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmOL0KlTEe-NBpoHimppkw" name="getTotalTxAttemptsInFlowOneFlowTest" visibility="package" method="_U20zpqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmQBAKlTEe-NBpoHimppkw" name="getTotalTxAttemptsInFlowMultiFlowsTest" visibility="package" method="_U20zp6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmQoEKlTEe-NBpoHimppkw" name="getFlowPriorityTest" visibility="package" method="_U20zqKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmQoFKlTEe-NBpoHimppkw" name="setFlowPriorityTest" visibility="package" method="_U20zqalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmRPIqlTEe-NBpoHimppkw" name="getFlowTxAttemptsPerLinkTest" visibility="package" method="_U20zqqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmRPJqlTEe-NBpoHimppkw" name="getFlowTxAttemptsPerLinkEmptyTest" visibility="package" method="_U20zq6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmR2M6lTEe-NBpoHimppkw" name="setFlowsInRMorderCorrectOrderTest" visibility="package" method="_U20zrKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmSdQ6lTEe-NBpoHimppkw" name="setFlowsInRMorderAddFlowsTest" visibility="package" method="_U20zralTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmTrYKlTEe-NBpoHimppkw" name="getNodeNamesOrderedAlphabeticallyTest" visibility="package" method="_U20zrqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmTrZKlTEe-NBpoHimppkw" name="getNodeNamesOrderedAlphabeticallyAdditionalFlowsTest" visibility="package" method="_U20zr6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmU5galTEe-NBpoHimppkw" name="testGetFlowNames" visibility="package" method="_U20zsKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmVgkqlTEe-NBpoHimppkw" name="testGetFlowNamesEmpty" visibility="package" method="_U21asKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmVglqlTEe-NBpoHimppkw" name="testGetNodeIndexNonExistentNode" visibility="package" method="_U21asalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmWHoqlTEe-NBpoHimppkw" name="testGetNodeIndexExistingNode" visibility="package" method="_U21asqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmWHpqlTEe-NBpoHimppkw" name="testGetNodesInFlowValidFlowF1" visibility="package" method="_U21as6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmX80qlTEe-NBpoHimppkw" name="testGetNodesInFlowNonExistentFlow" visibility="package" method="_U21atKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmYj46lTEe-NBpoHimppkw" name="testGetNodesInFlowNullFlow" visibility="package" method="_U21atalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmZK8qlTEe-NBpoHimppkw" name="testGetHyperPeriodValidFlows" visibility="package" method="_U21atqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmZK9qlTEe-NBpoHimppkw" name="testGetHyperPeriodEmptyFlow" visibility="package" method="_U21at6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmlYMqlTEe-NBpoHimppkw" name="testMaxFlowLengthStressTest4" visibility="package" method="_U21auKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmmmUqlTEe-NBpoHimppkw" name="testMaxFlowLengthNoFlows" visibility="package" method="_U21aualTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmnNYqlTEe-NBpoHimppkw" name="testGetFlowDeadlineValidFlow" visibility="package" method="_U21auqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmobgqlTEe-NBpoHimppkw" name="testGetFlowDeadlineInvalidFlow" visibility="package" method="_U21au6lTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmpCkqlTEe-NBpoHimppkw" name="testSetFlowDeadlineValidFlow" visibility="package" method="_U21avKlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmppoqlTEe-NBpoHimppkw" name="testSetFlowDeadlineUpdateExistingFlow" visibility="package" method="_U21avalTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_UmqQsqlTEe-NBpoHimppkw" name="testGetNumTxAttemptsPerLink_ExistingFlow" method="_U21avqlTEe-NBpoHimppkw"/>
              <ownedOperation xmi:id="_Umq3w6lTEe-NBpoHimppkw" name="testGetNumTxAttemptsPerLink_MultipleFlows" method="_U21av6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_Uz5bcalTEe-NBpoHimppkw" name="T"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_U0U5QKlTEe-NBpoHimppkw" name="ScheduleLocation"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_U0X8kKlTEe-NBpoHimppkw" name="ScheduleChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_U0n0MKlTEe-NBpoHimppkw" name="SystemChoices"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_U0pCUKlTEe-NBpoHimppkw" name="WorkLoadChoices"/>
            <packagedElement xmi:type="uml:Association" xmi:id="_U26TMKlTEe-NBpoHimppkw" name="" memberEnd="_U1QGUqlTEe-NBpoHimppkw _U26TMalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U26TMalTEe-NBpoHimppkw" name="" type="_Ug94YKlTEe-NBpoHimppkw" association="_U26TMKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U2_LsKlTEe-NBpoHimppkw" name="" memberEnd="_U15mkalTEe-NBpoHimppkw _U2_LsalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U2_LsalTEe-NBpoHimppkw" name="" type="_UlImsKlTEe-NBpoHimppkw" association="_U2_LsKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U2_LsqlTEe-NBpoHimppkw" name="" memberEnd="_U15mkqlTEe-NBpoHimppkw _U2_Ls6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U2_Ls6lTEe-NBpoHimppkw" name="" type="_UlImsKlTEe-NBpoHimppkw" association="_U2_LsqlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3Bn8KlTEe-NBpoHimppkw" name="" memberEnd="_U2KsUKlTEe-NBpoHimppkw _U3Bn8alTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3Bn8alTEe-NBpoHimppkw" name="" type="_Ult1gKlTEe-NBpoHimppkw" association="_U3Bn8KlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3bQkKlTEe-NBpoHimppkw" name="" memberEnd="_U3bQkalTEe-NBpoHimppkw _U1FuQKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3bQkalTEe-NBpoHimppkw" name="" type="_Uf3FIKlTEe-NBpoHimppkw" association="_U3bQkKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3b3oKlTEe-NBpoHimppkw" name="" memberEnd="_U3b3oalTEe-NBpoHimppkw _U1FuQqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3b3oalTEe-NBpoHimppkw" name="" type="_Uf3FIKlTEe-NBpoHimppkw" association="_U3b3oKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3cesalTEe-NBpoHimppkw" name="" memberEnd="_U3cesqlTEe-NBpoHimppkw _U1GVUalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3cesqlTEe-NBpoHimppkw" name="" type="_Uf3FIKlTEe-NBpoHimppkw" association="_U3cesalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3cetKlTEe-NBpoHimppkw" name="" memberEnd="_U3cetalTEe-NBpoHimppkw _U1HjcqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3cetalTEe-NBpoHimppkw" name="" type="_UgRU0KlTEe-NBpoHimppkw" association="_U3cetKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3dFwalTEe-NBpoHimppkw" name="" memberEnd="_U3dFwqlTEe-NBpoHimppkw _U1HjdKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3dFwqlTEe-NBpoHimppkw" name="" type="_UgRU0KlTEe-NBpoHimppkw" association="_U3dFwalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3ds0alTEe-NBpoHimppkw" name="" memberEnd="_U3ds0qlTEe-NBpoHimppkw _U1IxkalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3ds0qlTEe-NBpoHimppkw" name="" type="_UgU_MKlTEe-NBpoHimppkw" association="_U3ds0alTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3eT4alTEe-NBpoHimppkw" name="" memberEnd="_U3eT4qlTEe-NBpoHimppkw _U1Ixk6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3eT4qlTEe-NBpoHimppkw" name="" type="_UgU_MKlTEe-NBpoHimppkw" association="_U3eT4alTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3e68alTEe-NBpoHimppkw" name="" memberEnd="_U3e68qlTEe-NBpoHimppkw _U1J_salTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3e68qlTEe-NBpoHimppkw" name="" type="_UgXbcKlTEe-NBpoHimppkw" association="_U3e68alTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3e69KlTEe-NBpoHimppkw" name="" memberEnd="_U3e69alTEe-NBpoHimppkw _U1Kmw6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3e69alTEe-NBpoHimppkw" name="" type="_UghzgKlTEe-NBpoHimppkw" association="_U3e69KlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3fiAalTEe-NBpoHimppkw" name="" memberEnd="_U3fiAqlTEe-NBpoHimppkw _U1L04KlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3fiAqlTEe-NBpoHimppkw" name="" type="_UghzgKlTEe-NBpoHimppkw" association="_U3fiAalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3gJEalTEe-NBpoHimppkw" name="" memberEnd="_U3gJEqlTEe-NBpoHimppkw _U1NqEKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3gJEqlTEe-NBpoHimppkw" name="" type="_UgwdAKlTEe-NBpoHimppkw" association="_U3gJEalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3gwIalTEe-NBpoHimppkw" name="" memberEnd="_U3gwIqlTEe-NBpoHimppkw _U1O4MalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3gwIqlTEe-NBpoHimppkw" name="" type="_UgwdAKlTEe-NBpoHimppkw" association="_U3gwIalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3hXMKlTEe-NBpoHimppkw" name="" memberEnd="_U3hXMalTEe-NBpoHimppkw _U1Sik6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3hXMalTEe-NBpoHimppkw" name="" type="_UhMh4KlTEe-NBpoHimppkw" association="_U3hXMKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3hXM6lTEe-NBpoHimppkw" name="" memberEnd="_U3hXNKlTEe-NBpoHimppkw _U1TJoqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3hXNKlTEe-NBpoHimppkw" name="" type="_UhMh4KlTEe-NBpoHimppkw" association="_U3hXM6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3h-QalTEe-NBpoHimppkw" name="" memberEnd="_U3h-QqlTEe-NBpoHimppkw _U1TwsqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3h-QqlTEe-NBpoHimppkw" name="" type="_UhMh4KlTEe-NBpoHimppkw" association="_U3h-QalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3h-RKlTEe-NBpoHimppkw" name="" memberEnd="_U3h-RalTEe-NBpoHimppkw _U1UXwqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3h-RalTEe-NBpoHimppkw" name="" type="_UhMh4KlTEe-NBpoHimppkw" association="_U3h-RKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3ilUalTEe-NBpoHimppkw" name="" memberEnd="_U3ilUqlTEe-NBpoHimppkw _U1UXxKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3ilUqlTEe-NBpoHimppkw" name="" type="_UhMh4KlTEe-NBpoHimppkw" association="_U3ilUalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3jMYKlTEe-NBpoHimppkw" name="" memberEnd="_U3jMYalTEe-NBpoHimppkw _U1WM86lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3jMYalTEe-NBpoHimppkw" name="" type="_UhcZgKlTEe-NBpoHimppkw" association="_U3jMYKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3jMY6lTEe-NBpoHimppkw" name="" memberEnd="_U3jMZKlTEe-NBpoHimppkw _U1W0A6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3jMZKlTEe-NBpoHimppkw" name="" type="_UhcZgKlTEe-NBpoHimppkw" association="_U3jMY6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3jzcalTEe-NBpoHimppkw" name="" memberEnd="_U3jzcqlTEe-NBpoHimppkw _U1XbEKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3jzcqlTEe-NBpoHimppkw" name="" type="_Uhk8YKlTEe-NBpoHimppkw" association="_U3jzcalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3kagalTEe-NBpoHimppkw" name="" memberEnd="_U3kagqlTEe-NBpoHimppkw _U1XbEqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3kagqlTEe-NBpoHimppkw" name="" type="_UhomwKlTEe-NBpoHimppkw" association="_U3kagalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3kahKlTEe-NBpoHimppkw" name="" memberEnd="_U3kahalTEe-NBpoHimppkw _U1YCIalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3kahalTEe-NBpoHimppkw" name="" type="_UhomwKlTEe-NBpoHimppkw" association="_U3kahKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3lBkalTEe-NBpoHimppkw" name="" memberEnd="_U3lBkqlTEe-NBpoHimppkw _U1YCJalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3lBkqlTEe-NBpoHimppkw" name="" type="_UhrqEKlTEe-NBpoHimppkw" association="_U3lBkalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3looKlTEe-NBpoHimppkw" name="" memberEnd="_U3looalTEe-NBpoHimppkw _U1aeYKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3looalTEe-NBpoHimppkw" name="" type="_Uh00AKlTEe-NBpoHimppkw" association="_U3looKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3loo6lTEe-NBpoHimppkw" name="" memberEnd="_U3lopKlTEe-NBpoHimppkw _U1aeYqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3lopKlTEe-NBpoHimppkw" name="" type="_Uh00AKlTEe-NBpoHimppkw" association="_U3loo6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3mPsalTEe-NBpoHimppkw" name="" memberEnd="_U3mPsqlTEe-NBpoHimppkw _U1aeZKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3mPsqlTEe-NBpoHimppkw" name="" type="_Uh00AKlTEe-NBpoHimppkw" association="_U3mPsalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3m2walTEe-NBpoHimppkw" name="" memberEnd="_U3m2wqlTEe-NBpoHimppkw _U1bFcalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3m2wqlTEe-NBpoHimppkw" name="" type="_Uh00AKlTEe-NBpoHimppkw" association="_U3m2walTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3m2xKlTEe-NBpoHimppkw" name="" memberEnd="_U3m2xalTEe-NBpoHimppkw _U1bFc6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3m2xalTEe-NBpoHimppkw" name="" type="_Uh00AKlTEe-NBpoHimppkw" association="_U3m2xKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3nd0alTEe-NBpoHimppkw" name="" memberEnd="_U3nd0qlTEe-NBpoHimppkw _U1cTkalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3nd0qlTEe-NBpoHimppkw" name="" type="_Uh6TkKlTEe-NBpoHimppkw" association="_U3nd0alTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3oE4alTEe-NBpoHimppkw" name="" memberEnd="_U3oE4qlTEe-NBpoHimppkw _U1cTk6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3oE4qlTEe-NBpoHimppkw" name="" type="_Uh6TkKlTEe-NBpoHimppkw" association="_U3oE4alTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3or8KlTEe-NBpoHimppkw" name="" memberEnd="_U3or8alTEe-NBpoHimppkw _U1dhsKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3or8alTEe-NBpoHimppkw" name="" type="_UiBBQKlTEe-NBpoHimppkw" association="_U3or8KlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3or86lTEe-NBpoHimppkw" name="" memberEnd="_U3or9KlTEe-NBpoHimppkw _U1ev1qlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3or9KlTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3or86lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3pTAalTEe-NBpoHimppkw" name="" memberEnd="_U3pTAqlTEe-NBpoHimppkw _U1fW4KlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3pTAqlTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3pTAalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3pTBKlTEe-NBpoHimppkw" name="" memberEnd="_U3pTBalTEe-NBpoHimppkw _U1fW4qlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3pTBalTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3pTBKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3p6EalTEe-NBpoHimppkw" name="" memberEnd="_U3p6EqlTEe-NBpoHimppkw _U1f98KlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3p6EqlTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3p6EalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3qhIalTEe-NBpoHimppkw" name="" memberEnd="_U3qhIqlTEe-NBpoHimppkw _U1f99alTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3qhIqlTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3qhIalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3qhJKlTEe-NBpoHimppkw" name="" memberEnd="_U3qhJalTEe-NBpoHimppkw _U1f996lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3qhJalTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3qhJKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3rIMalTEe-NBpoHimppkw" name="" memberEnd="_U3rIMqlTEe-NBpoHimppkw _U1glAqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3rIMqlTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3rIMalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3rvQalTEe-NBpoHimppkw" name="" memberEnd="_U3rvQqlTEe-NBpoHimppkw _U1hMEqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3rvQqlTEe-NBpoHimppkw" name="" type="_UiPqwKlTEe-NBpoHimppkw" association="_U3rvQalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3rvRKlTEe-NBpoHimppkw" name="" memberEnd="_U3rvRalTEe-NBpoHimppkw _U1jBQalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3rvRalTEe-NBpoHimppkw" name="" type="_UijMwKlTEe-NBpoHimppkw" association="_U3rvRKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3sWUalTEe-NBpoHimppkw" name="" memberEnd="_U3sWUqlTEe-NBpoHimppkw _U1jBQ6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3sWUqlTEe-NBpoHimppkw" name="" type="_UijMwKlTEe-NBpoHimppkw" association="_U3sWUalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3s9YalTEe-NBpoHimppkw" name="" memberEnd="_U3s9YqlTEe-NBpoHimppkw _U1joUalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3s9YqlTEe-NBpoHimppkw" name="" type="_UijMwKlTEe-NBpoHimppkw" association="_U3s9YalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3tkcKlTEe-NBpoHimppkw" name="" memberEnd="_U3tkcalTEe-NBpoHimppkw _U1ldgKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3tkcalTEe-NBpoHimppkw" name="" type="_UijMwKlTEe-NBpoHimppkw" association="_U3tkcKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3tkc6lTEe-NBpoHimppkw" name="" memberEnd="_U3tkdKlTEe-NBpoHimppkw _U1mroalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3tkdKlTEe-NBpoHimppkw" name="" type="_UijMwKlTEe-NBpoHimppkw" association="_U3tkc6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3uLgalTEe-NBpoHimppkw" name="" memberEnd="_U3uLgqlTEe-NBpoHimppkw _U1n5xKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3uLgqlTEe-NBpoHimppkw" name="" type="_UjAfwKlTEe-NBpoHimppkw" association="_U3uLgalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3uykalTEe-NBpoHimppkw" name="" memberEnd="_U3uykqlTEe-NBpoHimppkw _U1og0alTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3uykqlTEe-NBpoHimppkw" name="" type="_UjAfwKlTEe-NBpoHimppkw" association="_U3uykalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3uylKlTEe-NBpoHimppkw" name="" memberEnd="_U3uylalTEe-NBpoHimppkw _U1rkJqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3uylalTEe-NBpoHimppkw" name="" type="_UjavcKlTEe-NBpoHimppkw" association="_U3uylKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3vZoalTEe-NBpoHimppkw" name="" memberEnd="_U3vZoqlTEe-NBpoHimppkw _U1sLMKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3vZoqlTEe-NBpoHimppkw" name="" type="_UjavcKlTEe-NBpoHimppkw" association="_U3vZoalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3vZpKlTEe-NBpoHimppkw" name="" memberEnd="_U3vZpalTEe-NBpoHimppkw _U1sLNKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3vZpalTEe-NBpoHimppkw" name="" type="_UjhdIKlTEe-NBpoHimppkw" association="_U3vZpKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3wAsalTEe-NBpoHimppkw" name="" memberEnd="_U3wAsqlTEe-NBpoHimppkw _U1uAZalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3wAsqlTEe-NBpoHimppkw" name="" type="_Uj868KlTEe-NBpoHimppkw" association="_U3wAsalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3wAtKlTEe-NBpoHimppkw" name="" memberEnd="_U3wAtalTEe-NBpoHimppkw _U1uncKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3wAtalTEe-NBpoHimppkw" name="" type="_Uj868KlTEe-NBpoHimppkw" association="_U3wAtKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3wnwalTEe-NBpoHimppkw" name="" memberEnd="_U3wnwqlTEe-NBpoHimppkw _U1v1lalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3wnwqlTEe-NBpoHimppkw" name="" type="_UkcDIKlTEe-NBpoHimppkw" association="_U3wnwalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3wnxKlTEe-NBpoHimppkw" name="" memberEnd="_U3wnxalTEe-NBpoHimppkw _U1wcoalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3wnxalTEe-NBpoHimppkw" name="" type="_UkcDIKlTEe-NBpoHimppkw" association="_U3wnxKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3xO0alTEe-NBpoHimppkw" name="" memberEnd="_U3xO0qlTEe-NBpoHimppkw _U1wco6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3xO0qlTEe-NBpoHimppkw" name="" type="_UkcDIKlTEe-NBpoHimppkw" association="_U3xO0alTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3xO1KlTEe-NBpoHimppkw" name="" memberEnd="_U3xO1alTEe-NBpoHimppkw _U1xDtalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3xO1alTEe-NBpoHimppkw" name="" type="_UkcDIKlTEe-NBpoHimppkw" association="_U3xO1KlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3x14alTEe-NBpoHimppkw" name="" memberEnd="_U3x14qlTEe-NBpoHimppkw _U1xqwKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3x14qlTEe-NBpoHimppkw" name="" type="_UkcDIKlTEe-NBpoHimppkw" association="_U3x14alTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3yc8KlTEe-NBpoHimppkw" name="" memberEnd="_U3yc8alTEe-NBpoHimppkw _U1xqw6lTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3yc8alTEe-NBpoHimppkw" name="" type="_UkcDIKlTEe-NBpoHimppkw" association="_U3yc8KlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3yc86lTEe-NBpoHimppkw" name="" memberEnd="_U3yc9KlTEe-NBpoHimppkw _U1xqxqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3yc9KlTEe-NBpoHimppkw" name="" type="_UkcDIKlTEe-NBpoHimppkw" association="_U3yc86lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3zEAKlTEe-NBpoHimppkw" name="" memberEnd="_U3zEAalTEe-NBpoHimppkw _U1yR0KlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3zEAalTEe-NBpoHimppkw" name="" type="_UkjX4KlTEe-NBpoHimppkw" association="_U3zEAKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3zEA6lTEe-NBpoHimppkw" name="" memberEnd="_U3zEBKlTEe-NBpoHimppkw _U10HAKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3zEBKlTEe-NBpoHimppkw" name="" type="_UkwMMKlTEe-NBpoHimppkw" association="_U3zEA6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3zrEalTEe-NBpoHimppkw" name="" memberEnd="_U3zrEqlTEe-NBpoHimppkw _U10HAqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3zrEqlTEe-NBpoHimppkw" name="" type="_UkwMMKlTEe-NBpoHimppkw" association="_U3zrEalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U3zrFKlTEe-NBpoHimppkw" name="" memberEnd="_U3zrFalTEe-NBpoHimppkw _U10HBKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U3zrFalTEe-NBpoHimppkw" name="" type="_UkwMMKlTEe-NBpoHimppkw" association="_U3zrFKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U30SIalTEe-NBpoHimppkw" name="" memberEnd="_U30SIqlTEe-NBpoHimppkw _U10uEKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U30SIqlTEe-NBpoHimppkw" name="" type="_UkwMMKlTEe-NBpoHimppkw" association="_U30SIalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U30SJKlTEe-NBpoHimppkw" name="" memberEnd="_U30SJalTEe-NBpoHimppkw _U10uEqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U30SJalTEe-NBpoHimppkw" name="" type="_UkwMMKlTEe-NBpoHimppkw" association="_U30SJKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U305MalTEe-NBpoHimppkw" name="" memberEnd="_U305MqlTEe-NBpoHimppkw _U118NKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U305MqlTEe-NBpoHimppkw" name="" type="_UlBR8KlTEe-NBpoHimppkw" association="_U305MalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U31gQKlTEe-NBpoHimppkw" name="" memberEnd="_U31gQalTEe-NBpoHimppkw _U13KVKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U31gQalTEe-NBpoHimppkw" name="" type="_UlEVQKlTEe-NBpoHimppkw" association="_U31gQKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U31gQ6lTEe-NBpoHimppkw" name="" memberEnd="_U31gRKlTEe-NBpoHimppkw _U13xYqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U31gRKlTEe-NBpoHimppkw" name="" type="_UlEVQKlTEe-NBpoHimppkw" association="_U31gQ6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U32HUalTEe-NBpoHimppkw" name="" memberEnd="_U32HUqlTEe-NBpoHimppkw _U15mlalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U32HUqlTEe-NBpoHimppkw" name="" type="_UlImsKlTEe-NBpoHimppkw" association="_U32HUalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U32uYKlTEe-NBpoHimppkw" name="" memberEnd="_U32uYalTEe-NBpoHimppkw _U160sKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U32uYalTEe-NBpoHimppkw" name="" type="_UlImsKlTEe-NBpoHimppkw" association="_U32uYKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U32uY6lTEe-NBpoHimppkw" name="" memberEnd="_U32uZKlTEe-NBpoHimppkw _U1_tMalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U32uZKlTEe-NBpoHimppkw" name="" type="_UlhBMKlTEe-NBpoHimppkw" association="_U32uY6lTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U33VcalTEe-NBpoHimppkw" name="" memberEnd="_U33VcqlTEe-NBpoHimppkw _U2AUQqlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U33VcqlTEe-NBpoHimppkw" name="" type="_UlhBMKlTEe-NBpoHimppkw" association="_U33VcalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U33VdKlTEe-NBpoHimppkw" name="" memberEnd="_U33VdalTEe-NBpoHimppkw _U2KsUalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U33VdalTEe-NBpoHimppkw" name="" type="_Ult1gKlTEe-NBpoHimppkw" association="_U33VdKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U338galTEe-NBpoHimppkw" name="" memberEnd="_U338gqlTEe-NBpoHimppkw _U2LTYKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U338gqlTEe-NBpoHimppkw" name="" type="_Ult1gKlTEe-NBpoHimppkw" association="_U338galTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U338hKlTEe-NBpoHimppkw" name="" memberEnd="_U338halTEe-NBpoHimppkw _U2L6cKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U338halTEe-NBpoHimppkw" name="" type="_Ul_iUKlTEe-NBpoHimppkw" association="_U338hKlTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U34jkalTEe-NBpoHimppkw" name="" memberEnd="_U34jkqlTEe-NBpoHimppkw _U2MhgalTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U34jkqlTEe-NBpoHimppkw" name="" type="_Ul_iUKlTEe-NBpoHimppkw" association="_U34jkalTEe-NBpoHimppkw"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_U35KoalTEe-NBpoHimppkw" name="" memberEnd="_U35KoqlTEe-NBpoHimppkw _U2NIkKlTEe-NBpoHimppkw">
              <ownedEnd xmi:id="_U35KoqlTEe-NBpoHimppkw" name="" type="_UmG3EKlTEe-NBpoHimppkw" association="_U35KoalTEe-NBpoHimppkw"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_UZA2RalTEe-NBpoHimppkw" name="warpdsls">
            <packagedElement xmi:type="uml:Class" xmi:id="_Ux3bIalTEe-NBpoHimppkw" name="WARPBaseListener"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ux3bI6lTEe-NBpoHimppkw" name="WARPLexer"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ux4CMalTEe-NBpoHimppkw" name="WARPParser"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_U02dsKlTEe-NBpoHimppkw" name="WARPdslBaseListener"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_UZnTMKlTEe-NBpoHimppkw" name="utilities">
            <packagedElement xmi:type="uml:Class" xmi:id="_UyWjUKlTEe-NBpoHimppkw" name="Utilities"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UYMW4KlTEe-NBpoHimppkw" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_UYMW4alTEe-NBpoHimppkw" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_UYeqwKlTEe-NBpoHimppkw" name="regex">
          <packagedElement xmi:type="uml:Class" xmi:id="_UxjSEKlTEe-NBpoHimppkw" name="Pattern"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_UbKyYKlTEe-NBpoHimppkw" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_UzGxQKlTEe-NBpoHimppkw" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_UjMtAqlTEe-NBpoHimppkw" name="PriorityQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UxXE0KlTEe-NBpoHimppkw" name="HashMap"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UxYS8KlTEe-NBpoHimppkw" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UxY6AalTEe-NBpoHimppkw" name="HashSet"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UxZhEalTEe-NBpoHimppkw" name="Iterator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UxZhE6lTEe-NBpoHimppkw" name="Set"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UxoxoalTEe-NBpoHimppkw" name="Comparator"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UyMLQKlTEe-NBpoHimppkw" name="Collection"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UyXKYalTEe-NBpoHimppkw" name="Arrays"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Uyg7YKlTEe-NBpoHimppkw" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_Uyg7YqlTEe-NBpoHimppkw" name="List"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UyhicalTEe-NBpoHimppkw" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UzYeEKlTEe-NBpoHimppkw" name="LinkedList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_UzYeEqlTEe-NBpoHimppkw" name="Queue"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_UYvwg6lTEe-NBpoHimppkw" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_UxscAKlTEe-NBpoHimppkw" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UxscAqlTEe-NBpoHimppkw" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UyBzMKlTEe-NBpoHimppkw" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_UyCaQalTEe-NBpoHimppkw" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_UYwXkKlTEe-NBpoHimppkw" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_UYwXkalTEe-NBpoHimppkw" name="file">
          <packagedElement xmi:type="uml:Class" xmi:id="_UxtDEalTEe-NBpoHimppkw" name="Files"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_UxtDE6lTEe-NBpoHimppkw" name="Path"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_UxtqIalTEe-NBpoHimppkw" name="Paths"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_UZG84KlTEe-NBpoHimppkw" name="awt">
        <packagedElement xmi:type="uml:Class" xmi:id="_Ux-I0KlTEe-NBpoHimppkw" name="Component"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_UztOMKlTEe-NBpoHimppkw" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_UztOMalTEe-NBpoHimppkw" name="Comparable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_U0DMcKlTEe-NBpoHimppkw" name="RuntimeException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_U0aY0KlTEe-NBpoHimppkw" name="Double"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_U07WMKlTEe-NBpoHimppkw" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UYvwgKlTEe-NBpoHimppkw" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_UYvwgalTEe-NBpoHimppkw" name="mkyong">
        <packagedElement xmi:type="uml:Package" xmi:id="_UYvwgqlTEe-NBpoHimppkw" name="system">
          <packagedElement xmi:type="uml:Class" xmi:id="_Uxr08KlTEe-NBpoHimppkw" name="OSValidator"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UYwXkqlTEe-NBpoHimppkw" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_UYwXk6lTEe-NBpoHimppkw" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_UZG84alTEe-NBpoHimppkw" name="table">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Ux_-AalTEe-NBpoHimppkw" name="TableCellRenderer"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_Ux_-A6lTEe-NBpoHimppkw" name="TableColumnModel"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_UxuRMalTEe-NBpoHimppkw" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ux-v4alTEe-NBpoHimppkw" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ux-v46lTEe-NBpoHimppkw" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ux_W8alTEe-NBpoHimppkw" name="JTable"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UZA2QKlTEe-NBpoHimppkw" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_UZA2QalTEe-NBpoHimppkw" name="antlr">
        <packagedElement xmi:type="uml:Package" xmi:id="_UZA2QqlTEe-NBpoHimppkw" name="v4">
          <packagedElement xmi:type="uml:Package" xmi:id="_UZA2Q6lTEe-NBpoHimppkw" name="runtime">
            <packagedElement xmi:type="uml:Package" xmi:id="_UZA2RKlTEe-NBpoHimppkw" name="tree">
              <packagedElement xmi:type="uml:Interface" xmi:id="_Ux20EKlTEe-NBpoHimppkw" name="ParseTree"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_Ux20EqlTEe-NBpoHimppkw" name="ParseTreeWalker"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Interface" xmi:id="_Ux0-4KlTEe-NBpoHimppkw" name="CharStream"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ux1l8alTEe-NBpoHimppkw" name="CharStreams"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Ux2NAalTEe-NBpoHimppkw" name="CommonTokenStream"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_UaEmMKlTEe-NBpoHimppkw" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_UaEmMalTEe-NBpoHimppkw" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_UaFNQKlTEe-NBpoHimppkw" name="api">
            <packagedElement xmi:type="uml:Interface" xmi:id="_UynCAalTEe-NBpoHimppkw" name="BeforeEach"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_UyoQIKlTEe-NBpoHimppkw" name="Test"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_UyoQIqlTEe-NBpoHimppkw" name="Assertions"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_UzfLwKlTEe-NBpoHimppkw" name="AfterEach"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UZDSgKlTEe-NBpoHimppkw" name="WARPParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_Ux4pR6lTEe-NBpoHimppkw" name="WarpNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ux53YqlTEe-NBpoHimppkw" name="WarpContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ux6ec6lTEe-NBpoHimppkw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ux7FhqlTEe-NBpoHimppkw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ux8ToqlTEe-NBpoHimppkw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Ux86talTEe-NBpoHimppkw" name="FlowContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Uy_chqlTEe-NBpoHimppkw" name="PriorityContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzAqoqlTEe-NBpoHimppkw" name="PeriodContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzBRs6lTEe-NBpoHimppkw" name="DeadlineContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzB4xqlTEe-NBpoHimppkw" name="PhaseContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UbhXsKlTEe-NBpoHimppkw" name="WARPdslParser">
      <packagedElement xmi:type="uml:Class" xmi:id="_UzMQ0KlTEe-NBpoHimppkw" name="ActionContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzNe8qlTEe-NBpoHimppkw" name="FlowNameContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzOGBalTEe-NBpoHimppkw" name="CmdContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzPUIqlTEe-NBpoHimppkw" name="SrcNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzP7M6lTEe-NBpoHimppkw" name="SnkNodeContext"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzRJUKlTEe-NBpoHimppkw" name="ChannelContext"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_UbpTgKlTEe-NBpoHimppkw" name="argparser">
      <packagedElement xmi:type="uml:Class" xmi:id="_UzS-gKlTEe-NBpoHimppkw" name="ArgParser"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzTlkKlTEe-NBpoHimppkw" name="BooleanHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzTlkqlTEe-NBpoHimppkw" name="DoubleHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzUMoalTEe-NBpoHimppkw" name="IntHolder"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_UzUMo6lTEe-NBpoHimppkw" name="StringHolder"/>
    </packagedElement>
    <profileApplication xmi:id="_Ted5kKlTEe-NBpoHimppkw">
      <eAnnotations xmi:id="_TenqkKlTEe-NBpoHimppkw" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_TeoRoKlTEe-NBpoHimppkw" base_Package="_TUZXkKlTEe-NBpoHimppkw">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:Generics xmi:id="_Uf0o4KlTEe-NBpoHimppkw" genericsValue="T,E" base_Element="_UfzawKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uf6IcKlTEe-NBpoHimppkw" base_Element="_Uf5hYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uf6vgKlTEe-NBpoHimppkw" base_Element="_Uf5hYKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uf6vgalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Uf79oKlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_Uf6vgqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uf8ksalTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_Uf8ksKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uf9y0KlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_Uf9LwKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uf-Z4KlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_Uf9y0alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uf_oAKlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_Uf_A8KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UgcT8KlTEe-NBpoHimppkw" genericsValue="String" base_Element="_Ugbs4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Ugk20KlTEe-NBpoHimppkw" genericsValue="String" base_Element="_UgkPwalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ugy5QKlTEe-NBpoHimppkw" base_Element="_UgySMKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ugy5QalTEe-NBpoHimppkw" base_Element="_UgySMKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ugy5QqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UgzgUKlTEe-NBpoHimppkw" base_Element="_Ugy5Q6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UgzgUalTEe-NBpoHimppkw" base_Element="_Ugy5Q6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UgzgUqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ug0HYKlTEe-NBpoHimppkw" base_Element="_UgzgU6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ug0HYalTEe-NBpoHimppkw" base_Element="_UgzgU6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Ug0HYqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ug5m8KlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_Ug4_4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ug8qQqlTEe-NBpoHimppkw" base_Element="_Ug8qQKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ug8qQ6lTEe-NBpoHimppkw" base_Element="_Ug8qQKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ug8qRKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ug_tkKlTEe-NBpoHimppkw" base_Element="_Ug_GgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UhCJ0qlTEe-NBpoHimppkw" base_Element="_UhCJ0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UhCw4KlTEe-NBpoHimppkw" base_Element="_UhCJ0KlTEe-NBpoHimppkw">
    <annotations xmi:id="_UhCw4alTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UhDX8KlTEe-NBpoHimppkw" base_Element="_UhCw4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UhDX8alTEe-NBpoHimppkw" base_Element="_UhCw4qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UhDX8qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UhD_AalTEe-NBpoHimppkw" base_Element="_UhD_AKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UhD_AqlTEe-NBpoHimppkw" base_Element="_UhD_AKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UhD_A6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UhQzUKlTEe-NBpoHimppkw" genericsValue="Node" base_Element="_UhQMQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UhRaYKlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_UhQzUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UhSogKlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_UhSBcKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UhVEwKlTEe-NBpoHimppkw" base_Element="_UhUdsKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UhVEwalTEe-NBpoHimppkw" base_Element="_UhUdsKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UhVEwqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UheOsKlTEe-NBpoHimppkw" base_Element="_UhdnoKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UheOsalTEe-NBpoHimppkw" base_Element="_UhdnoKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uhe1wKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_Uhqb8KlTEe-NBpoHimppkw" dimensions="2" base_Element="_Uhp04alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uh9W4KlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_Uh8v0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uh_MEKlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_Uh-lAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UiDdgKlTEe-NBpoHimppkw" base_Element="_UiC2cKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UiDdgalTEe-NBpoHimppkw" base_Element="_UiC2cKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UiDdgqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UiFSsKlTEe-NBpoHimppkw" base_Element="_UiEroKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UiFSsalTEe-NBpoHimppkw" base_Element="_UiEroKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UiFSsqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UiF5wKlTEe-NBpoHimppkw" base_Element="_UiFSs6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UiF5walTEe-NBpoHimppkw" base_Element="_UiFSs6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UiF5wqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UiMAZqlTEe-NBpoHimppkw" base_Element="_UiMAZalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UiMncKlTEe-NBpoHimppkw" base_Element="_UiMAZalTEe-NBpoHimppkw">
    <annotations xmi:id="_UiMncalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UiOcoKlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_UiN1kKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UiRf8KlTEe-NBpoHimppkw" genericsValue="String, Integer" base_Element="_UiQ44KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UiSHAKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_UiRf8alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_UiSHBKlTEe-NBpoHimppkw" base_Element="_UiSHAalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uib4AalTEe-NBpoHimppkw" base_Element="_Uib4AKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UicfEKlTEe-NBpoHimppkw" base_Element="_Uib4AKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UicfEalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Uih-oKlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_UihXkKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uitk0KlTEe-NBpoHimppkw" base_Element="_Uis9wKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uitk0alTEe-NBpoHimppkw" base_Element="_Uis9wKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uitk0qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uiuy8KlTEe-NBpoHimppkw" base_Element="_UiuL4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uiuy8alTEe-NBpoHimppkw" base_Element="_UiuL4qlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uiuy8qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UivaAalTEe-NBpoHimppkw" base_Element="_Uiuy86lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UivaAqlTEe-NBpoHimppkw" base_Element="_Uiuy86lTEe-NBpoHimppkw">
    <annotations xmi:id="_UivaA6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UiwoIalTEe-NBpoHimppkw" base_Element="_UiwoIKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UixPMKlTEe-NBpoHimppkw" base_Element="_UiwoIKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UixPMalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UixPM6lTEe-NBpoHimppkw" base_Element="_UixPMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uix2QKlTEe-NBpoHimppkw" base_Element="_UixPMqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uix2QalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UiydUKlTEe-NBpoHimppkw" base_Element="_Uix2QqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UiydUalTEe-NBpoHimppkw" base_Element="_Uix2QqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UiydUqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UizEYalTEe-NBpoHimppkw" base_Element="_UiydU6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UizEYqlTEe-NBpoHimppkw" base_Element="_UiydU6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UizEY6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ui0SgKlTEe-NBpoHimppkw" base_Element="_UizrcKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ui0SgalTEe-NBpoHimppkw" base_Element="_UizrcKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ui0SgqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Ui05kKlTEe-NBpoHimppkw" genericsValue="String, Integer" base_Element="_Ui0Sg6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjCU8KlTEe-NBpoHimppkw" base_Element="_UjBt4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjCU8alTEe-NBpoHimppkw" base_Element="_UjBt4KlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjCU8qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjC8AKlTEe-NBpoHimppkw" base_Element="_UjCU86lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjC8AalTEe-NBpoHimppkw" base_Element="_UjCU86lTEe-NBpoHimppkw">
    <annotations xmi:id="_UjC8AqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjDjEalTEe-NBpoHimppkw" base_Element="_UjDjEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjDjEqlTEe-NBpoHimppkw" base_Element="_UjDjEKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjDjE6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_UjEKI6lTEe-NBpoHimppkw" base_Element="_UjEKIKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjEKJKlTEe-NBpoHimppkw" base_Element="_UjEKIKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjExMKlTEe-NBpoHimppkw" base_Element="_UjEKIKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjExMalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_UjFYQalTEe-NBpoHimppkw" dimensions="2" base_Element="_UjExMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjFYQqlTEe-NBpoHimppkw" base_Element="_UjExMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjFYQ6lTEe-NBpoHimppkw" base_Element="_UjExMqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjFYRKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UjIbkKlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_UjH0gKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UjLe4KlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_UjK30KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UjNUEKlTEe-NBpoHimppkw" base_Element="_UjMtAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UjN7IalTEe-NBpoHimppkw" genericsValue="T" base_Element="_UjN7IKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ujb9kKlTEe-NBpoHimppkw" base_Element="_UjbWgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjckoKlTEe-NBpoHimppkw" base_Element="_UjbWgKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjckoalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ujcko6lTEe-NBpoHimppkw" base_Element="_UjckoqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjdLsKlTEe-NBpoHimppkw" base_Element="_UjckoqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjdLsalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_UjdLtalTEe-NBpoHimppkw" base_Element="_UjdLsqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjdywKlTEe-NBpoHimppkw" base_Element="_UjdLsqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjdywalTEe-NBpoHimppkw" base_Element="_UjdLsqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjdywqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_UjeZ0qlTEe-NBpoHimppkw" dimensions="2" base_Element="_Ujdyw6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjfA4KlTEe-NBpoHimppkw" base_Element="_Ujdyw6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjfA4alTEe-NBpoHimppkw" base_Element="_Ujdyw6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UjfA4qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjirQKlTEe-NBpoHimppkw" base_Element="_UjiEMKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjirQalTEe-NBpoHimppkw" base_Element="_UjiEMKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjirQqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UjlHgalTEe-NBpoHimppkw" genericsValue="T" base_Element="_UjlHgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjqnEKlTEe-NBpoHimppkw" base_Element="_UjqAAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjqnEalTEe-NBpoHimppkw" base_Element="_UjqAAqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjqnEqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjrOIalTEe-NBpoHimppkw" base_Element="_UjqnE6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjrOIqlTEe-NBpoHimppkw" base_Element="_UjqnE6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UjrOI6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ujr1MalTEe-NBpoHimppkw" base_Element="_UjrOJKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ujr1MqlTEe-NBpoHimppkw" base_Element="_UjrOJKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ujr1M6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjscQalTEe-NBpoHimppkw" base_Element="_Ujr1NKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjtDUKlTEe-NBpoHimppkw" base_Element="_Ujr1NKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjtDUalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjtqYKlTEe-NBpoHimppkw" base_Element="_UjtDUqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjtqYalTEe-NBpoHimppkw" base_Element="_UjtDUqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjtqYqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjuRcKlTEe-NBpoHimppkw" base_Element="_UjtqY6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjuRcalTEe-NBpoHimppkw" base_Element="_UjtqY6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UjuRcqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjuRdKlTEe-NBpoHimppkw" base_Element="_UjuRc6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uju4gKlTEe-NBpoHimppkw" base_Element="_UjuRc6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uju4galTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjvfkKlTEe-NBpoHimppkw" base_Element="_Uju4gqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjvfkalTEe-NBpoHimppkw" base_Element="_Uju4gqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjvfkqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjwGoalTEe-NBpoHimppkw" base_Element="_UjwGoKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjwGoqlTEe-NBpoHimppkw" base_Element="_UjwGoKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjwGo6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjwtsalTEe-NBpoHimppkw" base_Element="_UjwtsKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjwtsqlTEe-NBpoHimppkw" base_Element="_UjwtsKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjxUwKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjxUwqlTEe-NBpoHimppkw" base_Element="_UjxUwalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjxUw6lTEe-NBpoHimppkw" base_Element="_UjxUwalTEe-NBpoHimppkw">
    <annotations xmi:id="_UjxUxKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ujx70alTEe-NBpoHimppkw" base_Element="_Ujx70KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ujyi4KlTEe-NBpoHimppkw" base_Element="_Ujx70KlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ujyi4alTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UjzJ8KlTEe-NBpoHimppkw" base_Element="_Ujyi4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UjzxAKlTEe-NBpoHimppkw" base_Element="_Ujyi4qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UjzxAalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uj0YEKlTEe-NBpoHimppkw" base_Element="_UjzxAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uj0YEalTEe-NBpoHimppkw" base_Element="_UjzxAqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uj0YEqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uj0_IalTEe-NBpoHimppkw" base_Element="_Uj0_IKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uj1mMKlTEe-NBpoHimppkw" base_Element="_Uj0_IKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uj1mMalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uj2NQKlTEe-NBpoHimppkw" base_Element="_Uj1mMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uj2NQalTEe-NBpoHimppkw" base_Element="_Uj1mMqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uj2NQqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uj20UalTEe-NBpoHimppkw" base_Element="_Uj2NQ6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uj20UqlTEe-NBpoHimppkw" base_Element="_Uj2NQ6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uj3bYKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Uj6esKlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_Uj5QkKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uj7s0alTEe-NBpoHimppkw" genericsValue="T" base_Element="_Uj7s0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UkNZoKlTEe-NBpoHimppkw" genericsValue="T extends SchedulableObject" base_Element="_UkMykalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UkOnwalTEe-NBpoHimppkw" genericsValue="T" base_Element="_UkOnwKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UkP14alTEe-NBpoHimppkw" base_Element="_UkP14KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UkVVcKlTEe-NBpoHimppkw" genericsValue="T,E extends ArrayList&lt;T>" base_Element="_UkUuYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UkYYwalTEe-NBpoHimppkw" base_Element="_UkYYwKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UkZm4alTEe-NBpoHimppkw" base_Element="_UkZm4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ukd4UKlTEe-NBpoHimppkw" base_Element="_UkdRQKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ukd4UalTEe-NBpoHimppkw" base_Element="_UkdRQKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ukd4UqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ukd4VKlTEe-NBpoHimppkw" base_Element="_Ukd4U6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UkefYKlTEe-NBpoHimppkw" base_Element="_Ukd4U6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UkefYalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UkefZKlTEe-NBpoHimppkw" base_Element="_UkefYqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UkfGcKlTEe-NBpoHimppkw" base_Element="_UkefYqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UkfGcalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_UknpUqlTEe-NBpoHimppkw" base_Element="_UknCQ6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_UkoQYKlTEe-NBpoHimppkw" dimensions="2" base_Element="_UknpU6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UkyBYKlTEe-NBpoHimppkw" base_Element="_UkxaUKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UkyBYalTEe-NBpoHimppkw" base_Element="_UkxaUKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UkyBYqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UkyocalTEe-NBpoHimppkw" base_Element="_UkyocKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UkyocqlTEe-NBpoHimppkw" base_Element="_UkyocKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UkzPgKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UkzPgqlTEe-NBpoHimppkw" base_Element="_UkzPgalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ukz2kKlTEe-NBpoHimppkw" base_Element="_UkzPgalTEe-NBpoHimppkw">
    <annotations xmi:id="_Ukz2kalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ukz2k6lTEe-NBpoHimppkw" base_Element="_Ukz2kqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk0doKlTEe-NBpoHimppkw" base_Element="_Ukz2kqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk0doalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk1EsKlTEe-NBpoHimppkw" base_Element="_Uk0doqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk1EsalTEe-NBpoHimppkw" base_Element="_Uk0doqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk1EsqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk1rwKlTEe-NBpoHimppkw" base_Element="_Uk1Es6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk1rwalTEe-NBpoHimppkw" base_Element="_Uk1Es6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk1rwqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk2S0alTEe-NBpoHimppkw" base_Element="_Uk1rw6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk254KlTEe-NBpoHimppkw" base_Element="_Uk1rw6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk254alTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk3g8alTEe-NBpoHimppkw" base_Element="_Uk254qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk3g8qlTEe-NBpoHimppkw" base_Element="_Uk254qlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk3g86lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk4IAqlTEe-NBpoHimppkw" base_Element="_Uk4IAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk4vEKlTEe-NBpoHimppkw" base_Element="_Uk4IAKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk4vEalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk4vE6lTEe-NBpoHimppkw" base_Element="_Uk4vEqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk5WIKlTEe-NBpoHimppkw" base_Element="_Uk4vEqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk5WIalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk59MKlTEe-NBpoHimppkw" base_Element="_Uk5WIqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk59MalTEe-NBpoHimppkw" base_Element="_Uk5WIqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk59MqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk6kQalTEe-NBpoHimppkw" base_Element="_Uk59M6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk7LUKlTEe-NBpoHimppkw" base_Element="_Uk59M6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk7LUalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk7yYKlTEe-NBpoHimppkw" base_Element="_Uk7LUqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk7yYalTEe-NBpoHimppkw" base_Element="_Uk7LUqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk7yYqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk8ZcKlTEe-NBpoHimppkw" base_Element="_Uk7yY6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk8ZcalTEe-NBpoHimppkw" base_Element="_Uk7yY6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk8ZcqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk9AgKlTEe-NBpoHimppkw" base_Element="_Uk8Zc6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk9AgalTEe-NBpoHimppkw" base_Element="_Uk8Zc6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk9AgqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uk9AhKlTEe-NBpoHimppkw" base_Element="_Uk9Ag6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uk9nkKlTEe-NBpoHimppkw" base_Element="_Uk9Ag6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Uk9nkalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlFjYalTEe-NBpoHimppkw" base_Element="_UlFjYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UlFjYqlTEe-NBpoHimppkw" base_Element="_UlFjYKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UlFjY6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlGKcalTEe-NBpoHimppkw" base_Element="_UlGKcKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UlGKcqlTEe-NBpoHimppkw" base_Element="_UlGKcKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UlGKc6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UlGxgqlTEe-NBpoHimppkw" base_Element="_UlGxgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UlGxg6lTEe-NBpoHimppkw" base_Element="_UlGxgKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UlGxhKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_UlS-xalTEe-NBpoHimppkw" base_Element="_UlS-wqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_UlUM4alTEe-NBpoHimppkw" dimensions="1" base_Element="_UlTl0qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_UlUz9KlTEe-NBpoHimppkw" base_Element="_UlUz8KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_UlWCEKlTEe-NBpoHimppkw" base_Element="_UlVbA6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UlgaIKlTEe-NBpoHimppkw" genericsValue="InstructionParameters" base_Element="_UlfzEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UliPUKlTEe-NBpoHimppkw" genericsValue="InstructionParameters" base_Element="_UlhoRKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_Ulo9A6lTEe-NBpoHimppkw" base_Element="_Ulo9AalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UlyuAKlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_UlyG9KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmAJYalTEe-NBpoHimppkw" base_Element="_UmAJYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmAwcKlTEe-NBpoHimppkw" base_Element="_UmAJYKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmAwcalTEe-NBpoHimppkw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmAwc6lTEe-NBpoHimppkw" base_Element="_UmAwcqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmBXgKlTEe-NBpoHimppkw" base_Element="_UmAwcqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmBXgalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmBXg6lTEe-NBpoHimppkw" base_Element="_UmBXgqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmBXhKlTEe-NBpoHimppkw" base_Element="_UmBXgqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmBXhalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmCloKlTEe-NBpoHimppkw" base_Element="_UmB-kKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmCloalTEe-NBpoHimppkw" base_Element="_UmB-kKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmCloqlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmClpKlTEe-NBpoHimppkw" base_Element="_UmClo6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmDMsKlTEe-NBpoHimppkw" base_Element="_UmClo6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UmDMsalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmDMs6lTEe-NBpoHimppkw" base_Element="_UmDMsqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmDzwKlTEe-NBpoHimppkw" base_Element="_UmDMsqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmDzwalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmDzw6lTEe-NBpoHimppkw" base_Element="_UmDzwqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmDzxKlTEe-NBpoHimppkw" base_Element="_UmDzwqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmDzxalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmEa0KlTEe-NBpoHimppkw" base_Element="_UmDzxqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmEa0alTEe-NBpoHimppkw" base_Element="_UmDzxqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmEa0qlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmEa1KlTEe-NBpoHimppkw" base_Element="_UmEa06lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmFB4KlTEe-NBpoHimppkw" base_Element="_UmEa06lTEe-NBpoHimppkw">
    <annotations xmi:id="_UmFB4alTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmFB46lTEe-NBpoHimppkw" base_Element="_UmFB4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmFB5KlTEe-NBpoHimppkw" base_Element="_UmFB4qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmFB5alTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmFo8KlTEe-NBpoHimppkw" base_Element="_UmFB5qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmFo8alTEe-NBpoHimppkw" base_Element="_UmFB5qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmFo8qlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmHeIalTEe-NBpoHimppkw" base_Element="_UmHeIKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmIFMKlTEe-NBpoHimppkw" base_Element="_UmHeIKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmIFMalTEe-NBpoHimppkw" name="BeforeEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmIFM6lTEe-NBpoHimppkw" base_Element="_UmIFMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmIsQKlTEe-NBpoHimppkw" base_Element="_UmIFMqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmIsQalTEe-NBpoHimppkw" name="AfterEach"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmIsQ6lTEe-NBpoHimppkw" base_Element="_UmIsQqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmJTUKlTEe-NBpoHimppkw" base_Element="_UmIsQqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmJTUalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmJTU6lTEe-NBpoHimppkw" base_Element="_UmJTUqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmJTVKlTEe-NBpoHimppkw" base_Element="_UmJTUqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmJTValTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmJ6YKlTEe-NBpoHimppkw" base_Element="_UmJTVqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmJ6YalTEe-NBpoHimppkw" base_Element="_UmJTVqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmJ6YqlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmKhcKlTEe-NBpoHimppkw" base_Element="_UmJ6Y6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmKhcalTEe-NBpoHimppkw" base_Element="_UmJ6Y6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UmKhcqlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmLIgKlTEe-NBpoHimppkw" base_Element="_UmKhc6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmM9sKlTEe-NBpoHimppkw" base_Element="_UmKhc6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UmNkwKlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmOy4KlTEe-NBpoHimppkw" base_Element="_UmOL0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmPZ8KlTEe-NBpoHimppkw" base_Element="_UmOL0KlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmPZ8alTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmQBAalTEe-NBpoHimppkw" base_Element="_UmQBAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmQBAqlTEe-NBpoHimppkw" base_Element="_UmQBAKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmQBA6lTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmQoEalTEe-NBpoHimppkw" base_Element="_UmQoEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmQoEqlTEe-NBpoHimppkw" base_Element="_UmQoEKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmQoE6lTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmQoFalTEe-NBpoHimppkw" base_Element="_UmQoFKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmRPIKlTEe-NBpoHimppkw" base_Element="_UmQoFKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmRPIalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmRPI6lTEe-NBpoHimppkw" base_Element="_UmRPIqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmRPJKlTEe-NBpoHimppkw" base_Element="_UmRPIqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmRPJalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmR2MKlTEe-NBpoHimppkw" base_Element="_UmRPJqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmR2MalTEe-NBpoHimppkw" base_Element="_UmRPJqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmR2MqlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmSdQKlTEe-NBpoHimppkw" base_Element="_UmR2M6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmSdQalTEe-NBpoHimppkw" base_Element="_UmR2M6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UmSdQqlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmSdRKlTEe-NBpoHimppkw" base_Element="_UmSdQ6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmTEUKlTEe-NBpoHimppkw" base_Element="_UmSdQ6lTEe-NBpoHimppkw">
    <annotations xmi:id="_UmTEUalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmTrYalTEe-NBpoHimppkw" base_Element="_UmTrYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmTrYqlTEe-NBpoHimppkw" base_Element="_UmTrYKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmTrY6lTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmTrZalTEe-NBpoHimppkw" base_Element="_UmTrZKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmUScKlTEe-NBpoHimppkw" base_Element="_UmTrZKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmU5gKlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmU5gqlTEe-NBpoHimppkw" base_Element="_UmU5galTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmVgkKlTEe-NBpoHimppkw" base_Element="_UmU5galTEe-NBpoHimppkw">
    <annotations xmi:id="_UmVgkalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmVgk6lTEe-NBpoHimppkw" base_Element="_UmVgkqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmVglKlTEe-NBpoHimppkw" base_Element="_UmVgkqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmVglalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmVgl6lTEe-NBpoHimppkw" base_Element="_UmVglqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmWHoKlTEe-NBpoHimppkw" base_Element="_UmVglqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmWHoalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmWHo6lTEe-NBpoHimppkw" base_Element="_UmWHoqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmWHpKlTEe-NBpoHimppkw" base_Element="_UmWHoqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmWHpalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmWusKlTEe-NBpoHimppkw" base_Element="_UmWHpqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmX80KlTEe-NBpoHimppkw" base_Element="_UmWHpqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmX80alTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmYj4KlTEe-NBpoHimppkw" base_Element="_UmX80qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmYj4alTEe-NBpoHimppkw" base_Element="_UmX80qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmYj4qlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmYj5KlTEe-NBpoHimppkw" base_Element="_UmYj46lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmZK8KlTEe-NBpoHimppkw" base_Element="_UmYj46lTEe-NBpoHimppkw">
    <annotations xmi:id="_UmZK8alTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmZK86lTEe-NBpoHimppkw" base_Element="_UmZK8qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmZK9KlTEe-NBpoHimppkw" base_Element="_UmZK8qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmZK9alTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmkxIKlTEe-NBpoHimppkw" base_Element="_UmZK9qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmlYMKlTEe-NBpoHimppkw" base_Element="_UmZK9qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmlYMalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmlYM6lTEe-NBpoHimppkw" base_Element="_UmlYMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmmmUKlTEe-NBpoHimppkw" base_Element="_UmlYMqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmmmUalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmmmU6lTEe-NBpoHimppkw" base_Element="_UmmmUqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmnNYKlTEe-NBpoHimppkw" base_Element="_UmmmUqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmnNYalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmnNY6lTEe-NBpoHimppkw" base_Element="_UmnNYqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmobgKlTEe-NBpoHimppkw" base_Element="_UmnNYqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmobgalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Umobg6lTEe-NBpoHimppkw" base_Element="_UmobgqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmpCkKlTEe-NBpoHimppkw" base_Element="_UmobgqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmpCkalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UmpCk6lTEe-NBpoHimppkw" base_Element="_UmpCkqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmppoKlTEe-NBpoHimppkw" base_Element="_UmpCkqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmppoalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Umppo6lTEe-NBpoHimppkw" base_Element="_UmppoqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UmqQsKlTEe-NBpoHimppkw" base_Element="_UmppoqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UmqQsalTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Umq3wKlTEe-NBpoHimppkw" base_Element="_UmqQsqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Umq3walTEe-NBpoHimppkw" base_Element="_UmqQsqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Umq3wqlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Umre0KlTEe-NBpoHimppkw" base_Element="_Umq3w6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Umre0alTEe-NBpoHimppkw" base_Element="_Umq3w6lTEe-NBpoHimppkw">
    <annotations xmi:id="_Umre0qlTEe-NBpoHimppkw" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UxXr4KlTEe-NBpoHimppkw" base_Element="_UxXE0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxY6AKlTEe-NBpoHimppkw" base_Element="_UxYS8KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxZhEKlTEe-NBpoHimppkw" base_Element="_UxY6AalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxZhEqlTEe-NBpoHimppkw" base_Element="_UxZhEalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxaIIKlTEe-NBpoHimppkw" base_Element="_UxZhE6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uxb9U6lTEe-NBpoHimppkw" base_Element="_Uxb9UKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uxb9VKlTEe-NBpoHimppkw" base_Element="_Uxb9UKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uxb9ValTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UxdLc6lTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_UxdLcqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UxdygalTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_UxdygKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UxgOwKlTEe-NBpoHimppkw" genericsValue="String, Activation" base_Element="_UxfnsKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Uxj5IKlTEe-NBpoHimppkw" base_Element="_UxjSEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UxmVY6lTEe-NBpoHimppkw" base_Element="_UxmVYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UxmVZKlTEe-NBpoHimppkw" base_Element="_UxmVYKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UxmVZalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UxpYsKlTEe-NBpoHimppkw" base_Element="_UxoxoalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uxqm0qlTEe-NBpoHimppkw" base_Element="_Uxp_wKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uxqm06lTEe-NBpoHimppkw" base_Element="_Uxp_wKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uxqm1KlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Uxr08alTEe-NBpoHimppkw" base_Element="_Uxr08KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxscAalTEe-NBpoHimppkw" base_Element="_UxscAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxtDEKlTEe-NBpoHimppkw" base_Element="_UxscAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxtDEqlTEe-NBpoHimppkw" base_Element="_UxtDEalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxtqIKlTEe-NBpoHimppkw" base_Element="_UxtDE6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxuRMKlTEe-NBpoHimppkw" base_Element="_UxtqIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UxuRMqlTEe-NBpoHimppkw" base_Element="_UxuRMalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UxwGY6lTEe-NBpoHimppkw" base_Element="_UxwGYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UxwGZKlTEe-NBpoHimppkw" base_Element="_UxwGYKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UxwGZalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UxyioKlTEe-NBpoHimppkw" genericsValue="String, Flow" base_Element="_Uxx7kKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UxzJsKlTEe-NBpoHimppkw" genericsValue="Node, Activation" base_Element="_UxyioalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux1l8KlTEe-NBpoHimppkw" base_Element="_Ux0-4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux2NAKlTEe-NBpoHimppkw" base_Element="_Ux1l8alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux2NAqlTEe-NBpoHimppkw" base_Element="_Ux2NAalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux20EalTEe-NBpoHimppkw" base_Element="_Ux20EKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux3bIKlTEe-NBpoHimppkw" base_Element="_Ux20EqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux3bIqlTEe-NBpoHimppkw" base_Element="_Ux3bIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux4CMKlTEe-NBpoHimppkw" base_Element="_Ux3bI6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux4CMqlTEe-NBpoHimppkw" base_Element="_Ux4CMalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux5QUKlTEe-NBpoHimppkw" base_Element="_Ux4pR6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ux5QU6lTEe-NBpoHimppkw" base_Element="_Ux5QUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ux53YKlTEe-NBpoHimppkw" base_Element="_Ux5QUalTEe-NBpoHimppkw">
    <annotations xmi:id="_Ux53YalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ux53Y6lTEe-NBpoHimppkw" base_Element="_Ux53YqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ux6ecKlTEe-NBpoHimppkw" base_Element="_Ux53ZKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ux6ecalTEe-NBpoHimppkw" base_Element="_Ux53ZKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ux6ecqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ux7FgKlTEe-NBpoHimppkw" base_Element="_Ux6ec6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ux7Fg6lTEe-NBpoHimppkw" base_Element="_Ux7FgalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ux7FhKlTEe-NBpoHimppkw" base_Element="_Ux7FgalTEe-NBpoHimppkw">
    <annotations xmi:id="_Ux7FhalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ux7skKlTEe-NBpoHimppkw" base_Element="_Ux7FhqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ux7sk6lTEe-NBpoHimppkw" base_Element="_Ux7skalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ux8ToKlTEe-NBpoHimppkw" base_Element="_Ux7skalTEe-NBpoHimppkw">
    <annotations xmi:id="_Ux8ToalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ux8To6lTEe-NBpoHimppkw" base_Element="_Ux8ToqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ux86sqlTEe-NBpoHimppkw" base_Element="_Ux86sKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ux86s6lTEe-NBpoHimppkw" base_Element="_Ux86sKlTEe-NBpoHimppkw">
    <annotations xmi:id="_Ux86tKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ux9hwKlTEe-NBpoHimppkw" base_Element="_Ux86talTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ux9hw6lTEe-NBpoHimppkw" base_Element="_Ux9hwalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Ux9hxKlTEe-NBpoHimppkw" base_Element="_Ux9hwalTEe-NBpoHimppkw">
    <annotations xmi:id="_Ux9hxalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_Ux-v4KlTEe-NBpoHimppkw" base_Element="_Ux-I0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux-v4qlTEe-NBpoHimppkw" base_Element="_Ux-v4alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux_W8KlTEe-NBpoHimppkw" base_Element="_Ux-v46lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux_-AKlTEe-NBpoHimppkw" base_Element="_Ux_W8alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Ux_-AqlTEe-NBpoHimppkw" base_Element="_Ux_-AalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyAlEKlTEe-NBpoHimppkw" base_Element="_Ux_-A6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyCaQKlTEe-NBpoHimppkw" base_Element="_UyBzMKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyCaQqlTEe-NBpoHimppkw" base_Element="_UyCaQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UyEPcalTEe-NBpoHimppkw" genericsValue="String" base_Element="_UyEPcKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyE2galTEe-NBpoHimppkw" base_Element="_UyE2gKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UyIg46lTEe-NBpoHimppkw" base_Element="_UyIg4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UyJH8KlTEe-NBpoHimppkw" base_Element="_UyIg4KlTEe-NBpoHimppkw">
    <annotations xmi:id="_UyJH8alTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UyKWEalTEe-NBpoHimppkw" genericsValue="String, Node" base_Element="_UyKWEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyMyUKlTEe-NBpoHimppkw" base_Element="_UyMLQKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UyRq06lTEe-NBpoHimppkw" base_Element="_UyRq0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UyRq1KlTEe-NBpoHimppkw" base_Element="_UyRq0KlTEe-NBpoHimppkw">
    <annotations xmi:id="_UyRq1alTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_UyTgAKlTEe-NBpoHimppkw" genericsValue="ScheduleTime" base_Element="_UySR4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UyVVNalTEe-NBpoHimppkw" base_Element="_UyVVMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UyVVNqlTEe-NBpoHimppkw" base_Element="_UyVVMqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UyV8QKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UyXKYKlTEe-NBpoHimppkw" base_Element="_UyWjUKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyXKYqlTEe-NBpoHimppkw" base_Element="_UyXKYalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uyd4EalTEe-NBpoHimppkw" genericsValue="String,InstructionTimeSlot" base_Element="_Uyd4EKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UygUUKlTEe-NBpoHimppkw" genericsValue="T" base_Element="_UyftQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Uyg7YalTEe-NBpoHimppkw" base_Element="_Uyg7YKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyhicKlTEe-NBpoHimppkw" base_Element="_Uyg7YqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyhicqlTEe-NBpoHimppkw" base_Element="_UyhicalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UyiwkKlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_UyiJgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UyjXoqlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_UyjXoKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uyj-sqlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_Uyj-sKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uylz4qlTEe-NBpoHimppkw" genericsValue="Double" base_Element="_Uylz4alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UynCAKlTEe-NBpoHimppkw" genericsValue="Double,ReliabilityRow" base_Element="_Uyma8KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UynpEKlTEe-NBpoHimppkw" base_Element="_UynCAalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyoQIalTEe-NBpoHimppkw" base_Element="_UyoQIKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Uyo3MKlTEe-NBpoHimppkw" base_Element="_UyoQIqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UyyBIKlTEe-NBpoHimppkw" genericsValue="Activation,Row&lt;Activation>" base_Element="_UyxaEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UyyoMalTEe-NBpoHimppkw" genericsValue="T" base_Element="_UyyBIqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UyzPQalTEe-NBpoHimppkw" base_Element="_UyzPQKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Uy1EcKlTEe-NBpoHimppkw" base_Element="_Uy0dYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Uy1EcqlTEe-NBpoHimppkw" base_Element="_Uy1EcalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uy-1dKlTEe-NBpoHimppkw" base_Element="_Uy-1cqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uy-1dalTEe-NBpoHimppkw" base_Element="_Uy-1cqlTEe-NBpoHimppkw">
    <annotations xmi:id="_Uy_cgKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uy_cg6lTEe-NBpoHimppkw" base_Element="_Uy_cgalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uy_chKlTEe-NBpoHimppkw" base_Element="_Uy_cgalTEe-NBpoHimppkw">
    <annotations xmi:id="_Uy_chalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzADkKlTEe-NBpoHimppkw" base_Element="_Uy_chqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzADk6lTEe-NBpoHimppkw" base_Element="_UzADkalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzAqoKlTEe-NBpoHimppkw" base_Element="_UzADkalTEe-NBpoHimppkw">
    <annotations xmi:id="_UzAqoalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzAqo6lTEe-NBpoHimppkw" base_Element="_UzAqoqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzBRsKlTEe-NBpoHimppkw" base_Element="_UzAqpKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzBRsalTEe-NBpoHimppkw" base_Element="_UzAqpKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UzBRsqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzB4wKlTEe-NBpoHimppkw" base_Element="_UzBRs6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzB4w6lTEe-NBpoHimppkw" base_Element="_UzB4walTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzB4xKlTEe-NBpoHimppkw" base_Element="_UzB4walTEe-NBpoHimppkw">
    <annotations xmi:id="_UzB4xalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzCf0KlTEe-NBpoHimppkw" base_Element="_UzB4xqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzCf06lTEe-NBpoHimppkw" base_Element="_UzCf0alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzCf1KlTEe-NBpoHimppkw" base_Element="_UzCf0alTEe-NBpoHimppkw">
    <annotations xmi:id="_UzDG4KlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzDG46lTEe-NBpoHimppkw" base_Element="_UzDG4alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzDG5KlTEe-NBpoHimppkw" base_Element="_UzDG4alTEe-NBpoHimppkw">
    <annotations xmi:id="_UzDG5alTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzDt8KlTEe-NBpoHimppkw" base_Element="_UzDG5qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzDt8alTEe-NBpoHimppkw" base_Element="_UzDG5qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UzDt8qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzEVAKlTEe-NBpoHimppkw" base_Element="_UzDt86lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzEVAalTEe-NBpoHimppkw" base_Element="_UzDt86lTEe-NBpoHimppkw">
    <annotations xmi:id="_UzEVAqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzHYUKlTEe-NBpoHimppkw" base_Element="_UzGxQKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UzMQ0alTEe-NBpoHimppkw" base_Element="_UzMQ0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzM34KlTEe-NBpoHimppkw" base_Element="_UzMQ0qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzM34alTEe-NBpoHimppkw" base_Element="_UzMQ0qlTEe-NBpoHimppkw">
    <annotations xmi:id="_UzM34qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzM35alTEe-NBpoHimppkw" base_Element="_UzM346lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzNe8KlTEe-NBpoHimppkw" base_Element="_UzM346lTEe-NBpoHimppkw">
    <annotations xmi:id="_UzNe8alTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzNe86lTEe-NBpoHimppkw" base_Element="_UzNe8qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzOGAqlTEe-NBpoHimppkw" base_Element="_UzOGAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzOGA6lTEe-NBpoHimppkw" base_Element="_UzOGAKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UzOGBKlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzOtEKlTEe-NBpoHimppkw" base_Element="_UzOGBalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzOtE6lTEe-NBpoHimppkw" base_Element="_UzOtEalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzPUIKlTEe-NBpoHimppkw" base_Element="_UzOtEalTEe-NBpoHimppkw">
    <annotations xmi:id="_UzPUIalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzPUI6lTEe-NBpoHimppkw" base_Element="_UzPUIqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzP7MKlTEe-NBpoHimppkw" base_Element="_UzPUJKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzP7MalTEe-NBpoHimppkw" base_Element="_UzPUJKlTEe-NBpoHimppkw">
    <annotations xmi:id="_UzP7MqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzQiQKlTEe-NBpoHimppkw" base_Element="_UzP7M6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzQiQ6lTEe-NBpoHimppkw" base_Element="_UzQiQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzQiRKlTEe-NBpoHimppkw" base_Element="_UzQiQalTEe-NBpoHimppkw">
    <annotations xmi:id="_UzQiRalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzRJUalTEe-NBpoHimppkw" base_Element="_UzRJUKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_UzRwYKlTEe-NBpoHimppkw" base_Element="_UzRJUqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_UzRwYalTEe-NBpoHimppkw" base_Element="_UzRJUqlTEe-NBpoHimppkw">
    <annotations xmi:id="_UzRwYqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_UzS-galTEe-NBpoHimppkw" base_Element="_UzS-gKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UzTlkalTEe-NBpoHimppkw" base_Element="_UzTlkKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UzUMoKlTEe-NBpoHimppkw" base_Element="_UzTlkqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UzUMoqlTEe-NBpoHimppkw" base_Element="_UzUMoalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UzUzsKlTEe-NBpoHimppkw" base_Element="_UzUMo6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UzYeEalTEe-NBpoHimppkw" base_Element="_UzYeEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UzZFIKlTEe-NBpoHimppkw" base_Element="_UzYeEqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Uzfy0KlTEe-NBpoHimppkw" base_Element="_UzfLwKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UzsnIalTEe-NBpoHimppkw" genericsValue="T, E" base_Element="_UzsnIKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_UztOMqlTEe-NBpoHimppkw" base_Element="_UztOMalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uzt1QalTEe-NBpoHimppkw" genericsValue="Activation" base_Element="_Uzt1QKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UzvDYKlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_UzucUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UzvqcKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_UzvDYqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UzwRgKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_UzvqcqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uzw4kKlTEe-NBpoHimppkw" genericsValue="ScheduleTime" base_Element="_UzwRgqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_UzyGsKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_UzxfoKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uzz74KlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_UzzU0qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uzz74alTEe-NBpoHimppkw" genericsValue="String" base_Element="_UzzU06lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uz0i86lTEe-NBpoHimppkw" genericsValue="String" base_Element="_Uz0i8qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uz2YIKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_Uz1KAalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uz3mQKlTEe-NBpoHimppkw" genericsValue="Activation" base_Element="_Uz2_MKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uz4NUalTEe-NBpoHimppkw" base_Element="_Uz3mQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uz4NUqlTEe-NBpoHimppkw" genericsValue="Node" base_Element="_Uz3mQqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uz40YKlTEe-NBpoHimppkw" base_Element="_Uz3mQalTEe-NBpoHimppkw">
    <annotations xmi:id="_Uz40YalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Uz5bcKlTEe-NBpoHimppkw" genericsValue="T" base_Element="_Uz40YqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_Uz6CgKlTEe-NBpoHimppkw" base_Element="_Uz5bcalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Uz6ChalTEe-NBpoHimppkw" base_Element="_Uz6CgalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_Uz6pkKlTEe-NBpoHimppkw" base_Element="_Uz6CgalTEe-NBpoHimppkw">
    <annotations xmi:id="_Uz6pkalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_Uz7QoKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_Uz6pkqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uz73sKlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_Uz7QoalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uz9s4KlTEe-NBpoHimppkw" genericsValue="Flow" base_Element="_Uz9F0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_Uz_iEKlTEe-NBpoHimppkw" genericsValue="Node" base_Element="_Uz-7A6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0AJIKlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_Uz_iEqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U0DMcalTEe-NBpoHimppkw" base_Element="_U0DMcKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0MWYKlTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0LvUKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U0M9c6lTEe-NBpoHimppkw" base_Element="_U0MWYalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_U0M9dKlTEe-NBpoHimppkw" base_Element="_U0MWYalTEe-NBpoHimppkw">
    <annotations xmi:id="_U0M9dalTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_U0OLkKlTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0NkgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U0OypKlTEe-NBpoHimppkw" base_Element="_U0OyoKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_U0OypalTEe-NBpoHimppkw" base_Element="_U0OyoKlTEe-NBpoHimppkw">
    <annotations xmi:id="_U0OypqlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_U0PZsalTEe-NBpoHimppkw" genericsValue="Node" base_Element="_U0PZsKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0Qn0alTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0Qn0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U0R18KlTEe-NBpoHimppkw" base_Element="_U0RO4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_U0R18alTEe-NBpoHimppkw" base_Element="_U0RO4KlTEe-NBpoHimppkw">
    <annotations xmi:id="_U0R18qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_U0TrIKlTEe-NBpoHimppkw" genericsValue="Node" base_Element="_U0TEEalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_U0TrJalTEe-NBpoHimppkw" base_Element="_U0TrIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0USMKlTEe-NBpoHimppkw" genericsValue="Node" base_Element="_U0TrIqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U0VgUKlTEe-NBpoHimppkw" base_Element="_U0U5QKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0WucKlTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0WHYqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U0XVgalTEe-NBpoHimppkw" base_Element="_U0WucalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_U0XVgqlTEe-NBpoHimppkw" base_Element="_U0WucalTEe-NBpoHimppkw">
    <annotations xmi:id="_U0XVg6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_U0X8kalTEe-NBpoHimppkw" base_Element="_U0X8kKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U0aY0alTEe-NBpoHimppkw" base_Element="_U0aY0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0c1EKlTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0cOAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U0dcIalTEe-NBpoHimppkw" base_Element="_U0c1EalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_U0dcIqlTEe-NBpoHimppkw" base_Element="_U0c1EalTEe-NBpoHimppkw">
    <annotations xmi:id="_U0dcI6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_U0iUoKlTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0htlqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0kJ0KlTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0jiwalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0kw4alTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0kJ0qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0lX8KlTEe-NBpoHimppkw" genericsValue="T" base_Element="_U0kJ06lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0nNIKlTEe-NBpoHimppkw" genericsValue="E" base_Element="_U0mmE6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U0obQKlTEe-NBpoHimppkw" base_Element="_U0n0MKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U0ppYKlTEe-NBpoHimppkw" base_Element="_U0pCUKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:TypeParameterDeclaration xmi:id="_U0q3g6lTEe-NBpoHimppkw" typeParameterDeclarationValue="T extends VisualizationObject" base_Operation="_U0q3galTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U0rekKlTEe-NBpoHimppkw" base_Element="_U0q3galTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U0tTwqlTEe-NBpoHimppkw" base_Element="_U0sssKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U0t60KlTEe-NBpoHimppkw" genericsValue="Node" base_Element="_U0tTwKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Annotations xmi:id="_U0t60alTEe-NBpoHimppkw" base_Element="_U0sssKlTEe-NBpoHimppkw">
    <annotations xmi:id="_U0t60qlTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_U02dsalTEe-NBpoHimppkw" base_Element="_U02dsKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U079QKlTEe-NBpoHimppkw" base_Element="_U07WMKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1FuQalTEe-NBpoHimppkw" genericsValue="String" base_Element="_U1FuQKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1GVUKlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_U1FuQqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1G8YKlTEe-NBpoHimppkw" genericsValue="ScheduleTime" base_Element="_U1GVUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1Hjc6lTEe-NBpoHimppkw" base_Element="_U1HjcqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1IKgKlTEe-NBpoHimppkw" base_Element="_U1HjdKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1IKgqlTEe-NBpoHimppkw" base_Element="_U1IKgalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1IxkqlTEe-NBpoHimppkw" base_Element="_U1IxkalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1IxlKlTEe-NBpoHimppkw" base_Element="_U1Ixk6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1JYo6lTEe-NBpoHimppkw" base_Element="_U1JYoqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1J_sKlTEe-NBpoHimppkw" base_Element="_U1JYpKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1J_sqlTEe-NBpoHimppkw" genericsValue="ChannelSet" base_Element="_U1J_salTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1KmwKlTEe-NBpoHimppkw" base_Element="_U1J_salTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1LN0KlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_U1Kmw6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1LN0alTEe-NBpoHimppkw" base_Element="_U1Kmw6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1LN06lTEe-NBpoHimppkw" base_Element="_U1LN0qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1L04alTEe-NBpoHimppkw" genericsValue="String" base_Element="_U1L04KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1L04qlTEe-NBpoHimppkw" base_Element="_U1L04KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1Mb8alTEe-NBpoHimppkw" base_Element="_U1Mb8KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1NDAKlTEe-NBpoHimppkw" base_Element="_U1Mb8qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1ORIKlTEe-NBpoHimppkw" base_Element="_U1NqEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1ORIqlTEe-NBpoHimppkw" base_Element="_U1ORIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1O4MKlTEe-NBpoHimppkw" base_Element="_U1ORI6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1O4MqlTEe-NBpoHimppkw" base_Element="_U1O4MalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1QtYqlTEe-NBpoHimppkw" base_Element="_U1QtYalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1R7hqlTEe-NBpoHimppkw" base_Element="_U1R7hKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1SikKlTEe-NBpoHimppkw" base_Element="_U1R7h6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1SikqlTEe-NBpoHimppkw" base_Element="_U1SikalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1TJoKlTEe-NBpoHimppkw" genericsValue="Node" base_Element="_U1Sik6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1TJoalTEe-NBpoHimppkw" base_Element="_U1Sik6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1TwsKlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_U1TJoqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1TwsalTEe-NBpoHimppkw" base_Element="_U1TJoqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1UXwKlTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_U1TwsqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1UXwalTEe-NBpoHimppkw" base_Element="_U1TwsqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1UXw6lTEe-NBpoHimppkw" base_Element="_U1UXwqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1U-0KlTEe-NBpoHimppkw" base_Element="_U1UXxKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1WM8KlTEe-NBpoHimppkw" base_Element="_U1Vl5qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1WM8qlTEe-NBpoHimppkw" base_Element="_U1WM8alTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1WM9KlTEe-NBpoHimppkw" base_Element="_U1WM86lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1W0AKlTEe-NBpoHimppkw" base_Element="_U1WM9alTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1W0AqlTEe-NBpoHimppkw" base_Element="_U1W0AalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1W0BKlTEe-NBpoHimppkw" base_Element="_U1W0A6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1XbEalTEe-NBpoHimppkw" base_Element="_U1XbEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1YCIKlTEe-NBpoHimppkw" base_Element="_U1XbEqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1YCIqlTEe-NBpoHimppkw" base_Element="_U1YCIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1YpMKlTEe-NBpoHimppkw" base_Element="_U1YCJalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1YpM6lTEe-NBpoHimppkw" base_Element="_U1YpMqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1YpNqlTEe-NBpoHimppkw" base_Element="_U1YpNKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1Z3UKlTEe-NBpoHimppkw" base_Element="_U1ZQQqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1Z3UqlTEe-NBpoHimppkw" base_Element="_U1Z3UalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1aeYalTEe-NBpoHimppkw" base_Element="_U1aeYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1aeY6lTEe-NBpoHimppkw" base_Element="_U1aeYqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1bFcKlTEe-NBpoHimppkw" base_Element="_U1aeZKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1bFcqlTEe-NBpoHimppkw" base_Element="_U1bFcalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1bFdKlTEe-NBpoHimppkw" genericsValue="String, Integer" base_Element="_U1bFc6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1bsgKlTEe-NBpoHimppkw" base_Element="_U1bFc6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1cTkqlTEe-NBpoHimppkw" base_Element="_U1cTkalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1cTlKlTEe-NBpoHimppkw" base_Element="_U1cTk6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1dhsalTEe-NBpoHimppkw" genericsValue="Edge" base_Element="_U1dhsKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1ev16lTEe-NBpoHimppkw" base_Element="_U1ev1qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1fW4alTEe-NBpoHimppkw" base_Element="_U1fW4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1fW5qlTEe-NBpoHimppkw" base_Element="_U1fW4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1f99KlTEe-NBpoHimppkw" base_Element="_U1f98KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1f99qlTEe-NBpoHimppkw" base_Element="_U1f99alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1glAKlTEe-NBpoHimppkw" genericsValue="Activation" base_Element="_U1f996lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1glAalTEe-NBpoHimppkw" base_Element="_U1f996lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U1hMEKlTEe-NBpoHimppkw" genericsValue="String, Integer" base_Element="_U1glAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1hMEalTEe-NBpoHimppkw" base_Element="_U1glAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1hzIKlTEe-NBpoHimppkw" base_Element="_U1hMEqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1jBQqlTEe-NBpoHimppkw" base_Element="_U1jBQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1joUKlTEe-NBpoHimppkw" base_Element="_U1jBQ6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1joUqlTEe-NBpoHimppkw" base_Element="_U1joUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1kPYKlTEe-NBpoHimppkw" base_Element="_U1joU6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1kPYqlTEe-NBpoHimppkw" base_Element="_U1kPYalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1k2cKlTEe-NBpoHimppkw" base_Element="_U1kPY6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1k2cqlTEe-NBpoHimppkw" base_Element="_U1k2calTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1k2dKlTEe-NBpoHimppkw" base_Element="_U1k2c6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1ldgalTEe-NBpoHimppkw" base_Element="_U1ldgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1ldg6lTEe-NBpoHimppkw" base_Element="_U1ldgqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1mEkKlTEe-NBpoHimppkw" base_Element="_U1ldhKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1mroKlTEe-NBpoHimppkw" base_Element="_U1mEkalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1nSsKlTEe-NBpoHimppkw" base_Element="_U1mroalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1og0KlTEe-NBpoHimppkw" base_Element="_U1n5xKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1og0qlTEe-NBpoHimppkw" base_Element="_U1og0alTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1og1KlTEe-NBpoHimppkw" base_Element="_U1og06lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1pH5KlTEe-NBpoHimppkw" base_Element="_U1pH4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1pu8alTEe-NBpoHimppkw" base_Element="_U1pH5alTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1qWAalTEe-NBpoHimppkw" base_Element="_U1pu8qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1q9EKlTEe-NBpoHimppkw" base_Element="_U1qWAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1rkJ6lTEe-NBpoHimppkw" base_Element="_U1rkJqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1sLMalTEe-NBpoHimppkw" base_Element="_U1sLMKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1syQKlTEe-NBpoHimppkw" base_Element="_U1sLNKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1syQqlTEe-NBpoHimppkw" base_Element="_U1syQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1tZVKlTEe-NBpoHimppkw" base_Element="_U1tZU6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1tZVqlTEe-NBpoHimppkw" base_Element="_U1tZValTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1uAYqlTEe-NBpoHimppkw" base_Element="_U1uAYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1uAZKlTEe-NBpoHimppkw" base_Element="_U1uAY6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1uAZqlTEe-NBpoHimppkw" base_Element="_U1uAZalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1uncalTEe-NBpoHimppkw" base_Element="_U1uncKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1unc6lTEe-NBpoHimppkw" base_Element="_U1uncqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1undalTEe-NBpoHimppkw" base_Element="_U1undKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1wcoKlTEe-NBpoHimppkw" base_Element="_U1v1lalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1wcoqlTEe-NBpoHimppkw" base_Element="_U1wcoalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1wcpKlTEe-NBpoHimppkw" base_Element="_U1wco6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1xDsKlTEe-NBpoHimppkw" base_Element="_U1wcpalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1xDsqlTEe-NBpoHimppkw" base_Element="_U1xDsalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1xDtKlTEe-NBpoHimppkw" base_Element="_U1xDs6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1xDt6lTEe-NBpoHimppkw" base_Element="_U1xDtalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1xqwqlTEe-NBpoHimppkw" base_Element="_U1xqwKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1xqxalTEe-NBpoHimppkw" base_Element="_U1xqw6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1xqx6lTEe-NBpoHimppkw" base_Element="_U1xqxqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1yR0alTEe-NBpoHimppkw" base_Element="_U1yR0KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1yR06lTEe-NBpoHimppkw" base_Element="_U1yR0qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1y44alTEe-NBpoHimppkw" base_Element="_U1y44KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Array xmi:id="_U1y45qlTEe-NBpoHimppkw" dimensions="2" base_Element="_U1y45KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1zf8KlTEe-NBpoHimppkw" base_Element="_U1y45KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U10HAalTEe-NBpoHimppkw" base_Element="_U10HAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U10HA6lTEe-NBpoHimppkw" base_Element="_U10HAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U10HBalTEe-NBpoHimppkw" base_Element="_U10HBKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U10uEalTEe-NBpoHimppkw" base_Element="_U10uEKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U10uE6lTEe-NBpoHimppkw" base_Element="_U10uEqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U10uFalTEe-NBpoHimppkw" base_Element="_U10uFKlTEe-NBpoHimppkw">
    <associatedElement xmi:type="uml:Operation" xmi:id="_U11VIKlTEe-NBpoHimppkw" name="getNumChannels" method="_U2qblqlTEe-NBpoHimppkw">
      <ownedParameter xmi:id="_U11VIalTEe-NBpoHimppkw" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_U11VIqlTEe-NBpoHimppkw" base_Element="_U11VIKlTEe-NBpoHimppkw">
    <annotations xmi:id="_U11VI6lTEe-NBpoHimppkw" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U118MKlTEe-NBpoHimppkw" base_Element="_U11VJKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U118M6lTEe-NBpoHimppkw" base_Element="_U118MalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U12jQKlTEe-NBpoHimppkw" base_Element="_U118NKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U12jQqlTEe-NBpoHimppkw" base_Element="_U12jQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U13KValTEe-NBpoHimppkw" base_Element="_U13KVKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U13xYalTEe-NBpoHimppkw" base_Element="_U13xYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U13xY6lTEe-NBpoHimppkw" base_Element="_U13xYqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U14_hKlTEe-NBpoHimppkw" base_Element="_U14_gqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U15mkKlTEe-NBpoHimppkw" base_Element="_U14_h6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U15mlKlTEe-NBpoHimppkw" base_Element="_U15mk6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U16NoKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_U15mlalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U17bwKlTEe-NBpoHimppkw" genericsValue="String" base_Element="_U160sKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U18C0KlTEe-NBpoHimppkw" base_Element="_U17bwqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1-fF6lTEe-NBpoHimppkw" base_Element="_U1-fFalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U1_tMKlTEe-NBpoHimppkw" base_Element="_U1_GIqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U2AUQKlTEe-NBpoHimppkw" genericsValue="InstructionParameters" base_Element="_U1_tMalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2AUQalTEe-NBpoHimppkw" base_Element="_U1_tMalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2AUQ6lTEe-NBpoHimppkw" base_Element="_U2AUQqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2CwgalTEe-NBpoHimppkw" base_Element="_U2CwgKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2DXkalTEe-NBpoHimppkw" base_Element="_U2DXkKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2D-oKlTEe-NBpoHimppkw" base_Element="_U2DXkqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2D-oqlTEe-NBpoHimppkw" base_Element="_U2D-oalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2D-pKlTEe-NBpoHimppkw" base_Element="_U2D-o6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2ElsKlTEe-NBpoHimppkw" base_Element="_U2D-palTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2ElsqlTEe-NBpoHimppkw" base_Element="_U2ElsalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2EltKlTEe-NBpoHimppkw" base_Element="_U2Els6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2FMwalTEe-NBpoHimppkw" base_Element="_U2FMwKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2FMw6lTEe-NBpoHimppkw" base_Element="_U2FMwqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2Fz0KlTEe-NBpoHimppkw" base_Element="_U2FMxKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2Fz0qlTEe-NBpoHimppkw" base_Element="_U2Fz0alTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2Fz1KlTEe-NBpoHimppkw" base_Element="_U2Fz06lTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2Ga4alTEe-NBpoHimppkw" base_Element="_U2Ga4KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2Ga5KlTEe-NBpoHimppkw" base_Element="_U2Ga4qlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2HB8KlTEe-NBpoHimppkw" base_Element="_U2Ga5alTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2HpAalTEe-NBpoHimppkw" base_Element="_U2HpAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2IQEKlTEe-NBpoHimppkw" base_Element="_U2HpAqlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2JeMalTEe-NBpoHimppkw" base_Element="_U2JeMKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2KFQKlTEe-NBpoHimppkw" base_Element="_U2JeNalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2KFQqlTEe-NBpoHimppkw" base_Element="_U2KFQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2KFRKlTEe-NBpoHimppkw" base_Element="_U2KFQ6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U2KsUqlTEe-NBpoHimppkw" genericsValue="Integer" base_Element="_U2KsUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2KsU6lTEe-NBpoHimppkw" base_Element="_U2KsUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Generics xmi:id="_U2LTYalTEe-NBpoHimppkw" genericsValue="SchedulableObject" base_Element="_U2LTYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2MhgKlTEe-NBpoHimppkw" base_Element="_U2L6cKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2MhgqlTEe-NBpoHimppkw" base_Element="_U2MhgalTEe-NBpoHimppkw"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_U2NIkalTEe-NBpoHimppkw" base_Element="_U2NIkKlTEe-NBpoHimppkw"/>
  <uml:OpaqueBehavior xmi:id="_U2qblqlTEe-NBpoHimppkw" name="getNumChannels" specification="_U11VIKlTEe-NBpoHimppkw">
    <ownedParameter xmi:id="_U2qbl6lTEe-NBpoHimppkw" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
    </ownedParameter>
    <language>java</language>
    <body>return numChannels;&#xD;
  </body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_U3bQkqlTEe-NBpoHimppkw" base_Element="_U3bQkKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3cesKlTEe-NBpoHimppkw" base_Element="_U3b3oKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3ces6lTEe-NBpoHimppkw" base_Element="_U3cesalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3dFwKlTEe-NBpoHimppkw" base_Element="_U3cetKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3ds0KlTEe-NBpoHimppkw" base_Element="_U3dFwalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3eT4KlTEe-NBpoHimppkw" base_Element="_U3ds0alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3e68KlTEe-NBpoHimppkw" base_Element="_U3eT4alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3e686lTEe-NBpoHimppkw" base_Element="_U3e68alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3fiAKlTEe-NBpoHimppkw" base_Element="_U3e69KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3gJEKlTEe-NBpoHimppkw" base_Element="_U3fiAalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3gwIKlTEe-NBpoHimppkw" base_Element="_U3gJEalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3gwI6lTEe-NBpoHimppkw" base_Element="_U3gwIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3hXMqlTEe-NBpoHimppkw" base_Element="_U3hXMKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3h-QKlTEe-NBpoHimppkw" base_Element="_U3hXM6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3h-Q6lTEe-NBpoHimppkw" base_Element="_U3h-QalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3ilUKlTEe-NBpoHimppkw" base_Element="_U3h-RKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3ilU6lTEe-NBpoHimppkw" base_Element="_U3ilUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3jMYqlTEe-NBpoHimppkw" base_Element="_U3jMYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3jzcKlTEe-NBpoHimppkw" base_Element="_U3jMY6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3kagKlTEe-NBpoHimppkw" base_Element="_U3jzcalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3kag6lTEe-NBpoHimppkw" base_Element="_U3kagalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3lBkKlTEe-NBpoHimppkw" base_Element="_U3kahKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3lBk6lTEe-NBpoHimppkw" base_Element="_U3lBkalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3looqlTEe-NBpoHimppkw" base_Element="_U3looKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3mPsKlTEe-NBpoHimppkw" base_Element="_U3loo6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3m2wKlTEe-NBpoHimppkw" base_Element="_U3mPsalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3m2w6lTEe-NBpoHimppkw" base_Element="_U3m2walTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3nd0KlTEe-NBpoHimppkw" base_Element="_U3m2xKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3oE4KlTEe-NBpoHimppkw" base_Element="_U3nd0alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3oE46lTEe-NBpoHimppkw" base_Element="_U3oE4alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3or8qlTEe-NBpoHimppkw" base_Element="_U3or8KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3pTAKlTEe-NBpoHimppkw" base_Element="_U3or86lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3pTA6lTEe-NBpoHimppkw" base_Element="_U3pTAalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3p6EKlTEe-NBpoHimppkw" base_Element="_U3pTBKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3qhIKlTEe-NBpoHimppkw" base_Element="_U3p6EalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3qhI6lTEe-NBpoHimppkw" base_Element="_U3qhIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3rIMKlTEe-NBpoHimppkw" base_Element="_U3qhJKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3rvQKlTEe-NBpoHimppkw" base_Element="_U3rIMalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3rvQ6lTEe-NBpoHimppkw" base_Element="_U3rvQalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3sWUKlTEe-NBpoHimppkw" base_Element="_U3rvRKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3s9YKlTEe-NBpoHimppkw" base_Element="_U3sWUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3s9Y6lTEe-NBpoHimppkw" base_Element="_U3s9YalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3tkcqlTEe-NBpoHimppkw" base_Element="_U3tkcKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3uLgKlTEe-NBpoHimppkw" base_Element="_U3tkc6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3uykKlTEe-NBpoHimppkw" base_Element="_U3uLgalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3uyk6lTEe-NBpoHimppkw" base_Element="_U3uykalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3vZoKlTEe-NBpoHimppkw" base_Element="_U3uylKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3vZo6lTEe-NBpoHimppkw" base_Element="_U3vZoalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3wAsKlTEe-NBpoHimppkw" base_Element="_U3vZpKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3wAs6lTEe-NBpoHimppkw" base_Element="_U3wAsalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3wnwKlTEe-NBpoHimppkw" base_Element="_U3wAtKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3wnw6lTEe-NBpoHimppkw" base_Element="_U3wnwalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3xO0KlTEe-NBpoHimppkw" base_Element="_U3wnxKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3xO06lTEe-NBpoHimppkw" base_Element="_U3xO0alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3x14KlTEe-NBpoHimppkw" base_Element="_U3xO1KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3x146lTEe-NBpoHimppkw" base_Element="_U3x14alTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3yc8qlTEe-NBpoHimppkw" base_Element="_U3yc8KlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3yc9alTEe-NBpoHimppkw" base_Element="_U3yc86lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3zEAqlTEe-NBpoHimppkw" base_Element="_U3zEAKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3zrEKlTEe-NBpoHimppkw" base_Element="_U3zEA6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U3zrE6lTEe-NBpoHimppkw" base_Element="_U3zrEalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U30SIKlTEe-NBpoHimppkw" base_Element="_U3zrFKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U30SI6lTEe-NBpoHimppkw" base_Element="_U30SIalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U305MKlTEe-NBpoHimppkw" base_Element="_U30SJKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U305M6lTEe-NBpoHimppkw" base_Element="_U305MalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U31gQqlTEe-NBpoHimppkw" base_Element="_U31gQKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U32HUKlTEe-NBpoHimppkw" base_Element="_U31gQ6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U32HU6lTEe-NBpoHimppkw" base_Element="_U32HUalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U32uYqlTEe-NBpoHimppkw" base_Element="_U32uYKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U33VcKlTEe-NBpoHimppkw" base_Element="_U32uY6lTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U33Vc6lTEe-NBpoHimppkw" base_Element="_U33VcalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U338gKlTEe-NBpoHimppkw" base_Element="_U33VdKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U338g6lTEe-NBpoHimppkw" base_Element="_U338galTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U34jkKlTEe-NBpoHimppkw" base_Element="_U338hKlTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U35KoKlTEe-NBpoHimppkw" base_Element="_U34jkalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Reference xmi:id="_U35Ko6lTEe-NBpoHimppkw" base_Element="_U35KoalTEe-NBpoHimppkw"/>
  <UMLLabProfile:Patch xmi:id="_XKb1AKlTEe-NBpoHimppkw" base_Element="_Ug94YKlTEe-NBpoHimppkw" patchText="@@ -351,26 +351,24 @@&#xA; um EdgeState&#xA;-()&#xA;  %7B%0D%0A%09%09RELEAS&#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_XKe4UKlTEe-NBpoHimppkw" base_Element="_Uh00AKlTEe-NBpoHimppkw" patchText="@@ -254,22 +254,25 @@&#xA; MISS%22;%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_XKffYKlTEe-NBpoHimppkw" base_Element="_UkPO0KlTEe-NBpoHimppkw" patchText="@@ -113,18 +113,16 @@&#xA; eChoices&#xA;-()&#xA;  %7B%0D%0A%09   &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_XKgGcKlTEe-NBpoHimppkw" base_Element="_UkXxsKlTEe-NBpoHimppkw" patchText="@@ -145,26 +145,24 @@&#xA; ystemChoices&#xA;-()&#xA;  %7B%0D%0A    SOUR&#xA;@@ -284,18 +284,16 @@&#xA; dChoices&#xA;-()&#xA;  %7B%0D%0A    &#xA;" conflicting="false"/>
  <UMLLabProfile:Patch xmi:id="_XKjw0KlTEe-NBpoHimppkw" base_Element="_Ull5sKlTEe-NBpoHimppkw" patchText="@@ -4237,22 +4237,25 @@&#xA; f, ra)%0D%0A&#xA;-public&#xA;+  private&#xA;  static &#xA;" conflicting="false"/>
</xmi:XMI>
